<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="12472"><g><title>perf_event_exec (5 samples, 0.04%)</title><rect x="0.0000%" y="1061" width="0.0401%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1071.50"></text></g><g><title>perf_iterate_ctx (5 samples, 0.04%)</title><rect x="0.0000%" y="1045" width="0.0401%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1055.50"></text></g><g><title>perf_event_addr_filters_exec (5 samples, 0.04%)</title><rect x="0.0000%" y="1029" width="0.0401%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1039.50"></text></g><g><title>perf_4.19 (6 samples, 0.05%)</title><rect x="0.0000%" y="1189" width="0.0481%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1199.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.05%)</title><rect x="0.0000%" y="1173" width="0.0481%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1183.50"></text></g><g><title>do_syscall_64 (6 samples, 0.05%)</title><rect x="0.0000%" y="1157" width="0.0481%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1167.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.05%)</title><rect x="0.0000%" y="1141" width="0.0481%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1151.50"></text></g><g><title>__do_execve_file.isra.36 (6 samples, 0.05%)</title><rect x="0.0000%" y="1125" width="0.0481%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1135.50"></text></g><g><title>search_binary_handler (6 samples, 0.05%)</title><rect x="0.0000%" y="1109" width="0.0481%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1119.50"></text></g><g><title>load_elf_binary (6 samples, 0.05%)</title><rect x="0.0000%" y="1093" width="0.0481%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1103.50"></text></g><g><title>setup_new_exec (6 samples, 0.05%)</title><rect x="0.0000%" y="1077" width="0.0481%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.0561%" y="1173" width="0.0160%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="2"/><text x="0.3061%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.04%)</title><rect x="0.0722%" y="869" width="0.0401%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="5"/><text x="0.3222%" y="879.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.04%)</title><rect x="0.0722%" y="853" width="0.0401%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="5"/><text x="0.3222%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.04%)</title><rect x="0.0722%" y="837" width="0.0401%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="5"/><text x="0.3222%" y="847.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.04%)</title><rect x="0.0722%" y="821" width="0.0401%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="5"/><text x="0.3222%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.04%)</title><rect x="0.0722%" y="805" width="0.0401%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="5"/><text x="0.3222%" y="815.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.04%)</title><rect x="0.0722%" y="789" width="0.0401%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="5"/><text x="0.3222%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (5 samples, 0.04%)</title><rect x="0.0722%" y="773" width="0.0401%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="5"/><text x="0.3222%" y="783.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.04%)</title><rect x="0.0722%" y="757" width="0.0401%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="5"/><text x="0.3222%" y="767.50"></text></g><g><title>_start (6 samples, 0.05%)</title><rect x="0.0722%" y="1173" width="0.0481%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1183.50"></text></g><g><title>__libc_start_main (6 samples, 0.05%)</title><rect x="0.0722%" y="1157" width="0.0481%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1167.50"></text></g><g><title>main (6 samples, 0.05%)</title><rect x="0.0722%" y="1141" width="0.0481%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1151.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.05%)</title><rect x="0.0722%" y="1125" width="0.0481%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.05%)</title><rect x="0.0722%" y="1109" width="0.0481%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1119.50"></text></g><g><title>std::panicking::try (6 samples, 0.05%)</title><rect x="0.0722%" y="1093" width="0.0481%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.05%)</title><rect x="0.0722%" y="1077" width="0.0481%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.05%)</title><rect x="0.0722%" y="1061" width="0.0481%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1071.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.05%)</title><rect x="0.0722%" y="1045" width="0.0481%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1055.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.05%)</title><rect x="0.0722%" y="1029" width="0.0481%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.05%)</title><rect x="0.0722%" y="1013" width="0.0481%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1023.50"></text></g><g><title>pipeline_test::main (6 samples, 0.05%)</title><rect x="0.0722%" y="997" width="0.0481%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="6"/><text x="0.3222%" y="1007.50"></text></g><g><title>tokio::runtime::builder::Builder::build (6 samples, 0.05%)</title><rect x="0.0722%" y="981" width="0.0481%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="6"/><text x="0.3222%" y="991.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (6 samples, 0.05%)</title><rect x="0.0722%" y="965" width="0.0481%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="6"/><text x="0.3222%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (6 samples, 0.05%)</title><rect x="0.0722%" y="949" width="0.0481%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="6"/><text x="0.3222%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (6 samples, 0.05%)</title><rect x="0.0722%" y="933" width="0.0481%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="6"/><text x="0.3222%" y="943.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (6 samples, 0.05%)</title><rect x="0.0722%" y="917" width="0.0481%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="6"/><text x="0.3222%" y="927.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking_inner (6 samples, 0.05%)</title><rect x="0.0722%" y="901" width="0.0481%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="6"/><text x="0.3222%" y="911.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (6 samples, 0.05%)</title><rect x="0.0722%" y="885" width="0.0481%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="6"/><text x="0.3222%" y="895.50"></text></g><g><title>ret_from_fork (5 samples, 0.04%)</title><rect x="1.0103%" y="1157" width="0.0401%" height="15" fill="rgb(232,182,51)" fg:x="126" fg:w="5"/><text x="1.2603%" y="1167.50"></text></g><g><title>calculate_sigpending (5 samples, 0.04%)</title><rect x="1.0103%" y="1141" width="0.0401%" height="15" fill="rgb(231,60,39)" fg:x="126" fg:w="5"/><text x="1.2603%" y="1151.50"></text></g><g><title>recalc_sigpending (5 samples, 0.04%)</title><rect x="1.0103%" y="1125" width="0.0401%" height="15" fill="rgb(208,69,12)" fg:x="126" fg:w="5"/><text x="1.2603%" y="1135.50"></text></g><g><title>recalc_sigpending_tsk (5 samples, 0.04%)</title><rect x="1.0103%" y="1109" width="0.0401%" height="15" fill="rgb(235,93,37)" fg:x="126" fg:w="5"/><text x="1.2603%" y="1119.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (6 samples, 0.05%)</title><rect x="1.1706%" y="757" width="0.0481%" height="15" fill="rgb(213,116,39)" fg:x="146" fg:w="6"/><text x="1.4206%" y="767.50"></text></g><g><title>&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (6 samples, 0.05%)</title><rect x="1.1706%" y="741" width="0.0481%" height="15" fill="rgb(222,207,29)" fg:x="146" fg:w="6"/><text x="1.4206%" y="751.50"></text></g><g><title>&lt;tokio::signal::unix::driver::Driver as tokio::park::Park&gt;::park (6 samples, 0.05%)</title><rect x="1.1706%" y="725" width="0.0481%" height="15" fill="rgb(206,96,30)" fg:x="146" fg:w="6"/><text x="1.4206%" y="735.50"></text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (6 samples, 0.05%)</title><rect x="1.1706%" y="709" width="0.0481%" height="15" fill="rgb(218,138,4)" fg:x="146" fg:w="6"/><text x="1.4206%" y="719.50"></text></g><g><title>tokio::io::driver::Driver::turn (6 samples, 0.05%)</title><rect x="1.1706%" y="693" width="0.0481%" height="15" fill="rgb(250,191,14)" fg:x="146" fg:w="6"/><text x="1.4206%" y="703.50"></text></g><g><title>mio::poll::Poll::poll (6 samples, 0.05%)</title><rect x="1.1706%" y="677" width="0.0481%" height="15" fill="rgb(239,60,40)" fg:x="146" fg:w="6"/><text x="1.4206%" y="687.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (6 samples, 0.05%)</title><rect x="1.1706%" y="661" width="0.0481%" height="15" fill="rgb(206,27,48)" fg:x="146" fg:w="6"/><text x="1.4206%" y="671.50"></text></g><g><title>epoll_wait (6 samples, 0.05%)</title><rect x="1.1706%" y="645" width="0.0481%" height="15" fill="rgb(225,35,8)" fg:x="146" fg:w="6"/><text x="1.4206%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.05%)</title><rect x="1.1706%" y="629" width="0.0481%" height="15" fill="rgb(250,213,24)" fg:x="146" fg:w="6"/><text x="1.4206%" y="639.50"></text></g><g><title>do_syscall_64 (6 samples, 0.05%)</title><rect x="1.1706%" y="613" width="0.0481%" height="15" fill="rgb(247,123,22)" fg:x="146" fg:w="6"/><text x="1.4206%" y="623.50"></text></g><g><title>exit_to_usermode_loop (6 samples, 0.05%)</title><rect x="1.1706%" y="597" width="0.0481%" height="15" fill="rgb(231,138,38)" fg:x="146" fg:w="6"/><text x="1.4206%" y="607.50"></text></g><g><title>do_signal (6 samples, 0.05%)</title><rect x="1.1706%" y="581" width="0.0481%" height="15" fill="rgb(231,145,46)" fg:x="146" fg:w="6"/><text x="1.4206%" y="591.50"></text></g><g><title>get_signal (6 samples, 0.05%)</title><rect x="1.1706%" y="565" width="0.0481%" height="15" fill="rgb(251,118,11)" fg:x="146" fg:w="6"/><text x="1.4206%" y="575.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.06%)</title><rect x="1.1706%" y="1061" width="0.0561%" height="15" fill="rgb(217,147,25)" fg:x="146" fg:w="7"/><text x="1.4206%" y="1071.50"></text></g><g><title>std::panicking::try (7 samples, 0.06%)</title><rect x="1.1706%" y="1045" width="0.0561%" height="15" fill="rgb(247,81,37)" fg:x="146" fg:w="7"/><text x="1.4206%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.06%)</title><rect x="1.1706%" y="1029" width="0.0561%" height="15" fill="rgb(209,12,38)" fg:x="146" fg:w="7"/><text x="1.4206%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.06%)</title><rect x="1.1706%" y="1013" width="0.0561%" height="15" fill="rgb(227,1,9)" fg:x="146" fg:w="7"/><text x="1.4206%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (7 samples, 0.06%)</title><rect x="1.1706%" y="997" width="0.0561%" height="15" fill="rgb(248,47,43)" fg:x="146" fg:w="7"/><text x="1.4206%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.06%)</title><rect x="1.1706%" y="981" width="0.0561%" height="15" fill="rgb(221,10,30)" fg:x="146" fg:w="7"/><text x="1.4206%" y="991.50"></text></g><g><title>pipeline_test::setup_tracing::_{{closure}} (7 samples, 0.06%)</title><rect x="1.1706%" y="965" width="0.0561%" height="15" fill="rgb(210,229,1)" fg:x="146" fg:w="7"/><text x="1.4206%" y="975.50"></text></g><g><title>tokio::runtime::Runtime::block_on (7 samples, 0.06%)</title><rect x="1.1706%" y="949" width="0.0561%" height="15" fill="rgb(222,148,37)" fg:x="146" fg:w="7"/><text x="1.4206%" y="959.50"></text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (7 samples, 0.06%)</title><rect x="1.1706%" y="933" width="0.0561%" height="15" fill="rgb(234,67,33)" fg:x="146" fg:w="7"/><text x="1.4206%" y="943.50"></text></g><g><title>tokio::runtime::basic_scheduler::InnerGuard&lt;P&gt;::block_on (7 samples, 0.06%)</title><rect x="1.1706%" y="917" width="0.0561%" height="15" fill="rgb(247,98,35)" fg:x="146" fg:w="7"/><text x="1.4206%" y="927.50"></text></g><g><title>tokio::runtime::basic_scheduler::Inner&lt;P&gt;::block_on (7 samples, 0.06%)</title><rect x="1.1706%" y="901" width="0.0561%" height="15" fill="rgb(247,138,52)" fg:x="146" fg:w="7"/><text x="1.4206%" y="911.50"></text></g><g><title>tokio::runtime::basic_scheduler::enter (7 samples, 0.06%)</title><rect x="1.1706%" y="885" width="0.0561%" height="15" fill="rgb(213,79,30)" fg:x="146" fg:w="7"/><text x="1.4206%" y="895.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7 samples, 0.06%)</title><rect x="1.1706%" y="869" width="0.0561%" height="15" fill="rgb(246,177,23)" fg:x="146" fg:w="7"/><text x="1.4206%" y="879.50"></text></g><g><title>tokio::runtime::basic_scheduler::enter::_{{closure}} (7 samples, 0.06%)</title><rect x="1.1706%" y="853" width="0.0561%" height="15" fill="rgb(230,62,27)" fg:x="146" fg:w="7"/><text x="1.4206%" y="863.50"></text></g><g><title>tokio::runtime::basic_scheduler::Inner&lt;P&gt;::block_on::_{{closure}} (7 samples, 0.06%)</title><rect x="1.1706%" y="837" width="0.0561%" height="15" fill="rgb(216,154,8)" fg:x="146" fg:w="7"/><text x="1.4206%" y="847.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (7 samples, 0.06%)</title><rect x="1.1706%" y="821" width="0.0561%" height="15" fill="rgb(244,35,45)" fg:x="146" fg:w="7"/><text x="1.4206%" y="831.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (7 samples, 0.06%)</title><rect x="1.1706%" y="805" width="0.0561%" height="15" fill="rgb(251,115,12)" fg:x="146" fg:w="7"/><text x="1.4206%" y="815.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (7 samples, 0.06%)</title><rect x="1.1706%" y="789" width="0.0561%" height="15" fill="rgb(240,54,50)" fg:x="146" fg:w="7"/><text x="1.4206%" y="799.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (7 samples, 0.06%)</title><rect x="1.1706%" y="773" width="0.0561%" height="15" fill="rgb(233,84,52)" fg:x="146" fg:w="7"/><text x="1.4206%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.06%)</title><rect x="1.1706%" y="1125" width="0.0641%" height="15" fill="rgb(207,117,47)" fg:x="146" fg:w="8"/><text x="1.4206%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.06%)</title><rect x="1.1706%" y="1109" width="0.0641%" height="15" fill="rgb(249,43,39)" fg:x="146" fg:w="8"/><text x="1.4206%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 0.06%)</title><rect x="1.1706%" y="1093" width="0.0641%" height="15" fill="rgb(209,38,44)" fg:x="146" fg:w="8"/><text x="1.4206%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (8 samples, 0.06%)</title><rect x="1.1706%" y="1077" width="0.0641%" height="15" fill="rgb(236,212,23)" fg:x="146" fg:w="8"/><text x="1.4206%" y="1087.50"></text></g><g><title>do_mmap (2 samples, 0.02%)</title><rect x="1.2428%" y="981" width="0.0160%" height="15" fill="rgb(242,79,21)" fg:x="155" fg:w="2"/><text x="1.4928%" y="991.50"></text></g><g><title>mmap_region (2 samples, 0.02%)</title><rect x="1.2428%" y="965" width="0.0160%" height="15" fill="rgb(211,96,35)" fg:x="155" fg:w="2"/><text x="1.4928%" y="975.50"></text></g><g><title>perf_event_mmap (2 samples, 0.02%)</title><rect x="1.2428%" y="949" width="0.0160%" height="15" fill="rgb(253,215,40)" fg:x="155" fg:w="2"/><text x="1.4928%" y="959.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.02%)</title><rect x="1.2428%" y="933" width="0.0160%" height="15" fill="rgb(211,81,21)" fg:x="155" fg:w="2"/><text x="1.4928%" y="943.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.02%)</title><rect x="1.2428%" y="917" width="0.0160%" height="15" fill="rgb(208,190,38)" fg:x="155" fg:w="2"/><text x="1.4928%" y="927.50"></text></g><g><title>mmap64 (4 samples, 0.03%)</title><rect x="1.2428%" y="1061" width="0.0321%" height="15" fill="rgb(235,213,38)" fg:x="155" fg:w="4"/><text x="1.4928%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="1.2428%" y="1045" width="0.0321%" height="15" fill="rgb(237,122,38)" fg:x="155" fg:w="4"/><text x="1.4928%" y="1055.50"></text></g><g><title>do_syscall_64 (4 samples, 0.03%)</title><rect x="1.2428%" y="1029" width="0.0321%" height="15" fill="rgb(244,218,35)" fg:x="155" fg:w="4"/><text x="1.4928%" y="1039.50"></text></g><g><title>ksys_mmap_pgoff (4 samples, 0.03%)</title><rect x="1.2428%" y="1013" width="0.0321%" height="15" fill="rgb(240,68,47)" fg:x="155" fg:w="4"/><text x="1.4928%" y="1023.50"></text></g><g><title>vm_mmap_pgoff (4 samples, 0.03%)</title><rect x="1.2428%" y="997" width="0.0321%" height="15" fill="rgb(210,16,53)" fg:x="155" fg:w="4"/><text x="1.4928%" y="1007.50"></text></g><g><title>down_write_killable (2 samples, 0.02%)</title><rect x="1.2588%" y="981" width="0.0160%" height="15" fill="rgb(235,124,12)" fg:x="157" fg:w="2"/><text x="1.5088%" y="991.50"></text></g><g><title>call_rwsem_down_write_failed_killable (2 samples, 0.02%)</title><rect x="1.2588%" y="965" width="0.0160%" height="15" fill="rgb(224,169,11)" fg:x="157" fg:w="2"/><text x="1.5088%" y="975.50"></text></g><g><title>rwsem_down_write_failed_killable (2 samples, 0.02%)</title><rect x="1.2588%" y="949" width="0.0160%" height="15" fill="rgb(250,166,2)" fg:x="157" fg:w="2"/><text x="1.5088%" y="959.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="1.2588%" y="933" width="0.0160%" height="15" fill="rgb(242,216,29)" fg:x="157" fg:w="2"/><text x="1.5088%" y="943.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="1.2588%" y="917" width="0.0160%" height="15" fill="rgb(230,116,27)" fg:x="157" fg:w="2"/><text x="1.5088%" y="927.50"></text></g><g><title>clone (145 samples, 1.16%)</title><rect x="0.1203%" y="1173" width="1.1626%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="145"/><text x="0.3703%" y="1183.50"></text></g><g><title>start_thread (29 samples, 0.23%)</title><rect x="1.0504%" y="1157" width="0.2325%" height="15" fill="rgb(253,11,6)" fg:x="131" fg:w="29"/><text x="1.3004%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.13%)</title><rect x="1.1546%" y="1141" width="0.1283%" height="15" fill="rgb(247,143,39)" fg:x="144" fg:w="16"/><text x="1.4046%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 0.05%)</title><rect x="1.2348%" y="1125" width="0.0481%" height="15" fill="rgb(236,97,10)" fg:x="154" fg:w="6"/><text x="1.4848%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 0.05%)</title><rect x="1.2348%" y="1109" width="0.0481%" height="15" fill="rgb(233,208,19)" fg:x="154" fg:w="6"/><text x="1.4848%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.04%)</title><rect x="1.2428%" y="1093" width="0.0401%" height="15" fill="rgb(216,164,2)" fg:x="155" fg:w="5"/><text x="1.4928%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.04%)</title><rect x="1.2428%" y="1077" width="0.0401%" height="15" fill="rgb(220,129,5)" fg:x="155" fg:w="5"/><text x="1.4928%" y="1087.50"></text></g><g><title>pipeline_test (155 samples, 1.24%)</title><rect x="0.0481%" y="1189" width="1.2428%" height="15" fill="rgb(242,17,10)" fg:x="6" fg:w="155"/><text x="0.2981%" y="1199.50"></text></g><g><title>[[heap]] (3 samples, 0.02%)</title><rect x="1.3069%" y="1173" width="0.0241%" height="15" fill="rgb(242,107,0)" fg:x="163" fg:w="3"/><text x="1.5569%" y="1183.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="1.3310%" y="1157" width="0.0241%" height="15" fill="rgb(251,28,31)" fg:x="166" fg:w="3"/><text x="1.5810%" y="1167.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="1.3390%" y="1141" width="0.0160%" height="15" fill="rgb(233,223,10)" fg:x="167" fg:w="2"/><text x="1.5890%" y="1151.50"></text></g><g><title>[anon] (5 samples, 0.04%)</title><rect x="1.3310%" y="1173" width="0.0401%" height="15" fill="rgb(215,21,27)" fg:x="166" fg:w="5"/><text x="1.5810%" y="1183.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (8 samples, 0.06%)</title><rect x="1.5314%" y="1077" width="0.0641%" height="15" fill="rgb(232,23,21)" fg:x="191" fg:w="8"/><text x="1.7814%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.06%)</title><rect x="1.5314%" y="1061" width="0.0641%" height="15" fill="rgb(244,5,23)" fg:x="191" fg:w="8"/><text x="1.7814%" y="1071.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="1.5956%" y="1077" width="0.0641%" height="15" fill="rgb(226,81,46)" fg:x="199" fg:w="8"/><text x="1.8456%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="1.6597%" y="1077" width="0.0160%" height="15" fill="rgb(247,70,30)" fg:x="207" fg:w="2"/><text x="1.9097%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="1.6758%" y="1077" width="0.0160%" height="15" fill="rgb(212,68,19)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1087.50"></text></g><g><title>core::mem::take (2 samples, 0.02%)</title><rect x="1.6758%" y="1061" width="0.0160%" height="15" fill="rgb(240,187,13)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1071.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="1.6758%" y="1045" width="0.0160%" height="15" fill="rgb(223,113,26)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1055.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="1.6758%" y="1029" width="0.0160%" height="15" fill="rgb(206,192,2)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="1.6758%" y="1013" width="0.0160%" height="15" fill="rgb(241,108,4)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping (2 samples, 0.02%)</title><rect x="1.6758%" y="997" width="0.0160%" height="15" fill="rgb(247,173,49)" fg:x="209" fg:w="2"/><text x="1.9258%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (2 samples, 0.02%)</title><rect x="1.6758%" y="981" width="0.0160%" height="15" fill="rgb(224,114,35)" fg:x="209" fg:w="2"/><text x="1.9258%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="1.6758%" y="965" width="0.0160%" height="15" fill="rgb(245,159,27)" fg:x="209" fg:w="2"/><text x="1.9258%" y="975.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (89 samples, 0.71%)</title><rect x="1.6998%" y="1077" width="0.7136%" height="15" fill="rgb(245,172,44)" fg:x="212" fg:w="89"/><text x="1.9498%" y="1087.50"></text></g><g><title>[libc-2.28.so] (82 samples, 0.66%)</title><rect x="1.7559%" y="1061" width="0.6575%" height="15" fill="rgb(236,23,11)" fg:x="219" fg:w="82"/><text x="2.0059%" y="1071.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (128 samples, 1.03%)</title><rect x="1.3951%" y="1141" width="1.0263%" height="15" fill="rgb(205,117,38)" fg:x="174" fg:w="128"/><text x="1.6451%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 1.03%)</title><rect x="1.3951%" y="1125" width="1.0263%" height="15" fill="rgb(237,72,25)" fg:x="174" fg:w="128"/><text x="1.6451%" y="1135.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (128 samples, 1.03%)</title><rect x="1.3951%" y="1109" width="1.0263%" height="15" fill="rgb(244,70,9)" fg:x="174" fg:w="128"/><text x="1.6451%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (127 samples, 1.02%)</title><rect x="1.4031%" y="1093" width="1.0183%" height="15" fill="rgb(217,125,39)" fg:x="175" fg:w="127"/><text x="1.6531%" y="1103.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.02%)</title><rect x="2.4775%" y="709" width="0.0241%" height="15" fill="rgb(235,36,10)" fg:x="309" fg:w="3"/><text x="2.7275%" y="719.50"></text></g><g><title>ctx_sched_out (3 samples, 0.02%)</title><rect x="2.4775%" y="693" width="0.0241%" height="15" fill="rgb(251,123,47)" fg:x="309" fg:w="3"/><text x="2.7275%" y="703.50"></text></g><g><title>amd_pmu_disable_all (3 samples, 0.02%)</title><rect x="2.4775%" y="677" width="0.0241%" height="15" fill="rgb(221,13,13)" fg:x="309" fg:w="3"/><text x="2.7275%" y="687.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.02%)</title><rect x="2.4856%" y="661" width="0.0160%" height="15" fill="rgb(238,131,9)" fg:x="310" fg:w="2"/><text x="2.7356%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;opentelemetry::core::KeyValue&gt;&gt; (12 samples, 0.10%)</title><rect x="2.4214%" y="949" width="0.0962%" height="15" fill="rgb(211,50,8)" fg:x="302" fg:w="12"/><text x="2.6714%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;opentelemetry::core::KeyValue&gt;&gt; (12 samples, 0.10%)</title><rect x="2.4214%" y="933" width="0.0962%" height="15" fill="rgb(245,182,24)" fg:x="302" fg:w="12"/><text x="2.6714%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.10%)</title><rect x="2.4214%" y="917" width="0.0962%" height="15" fill="rgb(242,14,37)" fg:x="302" fg:w="12"/><text x="2.6714%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.10%)</title><rect x="2.4214%" y="901" width="0.0962%" height="15" fill="rgb(246,228,12)" fg:x="302" fg:w="12"/><text x="2.6714%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.10%)</title><rect x="2.4214%" y="885" width="0.0962%" height="15" fill="rgb(213,55,15)" fg:x="302" fg:w="12"/><text x="2.6714%" y="895.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.10%)</title><rect x="2.4214%" y="869" width="0.0962%" height="15" fill="rgb(209,9,3)" fg:x="302" fg:w="12"/><text x="2.6714%" y="879.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.10%)</title><rect x="2.4214%" y="853" width="0.0962%" height="15" fill="rgb(230,59,30)" fg:x="302" fg:w="12"/><text x="2.6714%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.06%)</title><rect x="2.4615%" y="837" width="0.0561%" height="15" fill="rgb(209,121,21)" fg:x="307" fg:w="7"/><text x="2.7115%" y="847.50"></text></g><g><title>do_syscall_64 (7 samples, 0.06%)</title><rect x="2.4615%" y="821" width="0.0561%" height="15" fill="rgb(220,109,13)" fg:x="307" fg:w="7"/><text x="2.7115%" y="831.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.06%)</title><rect x="2.4615%" y="805" width="0.0561%" height="15" fill="rgb(232,18,1)" fg:x="307" fg:w="7"/><text x="2.7115%" y="815.50"></text></g><g><title>do_futex (7 samples, 0.06%)</title><rect x="2.4615%" y="789" width="0.0561%" height="15" fill="rgb(215,41,42)" fg:x="307" fg:w="7"/><text x="2.7115%" y="799.50"></text></g><g><title>futex_wait (7 samples, 0.06%)</title><rect x="2.4615%" y="773" width="0.0561%" height="15" fill="rgb(224,123,36)" fg:x="307" fg:w="7"/><text x="2.7115%" y="783.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.06%)</title><rect x="2.4615%" y="757" width="0.0561%" height="15" fill="rgb(240,125,3)" fg:x="307" fg:w="7"/><text x="2.7115%" y="767.50"></text></g><g><title>schedule (7 samples, 0.06%)</title><rect x="2.4615%" y="741" width="0.0561%" height="15" fill="rgb(205,98,50)" fg:x="307" fg:w="7"/><text x="2.7115%" y="751.50"></text></g><g><title>__schedule (7 samples, 0.06%)</title><rect x="2.4615%" y="725" width="0.0561%" height="15" fill="rgb(205,185,37)" fg:x="307" fg:w="7"/><text x="2.7115%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.16%)</title><rect x="2.4214%" y="981" width="0.1604%" height="15" fill="rgb(238,207,15)" fg:x="302" fg:w="20"/><text x="2.6714%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::{{closure}}&gt; (20 samples, 0.16%)</title><rect x="2.4214%" y="965" width="0.1604%" height="15" fill="rgb(213,199,42)" fg:x="302" fg:w="20"/><text x="2.6714%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::trace::tracer::SpanBuilder&gt; (8 samples, 0.06%)</title><rect x="2.5176%" y="949" width="0.0641%" height="15" fill="rgb(235,201,11)" fg:x="314" fg:w="8"/><text x="2.7676%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (8 samples, 0.06%)</title><rect x="2.5176%" y="933" width="0.0641%" height="15" fill="rgb(207,46,11)" fg:x="314" fg:w="8"/><text x="2.7676%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.06%)</title><rect x="2.5176%" y="917" width="0.0641%" height="15" fill="rgb(241,35,35)" fg:x="314" fg:w="8"/><text x="2.7676%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.06%)</title><rect x="2.5176%" y="901" width="0.0641%" height="15" fill="rgb(243,32,47)" fg:x="314" fg:w="8"/><text x="2.7676%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.06%)</title><rect x="2.5176%" y="885" width="0.0641%" height="15" fill="rgb(247,202,23)" fg:x="314" fg:w="8"/><text x="2.7676%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="2.5176%" y="869" width="0.0641%" height="15" fill="rgb(219,102,11)" fg:x="314" fg:w="8"/><text x="2.7676%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.06%)</title><rect x="2.5176%" y="853" width="0.0641%" height="15" fill="rgb(243,110,44)" fg:x="314" fg:w="8"/><text x="2.7676%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.06%)</title><rect x="2.5176%" y="837" width="0.0641%" height="15" fill="rgb(222,74,54)" fg:x="314" fg:w="8"/><text x="2.7676%" y="847.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="2.5176%" y="821" width="0.0641%" height="15" fill="rgb(216,99,12)" fg:x="314" fg:w="8"/><text x="2.7676%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (4 samples, 0.03%)</title><rect x="2.5818%" y="981" width="0.0321%" height="15" fill="rgb(226,22,26)" fg:x="322" fg:w="4"/><text x="2.8318%" y="991.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::_{{closure}} (4 samples, 0.03%)</title><rect x="2.5818%" y="965" width="0.0321%" height="15" fill="rgb(217,163,10)" fg:x="322" fg:w="4"/><text x="2.8318%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.03%)</title><rect x="2.5818%" y="949" width="0.0321%" height="15" fill="rgb(213,25,53)" fg:x="322" fg:w="4"/><text x="2.8318%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.03%)</title><rect x="2.5818%" y="933" width="0.0321%" height="15" fill="rgb(252,105,26)" fg:x="322" fg:w="4"/><text x="2.8318%" y="943.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::id_generator::IdGenerator&gt;::new_trace_id::_{{closure}} (4 samples, 0.03%)</title><rect x="2.5818%" y="917" width="0.0321%" height="15" fill="rgb(220,39,43)" fg:x="322" fg:w="4"/><text x="2.8318%" y="927.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.03%)</title><rect x="2.5818%" y="901" width="0.0321%" height="15" fill="rgb(229,68,48)" fg:x="322" fg:w="4"/><text x="2.8318%" y="911.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u128&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.03%)</title><rect x="2.5818%" y="885" width="0.0321%" height="15" fill="rgb(252,8,32)" fg:x="322" fg:w="4"/><text x="2.8318%" y="895.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (4 samples, 0.03%)</title><rect x="2.5818%" y="869" width="0.0321%" height="15" fill="rgb(223,20,43)" fg:x="322" fg:w="4"/><text x="2.8318%" y="879.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.03%)</title><rect x="2.5818%" y="853" width="0.0321%" height="15" fill="rgb(229,81,49)" fg:x="322" fg:w="4"/><text x="2.8318%" y="863.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.03%)</title><rect x="2.5818%" y="837" width="0.0321%" height="15" fill="rgb(236,28,36)" fg:x="322" fg:w="4"/><text x="2.8318%" y="847.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4 samples, 0.03%)</title><rect x="2.5818%" y="821" width="0.0321%" height="15" fill="rgb(249,185,26)" fg:x="322" fg:w="4"/><text x="2.8318%" y="831.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.03%)</title><rect x="2.5818%" y="805" width="0.0321%" height="15" fill="rgb(249,174,33)" fg:x="322" fg:w="4"/><text x="2.8318%" y="815.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.03%)</title><rect x="2.5818%" y="789" width="0.0321%" height="15" fill="rgb(233,201,37)" fg:x="322" fg:w="4"/><text x="2.8318%" y="799.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (4 samples, 0.03%)</title><rect x="2.5818%" y="773" width="0.0321%" height="15" fill="rgb(221,78,26)" fg:x="322" fg:w="4"/><text x="2.8318%" y="783.50"></text></g><g><title>rand_chacha::guts::refill_wide (4 samples, 0.03%)</title><rect x="2.5818%" y="757" width="0.0321%" height="15" fill="rgb(250,127,30)" fg:x="322" fg:w="4"/><text x="2.8318%" y="767.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 0.02%)</title><rect x="2.5898%" y="741" width="0.0241%" height="15" fill="rgb(230,49,44)" fg:x="323" fg:w="3"/><text x="2.8398%" y="751.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (3 samples, 0.02%)</title><rect x="2.5898%" y="725" width="0.0241%" height="15" fill="rgb(229,67,23)" fg:x="323" fg:w="3"/><text x="2.8398%" y="735.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (3 samples, 0.02%)</title><rect x="2.5898%" y="709" width="0.0241%" height="15" fill="rgb(249,83,47)" fg:x="323" fg:w="3"/><text x="2.8398%" y="719.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="2.6139%" y="821" width="0.0241%" height="15" fill="rgb(215,43,3)" fg:x="326" fg:w="3"/><text x="2.8639%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::context::Context&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="981" width="0.0722%" height="15" fill="rgb(238,154,13)" fg:x="326" fg:w="9"/><text x="2.8639%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;opentelemetry::context::IdHasher&gt;&gt;&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="965" width="0.0722%" height="15" fill="rgb(219,56,2)" fg:x="326" fg:w="9"/><text x="2.8639%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;opentelemetry::context::IdHasher&gt;&gt;&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="949" width="0.0722%" height="15" fill="rgb(233,0,4)" fg:x="326" fg:w="9"/><text x="2.8639%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="933" width="0.0722%" height="15" fill="rgb(235,30,7)" fg:x="326" fg:w="9"/><text x="2.8639%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.07%)</title><rect x="2.6139%" y="917" width="0.0722%" height="15" fill="rgb(250,79,13)" fg:x="326" fg:w="9"/><text x="2.8639%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.07%)</title><rect x="2.6139%" y="901" width="0.0722%" height="15" fill="rgb(211,146,34)" fg:x="326" fg:w="9"/><text x="2.8639%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (9 samples, 0.07%)</title><rect x="2.6139%" y="885" width="0.0722%" height="15" fill="rgb(228,22,38)" fg:x="326" fg:w="9"/><text x="2.8639%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="869" width="0.0722%" height="15" fill="rgb(235,168,5)" fg:x="326" fg:w="9"/><text x="2.8639%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (9 samples, 0.07%)</title><rect x="2.6139%" y="853" width="0.0722%" height="15" fill="rgb(221,155,16)" fg:x="326" fg:w="9"/><text x="2.8639%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.07%)</title><rect x="2.6139%" y="837" width="0.0722%" height="15" fill="rgb(215,215,53)" fg:x="326" fg:w="9"/><text x="2.8639%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.05%)</title><rect x="2.6379%" y="821" width="0.0481%" height="15" fill="rgb(223,4,10)" fg:x="329" fg:w="6"/><text x="2.8879%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (6 samples, 0.05%)</title><rect x="2.6379%" y="805" width="0.0481%" height="15" fill="rgb(234,103,6)" fg:x="329" fg:w="6"/><text x="2.8879%" y="815.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="2.6379%" y="789" width="0.0481%" height="15" fill="rgb(227,97,0)" fg:x="329" fg:w="6"/><text x="2.8879%" y="799.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="2.6860%" y="965" width="0.0160%" height="15" fill="rgb(234,150,53)" fg:x="335" fg:w="2"/><text x="2.9360%" y="975.50"></text></g><g><title>__libc_malloc (9 samples, 0.07%)</title><rect x="2.7101%" y="885" width="0.0722%" height="15" fill="rgb(228,201,54)" fg:x="338" fg:w="9"/><text x="2.9601%" y="895.50"></text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (46 samples, 0.37%)</title><rect x="2.4214%" y="1141" width="0.3688%" height="15" fill="rgb(222,22,37)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1151.50"></text></g><g><title>fred::multiplexer::responses::process_response (46 samples, 0.37%)</title><rect x="2.4214%" y="1125" width="0.3688%" height="15" fill="rgb(237,53,32)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1135.50"></text></g><g><title>fred::multiplexer::responses::respond_to_caller (46 samples, 0.37%)</title><rect x="2.4214%" y="1109" width="0.3688%" height="15" fill="rgb(233,25,53)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::trace::enabled::CommandTraces&gt; (46 samples, 0.37%)</title><rect x="2.4214%" y="1093" width="0.3688%" height="15" fill="rgb(210,40,34)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1103.50"></text></g><g><title>&lt;fred::trace::enabled::CommandTraces as core::ops::drop::Drop&gt;::drop (46 samples, 0.37%)</title><rect x="2.4214%" y="1077" width="0.3688%" height="15" fill="rgb(241,220,44)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (46 samples, 0.37%)</title><rect x="2.4214%" y="1061" width="0.3688%" height="15" fill="rgb(235,28,35)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (46 samples, 0.37%)</title><rect x="2.4214%" y="1045" width="0.3688%" height="15" fill="rgb(210,56,17)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1055.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (46 samples, 0.37%)</title><rect x="2.4214%" y="1029" width="0.3688%" height="15" fill="rgb(224,130,29)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1039.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::start (46 samples, 0.37%)</title><rect x="2.4214%" y="1013" width="0.3688%" height="15" fill="rgb(235,212,8)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1023.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build (46 samples, 0.37%)</title><rect x="2.4214%" y="997" width="0.3688%" height="15" fill="rgb(223,33,50)" fg:x="302" fg:w="46"/><text x="2.6714%" y="1007.50"></text></g><g><title>opentelemetry::sdk::trace::span::Span::new (13 samples, 0.10%)</title><rect x="2.6860%" y="981" width="0.1042%" height="15" fill="rgb(219,149,13)" fg:x="335" fg:w="13"/><text x="2.9360%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.09%)</title><rect x="2.7021%" y="965" width="0.0882%" height="15" fill="rgb(250,156,29)" fg:x="337" fg:w="11"/><text x="2.9521%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.08%)</title><rect x="2.7101%" y="949" width="0.0802%" height="15" fill="rgb(216,193,19)" fg:x="338" fg:w="10"/><text x="2.9601%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.08%)</title><rect x="2.7101%" y="933" width="0.0802%" height="15" fill="rgb(216,135,14)" fg:x="338" fg:w="10"/><text x="2.9601%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.08%)</title><rect x="2.7101%" y="917" width="0.0802%" height="15" fill="rgb(241,47,5)" fg:x="338" fg:w="10"/><text x="2.9601%" y="927.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.08%)</title><rect x="2.7101%" y="901" width="0.0802%" height="15" fill="rgb(233,42,35)" fg:x="338" fg:w="10"/><text x="2.9601%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="2.9025%" y="885" width="0.0160%" height="15" fill="rgb(231,13,6)" fg:x="362" fg:w="2"/><text x="3.1525%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.03%)</title><rect x="2.9025%" y="917" width="0.0321%" height="15" fill="rgb(207,181,40)" fg:x="362" fg:w="4"/><text x="3.1525%" y="927.50"></text></g><g><title>opentelemetry::context::Context::get::_{{closure}} (4 samples, 0.03%)</title><rect x="2.9025%" y="901" width="0.0321%" height="15" fill="rgb(254,173,49)" fg:x="362" fg:w="4"/><text x="3.1525%" y="911.50"></text></g><g><title>&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="2.9185%" y="885" width="0.0160%" height="15" fill="rgb(221,1,38)" fg:x="364" fg:w="2"/><text x="3.1685%" y="895.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="2.9185%" y="869" width="0.0160%" height="15" fill="rgb(206,124,46)" fg:x="364" fg:w="2"/><text x="3.1685%" y="879.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="2.9185%" y="853" width="0.0160%" height="15" fill="rgb(249,21,11)" fg:x="364" fg:w="2"/><text x="3.1685%" y="863.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="2.9185%" y="837" width="0.0160%" height="15" fill="rgb(222,201,40)" fg:x="364" fg:w="2"/><text x="3.1685%" y="847.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::has_active_span (8 samples, 0.06%)</title><rect x="2.9025%" y="949" width="0.0641%" height="15" fill="rgb(235,61,29)" fg:x="362" fg:w="8"/><text x="3.1525%" y="959.50"></text></g><g><title>opentelemetry::context::Context::get (8 samples, 0.06%)</title><rect x="2.9025%" y="933" width="0.0641%" height="15" fill="rgb(219,207,3)" fg:x="362" fg:w="8"/><text x="3.1525%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="2.9346%" y="917" width="0.0321%" height="15" fill="rgb(222,56,46)" fg:x="366" fg:w="4"/><text x="3.1846%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="2.9346%" y="901" width="0.0321%" height="15" fill="rgb(239,76,54)" fg:x="366" fg:w="4"/><text x="3.1846%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.03%)</title><rect x="2.9346%" y="885" width="0.0321%" height="15" fill="rgb(231,124,27)" fg:x="366" fg:w="4"/><text x="3.1846%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (4 samples, 0.03%)</title><rect x="2.9346%" y="869" width="0.0321%" height="15" fill="rgb(249,195,6)" fg:x="366" fg:w="4"/><text x="3.1846%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="2.9506%" y="853" width="0.0160%" height="15" fill="rgb(237,174,47)" fg:x="368" fg:w="2"/><text x="3.2006%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="2.9506%" y="837" width="0.0160%" height="15" fill="rgb(206,201,31)" fg:x="368" fg:w="2"/><text x="3.2006%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.9666%" y="853" width="0.0160%" height="15" fill="rgb(231,57,52)" fg:x="370" fg:w="2"/><text x="3.2166%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.9666%" y="837" width="0.0160%" height="15" fill="rgb(248,177,22)" fg:x="370" fg:w="2"/><text x="3.2166%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="2.9666%" y="821" width="0.0160%" height="15" fill="rgb(215,211,37)" fg:x="370" fg:w="2"/><text x="3.2166%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.04%)</title><rect x="2.9827%" y="821" width="0.0401%" height="15" fill="rgb(241,128,51)" fg:x="372" fg:w="5"/><text x="3.2327%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.04%)</title><rect x="2.9827%" y="805" width="0.0401%" height="15" fill="rgb(227,165,31)" fg:x="372" fg:w="5"/><text x="3.2327%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="2.9827%" y="789" width="0.0401%" height="15" fill="rgb(228,167,24)" fg:x="372" fg:w="5"/><text x="3.2327%" y="799.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::remote_span_context (8 samples, 0.06%)</title><rect x="2.9666%" y="949" width="0.0641%" height="15" fill="rgb(228,143,12)" fg:x="370" fg:w="8"/><text x="3.2166%" y="959.50"></text></g><g><title>opentelemetry::context::Context::get (8 samples, 0.06%)</title><rect x="2.9666%" y="933" width="0.0641%" height="15" fill="rgb(249,149,8)" fg:x="370" fg:w="8"/><text x="3.2166%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.06%)</title><rect x="2.9666%" y="917" width="0.0641%" height="15" fill="rgb(243,35,44)" fg:x="370" fg:w="8"/><text x="3.2166%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.06%)</title><rect x="2.9666%" y="901" width="0.0641%" height="15" fill="rgb(246,89,9)" fg:x="370" fg:w="8"/><text x="3.2166%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.06%)</title><rect x="2.9666%" y="885" width="0.0641%" height="15" fill="rgb(233,213,13)" fg:x="370" fg:w="8"/><text x="3.2166%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (8 samples, 0.06%)</title><rect x="2.9666%" y="869" width="0.0641%" height="15" fill="rgb(233,141,41)" fg:x="370" fg:w="8"/><text x="3.2166%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (6 samples, 0.05%)</title><rect x="2.9827%" y="853" width="0.0481%" height="15" fill="rgb(239,167,4)" fg:x="372" fg:w="6"/><text x="3.2327%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (6 samples, 0.05%)</title><rect x="2.9827%" y="837" width="0.0481%" height="15" fill="rgb(209,217,16)" fg:x="372" fg:w="6"/><text x="3.2327%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="3.1430%" y="917" width="0.0160%" height="15" fill="rgb(219,88,35)" fg:x="392" fg:w="2"/><text x="3.3930%" y="927.50"></text></g><g><title>opentelemetry::context::Context::get::_{{closure}} (2 samples, 0.02%)</title><rect x="3.1430%" y="901" width="0.0160%" height="15" fill="rgb(220,193,23)" fg:x="392" fg:w="2"/><text x="3.3930%" y="911.50"></text></g><g><title>&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="3.1430%" y="885" width="0.0160%" height="15" fill="rgb(230,90,52)" fg:x="392" fg:w="2"/><text x="3.3930%" y="895.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="3.1430%" y="869" width="0.0160%" height="15" fill="rgb(252,106,19)" fg:x="392" fg:w="2"/><text x="3.3930%" y="879.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="3.1430%" y="853" width="0.0160%" height="15" fill="rgb(206,74,20)" fg:x="392" fg:w="2"/><text x="3.3930%" y="863.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::span (17 samples, 0.14%)</title><rect x="3.0308%" y="949" width="0.1363%" height="15" fill="rgb(230,138,44)" fg:x="378" fg:w="17"/><text x="3.2808%" y="959.50"></text></g><g><title>opentelemetry::context::Context::get (3 samples, 0.02%)</title><rect x="3.1430%" y="933" width="0.0241%" height="15" fill="rgb(235,182,43)" fg:x="392" fg:w="3"/><text x="3.3930%" y="943.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::span_processor::BatchSpanProcessor as opentelemetry::sdk::trace::span_processor::SpanProcessor&gt;::on_start (4 samples, 0.03%)</title><rect x="3.1671%" y="949" width="0.0321%" height="15" fill="rgb(242,16,51)" fg:x="395" fg:w="4"/><text x="3.4171%" y="959.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="3.1992%" y="949" width="0.0722%" height="15" fill="rgb(248,9,4)" fg:x="399" fg:w="9"/><text x="3.4492%" y="959.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.06%)</title><rect x="3.2072%" y="933" width="0.0641%" height="15" fill="rgb(210,31,22)" fg:x="400" fg:w="8"/><text x="3.4572%" y="943.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="3.2713%" y="949" width="0.0160%" height="15" fill="rgb(239,54,39)" fg:x="408" fg:w="2"/><text x="3.5213%" y="959.50"></text></g><g><title>opentelemetry::trace::span_context::SpanContext::trace_flags (2 samples, 0.02%)</title><rect x="3.2874%" y="917" width="0.0160%" height="15" fill="rgb(230,99,41)" fg:x="410" fg:w="2"/><text x="3.5374%" y="927.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::_{{closure}} (16 samples, 0.13%)</title><rect x="3.2874%" y="933" width="0.1283%" height="15" fill="rgb(253,106,12)" fg:x="410" fg:w="16"/><text x="3.5374%" y="943.50"></text></g><g><title>opentelemetry::trace::span_context::SpanContext::trace_id (14 samples, 0.11%)</title><rect x="3.3034%" y="917" width="0.1123%" height="15" fill="rgb(213,46,41)" fg:x="412" fg:w="14"/><text x="3.5534%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="3.4157%" y="901" width="0.0321%" height="15" fill="rgb(215,133,35)" fg:x="426" fg:w="4"/><text x="3.6657%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[opentelemetry::core::KeyValue]&gt; (4 samples, 0.03%)</title><rect x="3.4157%" y="885" width="0.0321%" height="15" fill="rgb(213,28,5)" fg:x="426" fg:w="4"/><text x="3.6657%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::core::KeyValue&gt; (4 samples, 0.03%)</title><rect x="3.4157%" y="869" width="0.0321%" height="15" fill="rgb(215,77,49)" fg:x="426" fg:w="4"/><text x="3.6657%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::core::Value&gt; (4 samples, 0.03%)</title><rect x="3.4157%" y="853" width="0.0321%" height="15" fill="rgb(248,100,22)" fg:x="426" fg:w="4"/><text x="3.6657%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;opentelemetry::core::KeyValue&gt;&gt; (18 samples, 0.14%)</title><rect x="3.4157%" y="917" width="0.1443%" height="15" fill="rgb(208,67,9)" fg:x="426" fg:w="18"/><text x="3.6657%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;opentelemetry::core::KeyValue&gt;&gt; (14 samples, 0.11%)</title><rect x="3.4477%" y="901" width="0.1123%" height="15" fill="rgb(219,133,21)" fg:x="430" fg:w="14"/><text x="3.6977%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.11%)</title><rect x="3.4477%" y="885" width="0.1123%" height="15" fill="rgb(246,46,29)" fg:x="430" fg:w="14"/><text x="3.6977%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.11%)</title><rect x="3.4477%" y="869" width="0.1123%" height="15" fill="rgb(246,185,52)" fg:x="430" fg:w="14"/><text x="3.6977%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.11%)</title><rect x="3.4477%" y="853" width="0.1123%" height="15" fill="rgb(252,136,11)" fg:x="430" fg:w="14"/><text x="3.6977%" y="863.50"></text></g><g><title>[libc-2.28.so] (14 samples, 0.11%)</title><rect x="3.4477%" y="837" width="0.1123%" height="15" fill="rgb(219,138,53)" fg:x="430" fg:w="14"/><text x="3.6977%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (13 samples, 0.10%)</title><rect x="3.5680%" y="901" width="0.1042%" height="15" fill="rgb(211,51,23)" fg:x="445" fg:w="13"/><text x="3.8180%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.10%)</title><rect x="3.5680%" y="885" width="0.1042%" height="15" fill="rgb(247,221,28)" fg:x="445" fg:w="13"/><text x="3.8180%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.10%)</title><rect x="3.5680%" y="869" width="0.1042%" height="15" fill="rgb(251,222,45)" fg:x="445" fg:w="13"/><text x="3.8180%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.10%)</title><rect x="3.5680%" y="853" width="0.1042%" height="15" fill="rgb(217,162,53)" fg:x="445" fg:w="13"/><text x="3.8180%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.10%)</title><rect x="3.5680%" y="837" width="0.1042%" height="15" fill="rgb(229,93,14)" fg:x="445" fg:w="13"/><text x="3.8180%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.10%)</title><rect x="3.5760%" y="821" width="0.0962%" height="15" fill="rgb(209,67,49)" fg:x="446" fg:w="12"/><text x="3.8260%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.10%)</title><rect x="3.5760%" y="805" width="0.0962%" height="15" fill="rgb(213,87,29)" fg:x="446" fg:w="12"/><text x="3.8260%" y="815.50"></text></g><g><title>cfree (11 samples, 0.09%)</title><rect x="3.5840%" y="789" width="0.0882%" height="15" fill="rgb(205,151,52)" fg:x="447" fg:w="11"/><text x="3.8340%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.39%)</title><rect x="3.2874%" y="949" width="0.3929%" height="15" fill="rgb(253,215,39)" fg:x="410" fg:w="49"/><text x="3.5374%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::{{closure}}&gt; (33 samples, 0.26%)</title><rect x="3.4157%" y="933" width="0.2646%" height="15" fill="rgb(221,220,41)" fg:x="426" fg:w="33"/><text x="3.6657%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::trace::tracer::SpanBuilder&gt; (15 samples, 0.12%)</title><rect x="3.5600%" y="917" width="0.1203%" height="15" fill="rgb(218,133,21)" fg:x="444" fg:w="15"/><text x="3.8100%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.02%)</title><rect x="3.6802%" y="949" width="0.0241%" height="15" fill="rgb(221,193,43)" fg:x="459" fg:w="3"/><text x="3.9302%" y="959.50"></text></g><g><title>core::mem::take (3 samples, 0.02%)</title><rect x="3.6802%" y="933" width="0.0241%" height="15" fill="rgb(240,128,52)" fg:x="459" fg:w="3"/><text x="3.9302%" y="943.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="3.6883%" y="917" width="0.0160%" height="15" fill="rgb(253,114,12)" fg:x="460" fg:w="2"/><text x="3.9383%" y="927.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="3.6883%" y="901" width="0.0160%" height="15" fill="rgb(215,223,47)" fg:x="460" fg:w="2"/><text x="3.9383%" y="911.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="3.6883%" y="885" width="0.0160%" height="15" fill="rgb(248,225,23)" fg:x="460" fg:w="2"/><text x="3.9383%" y="895.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::id_generator::IdGenerator&gt;::new_trace_id::_{{closure}} (3 samples, 0.02%)</title><rect x="3.7444%" y="885" width="0.0241%" height="15" fill="rgb(250,108,0)" fg:x="467" fg:w="3"/><text x="3.9944%" y="895.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.02%)</title><rect x="3.7444%" y="869" width="0.0241%" height="15" fill="rgb(228,208,7)" fg:x="467" fg:w="3"/><text x="3.9944%" y="879.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u128&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.02%)</title><rect x="3.7444%" y="853" width="0.0241%" height="15" fill="rgb(244,45,10)" fg:x="467" fg:w="3"/><text x="3.9944%" y="863.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.02%)</title><rect x="3.7524%" y="837" width="0.0160%" height="15" fill="rgb(207,125,25)" fg:x="468" fg:w="2"/><text x="4.0024%" y="847.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.02%)</title><rect x="3.7524%" y="821" width="0.0160%" height="15" fill="rgb(210,195,18)" fg:x="468" fg:w="2"/><text x="4.0024%" y="831.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.02%)</title><rect x="3.7524%" y="805" width="0.0160%" height="15" fill="rgb(249,80,12)" fg:x="468" fg:w="2"/><text x="4.0024%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (9 samples, 0.07%)</title><rect x="3.7043%" y="949" width="0.0722%" height="15" fill="rgb(221,65,9)" fg:x="462" fg:w="9"/><text x="3.9543%" y="959.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::_{{closure}} (7 samples, 0.06%)</title><rect x="3.7203%" y="933" width="0.0561%" height="15" fill="rgb(235,49,36)" fg:x="464" fg:w="7"/><text x="3.9703%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.03%)</title><rect x="3.7444%" y="917" width="0.0321%" height="15" fill="rgb(225,32,20)" fg:x="467" fg:w="4"/><text x="3.9944%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.03%)</title><rect x="3.7444%" y="901" width="0.0321%" height="15" fill="rgb(215,141,46)" fg:x="467" fg:w="4"/><text x="3.9944%" y="911.50"></text></g><g><title>core::mem::drop (4 samples, 0.03%)</title><rect x="3.8486%" y="773" width="0.0321%" height="15" fill="rgb(250,160,47)" fg:x="480" fg:w="4"/><text x="4.0986%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (4 samples, 0.03%)</title><rect x="3.8486%" y="757" width="0.0321%" height="15" fill="rgb(216,222,40)" fg:x="480" fg:w="4"/><text x="4.0986%" y="767.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="3.8486%" y="741" width="0.0321%" height="15" fill="rgb(234,217,39)" fg:x="480" fg:w="4"/><text x="4.0986%" y="751.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="3.8807%" y="757" width="0.0241%" height="15" fill="rgb(207,178,40)" fg:x="484" fg:w="3"/><text x="4.1307%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.06%)</title><rect x="3.8486%" y="789" width="0.0641%" height="15" fill="rgb(221,136,13)" fg:x="480" fg:w="8"/><text x="4.0986%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (4 samples, 0.03%)</title><rect x="3.8807%" y="773" width="0.0321%" height="15" fill="rgb(249,199,10)" fg:x="484" fg:w="4"/><text x="4.1307%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13 samples, 0.10%)</title><rect x="3.8406%" y="869" width="0.1042%" height="15" fill="rgb(249,222,13)" fg:x="479" fg:w="13"/><text x="4.0906%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13 samples, 0.10%)</title><rect x="3.8406%" y="853" width="0.1042%" height="15" fill="rgb(244,185,38)" fg:x="479" fg:w="13"/><text x="4.0906%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (13 samples, 0.10%)</title><rect x="3.8406%" y="837" width="0.1042%" height="15" fill="rgb(236,202,9)" fg:x="479" fg:w="13"/><text x="4.0906%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (13 samples, 0.10%)</title><rect x="3.8406%" y="821" width="0.1042%" height="15" fill="rgb(250,229,37)" fg:x="479" fg:w="13"/><text x="4.0906%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.10%)</title><rect x="3.8406%" y="805" width="0.1042%" height="15" fill="rgb(206,174,23)" fg:x="479" fg:w="13"/><text x="4.0906%" y="815.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="3.9128%" y="789" width="0.0321%" height="15" fill="rgb(211,33,43)" fg:x="488" fg:w="4"/><text x="4.1628%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.18%)</title><rect x="3.7765%" y="885" width="0.1764%" height="15" fill="rgb(245,58,50)" fg:x="471" fg:w="22"/><text x="4.0265%" y="895.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="3.9529%" y="885" width="0.0321%" height="15" fill="rgb(244,68,36)" fg:x="493" fg:w="4"/><text x="4.2029%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::context::Context&gt; (30 samples, 0.24%)</title><rect x="3.7765%" y="949" width="0.2405%" height="15" fill="rgb(232,229,15)" fg:x="471" fg:w="30"/><text x="4.0265%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;opentelemetry::context::IdHasher&gt;&gt;&gt; (30 samples, 0.24%)</title><rect x="3.7765%" y="933" width="0.2405%" height="15" fill="rgb(254,30,23)" fg:x="471" fg:w="30"/><text x="4.0265%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;opentelemetry::context::IdHasher&gt;&gt;&gt; (30 samples, 0.24%)</title><rect x="3.7765%" y="917" width="0.2405%" height="15" fill="rgb(235,160,14)" fg:x="471" fg:w="30"/><text x="4.0265%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (30 samples, 0.24%)</title><rect x="3.7765%" y="901" width="0.2405%" height="15" fill="rgb(212,155,44)" fg:x="471" fg:w="30"/><text x="4.0265%" y="911.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="3.9849%" y="885" width="0.0321%" height="15" fill="rgb(226,2,50)" fg:x="497" fg:w="4"/><text x="4.2349%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (6 samples, 0.05%)</title><rect x="4.0170%" y="949" width="0.0481%" height="15" fill="rgb(234,177,6)" fg:x="501" fg:w="6"/><text x="4.2670%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (6 samples, 0.05%)</title><rect x="4.0170%" y="933" width="0.0481%" height="15" fill="rgb(217,24,9)" fg:x="501" fg:w="6"/><text x="4.2670%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="4.0170%" y="917" width="0.0481%" height="15" fill="rgb(220,13,46)" fg:x="501" fg:w="6"/><text x="4.2670%" y="927.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (174 samples, 1.40%)</title><rect x="2.7903%" y="1141" width="1.3951%" height="15" fill="rgb(239,221,27)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (174 samples, 1.40%)</title><rect x="2.7903%" y="1125" width="1.3951%" height="15" fill="rgb(222,198,25)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1135.50"></text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (174 samples, 1.40%)</title><rect x="2.7903%" y="1109" width="1.3951%" height="15" fill="rgb(211,99,13)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1119.50"></text></g><g><title>fred::multiplexer::responses::process_response (174 samples, 1.40%)</title><rect x="2.7903%" y="1093" width="1.3951%" height="15" fill="rgb(232,111,31)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1103.50"></text></g><g><title>fred::multiplexer::responses::respond_to_caller (174 samples, 1.40%)</title><rect x="2.7903%" y="1077" width="1.3951%" height="15" fill="rgb(245,82,37)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::trace::enabled::CommandTraces&gt; (174 samples, 1.40%)</title><rect x="2.7903%" y="1061" width="1.3951%" height="15" fill="rgb(227,149,46)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1071.50"></text></g><g><title>&lt;fred::trace::enabled::CommandTraces as core::ops::drop::Drop&gt;::drop (174 samples, 1.40%)</title><rect x="2.7903%" y="1045" width="1.3951%" height="15" fill="rgb(218,36,50)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (174 samples, 1.40%)</title><rect x="2.7903%" y="1029" width="1.3951%" height="15" fill="rgb(226,80,48)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (174 samples, 1.40%)</title><rect x="2.7903%" y="1013" width="1.3951%" height="15" fill="rgb(238,224,15)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1023.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (174 samples, 1.40%)</title><rect x="2.7903%" y="997" width="1.3951%" height="15" fill="rgb(241,136,10)" fg:x="348" fg:w="174"/><text x="3.0403%" y="1007.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::start (174 samples, 1.40%)</title><rect x="2.7903%" y="981" width="1.3951%" height="15" fill="rgb(208,32,45)" fg:x="348" fg:w="174"/><text x="3.0403%" y="991.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build (174 samples, 1.40%)</title><rect x="2.7903%" y="965" width="1.3951%" height="15" fill="rgb(207,135,9)" fg:x="348" fg:w="174"/><text x="3.0403%" y="975.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (15 samples, 0.12%)</title><rect x="4.0651%" y="949" width="0.1203%" height="15" fill="rgb(206,86,44)" fg:x="507" fg:w="15"/><text x="4.3151%" y="959.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (15 samples, 0.12%)</title><rect x="4.0651%" y="933" width="0.1203%" height="15" fill="rgb(245,177,15)" fg:x="507" fg:w="15"/><text x="4.3151%" y="943.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.03%)</title><rect x="4.2736%" y="821" width="0.0321%" height="15" fill="rgb(206,64,50)" fg:x="533" fg:w="4"/><text x="4.5236%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="4.2816%" y="805" width="0.0241%" height="15" fill="rgb(234,36,40)" fg:x="534" fg:w="3"/><text x="4.5316%" y="815.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.09%)</title><rect x="4.3056%" y="821" width="0.0882%" height="15" fill="rgb(213,64,8)" fg:x="537" fg:w="11"/><text x="4.5556%" y="831.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.10%)</title><rect x="4.4419%" y="805" width="0.0962%" height="15" fill="rgb(210,75,36)" fg:x="554" fg:w="12"/><text x="4.6919%" y="815.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="997" width="0.3688%" height="15" fill="rgb(229,88,21)" fg:x="522" fg:w="46"/><text x="4.4354%" y="1007.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="981" width="0.3688%" height="15" fill="rgb(252,204,47)" fg:x="522" fg:w="46"/><text x="4.4354%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="965" width="0.3688%" height="15" fill="rgb(208,77,27)" fg:x="522" fg:w="46"/><text x="4.4354%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="949" width="0.3688%" height="15" fill="rgb(221,76,26)" fg:x="522" fg:w="46"/><text x="4.4354%" y="959.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (46 samples, 0.37%)</title><rect x="4.1854%" y="933" width="0.3688%" height="15" fill="rgb(225,139,18)" fg:x="522" fg:w="46"/><text x="4.4354%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="917" width="0.3688%" height="15" fill="rgb(230,137,11)" fg:x="522" fg:w="46"/><text x="4.4354%" y="927.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="901" width="0.3688%" height="15" fill="rgb(212,28,1)" fg:x="522" fg:w="46"/><text x="4.4354%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="4.1854%" y="885" width="0.3688%" height="15" fill="rgb(248,164,17)" fg:x="522" fg:w="46"/><text x="4.4354%" y="895.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (42 samples, 0.34%)</title><rect x="4.2174%" y="869" width="0.3368%" height="15" fill="rgb(222,171,42)" fg:x="526" fg:w="42"/><text x="4.4674%" y="879.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (42 samples, 0.34%)</title><rect x="4.2174%" y="853" width="0.3368%" height="15" fill="rgb(243,84,45)" fg:x="526" fg:w="42"/><text x="4.4674%" y="863.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.34%)</title><rect x="4.2174%" y="837" width="0.3368%" height="15" fill="rgb(252,49,23)" fg:x="526" fg:w="42"/><text x="4.4674%" y="847.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (19 samples, 0.15%)</title><rect x="4.4019%" y="821" width="0.1523%" height="15" fill="rgb(215,19,7)" fg:x="549" fg:w="19"/><text x="4.6519%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::utils::spawn_centralized_listener::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="4.5382%" y="805" width="0.0160%" height="15" fill="rgb(238,81,41)" fg:x="566" fg:w="2"/><text x="4.7882%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (5 samples, 0.04%)</title><rect x="4.7226%" y="693" width="0.0401%" height="15" fill="rgb(210,199,37)" fg:x="589" fg:w="5"/><text x="4.9726%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (5 samples, 0.04%)</title><rect x="4.7226%" y="677" width="0.0401%" height="15" fill="rgb(244,192,49)" fg:x="589" fg:w="5"/><text x="4.9726%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (5 samples, 0.04%)</title><rect x="4.7226%" y="661" width="0.0401%" height="15" fill="rgb(226,211,11)" fg:x="589" fg:w="5"/><text x="4.9726%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.02%)</title><rect x="4.7466%" y="645" width="0.0160%" height="15" fill="rgb(236,162,54)" fg:x="592" fg:w="2"/><text x="4.9966%" y="655.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (25 samples, 0.20%)</title><rect x="4.5863%" y="709" width="0.2004%" height="15" fill="rgb(220,229,9)" fg:x="572" fg:w="25"/><text x="4.8363%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.02%)</title><rect x="4.7627%" y="693" width="0.0241%" height="15" fill="rgb(250,87,22)" fg:x="594" fg:w="3"/><text x="5.0127%" y="703.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref::_{{closure}} (3 samples, 0.02%)</title><rect x="4.7627%" y="677" width="0.0241%" height="15" fill="rgb(239,43,17)" fg:x="594" fg:w="3"/><text x="5.0127%" y="687.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (77 samples, 0.62%)</title><rect x="4.1854%" y="1141" width="0.6174%" height="15" fill="rgb(231,177,25)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1151.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (77 samples, 0.62%)</title><rect x="4.1854%" y="1125" width="0.6174%" height="15" fill="rgb(219,179,1)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1135.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (77 samples, 0.62%)</title><rect x="4.1854%" y="1109" width="0.6174%" height="15" fill="rgb(238,219,53)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (77 samples, 0.62%)</title><rect x="4.1854%" y="1093" width="0.6174%" height="15" fill="rgb(232,167,36)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1103.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (77 samples, 0.62%)</title><rect x="4.1854%" y="1077" width="0.6174%" height="15" fill="rgb(244,19,51)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1087.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (77 samples, 0.62%)</title><rect x="4.1854%" y="1061" width="0.6174%" height="15" fill="rgb(224,6,22)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (77 samples, 0.62%)</title><rect x="4.1854%" y="1045" width="0.6174%" height="15" fill="rgb(224,145,5)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (77 samples, 0.62%)</title><rect x="4.1854%" y="1029" width="0.6174%" height="15" fill="rgb(234,130,49)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (77 samples, 0.62%)</title><rect x="4.1854%" y="1013" width="0.6174%" height="15" fill="rgb(254,6,2)" fg:x="522" fg:w="77"/><text x="4.4354%" y="1023.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="997" width="0.2486%" height="15" fill="rgb(208,96,46)" fg:x="568" fg:w="31"/><text x="4.8042%" y="1007.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="981" width="0.2486%" height="15" fill="rgb(239,3,39)" fg:x="568" fg:w="31"/><text x="4.8042%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="965" width="0.2486%" height="15" fill="rgb(233,210,1)" fg:x="568" fg:w="31"/><text x="4.8042%" y="975.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (31 samples, 0.25%)</title><rect x="4.5542%" y="949" width="0.2486%" height="15" fill="rgb(244,137,37)" fg:x="568" fg:w="31"/><text x="4.8042%" y="959.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="933" width="0.2486%" height="15" fill="rgb(240,136,2)" fg:x="568" fg:w="31"/><text x="4.8042%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="917" width="0.2486%" height="15" fill="rgb(239,18,37)" fg:x="568" fg:w="31"/><text x="4.8042%" y="927.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="901" width="0.2486%" height="15" fill="rgb(218,185,22)" fg:x="568" fg:w="31"/><text x="4.8042%" y="911.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="885" width="0.2486%" height="15" fill="rgb(225,218,4)" fg:x="568" fg:w="31"/><text x="4.8042%" y="895.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (31 samples, 0.25%)</title><rect x="4.5542%" y="869" width="0.2486%" height="15" fill="rgb(230,182,32)" fg:x="568" fg:w="31"/><text x="4.8042%" y="879.50"></text></g><g><title>&lt;futures_util::future::try_future::ErrInto&lt;Fut,E&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="853" width="0.2486%" height="15" fill="rgb(242,56,43)" fg:x="568" fg:w="31"/><text x="4.8042%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="837" width="0.2486%" height="15" fill="rgb(233,99,24)" fg:x="568" fg:w="31"/><text x="4.8042%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="821" width="0.2486%" height="15" fill="rgb(234,209,42)" fg:x="568" fg:w="31"/><text x="4.8042%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="805" width="0.2486%" height="15" fill="rgb(227,7,12)" fg:x="568" fg:w="31"/><text x="4.8042%" y="815.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="789" width="0.2486%" height="15" fill="rgb(245,203,43)" fg:x="568" fg:w="31"/><text x="4.8042%" y="799.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (31 samples, 0.25%)</title><rect x="4.5542%" y="773" width="0.2486%" height="15" fill="rgb(238,205,33)" fg:x="568" fg:w="31"/><text x="4.8042%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.25%)</title><rect x="4.5542%" y="757" width="0.2486%" height="15" fill="rgb(231,56,7)" fg:x="568" fg:w="31"/><text x="4.8042%" y="767.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (31 samples, 0.25%)</title><rect x="4.5542%" y="741" width="0.2486%" height="15" fill="rgb(244,186,29)" fg:x="568" fg:w="31"/><text x="4.8042%" y="751.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.23%)</title><rect x="4.5702%" y="725" width="0.2325%" height="15" fill="rgb(234,111,31)" fg:x="570" fg:w="29"/><text x="4.8202%" y="735.50"></text></g><g><title>tokio::sync::broadcast::Recv&lt;T&gt;::project (2 samples, 0.02%)</title><rect x="4.7867%" y="709" width="0.0160%" height="15" fill="rgb(241,149,10)" fg:x="597" fg:w="2"/><text x="5.0367%" y="719.50"></text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (4 samples, 0.03%)</title><rect x="4.8028%" y="1141" width="0.0321%" height="15" fill="rgb(249,206,44)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;core::option::Option&lt;fred::protocol::connection::RedisSink&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="4.8028%" y="1125" width="0.0321%" height="15" fill="rgb(251,153,30)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1135.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="4.8028%" y="1109" width="0.0321%" height="15" fill="rgb(239,152,38)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="4.8028%" y="1093" width="0.0321%" height="15" fill="rgb(249,139,47)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1103.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="4.8028%" y="1077" width="0.0321%" height="15" fill="rgb(244,64,35)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1087.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (4 samples, 0.03%)</title><rect x="4.8028%" y="1061" width="0.0321%" height="15" fill="rgb(216,46,15)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1071.50"></text></g><g><title>tokio_util::util::poll_write_buf (4 samples, 0.03%)</title><rect x="4.8028%" y="1045" width="0.0321%" height="15" fill="rgb(250,74,19)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1055.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (4 samples, 0.03%)</title><rect x="4.8028%" y="1029" width="0.0321%" height="15" fill="rgb(249,42,33)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1039.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="1013" width="0.0321%" height="15" fill="rgb(242,149,17)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1023.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (4 samples, 0.03%)</title><rect x="4.8028%" y="997" width="0.0321%" height="15" fill="rgb(244,29,21)" fg:x="599" fg:w="4"/><text x="5.0528%" y="1007.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="981" width="0.0321%" height="15" fill="rgb(220,130,37)" fg:x="599" fg:w="4"/><text x="5.0528%" y="991.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (4 samples, 0.03%)</title><rect x="4.8028%" y="965" width="0.0321%" height="15" fill="rgb(211,67,2)" fg:x="599" fg:w="4"/><text x="5.0528%" y="975.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (4 samples, 0.03%)</title><rect x="4.8028%" y="949" width="0.0321%" height="15" fill="rgb(235,68,52)" fg:x="599" fg:w="4"/><text x="5.0528%" y="959.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (4 samples, 0.03%)</title><rect x="4.8028%" y="933" width="0.0321%" height="15" fill="rgb(246,142,3)" fg:x="599" fg:w="4"/><text x="5.0528%" y="943.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="917" width="0.0321%" height="15" fill="rgb(241,25,7)" fg:x="599" fg:w="4"/><text x="5.0528%" y="927.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4 samples, 0.03%)</title><rect x="4.8028%" y="901" width="0.0321%" height="15" fill="rgb(242,119,39)" fg:x="599" fg:w="4"/><text x="5.0528%" y="911.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (4 samples, 0.03%)</title><rect x="4.8028%" y="885" width="0.0321%" height="15" fill="rgb(241,98,45)" fg:x="599" fg:w="4"/><text x="5.0528%" y="895.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (4 samples, 0.03%)</title><rect x="4.8028%" y="869" width="0.0321%" height="15" fill="rgb(254,28,30)" fg:x="599" fg:w="4"/><text x="5.0528%" y="879.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="853" width="0.0321%" height="15" fill="rgb(241,142,54)" fg:x="599" fg:w="4"/><text x="5.0528%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="837" width="0.0321%" height="15" fill="rgb(222,85,15)" fg:x="599" fg:w="4"/><text x="5.0528%" y="847.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (4 samples, 0.03%)</title><rect x="4.8028%" y="821" width="0.0321%" height="15" fill="rgb(210,85,47)" fg:x="599" fg:w="4"/><text x="5.0528%" y="831.50"></text></g><g><title>writev (4 samples, 0.03%)</title><rect x="4.8028%" y="805" width="0.0321%" height="15" fill="rgb(224,206,25)" fg:x="599" fg:w="4"/><text x="5.0528%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.03%)</title><rect x="4.8028%" y="789" width="0.0321%" height="15" fill="rgb(243,201,19)" fg:x="599" fg:w="4"/><text x="5.0528%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="4.9872%" y="933" width="0.0241%" height="15" fill="rgb(236,59,4)" fg:x="622" fg:w="3"/><text x="5.2372%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="4.9872%" y="917" width="0.0241%" height="15" fill="rgb(254,179,45)" fg:x="622" fg:w="3"/><text x="5.2372%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="4.9872%" y="901" width="0.0241%" height="15" fill="rgb(226,14,10)" fg:x="622" fg:w="3"/><text x="5.2372%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="4.9872%" y="885" width="0.0241%" height="15" fill="rgb(244,27,41)" fg:x="622" fg:w="3"/><text x="5.2372%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="4.9872%" y="869" width="0.0241%" height="15" fill="rgb(235,35,32)" fg:x="622" fg:w="3"/><text x="5.2372%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="4.9872%" y="853" width="0.0241%" height="15" fill="rgb(218,68,31)" fg:x="622" fg:w="3"/><text x="5.2372%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.08%)</title><rect x="4.9551%" y="1061" width="0.0802%" height="15" fill="rgb(207,120,37)" fg:x="618" fg:w="10"/><text x="5.2051%" y="1071.50"></text></g><g><title>&lt;fred::types::RedisKey as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.05%)</title><rect x="4.9872%" y="1045" width="0.0481%" height="15" fill="rgb(227,98,0)" fg:x="622" fg:w="6"/><text x="5.2372%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.05%)</title><rect x="4.9872%" y="1029" width="0.0481%" height="15" fill="rgb(207,7,3)" fg:x="622" fg:w="6"/><text x="5.2372%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.05%)</title><rect x="4.9872%" y="1013" width="0.0481%" height="15" fill="rgb(206,98,19)" fg:x="622" fg:w="6"/><text x="5.2372%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.05%)</title><rect x="4.9872%" y="997" width="0.0481%" height="15" fill="rgb(217,5,26)" fg:x="622" fg:w="6"/><text x="5.2372%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.05%)</title><rect x="4.9872%" y="981" width="0.0481%" height="15" fill="rgb(235,190,38)" fg:x="622" fg:w="6"/><text x="5.2372%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.05%)</title><rect x="4.9872%" y="965" width="0.0481%" height="15" fill="rgb(247,86,24)" fg:x="622" fg:w="6"/><text x="5.2372%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.05%)</title><rect x="4.9872%" y="949" width="0.0481%" height="15" fill="rgb(205,101,16)" fg:x="622" fg:w="6"/><text x="5.2372%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.02%)</title><rect x="5.0112%" y="933" width="0.0241%" height="15" fill="rgb(246,168,33)" fg:x="625" fg:w="3"/><text x="5.2612%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="5.0112%" y="917" width="0.0241%" height="15" fill="rgb(231,114,1)" fg:x="625" fg:w="3"/><text x="5.2612%" y="927.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="5.0112%" y="901" width="0.0241%" height="15" fill="rgb(207,184,53)" fg:x="625" fg:w="3"/><text x="5.2612%" y="911.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="5.0353%" y="1045" width="0.0241%" height="15" fill="rgb(224,95,51)" fg:x="628" fg:w="3"/><text x="5.2853%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="5.2838%" y="997" width="0.0561%" height="15" fill="rgb(212,188,45)" fg:x="659" fg:w="7"/><text x="5.5338%" y="1007.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="5.2999%" y="981" width="0.0401%" height="15" fill="rgb(223,154,38)" fg:x="661" fg:w="5"/><text x="5.5499%" y="991.50"></text></g><g><title>&lt;tracing_core::dispatcher::Dispatch as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="5.4121%" y="949" width="0.0241%" height="15" fill="rgb(251,22,52)" fg:x="675" fg:w="3"/><text x="5.6621%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="5.4121%" y="933" width="0.0241%" height="15" fill="rgb(229,209,22)" fg:x="675" fg:w="3"/><text x="5.6621%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.02%)</title><rect x="5.4522%" y="901" width="0.0160%" height="15" fill="rgb(234,138,34)" fg:x="680" fg:w="2"/><text x="5.7022%" y="911.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="5.4682%" y="885" width="0.0321%" height="15" fill="rgb(212,95,11)" fg:x="682" fg:w="4"/><text x="5.7182%" y="895.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (4 samples, 0.03%)</title><rect x="5.4682%" y="869" width="0.0321%" height="15" fill="rgb(240,179,47)" fg:x="682" fg:w="4"/><text x="5.7182%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="5.4763%" y="853" width="0.0241%" height="15" fill="rgb(240,163,11)" fg:x="683" fg:w="3"/><text x="5.7263%" y="863.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="5.4763%" y="837" width="0.0241%" height="15" fill="rgb(236,37,12)" fg:x="683" fg:w="3"/><text x="5.7263%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="5.4763%" y="821" width="0.0241%" height="15" fill="rgb(232,164,16)" fg:x="683" fg:w="3"/><text x="5.7263%" y="831.50"></text></g><g><title>&lt;tracing::span::Span as core::clone::Clone&gt;::clone (21 samples, 0.17%)</title><rect x="5.3400%" y="997" width="0.1684%" height="15" fill="rgb(244,205,15)" fg:x="666" fg:w="21"/><text x="5.5900%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.15%)</title><rect x="5.3560%" y="981" width="0.1523%" height="15" fill="rgb(223,117,47)" fg:x="668" fg:w="19"/><text x="5.6060%" y="991.50"></text></g><g><title>&lt;tracing::span::Inner as core::clone::Clone&gt;::clone (19 samples, 0.15%)</title><rect x="5.3560%" y="965" width="0.1523%" height="15" fill="rgb(244,107,35)" fg:x="668" fg:w="19"/><text x="5.6060%" y="975.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::clone_span (9 samples, 0.07%)</title><rect x="5.4362%" y="949" width="0.0722%" height="15" fill="rgb(205,140,8)" fg:x="678" fg:w="9"/><text x="5.6862%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::clone_span (9 samples, 0.07%)</title><rect x="5.4362%" y="933" width="0.0722%" height="15" fill="rgb(228,84,46)" fg:x="678" fg:w="9"/><text x="5.6862%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (9 samples, 0.07%)</title><rect x="5.4362%" y="917" width="0.0722%" height="15" fill="rgb(254,188,9)" fg:x="678" fg:w="9"/><text x="5.6862%" y="927.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (5 samples, 0.04%)</title><rect x="5.4682%" y="901" width="0.0401%" height="15" fill="rgb(206,112,54)" fg:x="682" fg:w="5"/><text x="5.7182%" y="911.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="5.5645%" y="901" width="0.0160%" height="15" fill="rgb(216,84,49)" fg:x="694" fg:w="2"/><text x="5.8145%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (3 samples, 0.02%)</title><rect x="5.6687%" y="837" width="0.0241%" height="15" fill="rgb(214,194,35)" fg:x="707" fg:w="3"/><text x="5.9187%" y="847.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="5.6687%" y="821" width="0.0241%" height="15" fill="rgb(249,28,3)" fg:x="707" fg:w="3"/><text x="5.9187%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="5.6687%" y="805" width="0.0241%" height="15" fill="rgb(222,56,52)" fg:x="707" fg:w="3"/><text x="5.9187%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="5.6687%" y="789" width="0.0241%" height="15" fill="rgb(245,217,50)" fg:x="707" fg:w="3"/><text x="5.9187%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.12%)</title><rect x="5.6286%" y="869" width="0.1203%" height="15" fill="rgb(213,201,24)" fg:x="702" fg:w="15"/><text x="5.8786%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (14 samples, 0.11%)</title><rect x="5.6366%" y="853" width="0.1123%" height="15" fill="rgb(248,116,28)" fg:x="703" fg:w="14"/><text x="5.8866%" y="863.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (7 samples, 0.06%)</title><rect x="5.6928%" y="837" width="0.0561%" height="15" fill="rgb(219,72,43)" fg:x="710" fg:w="7"/><text x="5.9428%" y="847.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="5.6928%" y="821" width="0.0561%" height="15" fill="rgb(209,138,14)" fg:x="710" fg:w="7"/><text x="5.9428%" y="831.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (7 samples, 0.06%)</title><rect x="5.6928%" y="805" width="0.0561%" height="15" fill="rgb(222,18,33)" fg:x="710" fg:w="7"/><text x="5.9428%" y="815.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="5.7248%" y="789" width="0.0241%" height="15" fill="rgb(213,199,7)" fg:x="714" fg:w="3"/><text x="5.9748%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="5.7248%" y="773" width="0.0241%" height="15" fill="rgb(250,110,10)" fg:x="714" fg:w="3"/><text x="5.9748%" y="783.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="5.7248%" y="757" width="0.0241%" height="15" fill="rgb(248,123,6)" fg:x="714" fg:w="3"/><text x="5.9748%" y="767.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="5.7328%" y="741" width="0.0160%" height="15" fill="rgb(206,91,31)" fg:x="715" fg:w="2"/><text x="5.9828%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="5.7328%" y="725" width="0.0160%" height="15" fill="rgb(211,154,13)" fg:x="715" fg:w="2"/><text x="5.9828%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (25 samples, 0.20%)</title><rect x="5.6206%" y="885" width="0.2004%" height="15" fill="rgb(225,148,7)" fg:x="701" fg:w="25"/><text x="5.8706%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing::span::Inner&gt;&gt; (9 samples, 0.07%)</title><rect x="5.7489%" y="869" width="0.0722%" height="15" fill="rgb(220,160,43)" fg:x="717" fg:w="9"/><text x="5.9989%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Inner&gt; (9 samples, 0.07%)</title><rect x="5.7489%" y="853" width="0.0722%" height="15" fill="rgb(213,52,39)" fg:x="717" fg:w="9"/><text x="5.9989%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::Dispatch&gt; (9 samples, 0.07%)</title><rect x="5.7489%" y="837" width="0.0722%" height="15" fill="rgb(243,137,7)" fg:x="717" fg:w="9"/><text x="5.9989%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt;&gt; (9 samples, 0.07%)</title><rect x="5.7489%" y="821" width="0.0722%" height="15" fill="rgb(230,79,13)" fg:x="717" fg:w="9"/><text x="5.9989%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.07%)</title><rect x="5.7489%" y="805" width="0.0722%" height="15" fill="rgb(247,105,23)" fg:x="717" fg:w="9"/><text x="5.9989%" y="815.50"></text></g><g><title>__log10_finite (26 samples, 0.21%)</title><rect x="5.9253%" y="773" width="0.2085%" height="15" fill="rgb(223,179,41)" fg:x="739" fg:w="26"/><text x="6.1753%" y="783.50"></text></g><g><title>[libm-2.28.so] (22 samples, 0.18%)</title><rect x="5.9573%" y="757" width="0.1764%" height="15" fill="rgb(218,9,34)" fg:x="743" fg:w="22"/><text x="6.2073%" y="767.50"></text></g><g><title>fred::protocol::utils::frame_size (37 samples, 0.30%)</title><rect x="5.8531%" y="869" width="0.2967%" height="15" fill="rgb(222,106,8)" fg:x="730" fg:w="37"/><text x="6.1031%" y="879.50"></text></g><g><title>fred::protocol::utils::i64_size (29 samples, 0.23%)</title><rect x="5.9173%" y="853" width="0.2325%" height="15" fill="rgb(211,220,0)" fg:x="738" fg:w="29"/><text x="6.1673%" y="863.50"></text></g><g><title>redis_protocol::utils::digits_in_number (29 samples, 0.23%)</title><rect x="5.9173%" y="837" width="0.2325%" height="15" fill="rgb(229,52,16)" fg:x="738" fg:w="29"/><text x="6.1673%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (28 samples, 0.22%)</title><rect x="5.9253%" y="821" width="0.2245%" height="15" fill="rgb(212,155,18)" fg:x="739" fg:w="28"/><text x="6.1753%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (28 samples, 0.22%)</title><rect x="5.9253%" y="805" width="0.2245%" height="15" fill="rgb(242,21,14)" fg:x="739" fg:w="28"/><text x="6.1753%" y="815.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (28 samples, 0.22%)</title><rect x="5.9253%" y="789" width="0.2245%" height="15" fill="rgb(222,19,48)" fg:x="739" fg:w="28"/><text x="6.1753%" y="799.50"></text></g><g><title>log10f32x (2 samples, 0.02%)</title><rect x="6.1337%" y="773" width="0.0160%" height="15" fill="rgb(232,45,27)" fg:x="765" fg:w="2"/><text x="6.3837%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (9 samples, 0.07%)</title><rect x="6.1979%" y="821" width="0.0722%" height="15" fill="rgb(249,103,42)" fg:x="773" fg:w="9"/><text x="6.4479%" y="831.50"></text></g><g><title>tracing_core::field::FieldSet::field::_{{closure}} (8 samples, 0.06%)</title><rect x="6.2059%" y="805" width="0.0641%" height="15" fill="rgb(246,81,33)" fg:x="774" fg:w="8"/><text x="6.4559%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="6.2059%" y="789" width="0.0641%" height="15" fill="rgb(252,33,42)" fg:x="774" fg:w="8"/><text x="6.4559%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="6.2059%" y="773" width="0.0641%" height="15" fill="rgb(209,212,41)" fg:x="774" fg:w="8"/><text x="6.4559%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.06%)</title><rect x="6.2059%" y="757" width="0.0641%" height="15" fill="rgb(207,154,6)" fg:x="774" fg:w="8"/><text x="6.4559%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="6.2059%" y="741" width="0.0641%" height="15" fill="rgb(223,64,47)" fg:x="774" fg:w="8"/><text x="6.4559%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.06%)</title><rect x="6.2059%" y="725" width="0.0641%" height="15" fill="rgb(211,161,38)" fg:x="774" fg:w="8"/><text x="6.4559%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.06%)</title><rect x="6.2059%" y="709" width="0.0641%" height="15" fill="rgb(219,138,40)" fg:x="774" fg:w="8"/><text x="6.4559%" y="719.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="6.2219%" y="693" width="0.0481%" height="15" fill="rgb(241,228,46)" fg:x="776" fg:w="6"/><text x="6.4719%" y="703.50"></text></g><g><title>tracing_core::field::FieldSet::field (12 samples, 0.10%)</title><rect x="6.1979%" y="837" width="0.0962%" height="15" fill="rgb(223,209,38)" fg:x="773" fg:w="12"/><text x="6.4479%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="6.2700%" y="821" width="0.0241%" height="15" fill="rgb(236,164,45)" fg:x="782" fg:w="3"/><text x="6.5200%" y="831.50"></text></g><g><title>tracing_core::field::FieldSet::field::_{{closure}} (3 samples, 0.02%)</title><rect x="6.2700%" y="805" width="0.0241%" height="15" fill="rgb(231,15,5)" fg:x="782" fg:w="3"/><text x="6.5200%" y="815.50"></text></g><g><title>tracing_core::field::FieldSet::callsite (3 samples, 0.02%)</title><rect x="6.2700%" y="789" width="0.0241%" height="15" fill="rgb(252,35,15)" fg:x="782" fg:w="3"/><text x="6.5200%" y="799.50"></text></g><g><title>&lt;str as tracing::field::AsField&gt;::as_field (13 samples, 0.10%)</title><rect x="6.1979%" y="853" width="0.1042%" height="15" fill="rgb(248,181,18)" fg:x="773" fg:w="13"/><text x="6.4479%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (3 samples, 0.02%)</title><rect x="6.3422%" y="773" width="0.0241%" height="15" fill="rgb(233,39,42)" fg:x="791" fg:w="3"/><text x="6.5922%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (3 samples, 0.02%)</title><rect x="6.3422%" y="757" width="0.0241%" height="15" fill="rgb(238,110,33)" fg:x="791" fg:w="3"/><text x="6.5922%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (3 samples, 0.02%)</title><rect x="6.3422%" y="741" width="0.0241%" height="15" fill="rgb(233,195,10)" fg:x="791" fg:w="3"/><text x="6.5922%" y="751.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="6.3422%" y="725" width="0.0241%" height="15" fill="rgb(254,105,3)" fg:x="791" fg:w="3"/><text x="6.5922%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="6.3422%" y="709" width="0.0241%" height="15" fill="rgb(221,225,9)" fg:x="791" fg:w="3"/><text x="6.5922%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="6.3422%" y="693" width="0.0241%" height="15" fill="rgb(224,227,45)" fg:x="791" fg:w="3"/><text x="6.5922%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (32 samples, 0.26%)</title><rect x="6.3663%" y="773" width="0.2566%" height="15" fill="rgb(229,198,43)" fg:x="794" fg:w="32"/><text x="6.6163%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (32 samples, 0.26%)</title><rect x="6.3663%" y="757" width="0.2566%" height="15" fill="rgb(206,209,35)" fg:x="794" fg:w="32"/><text x="6.6163%" y="767.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.26%)</title><rect x="6.3663%" y="741" width="0.2566%" height="15" fill="rgb(245,195,53)" fg:x="794" fg:w="32"/><text x="6.6163%" y="751.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (32 samples, 0.26%)</title><rect x="6.3663%" y="725" width="0.2566%" height="15" fill="rgb(240,92,26)" fg:x="794" fg:w="32"/><text x="6.6163%" y="735.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (32 samples, 0.26%)</title><rect x="6.3663%" y="709" width="0.2566%" height="15" fill="rgb(207,40,23)" fg:x="794" fg:w="32"/><text x="6.6163%" y="719.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (32 samples, 0.26%)</title><rect x="6.3663%" y="693" width="0.2566%" height="15" fill="rgb(223,111,35)" fg:x="794" fg:w="32"/><text x="6.6163%" y="703.50"></text></g><g><title>__GI___pthread_rwlock_unlock (31 samples, 0.25%)</title><rect x="6.3743%" y="677" width="0.2486%" height="15" fill="rgb(229,147,28)" fg:x="795" fg:w="31"/><text x="6.6243%" y="687.50"></text></g><g><title>&lt;u64 as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="6.6389%" y="725" width="0.0160%" height="15" fill="rgb(211,29,28)" fg:x="828" fg:w="2"/><text x="6.8889%" y="735.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.03%)</title><rect x="6.8554%" y="645" width="0.0321%" height="15" fill="rgb(228,72,33)" fg:x="855" fg:w="4"/><text x="7.1054%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="6.8874%" y="645" width="0.0321%" height="15" fill="rgb(205,214,31)" fg:x="859" fg:w="4"/><text x="7.1374%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="6.8954%" y="629" width="0.0241%" height="15" fill="rgb(224,111,15)" fg:x="860" fg:w="3"/><text x="7.1454%" y="639.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="6.8954%" y="613" width="0.0241%" height="15" fill="rgb(253,21,26)" fg:x="860" fg:w="3"/><text x="7.1454%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="6.8954%" y="597" width="0.0241%" height="15" fill="rgb(245,139,43)" fg:x="860" fg:w="3"/><text x="7.1454%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="6.8954%" y="581" width="0.0241%" height="15" fill="rgb(252,170,7)" fg:x="860" fg:w="3"/><text x="7.1454%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="6.8954%" y="565" width="0.0241%" height="15" fill="rgb(231,118,14)" fg:x="860" fg:w="3"/><text x="7.1454%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="6.9035%" y="549" width="0.0160%" height="15" fill="rgb(238,83,0)" fg:x="861" fg:w="2"/><text x="7.1535%" y="559.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="6.9035%" y="533" width="0.0160%" height="15" fill="rgb(221,39,39)" fg:x="861" fg:w="2"/><text x="7.1535%" y="543.50"></text></g><g><title>core::fmt::Formatter::debug_lower_hex (6 samples, 0.05%)</title><rect x="6.9275%" y="629" width="0.0481%" height="15" fill="rgb(222,119,46)" fg:x="864" fg:w="6"/><text x="7.1775%" y="639.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (12 samples, 0.10%)</title><rect x="6.9195%" y="645" width="0.0962%" height="15" fill="rgb(222,165,49)" fg:x="863" fg:w="12"/><text x="7.1695%" y="655.50"></text></g><g><title>core::fmt::Formatter::debug_upper_hex (5 samples, 0.04%)</title><rect x="6.9756%" y="629" width="0.0401%" height="15" fill="rgb(219,113,52)" fg:x="870" fg:w="5"/><text x="7.2256%" y="639.50"></text></g><g><title>futex_wait (2 samples, 0.02%)</title><rect x="7.9378%" y="341" width="0.0160%" height="15" fill="rgb(214,7,15)" fg:x="990" fg:w="2"/><text x="8.1878%" y="351.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="7.9378%" y="325" width="0.0160%" height="15" fill="rgb(235,32,4)" fg:x="990" fg:w="2"/><text x="8.1878%" y="335.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="7.9378%" y="309" width="0.0160%" height="15" fill="rgb(238,90,54)" fg:x="990" fg:w="2"/><text x="8.1878%" y="319.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="7.9378%" y="293" width="0.0160%" height="15" fill="rgb(213,208,19)" fg:x="990" fg:w="2"/><text x="8.1878%" y="303.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.02%)</title><rect x="7.9378%" y="277" width="0.0160%" height="15" fill="rgb(233,156,4)" fg:x="990" fg:w="2"/><text x="8.1878%" y="287.50"></text></g><g><title>dequeue_entity (2 samples, 0.02%)</title><rect x="7.9378%" y="261" width="0.0160%" height="15" fill="rgb(207,194,5)" fg:x="990" fg:w="2"/><text x="8.1878%" y="271.50"></text></g><g><title>__task_rq_lock (5 samples, 0.04%)</title><rect x="8.0581%" y="293" width="0.0401%" height="15" fill="rgb(206,111,30)" fg:x="1005" fg:w="5"/><text x="8.3081%" y="303.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.04%)</title><rect x="8.0581%" y="277" width="0.0401%" height="15" fill="rgb(243,70,54)" fg:x="1005" fg:w="5"/><text x="8.3081%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.04%)</title><rect x="8.0581%" y="261" width="0.0401%" height="15" fill="rgb(242,28,8)" fg:x="1005" fg:w="5"/><text x="8.3081%" y="271.50"></text></g><g><title>__libc_malloc (130 samples, 1.04%)</title><rect x="7.0718%" y="437" width="1.0423%" height="15" fill="rgb(219,106,18)" fg:x="882" fg:w="130"/><text x="7.3218%" y="447.50"></text></g><g><title>[libc-2.28.so] (106 samples, 0.85%)</title><rect x="7.2643%" y="421" width="0.8499%" height="15" fill="rgb(244,222,10)" fg:x="906" fg:w="106"/><text x="7.5143%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.20%)</title><rect x="7.9137%" y="405" width="0.2004%" height="15" fill="rgb(236,179,52)" fg:x="987" fg:w="25"/><text x="8.1637%" y="415.50"></text></g><g><title>do_syscall_64 (24 samples, 0.19%)</title><rect x="7.9217%" y="389" width="0.1924%" height="15" fill="rgb(213,23,39)" fg:x="988" fg:w="24"/><text x="8.1717%" y="399.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.18%)</title><rect x="7.9378%" y="373" width="0.1764%" height="15" fill="rgb(238,48,10)" fg:x="990" fg:w="22"/><text x="8.1878%" y="383.50"></text></g><g><title>do_futex (22 samples, 0.18%)</title><rect x="7.9378%" y="357" width="0.1764%" height="15" fill="rgb(251,196,23)" fg:x="990" fg:w="22"/><text x="8.1878%" y="367.50"></text></g><g><title>futex_wake (20 samples, 0.16%)</title><rect x="7.9538%" y="341" width="0.1604%" height="15" fill="rgb(250,152,24)" fg:x="992" fg:w="20"/><text x="8.2038%" y="351.50"></text></g><g><title>wake_up_q (16 samples, 0.13%)</title><rect x="7.9859%" y="325" width="0.1283%" height="15" fill="rgb(209,150,17)" fg:x="996" fg:w="16"/><text x="8.2359%" y="335.50"></text></g><g><title>try_to_wake_up (16 samples, 0.13%)</title><rect x="7.9859%" y="309" width="0.1283%" height="15" fill="rgb(234,202,34)" fg:x="996" fg:w="16"/><text x="8.2359%" y="319.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.02%)</title><rect x="8.0981%" y="293" width="0.0160%" height="15" fill="rgb(253,148,53)" fg:x="1010" fg:w="2"/><text x="8.3481%" y="303.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="8.1142%" y="437" width="0.0160%" height="15" fill="rgb(218,129,16)" fg:x="1012" fg:w="2"/><text x="8.3642%" y="447.50"></text></g><g><title>__rust_alloc (3 samples, 0.02%)</title><rect x="8.1302%" y="437" width="0.0241%" height="15" fill="rgb(216,85,19)" fg:x="1014" fg:w="3"/><text x="8.3802%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 samples, 1.10%)</title><rect x="7.0638%" y="453" width="1.0985%" height="15" fill="rgb(235,228,7)" fg:x="881" fg:w="137"/><text x="7.3138%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (141 samples, 1.13%)</title><rect x="7.0398%" y="613" width="1.1305%" height="15" fill="rgb(245,175,0)" fg:x="878" fg:w="141"/><text x="7.2898%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (139 samples, 1.11%)</title><rect x="7.0558%" y="597" width="1.1145%" height="15" fill="rgb(208,168,36)" fg:x="880" fg:w="139"/><text x="7.3058%" y="607.50"></text></g><g><title>alloc::string::String::push_str (139 samples, 1.11%)</title><rect x="7.0558%" y="581" width="1.1145%" height="15" fill="rgb(246,171,24)" fg:x="880" fg:w="139"/><text x="7.3058%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (139 samples, 1.11%)</title><rect x="7.0558%" y="565" width="1.1145%" height="15" fill="rgb(215,142,24)" fg:x="880" fg:w="139"/><text x="7.3058%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (139 samples, 1.11%)</title><rect x="7.0558%" y="549" width="1.1145%" height="15" fill="rgb(250,187,7)" fg:x="880" fg:w="139"/><text x="7.3058%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (139 samples, 1.11%)</title><rect x="7.0558%" y="533" width="1.1145%" height="15" fill="rgb(228,66,33)" fg:x="880" fg:w="139"/><text x="7.3058%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (139 samples, 1.11%)</title><rect x="7.0558%" y="517" width="1.1145%" height="15" fill="rgb(234,215,21)" fg:x="880" fg:w="139"/><text x="7.3058%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (139 samples, 1.11%)</title><rect x="7.0558%" y="501" width="1.1145%" height="15" fill="rgb(222,191,20)" fg:x="880" fg:w="139"/><text x="7.3058%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (139 samples, 1.11%)</title><rect x="7.0558%" y="485" width="1.1145%" height="15" fill="rgb(245,79,54)" fg:x="880" fg:w="139"/><text x="7.3058%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (139 samples, 1.11%)</title><rect x="7.0558%" y="469" width="1.1145%" height="15" fill="rgb(240,10,37)" fg:x="880" fg:w="139"/><text x="7.3058%" y="479.50"></text></g><g><title>alloc::fmt::format (178 samples, 1.43%)</title><rect x="6.7992%" y="693" width="1.4272%" height="15" fill="rgb(214,192,32)" fg:x="848" fg:w="178"/><text x="7.0492%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (176 samples, 1.41%)</title><rect x="6.8153%" y="677" width="1.4112%" height="15" fill="rgb(209,36,54)" fg:x="850" fg:w="176"/><text x="7.0653%" y="687.50"></text></g><g><title>core::fmt::write (175 samples, 1.40%)</title><rect x="6.8233%" y="661" width="1.4031%" height="15" fill="rgb(220,10,11)" fg:x="851" fg:w="175"/><text x="7.0733%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (151 samples, 1.21%)</title><rect x="7.0157%" y="645" width="1.2107%" height="15" fill="rgb(221,106,17)" fg:x="875" fg:w="151"/><text x="7.2657%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (148 samples, 1.19%)</title><rect x="7.0398%" y="629" width="1.1867%" height="15" fill="rgb(251,142,44)" fg:x="878" fg:w="148"/><text x="7.2898%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.06%)</title><rect x="8.1703%" y="613" width="0.0561%" height="15" fill="rgb(238,13,15)" fg:x="1019" fg:w="7"/><text x="8.4203%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.08%)</title><rect x="8.2264%" y="693" width="0.0802%" height="15" fill="rgb(208,107,27)" fg:x="1026" fg:w="10"/><text x="8.4764%" y="703.50"></text></g><g><title>core::ptr::write (7 samples, 0.06%)</title><rect x="8.2505%" y="677" width="0.0561%" height="15" fill="rgb(205,136,37)" fg:x="1029" fg:w="7"/><text x="8.5005%" y="687.50"></text></g><g><title>opentelemetry::core::Key::string (2 samples, 0.02%)</title><rect x="8.3066%" y="693" width="0.0160%" height="15" fill="rgb(250,205,27)" fg:x="1036" fg:w="2"/><text x="8.5566%" y="703.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (212 samples, 1.70%)</title><rect x="6.6389%" y="741" width="1.6998%" height="15" fill="rgb(210,80,43)" fg:x="828" fg:w="212"/><text x="6.8889%" y="751.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (210 samples, 1.68%)</title><rect x="6.6549%" y="725" width="1.6838%" height="15" fill="rgb(247,160,36)" fg:x="830" fg:w="210"/><text x="6.9049%" y="735.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_debug (210 samples, 1.68%)</title><rect x="6.6549%" y="709" width="1.6838%" height="15" fill="rgb(234,13,49)" fg:x="830" fg:w="210"/><text x="6.9049%" y="719.50"></text></g><g><title>tracing_core::field::Field::name (2 samples, 0.02%)</title><rect x="8.3226%" y="693" width="0.0160%" height="15" fill="rgb(234,122,0)" fg:x="1038" fg:w="2"/><text x="8.5726%" y="703.50"></text></g><g><title>tracing_core::span::Record::record (216 samples, 1.73%)</title><rect x="6.6228%" y="773" width="1.7319%" height="15" fill="rgb(207,146,38)" fg:x="826" fg:w="216"/><text x="6.8728%" y="783.50"></text></g><g><title>tracing_core::field::ValueSet::record (214 samples, 1.72%)</title><rect x="6.6389%" y="757" width="1.7158%" height="15" fill="rgb(207,177,25)" fg:x="828" fg:w="214"/><text x="6.8889%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="8.3387%" y="741" width="0.0160%" height="15" fill="rgb(211,178,42)" fg:x="1040" fg:w="2"/><text x="8.5887%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="8.3547%" y="741" width="0.0160%" height="15" fill="rgb(230,69,54)" fg:x="1042" fg:w="2"/><text x="8.6047%" y="751.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="8.4108%" y="693" width="0.0160%" height="15" fill="rgb(214,135,41)" fg:x="1049" fg:w="2"/><text x="8.6608%" y="703.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (2 samples, 0.02%)</title><rect x="8.4108%" y="677" width="0.0160%" height="15" fill="rgb(237,67,25)" fg:x="1049" fg:w="2"/><text x="8.6608%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.02%)</title><rect x="8.4108%" y="661" width="0.0160%" height="15" fill="rgb(222,189,50)" fg:x="1049" fg:w="2"/><text x="8.6608%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="8.4108%" y="645" width="0.0160%" height="15" fill="rgb(245,148,34)" fg:x="1049" fg:w="2"/><text x="8.6608%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="8.4269%" y="629" width="0.0160%" height="15" fill="rgb(222,29,6)" fg:x="1051" fg:w="2"/><text x="8.6769%" y="639.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="8.4269%" y="677" width="0.0241%" height="15" fill="rgb(221,189,43)" fg:x="1051" fg:w="3"/><text x="8.6769%" y="687.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="8.4269%" y="661" width="0.0241%" height="15" fill="rgb(207,36,27)" fg:x="1051" fg:w="3"/><text x="8.6769%" y="671.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="8.4269%" y="645" width="0.0241%" height="15" fill="rgb(217,90,24)" fg:x="1051" fg:w="3"/><text x="8.6769%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="8.4028%" y="709" width="0.0561%" height="15" fill="rgb(224,66,35)" fg:x="1048" fg:w="7"/><text x="8.6528%" y="719.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (4 samples, 0.03%)</title><rect x="8.4269%" y="693" width="0.0321%" height="15" fill="rgb(221,13,50)" fg:x="1051" fg:w="4"/><text x="8.6769%" y="703.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (14 samples, 0.11%)</title><rect x="8.3547%" y="773" width="0.1123%" height="15" fill="rgb(236,68,49)" fg:x="1042" fg:w="14"/><text x="8.6047%" y="783.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (14 samples, 0.11%)</title><rect x="8.3547%" y="757" width="0.1123%" height="15" fill="rgb(229,146,28)" fg:x="1042" fg:w="14"/><text x="8.6047%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (12 samples, 0.10%)</title><rect x="8.3708%" y="741" width="0.0962%" height="15" fill="rgb(225,31,38)" fg:x="1044" fg:w="12"/><text x="8.6208%" y="751.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (8 samples, 0.06%)</title><rect x="8.4028%" y="725" width="0.0641%" height="15" fill="rgb(250,208,3)" fg:x="1048" fg:w="8"/><text x="8.6528%" y="735.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (6 samples, 0.05%)</title><rect x="8.4670%" y="773" width="0.0481%" height="15" fill="rgb(246,54,23)" fg:x="1056" fg:w="6"/><text x="8.7170%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (5 samples, 0.04%)</title><rect x="8.4750%" y="757" width="0.0401%" height="15" fill="rgb(243,76,11)" fg:x="1057" fg:w="5"/><text x="8.7250%" y="767.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (4 samples, 0.03%)</title><rect x="8.4830%" y="741" width="0.0321%" height="15" fill="rgb(245,21,50)" fg:x="1058" fg:w="4"/><text x="8.7330%" y="751.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (4 samples, 0.03%)</title><rect x="8.4830%" y="725" width="0.0321%" height="15" fill="rgb(228,9,43)" fg:x="1058" fg:w="4"/><text x="8.7330%" y="735.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (4 samples, 0.03%)</title><rect x="8.4830%" y="709" width="0.0321%" height="15" fill="rgb(208,100,47)" fg:x="1058" fg:w="4"/><text x="8.7330%" y="719.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="8.4910%" y="693" width="0.0241%" height="15" fill="rgb(232,26,8)" fg:x="1059" fg:w="3"/><text x="8.7410%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="8.5151%" y="741" width="0.0160%" height="15" fill="rgb(216,166,38)" fg:x="1062" fg:w="2"/><text x="8.7651%" y="751.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (2 samples, 0.02%)</title><rect x="8.5151%" y="725" width="0.0160%" height="15" fill="rgb(251,202,51)" fg:x="1062" fg:w="2"/><text x="8.7651%" y="735.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (2 samples, 0.02%)</title><rect x="8.5151%" y="709" width="0.0160%" height="15" fill="rgb(254,216,34)" fg:x="1062" fg:w="2"/><text x="8.7651%" y="719.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="8.5151%" y="693" width="0.0160%" height="15" fill="rgb(251,32,27)" fg:x="1062" fg:w="2"/><text x="8.7651%" y="703.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="8.5151%" y="677" width="0.0160%" height="15" fill="rgb(208,127,28)" fg:x="1062" fg:w="2"/><text x="8.7651%" y="687.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_record (283 samples, 2.27%)</title><rect x="6.3422%" y="789" width="2.2691%" height="15" fill="rgb(224,137,22)" fg:x="791" fg:w="283"/><text x="6.5922%" y="799.50">&lt;..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (12 samples, 0.10%)</title><rect x="8.5151%" y="773" width="0.0962%" height="15" fill="rgb(254,70,32)" fg:x="1062" fg:w="12"/><text x="8.7651%" y="783.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (12 samples, 0.10%)</title><rect x="8.5151%" y="757" width="0.0962%" height="15" fill="rgb(229,75,37)" fg:x="1062" fg:w="12"/><text x="8.7651%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (10 samples, 0.08%)</title><rect x="8.5311%" y="741" width="0.0802%" height="15" fill="rgb(252,64,23)" fg:x="1064" fg:w="10"/><text x="8.7811%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (10 samples, 0.08%)</title><rect x="8.5311%" y="725" width="0.0802%" height="15" fill="rgb(232,162,48)" fg:x="1064" fg:w="10"/><text x="8.7811%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (10 samples, 0.08%)</title><rect x="8.5311%" y="709" width="0.0802%" height="15" fill="rgb(246,160,12)" fg:x="1064" fg:w="10"/><text x="8.7811%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="8.5953%" y="693" width="0.0160%" height="15" fill="rgb(247,166,0)" fg:x="1072" fg:w="2"/><text x="8.8453%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="8.5953%" y="677" width="0.0160%" height="15" fill="rgb(249,219,21)" fg:x="1072" fg:w="2"/><text x="8.8453%" y="687.50"></text></g><g><title>tracing::span::Inner::record (284 samples, 2.28%)</title><rect x="6.3422%" y="837" width="2.2771%" height="15" fill="rgb(205,209,3)" fg:x="791" fg:w="284"/><text x="6.5922%" y="847.50">t..</text></g><g><title>tracing_core::dispatcher::Dispatch::record (284 samples, 2.28%)</title><rect x="6.3422%" y="821" width="2.2771%" height="15" fill="rgb(243,44,1)" fg:x="791" fg:w="284"/><text x="6.5922%" y="831.50">t..</text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::record (284 samples, 2.28%)</title><rect x="6.3422%" y="805" width="2.2771%" height="15" fill="rgb(206,159,16)" fg:x="791" fg:w="284"/><text x="6.5922%" y="815.50">&lt;..</text></g><g><title>tracing::span::Span::record_all (293 samples, 2.35%)</title><rect x="6.3021%" y="853" width="2.3493%" height="15" fill="rgb(244,77,30)" fg:x="786" fg:w="293"/><text x="6.5521%" y="863.50">t..</text></g><g><title>tracing_core::span::Record::new (4 samples, 0.03%)</title><rect x="8.6193%" y="837" width="0.0321%" height="15" fill="rgb(218,69,12)" fg:x="1075" fg:w="4"/><text x="8.8693%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (388 samples, 3.11%)</title><rect x="5.5564%" y="917" width="3.1110%" height="15" fill="rgb(212,87,7)" fg:x="693" fg:w="388"/><text x="5.8064%" y="927.50">&lt;co..</text></g><g><title>fred::utils::request_response::_{{closure}}::_{{closure}}::_{{closure}} (385 samples, 3.09%)</title><rect x="5.5805%" y="901" width="3.0869%" height="15" fill="rgb(245,114,25)" fg:x="696" fg:w="385"/><text x="5.8305%" y="911.50">fre..</text></g><g><title>fred::trace::enabled::record_response_size (355 samples, 2.85%)</title><rect x="5.8210%" y="885" width="2.8464%" height="15" fill="rgb(210,61,42)" fg:x="726" fg:w="355"/><text x="6.0710%" y="895.50">fr..</text></g><g><title>tracing::span::Span::record (314 samples, 2.52%)</title><rect x="6.1498%" y="869" width="2.5176%" height="15" fill="rgb(211,52,33)" fg:x="767" fg:w="314"/><text x="6.3998%" y="879.50">tr..</text></g><g><title>tracing_core::metadata::Metadata::fields (2 samples, 0.02%)</title><rect x="8.6514%" y="853" width="0.0160%" height="15" fill="rgb(234,58,33)" fg:x="1079" fg:w="2"/><text x="8.9014%" y="863.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="8.7396%" y="853" width="0.0561%" height="15" fill="rgb(220,115,36)" fg:x="1090" fg:w="7"/><text x="8.9896%" y="863.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (9 samples, 0.07%)</title><rect x="8.7396%" y="869" width="0.0722%" height="15" fill="rgb(243,153,54)" fg:x="1090" fg:w="9"/><text x="8.9896%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.02%)</title><rect x="8.7957%" y="853" width="0.0160%" height="15" fill="rgb(251,47,18)" fg:x="1097" fg:w="2"/><text x="9.0457%" y="863.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once::_{{closure}} (2 samples, 0.02%)</title><rect x="8.7957%" y="837" width="0.0160%" height="15" fill="rgb(242,102,42)" fg:x="1097" fg:w="2"/><text x="9.0457%" y="847.50"></text></g><g><title>&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="8.7957%" y="821" width="0.0160%" height="15" fill="rgb(234,31,38)" fg:x="1097" fg:w="2"/><text x="9.0457%" y="831.50"></text></g><g><title>fred::utils::request_response::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="8.7957%" y="805" width="0.0160%" height="15" fill="rgb(221,117,51)" fg:x="1097" fg:w="2"/><text x="9.0457%" y="815.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="8.8518%" y="821" width="0.0321%" height="15" fill="rgb(212,20,18)" fg:x="1104" fg:w="4"/><text x="9.1018%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="8.9801%" y="805" width="0.0561%" height="15" fill="rgb(245,133,36)" fg:x="1120" fg:w="7"/><text x="9.2301%" y="815.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="8.9801%" y="789" width="0.0561%" height="15" fill="rgb(212,6,19)" fg:x="1120" fg:w="7"/><text x="9.2301%" y="799.50"></text></g><g><title>[libc-2.28.so] (19 samples, 0.15%)</title><rect x="9.0763%" y="789" width="0.1523%" height="15" fill="rgb(218,1,36)" fg:x="1132" fg:w="19"/><text x="9.3263%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="9.2287%" y="789" width="0.0241%" height="15" fill="rgb(246,84,54)" fg:x="1151" fg:w="3"/><text x="9.4787%" y="799.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="9.2848%" y="741" width="0.0401%" height="15" fill="rgb(242,110,6)" fg:x="1158" fg:w="5"/><text x="9.5348%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (3 samples, 0.02%)</title><rect x="9.3489%" y="693" width="0.0241%" height="15" fill="rgb(214,47,5)" fg:x="1166" fg:w="3"/><text x="9.5989%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (3 samples, 0.02%)</title><rect x="9.3489%" y="677" width="0.0241%" height="15" fill="rgb(218,159,25)" fg:x="1166" fg:w="3"/><text x="9.5989%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.06%)</title><rect x="9.3329%" y="741" width="0.0641%" height="15" fill="rgb(215,211,28)" fg:x="1164" fg:w="8"/><text x="9.5829%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt; (7 samples, 0.06%)</title><rect x="9.3409%" y="725" width="0.0561%" height="15" fill="rgb(238,59,32)" fg:x="1165" fg:w="7"/><text x="9.5909%" y="735.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.06%)</title><rect x="9.3409%" y="709" width="0.0561%" height="15" fill="rgb(226,82,3)" fg:x="1165" fg:w="7"/><text x="9.5909%" y="719.50"></text></g><g><title>tokio::sync::oneshot::mut_load (2 samples, 0.02%)</title><rect x="9.3810%" y="693" width="0.0160%" height="15" fill="rgb(240,164,32)" fg:x="1170" fg:w="2"/><text x="9.6310%" y="703.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::with_mut (2 samples, 0.02%)</title><rect x="9.3810%" y="677" width="0.0160%" height="15" fill="rgb(232,46,7)" fg:x="1170" fg:w="2"/><text x="9.6310%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt;&gt; (43 samples, 0.34%)</title><rect x="9.2527%" y="789" width="0.3448%" height="15" fill="rgb(229,129,53)" fg:x="1154" fg:w="43"/><text x="9.5027%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt; (42 samples, 0.34%)</title><rect x="9.2607%" y="773" width="0.3368%" height="15" fill="rgb(234,188,29)" fg:x="1155" fg:w="42"/><text x="9.5107%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.34%)</title><rect x="9.2607%" y="757" width="0.3368%" height="15" fill="rgb(246,141,4)" fg:x="1155" fg:w="42"/><text x="9.5107%" y="767.50"></text></g><g><title>cfree (25 samples, 0.20%)</title><rect x="9.3970%" y="741" width="0.2004%" height="15" fill="rgb(229,23,39)" fg:x="1172" fg:w="25"/><text x="9.6470%" y="751.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (2 samples, 0.02%)</title><rect x="9.6616%" y="773" width="0.0160%" height="15" fill="rgb(206,12,3)" fg:x="1205" fg:w="2"/><text x="9.9116%" y="783.50"></text></g><g><title>tokio::coop::CURRENT::__getit (6 samples, 0.05%)</title><rect x="9.6777%" y="725" width="0.0481%" height="15" fill="rgb(252,226,20)" fg:x="1207" fg:w="6"/><text x="9.9277%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.06%)</title><rect x="9.7258%" y="709" width="0.0561%" height="15" fill="rgb(216,123,35)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.06%)</title><rect x="9.7258%" y="693" width="0.0561%" height="15" fill="rgb(212,68,40)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="703.50"></text></g><g><title>core::mem::replace (7 samples, 0.06%)</title><rect x="9.7258%" y="677" width="0.0561%" height="15" fill="rgb(254,125,32)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="687.50"></text></g><g><title>core::mem::swap (7 samples, 0.06%)</title><rect x="9.7258%" y="661" width="0.0561%" height="15" fill="rgb(253,97,22)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.06%)</title><rect x="9.7258%" y="645" width="0.0561%" height="15" fill="rgb(241,101,14)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.06%)</title><rect x="9.7258%" y="629" width="0.0561%" height="15" fill="rgb(238,103,29)" fg:x="1213" fg:w="7"/><text x="9.9758%" y="639.50"></text></g><g><title>tokio::coop::poll_proceed (16 samples, 0.13%)</title><rect x="9.6777%" y="773" width="0.1283%" height="15" fill="rgb(233,195,47)" fg:x="1207" fg:w="16"/><text x="9.9277%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.13%)</title><rect x="9.6777%" y="757" width="0.1283%" height="15" fill="rgb(246,218,30)" fg:x="1207" fg:w="16"/><text x="9.9277%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.13%)</title><rect x="9.6777%" y="741" width="0.1283%" height="15" fill="rgb(219,145,47)" fg:x="1207" fg:w="16"/><text x="9.9277%" y="751.50"></text></g><g><title>tokio::coop::poll_proceed::_{{closure}} (10 samples, 0.08%)</title><rect x="9.7258%" y="725" width="0.0802%" height="15" fill="rgb(243,12,26)" fg:x="1213" fg:w="10"/><text x="9.9758%" y="735.50"></text></g><g><title>tokio::coop::Budget::decrement (3 samples, 0.02%)</title><rect x="9.7819%" y="709" width="0.0241%" height="15" fill="rgb(214,87,16)" fg:x="1220" fg:w="3"/><text x="10.0319%" y="719.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (2 samples, 0.02%)</title><rect x="9.8220%" y="773" width="0.0160%" height="15" fill="rgb(208,99,42)" fg:x="1225" fg:w="2"/><text x="10.0720%" y="783.50"></text></g><g><title>tokio::sync::oneshot::State::load (19 samples, 0.15%)</title><rect x="9.8380%" y="773" width="0.1523%" height="15" fill="rgb(253,99,2)" fg:x="1227" fg:w="19"/><text x="10.0880%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.03%)</title><rect x="9.9583%" y="757" width="0.0321%" height="15" fill="rgb(220,168,23)" fg:x="1242" fg:w="4"/><text x="10.2083%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="9.9583%" y="741" width="0.0321%" height="15" fill="rgb(242,38,24)" fg:x="1242" fg:w="4"/><text x="10.2083%" y="751.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (5 samples, 0.04%)</title><rect x="9.9904%" y="773" width="0.0401%" height="15" fill="rgb(225,182,9)" fg:x="1246" fg:w="5"/><text x="10.2404%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.04%)</title><rect x="9.9904%" y="757" width="0.0401%" height="15" fill="rgb(243,178,37)" fg:x="1246" fg:w="5"/><text x="10.2404%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.04%)</title><rect x="9.9904%" y="741" width="0.0401%" height="15" fill="rgb(232,139,19)" fg:x="1246" fg:w="5"/><text x="10.2404%" y="751.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 1.09%)</title><rect x="9.0362%" y="805" width="1.0904%" height="15" fill="rgb(225,201,24)" fg:x="1127" fg:w="136"/><text x="9.2862%" y="815.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (66 samples, 0.53%)</title><rect x="9.5975%" y="789" width="0.5292%" height="15" fill="rgb(221,47,46)" fg:x="1197" fg:w="66"/><text x="9.8475%" y="799.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (12 samples, 0.10%)</title><rect x="10.0305%" y="773" width="0.0962%" height="15" fill="rgb(249,23,13)" fg:x="1251" fg:w="12"/><text x="10.2805%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.05%)</title><rect x="10.0786%" y="757" width="0.0481%" height="15" fill="rgb(219,9,5)" fg:x="1257" fg:w="6"/><text x="10.3286%" y="767.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::_{{closure}} (6 samples, 0.05%)</title><rect x="10.0786%" y="741" width="0.0481%" height="15" fill="rgb(254,171,16)" fg:x="1257" fg:w="6"/><text x="10.3286%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.05%)</title><rect x="10.0786%" y="725" width="0.0481%" height="15" fill="rgb(230,171,20)" fg:x="1257" fg:w="6"/><text x="10.3286%" y="735.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (4 samples, 0.03%)</title><rect x="10.0946%" y="709" width="0.0321%" height="15" fill="rgb(210,71,41)" fg:x="1259" fg:w="4"/><text x="10.3446%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="10.1106%" y="693" width="0.0160%" height="15" fill="rgb(206,173,20)" fg:x="1261" fg:w="2"/><text x="10.3606%" y="703.50"></text></g><g><title>[libc-2.28.so] (13 samples, 0.10%)</title><rect x="10.1267%" y="805" width="0.1042%" height="15" fill="rgb(233,88,34)" fg:x="1263" fg:w="13"/><text x="10.3767%" y="815.50"></text></g><g><title>fred::globals::Globals::default_command_timeout (6 samples, 0.05%)</title><rect x="10.2309%" y="805" width="0.0481%" height="15" fill="rgb(223,209,46)" fg:x="1276" fg:w="6"/><text x="10.4809%" y="815.50"></text></g><g><title>fred::utils::read_atomic (4 samples, 0.03%)</title><rect x="10.2470%" y="789" width="0.0321%" height="15" fill="rgb(250,43,18)" fg:x="1278" fg:w="4"/><text x="10.4970%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="10.2630%" y="773" width="0.0160%" height="15" fill="rgb(208,13,10)" fg:x="1280" fg:w="2"/><text x="10.5130%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="10.2630%" y="757" width="0.0160%" height="15" fill="rgb(212,200,36)" fg:x="1280" fg:w="2"/><text x="10.5130%" y="767.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (185 samples, 1.48%)</title><rect x="8.8117%" y="869" width="1.4833%" height="15" fill="rgb(225,90,30)" fg:x="1099" fg:w="185"/><text x="9.0617%" y="879.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (185 samples, 1.48%)</title><rect x="8.8117%" y="853" width="1.4833%" height="15" fill="rgb(236,182,39)" fg:x="1099" fg:w="185"/><text x="9.0617%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (184 samples, 1.48%)</title><rect x="8.8198%" y="837" width="1.4753%" height="15" fill="rgb(212,144,35)" fg:x="1100" fg:w="184"/><text x="9.0698%" y="847.50"></text></g><g><title>fred::utils::wait_for_response::_{{closure}} (176 samples, 1.41%)</title><rect x="8.8839%" y="821" width="1.4112%" height="15" fill="rgb(228,63,44)" fg:x="1108" fg:w="176"/><text x="9.1339%" y="831.50"></text></g><g><title>fred::globals::globals (2 samples, 0.02%)</title><rect x="10.2790%" y="805" width="0.0160%" height="15" fill="rgb(228,109,6)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="815.50"></text></g><g><title>&lt;fred::globals::GLOBALS as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="10.2790%" y="789" width="0.0160%" height="15" fill="rgb(238,117,24)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="799.50"></text></g><g><title>&lt;fred::globals::GLOBALS as core::ops::deref::Deref&gt;::deref::__stability (2 samples, 0.02%)</title><rect x="10.2790%" y="773" width="0.0160%" height="15" fill="rgb(242,26,26)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="783.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="10.2790%" y="757" width="0.0160%" height="15" fill="rgb(221,92,48)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="767.50"></text></g><g><title>std::sync::once::Once::call_once (2 samples, 0.02%)</title><rect x="10.2790%" y="741" width="0.0160%" height="15" fill="rgb(209,209,32)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="751.50"></text></g><g><title>std::sync::once::Once::is_completed (2 samples, 0.02%)</title><rect x="10.2790%" y="725" width="0.0160%" height="15" fill="rgb(221,70,22)" fg:x="1282" fg:w="2"/><text x="10.5290%" y="735.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="10.2951%" y="869" width="0.0722%" height="15" fill="rgb(248,145,5)" fg:x="1284" fg:w="9"/><text x="10.5451%" y="879.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (611 samples, 4.90%)</title><rect x="5.5564%" y="933" width="4.8990%" height="15" fill="rgb(226,116,26)" fg:x="693" fg:w="611"/><text x="5.8064%" y="943.50">&lt;F as ..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (223 samples, 1.79%)</title><rect x="8.6674%" y="917" width="1.7880%" height="15" fill="rgb(244,5,17)" fg:x="1081" fg:w="223"/><text x="8.9174%" y="927.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (223 samples, 1.79%)</title><rect x="8.6674%" y="901" width="1.7880%" height="15" fill="rgb(252,159,33)" fg:x="1081" fg:w="223"/><text x="8.9174%" y="911.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (223 samples, 1.79%)</title><rect x="8.6674%" y="885" width="1.7880%" height="15" fill="rgb(206,71,0)" fg:x="1081" fg:w="223"/><text x="8.9174%" y="895.50">&lt;..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (11 samples, 0.09%)</title><rect x="10.3672%" y="869" width="0.0882%" height="15" fill="rgb(233,118,54)" fg:x="1293" fg:w="11"/><text x="10.6172%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;core::future::from_generator::GenFuture&lt;fred::utils::wait_for_response::{{closure}}&gt;&gt;,futures_util::fns::MapOkFn&lt;fred::utils::request_response&lt;fred::commands::one_arg_value_cmd::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (11 samples, 0.09%)</title><rect x="10.3672%" y="853" width="0.0882%" height="15" fill="rgb(234,83,48)" fg:x="1293" fg:w="11"/><text x="10.6172%" y="863.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.09%)</title><rect x="10.3672%" y="837" width="0.0882%" height="15" fill="rgb(228,3,54)" fg:x="1293" fg:w="11"/><text x="10.6172%" y="847.50"></text></g><g><title>core::ptr::write (11 samples, 0.09%)</title><rect x="10.3672%" y="821" width="0.0882%" height="15" fill="rgb(226,155,13)" fg:x="1293" fg:w="11"/><text x="10.6172%" y="831.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.09%)</title><rect x="10.3672%" y="805" width="0.0882%" height="15" fill="rgb(241,28,37)" fg:x="1293" fg:w="11"/><text x="10.6172%" y="815.50"></text></g><g><title>[libc-2.28.so] (16 samples, 0.13%)</title><rect x="10.4554%" y="933" width="0.1283%" height="15" fill="rgb(233,93,10)" fg:x="1304" fg:w="16"/><text x="10.7054%" y="943.50"></text></g><g><title>[libc-2.28.so] (10 samples, 0.08%)</title><rect x="10.5917%" y="917" width="0.0802%" height="15" fill="rgb(225,113,19)" fg:x="1321" fg:w="10"/><text x="10.8417%" y="927.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (14 samples, 0.11%)</title><rect x="10.5837%" y="933" width="0.1123%" height="15" fill="rgb(241,2,18)" fg:x="1320" fg:w="14"/><text x="10.8337%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;core::future::from_generator::GenFuture&lt;fred::utils::wait_for_response::{{closure}}&gt;,fred::utils::request_response&lt;fred::commands::one_arg_value_cmd::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;fred::utils::request_response&lt;fred::commands::one_arg_value_cmd::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="10.6719%" y="917" width="0.0241%" height="15" fill="rgb(228,207,21)" fg:x="1331" fg:w="3"/><text x="10.9219%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (648 samples, 5.20%)</title><rect x="5.5083%" y="981" width="5.1956%" height="15" fill="rgb(213,211,35)" fg:x="687" fg:w="648"/><text x="5.7583%" y="991.50">&lt;futur..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (648 samples, 5.20%)</title><rect x="5.5083%" y="965" width="5.1956%" height="15" fill="rgb(209,83,10)" fg:x="687" fg:w="648"/><text x="5.7583%" y="975.50">&lt;futur..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (648 samples, 5.20%)</title><rect x="5.5083%" y="949" width="5.1956%" height="15" fill="rgb(209,164,1)" fg:x="687" fg:w="648"/><text x="5.7583%" y="959.50">&lt;futur..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (2 samples, 0.02%)</title><rect x="10.7120%" y="901" width="0.0160%" height="15" fill="rgb(213,184,43)" fg:x="1336" fg:w="2"/><text x="10.9620%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="10.7120%" y="885" width="0.0160%" height="15" fill="rgb(231,61,34)" fg:x="1336" fg:w="2"/><text x="10.9620%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (2 samples, 0.02%)</title><rect x="10.7360%" y="837" width="0.0160%" height="15" fill="rgb(235,75,3)" fg:x="1339" fg:w="2"/><text x="10.9860%" y="847.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.03%)</title><rect x="10.7360%" y="885" width="0.0321%" height="15" fill="rgb(220,106,47)" fg:x="1339" fg:w="4"/><text x="10.9860%" y="895.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.03%)</title><rect x="10.7360%" y="869" width="0.0321%" height="15" fill="rgb(210,196,33)" fg:x="1339" fg:w="4"/><text x="10.9860%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.03%)</title><rect x="10.7360%" y="853" width="0.0321%" height="15" fill="rgb(229,154,42)" fg:x="1339" fg:w="4"/><text x="10.9860%" y="863.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (2 samples, 0.02%)</title><rect x="10.7521%" y="837" width="0.0160%" height="15" fill="rgb(228,114,26)" fg:x="1341" fg:w="2"/><text x="11.0021%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (3 samples, 0.02%)</title><rect x="10.7681%" y="885" width="0.0241%" height="15" fill="rgb(208,144,1)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (3 samples, 0.02%)</title><rect x="10.7681%" y="869" width="0.0241%" height="15" fill="rgb(239,112,37)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (3 samples, 0.02%)</title><rect x="10.7681%" y="853" width="0.0241%" height="15" fill="rgb(210,96,50)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="863.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="10.7681%" y="837" width="0.0241%" height="15" fill="rgb(222,178,2)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="10.7681%" y="821" width="0.0241%" height="15" fill="rgb(226,74,18)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="10.7681%" y="805" width="0.0241%" height="15" fill="rgb(225,67,54)" fg:x="1343" fg:w="3"/><text x="11.0181%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (8 samples, 0.06%)</title><rect x="10.7922%" y="885" width="0.0641%" height="15" fill="rgb(251,92,32)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (8 samples, 0.06%)</title><rect x="10.7922%" y="869" width="0.0641%" height="15" fill="rgb(228,149,22)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="879.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="10.7922%" y="853" width="0.0641%" height="15" fill="rgb(243,54,13)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="863.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (8 samples, 0.06%)</title><rect x="10.7922%" y="837" width="0.0641%" height="15" fill="rgb(243,180,28)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="847.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (8 samples, 0.06%)</title><rect x="10.7922%" y="821" width="0.0641%" height="15" fill="rgb(208,167,24)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="831.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (8 samples, 0.06%)</title><rect x="10.7922%" y="805" width="0.0641%" height="15" fill="rgb(245,73,45)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="815.50"></text></g><g><title>__GI___pthread_rwlock_unlock (8 samples, 0.06%)</title><rect x="10.7922%" y="789" width="0.0641%" height="15" fill="rgb(237,203,48)" fg:x="1346" fg:w="8"/><text x="11.0422%" y="799.50"></text></g><g><title>__clock_gettime (22 samples, 0.18%)</title><rect x="10.8804%" y="837" width="0.1764%" height="15" fill="rgb(211,197,16)" fg:x="1357" fg:w="22"/><text x="11.1304%" y="847.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.15%)</title><rect x="10.9044%" y="821" width="0.1523%" height="15" fill="rgb(243,99,51)" fg:x="1360" fg:w="19"/><text x="11.1544%" y="831.50"></text></g><g><title>[[vdso]] (13 samples, 0.10%)</title><rect x="10.9525%" y="805" width="0.1042%" height="15" fill="rgb(215,123,29)" fg:x="1366" fg:w="13"/><text x="11.2025%" y="815.50"></text></g><g><title>std::time::Instant::now (26 samples, 0.21%)</title><rect x="10.8563%" y="885" width="0.2085%" height="15" fill="rgb(239,186,37)" fg:x="1354" fg:w="26"/><text x="11.1063%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (25 samples, 0.20%)</title><rect x="10.8643%" y="869" width="0.2004%" height="15" fill="rgb(252,136,39)" fg:x="1355" fg:w="25"/><text x="11.1143%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::now (25 samples, 0.20%)</title><rect x="10.8643%" y="853" width="0.2004%" height="15" fill="rgb(223,213,32)" fg:x="1355" fg:w="25"/><text x="11.1143%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="11.1289%" y="837" width="0.0561%" height="15" fill="rgb(233,115,5)" fg:x="1388" fg:w="7"/><text x="11.3789%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="11.2091%" y="741" width="0.0160%" height="15" fill="rgb(207,226,44)" fg:x="1398" fg:w="2"/><text x="11.4591%" y="751.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (25 samples, 0.20%)</title><rect x="11.0648%" y="885" width="0.2004%" height="15" fill="rgb(208,126,0)" fg:x="1380" fg:w="25"/><text x="11.3148%" y="895.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (24 samples, 0.19%)</title><rect x="11.0728%" y="869" width="0.1924%" height="15" fill="rgb(244,66,21)" fg:x="1381" fg:w="24"/><text x="11.3228%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (24 samples, 0.19%)</title><rect x="11.0728%" y="853" width="0.1924%" height="15" fill="rgb(222,97,12)" fg:x="1381" fg:w="24"/><text x="11.3228%" y="863.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (10 samples, 0.08%)</title><rect x="11.1851%" y="837" width="0.0802%" height="15" fill="rgb(219,213,19)" fg:x="1395" fg:w="10"/><text x="11.4351%" y="847.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (10 samples, 0.08%)</title><rect x="11.1851%" y="821" width="0.0802%" height="15" fill="rgb(252,169,30)" fg:x="1395" fg:w="10"/><text x="11.4351%" y="831.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (9 samples, 0.07%)</title><rect x="11.1931%" y="805" width="0.0722%" height="15" fill="rgb(206,32,51)" fg:x="1396" fg:w="9"/><text x="11.4431%" y="815.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (8 samples, 0.06%)</title><rect x="11.2011%" y="789" width="0.0641%" height="15" fill="rgb(250,172,42)" fg:x="1397" fg:w="8"/><text x="11.4511%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (8 samples, 0.06%)</title><rect x="11.2011%" y="773" width="0.0641%" height="15" fill="rgb(209,34,43)" fg:x="1397" fg:w="8"/><text x="11.4511%" y="783.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (8 samples, 0.06%)</title><rect x="11.2011%" y="757" width="0.0641%" height="15" fill="rgb(223,11,35)" fg:x="1397" fg:w="8"/><text x="11.4511%" y="767.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (5 samples, 0.04%)</title><rect x="11.2251%" y="741" width="0.0401%" height="15" fill="rgb(251,219,26)" fg:x="1400" fg:w="5"/><text x="11.4751%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (5 samples, 0.04%)</title><rect x="11.2251%" y="725" width="0.0401%" height="15" fill="rgb(231,119,3)" fg:x="1400" fg:w="5"/><text x="11.4751%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="11.2492%" y="709" width="0.0160%" height="15" fill="rgb(216,97,11)" fg:x="1403" fg:w="2"/><text x="11.4992%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="11.2492%" y="693" width="0.0160%" height="15" fill="rgb(223,59,9)" fg:x="1403" fg:w="2"/><text x="11.4992%" y="703.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (7 samples, 0.06%)</title><rect x="11.2652%" y="885" width="0.0561%" height="15" fill="rgb(233,93,31)" fg:x="1405" fg:w="7"/><text x="11.5152%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (7 samples, 0.06%)</title><rect x="11.2652%" y="869" width="0.0561%" height="15" fill="rgb(239,81,33)" fg:x="1405" fg:w="7"/><text x="11.5152%" y="879.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (6 samples, 0.05%)</title><rect x="11.2733%" y="853" width="0.0481%" height="15" fill="rgb(213,120,34)" fg:x="1406" fg:w="6"/><text x="11.5233%" y="863.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (6 samples, 0.05%)</title><rect x="11.2733%" y="837" width="0.0481%" height="15" fill="rgb(243,49,53)" fg:x="1406" fg:w="6"/><text x="11.5233%" y="847.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (6 samples, 0.05%)</title><rect x="11.2733%" y="821" width="0.0481%" height="15" fill="rgb(247,216,33)" fg:x="1406" fg:w="6"/><text x="11.5233%" y="831.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (4 samples, 0.03%)</title><rect x="11.2893%" y="805" width="0.0321%" height="15" fill="rgb(226,26,14)" fg:x="1408" fg:w="4"/><text x="11.5393%" y="815.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (77 samples, 0.62%)</title><rect x="10.7280%" y="901" width="0.6174%" height="15" fill="rgb(215,49,53)" fg:x="1338" fg:w="77"/><text x="10.9780%" y="911.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (3 samples, 0.02%)</title><rect x="11.3214%" y="885" width="0.0241%" height="15" fill="rgb(245,162,40)" fg:x="1412" fg:w="3"/><text x="11.5714%" y="895.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (3 samples, 0.02%)</title><rect x="11.3214%" y="869" width="0.0241%" height="15" fill="rgb(229,68,17)" fg:x="1412" fg:w="3"/><text x="11.5714%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="11.3294%" y="853" width="0.0160%" height="15" fill="rgb(213,182,10)" fg:x="1413" fg:w="2"/><text x="11.5794%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="11.3294%" y="837" width="0.0160%" height="15" fill="rgb(245,125,30)" fg:x="1413" fg:w="2"/><text x="11.5794%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="11.3294%" y="821" width="0.0160%" height="15" fill="rgb(232,202,2)" fg:x="1413" fg:w="2"/><text x="11.5794%" y="831.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (7 samples, 0.06%)</title><rect x="11.3935%" y="853" width="0.0561%" height="15" fill="rgb(237,140,51)" fg:x="1421" fg:w="7"/><text x="11.6435%" y="863.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (8 samples, 0.06%)</title><rect x="11.3935%" y="869" width="0.0641%" height="15" fill="rgb(236,157,25)" fg:x="1421" fg:w="8"/><text x="11.6435%" y="879.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="11.5699%" y="741" width="0.0160%" height="15" fill="rgb(219,209,0)" fg:x="1443" fg:w="2"/><text x="11.8199%" y="751.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (2 samples, 0.02%)</title><rect x="11.5699%" y="725" width="0.0160%" height="15" fill="rgb(240,116,54)" fg:x="1443" fg:w="2"/><text x="11.8199%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (3 samples, 0.02%)</title><rect x="11.5860%" y="741" width="0.0241%" height="15" fill="rgb(216,10,36)" fg:x="1445" fg:w="3"/><text x="11.8360%" y="751.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="11.5860%" y="725" width="0.0241%" height="15" fill="rgb(222,72,44)" fg:x="1445" fg:w="3"/><text x="11.8360%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="11.5860%" y="709" width="0.0241%" height="15" fill="rgb(232,159,9)" fg:x="1445" fg:w="3"/><text x="11.8360%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="11.5860%" y="693" width="0.0241%" height="15" fill="rgb(210,39,32)" fg:x="1445" fg:w="3"/><text x="11.8360%" y="703.50"></text></g><g><title>std::thread::panicking (2 samples, 0.02%)</title><rect x="11.6100%" y="741" width="0.0160%" height="15" fill="rgb(216,194,45)" fg:x="1448" fg:w="2"/><text x="11.8600%" y="751.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.02%)</title><rect x="11.6100%" y="725" width="0.0160%" height="15" fill="rgb(218,18,35)" fg:x="1448" fg:w="2"/><text x="11.8600%" y="735.50"></text></g><g><title>std::panicking::panic_count::is_zero (2 samples, 0.02%)</title><rect x="11.6100%" y="709" width="0.0160%" height="15" fill="rgb(207,83,51)" fg:x="1448" fg:w="2"/><text x="11.8600%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="11.6100%" y="693" width="0.0160%" height="15" fill="rgb(225,63,43)" fg:x="1448" fg:w="2"/><text x="11.8600%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="11.6100%" y="677" width="0.0160%" height="15" fill="rgb(207,57,36)" fg:x="1448" fg:w="2"/><text x="11.8600%" y="687.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (3 samples, 0.02%)</title><rect x="11.6260%" y="709" width="0.0241%" height="15" fill="rgb(216,99,33)" fg:x="1450" fg:w="3"/><text x="11.8760%" y="719.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (2 samples, 0.02%)</title><rect x="11.6341%" y="693" width="0.0160%" height="15" fill="rgb(225,42,16)" fg:x="1451" fg:w="2"/><text x="11.8841%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.02%)</title><rect x="11.6341%" y="677" width="0.0160%" height="15" fill="rgb(220,201,45)" fg:x="1451" fg:w="2"/><text x="11.8841%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="11.6341%" y="661" width="0.0160%" height="15" fill="rgb(225,33,4)" fg:x="1451" fg:w="2"/><text x="11.8841%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="11.6581%" y="645" width="0.0160%" height="15" fill="rgb(224,33,50)" fg:x="1454" fg:w="2"/><text x="11.9081%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (13 samples, 0.10%)</title><rect x="11.6260%" y="725" width="0.1042%" height="15" fill="rgb(246,198,51)" fg:x="1450" fg:w="13"/><text x="11.8760%" y="735.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (10 samples, 0.08%)</title><rect x="11.6501%" y="709" width="0.0802%" height="15" fill="rgb(205,22,4)" fg:x="1453" fg:w="10"/><text x="11.9001%" y="719.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (9 samples, 0.07%)</title><rect x="11.6581%" y="693" width="0.0722%" height="15" fill="rgb(206,3,8)" fg:x="1454" fg:w="9"/><text x="11.9081%" y="703.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (9 samples, 0.07%)</title><rect x="11.6581%" y="677" width="0.0722%" height="15" fill="rgb(251,23,15)" fg:x="1454" fg:w="9"/><text x="11.9081%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (9 samples, 0.07%)</title><rect x="11.6581%" y="661" width="0.0722%" height="15" fill="rgb(252,88,28)" fg:x="1454" fg:w="9"/><text x="11.9081%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (7 samples, 0.06%)</title><rect x="11.6742%" y="645" width="0.0561%" height="15" fill="rgb(212,127,14)" fg:x="1456" fg:w="7"/><text x="11.9242%" y="655.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="11.6742%" y="629" width="0.0561%" height="15" fill="rgb(247,145,37)" fg:x="1456" fg:w="7"/><text x="11.9242%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="11.7062%" y="613" width="0.0241%" height="15" fill="rgb(209,117,53)" fg:x="1460" fg:w="3"/><text x="11.9562%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="11.7062%" y="597" width="0.0241%" height="15" fill="rgb(212,90,42)" fg:x="1460" fg:w="3"/><text x="11.9562%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (30 samples, 0.24%)</title><rect x="11.4978%" y="757" width="0.2405%" height="15" fill="rgb(218,164,37)" fg:x="1434" fg:w="30"/><text x="11.7478%" y="767.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (14 samples, 0.11%)</title><rect x="11.6260%" y="741" width="0.1123%" height="15" fill="rgb(246,65,34)" fg:x="1450" fg:w="14"/><text x="11.8760%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (34 samples, 0.27%)</title><rect x="11.4737%" y="821" width="0.2726%" height="15" fill="rgb(231,100,33)" fg:x="1431" fg:w="34"/><text x="11.7237%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (34 samples, 0.27%)</title><rect x="11.4737%" y="805" width="0.2726%" height="15" fill="rgb(228,126,14)" fg:x="1431" fg:w="34"/><text x="11.7237%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (34 samples, 0.27%)</title><rect x="11.4737%" y="789" width="0.2726%" height="15" fill="rgb(215,173,21)" fg:x="1431" fg:w="34"/><text x="11.7237%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (33 samples, 0.26%)</title><rect x="11.4817%" y="773" width="0.2646%" height="15" fill="rgb(210,6,40)" fg:x="1432" fg:w="33"/><text x="11.7317%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="11.7944%" y="789" width="0.0160%" height="15" fill="rgb(212,48,18)" fg:x="1471" fg:w="2"/><text x="12.0444%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default (47 samples, 0.38%)</title><rect x="11.4577%" y="869" width="0.3768%" height="15" fill="rgb(230,214,11)" fg:x="1429" fg:w="47"/><text x="11.7077%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.37%)</title><rect x="11.4657%" y="853" width="0.3688%" height="15" fill="rgb(254,105,39)" fg:x="1430" fg:w="46"/><text x="11.7157%" y="863.50"></text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (45 samples, 0.36%)</title><rect x="11.4737%" y="837" width="0.3608%" height="15" fill="rgb(245,158,5)" fg:x="1431" fg:w="45"/><text x="11.7237%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (11 samples, 0.09%)</title><rect x="11.7463%" y="821" width="0.0882%" height="15" fill="rgb(249,208,11)" fg:x="1465" fg:w="11"/><text x="11.9963%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (5 samples, 0.04%)</title><rect x="11.7944%" y="805" width="0.0401%" height="15" fill="rgb(210,39,28)" fg:x="1471" fg:w="5"/><text x="12.0444%" y="815.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (3 samples, 0.02%)</title><rect x="11.8105%" y="789" width="0.0241%" height="15" fill="rgb(211,56,53)" fg:x="1473" fg:w="3"/><text x="12.0605%" y="799.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (3 samples, 0.02%)</title><rect x="11.8105%" y="773" width="0.0241%" height="15" fill="rgb(226,201,30)" fg:x="1473" fg:w="3"/><text x="12.0605%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (3 samples, 0.02%)</title><rect x="11.8105%" y="757" width="0.0241%" height="15" fill="rgb(239,101,34)" fg:x="1473" fg:w="3"/><text x="12.0605%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (144 samples, 1.15%)</title><rect x="10.7040%" y="981" width="1.1546%" height="15" fill="rgb(226,209,5)" fg:x="1335" fg:w="144"/><text x="10.9540%" y="991.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (144 samples, 1.15%)</title><rect x="10.7040%" y="965" width="1.1546%" height="15" fill="rgb(250,105,47)" fg:x="1335" fg:w="144"/><text x="10.9540%" y="975.50"></text></g><g><title>tracing::span::Span::do_exit (144 samples, 1.15%)</title><rect x="10.7040%" y="949" width="1.1546%" height="15" fill="rgb(230,72,3)" fg:x="1335" fg:w="144"/><text x="10.9540%" y="959.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (143 samples, 1.15%)</title><rect x="10.7120%" y="933" width="1.1466%" height="15" fill="rgb(232,218,39)" fg:x="1336" fg:w="143"/><text x="10.9620%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (143 samples, 1.15%)</title><rect x="10.7120%" y="917" width="1.1466%" height="15" fill="rgb(248,166,6)" fg:x="1336" fg:w="143"/><text x="10.9620%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (64 samples, 0.51%)</title><rect x="11.3454%" y="901" width="0.5131%" height="15" fill="rgb(247,89,20)" fg:x="1415" fg:w="64"/><text x="11.5954%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (61 samples, 0.49%)</title><rect x="11.3695%" y="885" width="0.4891%" height="15" fill="rgb(248,130,54)" fg:x="1418" fg:w="61"/><text x="11.6195%" y="895.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::pop (3 samples, 0.02%)</title><rect x="11.8345%" y="869" width="0.0241%" height="15" fill="rgb(234,196,4)" fg:x="1476" fg:w="3"/><text x="12.0845%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (3 samples, 0.02%)</title><rect x="11.8345%" y="853" width="0.0241%" height="15" fill="rgb(250,143,31)" fg:x="1476" fg:w="3"/><text x="12.0845%" y="863.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.02%)</title><rect x="11.8425%" y="837" width="0.0160%" height="15" fill="rgb(211,110,34)" fg:x="1477" fg:w="2"/><text x="12.0925%" y="847.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="11.8425%" y="821" width="0.0160%" height="15" fill="rgb(215,124,48)" fg:x="1477" fg:w="2"/><text x="12.0925%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.05%)</title><rect x="11.8586%" y="949" width="0.0481%" height="15" fill="rgb(216,46,13)" fg:x="1479" fg:w="6"/><text x="12.1086%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (6 samples, 0.05%)</title><rect x="11.9067%" y="917" width="0.0481%" height="15" fill="rgb(205,184,25)" fg:x="1485" fg:w="6"/><text x="12.1567%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.05%)</title><rect x="11.9067%" y="901" width="0.0481%" height="15" fill="rgb(228,1,10)" fg:x="1485" fg:w="6"/><text x="12.1567%" y="911.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.06%)</title><rect x="12.1392%" y="901" width="0.0641%" height="15" fill="rgb(213,116,27)" fg:x="1514" fg:w="8"/><text x="12.3892%" y="911.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.05%)</title><rect x="12.1552%" y="885" width="0.0481%" height="15" fill="rgb(241,95,50)" fg:x="1516" fg:w="6"/><text x="12.4052%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (6 samples, 0.05%)</title><rect x="12.1552%" y="869" width="0.0481%" height="15" fill="rgb(238,48,32)" fg:x="1516" fg:w="6"/><text x="12.4052%" y="879.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.05%)</title><rect x="12.1552%" y="853" width="0.0481%" height="15" fill="rgb(235,113,49)" fg:x="1516" fg:w="6"/><text x="12.4052%" y="863.50"></text></g><g><title>core::time::Duration::new (3 samples, 0.02%)</title><rect x="12.1793%" y="837" width="0.0241%" height="15" fill="rgb(205,127,43)" fg:x="1519" fg:w="3"/><text x="12.4293%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (3 samples, 0.02%)</title><rect x="12.1793%" y="821" width="0.0241%" height="15" fill="rgb(250,162,2)" fg:x="1519" fg:w="3"/><text x="12.4293%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (3 samples, 0.02%)</title><rect x="12.1793%" y="805" width="0.0241%" height="15" fill="rgb(220,13,41)" fg:x="1519" fg:w="3"/><text x="12.4293%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="12.2033%" y="901" width="0.0160%" height="15" fill="rgb(249,221,25)" fg:x="1522" fg:w="2"/><text x="12.4533%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (5 samples, 0.04%)</title><rect x="12.2194%" y="901" width="0.0401%" height="15" fill="rgb(215,208,19)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (5 samples, 0.04%)</title><rect x="12.2194%" y="885" width="0.0401%" height="15" fill="rgb(236,175,2)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (5 samples, 0.04%)</title><rect x="12.2194%" y="869" width="0.0401%" height="15" fill="rgb(241,52,2)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="879.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="12.2194%" y="853" width="0.0401%" height="15" fill="rgb(248,140,14)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="863.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="12.2194%" y="837" width="0.0401%" height="15" fill="rgb(253,22,42)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="12.2194%" y="821" width="0.0401%" height="15" fill="rgb(234,61,47)" fg:x="1524" fg:w="5"/><text x="12.4694%" y="831.50"></text></g><g><title>std::sys_common::poison::Flag::done (3 samples, 0.02%)</title><rect x="12.2595%" y="853" width="0.0241%" height="15" fill="rgb(208,226,15)" fg:x="1529" fg:w="3"/><text x="12.5095%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (28 samples, 0.22%)</title><rect x="12.2595%" y="901" width="0.2245%" height="15" fill="rgb(217,221,4)" fg:x="1529" fg:w="28"/><text x="12.5095%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (28 samples, 0.22%)</title><rect x="12.2595%" y="885" width="0.2245%" height="15" fill="rgb(212,174,34)" fg:x="1529" fg:w="28"/><text x="12.5095%" y="895.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.22%)</title><rect x="12.2595%" y="869" width="0.2245%" height="15" fill="rgb(253,83,4)" fg:x="1529" fg:w="28"/><text x="12.5095%" y="879.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (25 samples, 0.20%)</title><rect x="12.2835%" y="853" width="0.2004%" height="15" fill="rgb(250,195,49)" fg:x="1532" fg:w="25"/><text x="12.5335%" y="863.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (25 samples, 0.20%)</title><rect x="12.2835%" y="837" width="0.2004%" height="15" fill="rgb(241,192,25)" fg:x="1532" fg:w="25"/><text x="12.5335%" y="847.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (25 samples, 0.20%)</title><rect x="12.2835%" y="821" width="0.2004%" height="15" fill="rgb(208,124,10)" fg:x="1532" fg:w="25"/><text x="12.5335%" y="831.50"></text></g><g><title>__GI___pthread_rwlock_unlock (25 samples, 0.20%)</title><rect x="12.2835%" y="805" width="0.2004%" height="15" fill="rgb(222,33,0)" fg:x="1532" fg:w="25"/><text x="12.5335%" y="815.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.11%)</title><rect x="12.4840%" y="901" width="0.1123%" height="15" fill="rgb(234,209,28)" fg:x="1557" fg:w="14"/><text x="12.7340%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.11%)</title><rect x="12.4840%" y="885" width="0.1123%" height="15" fill="rgb(224,11,23)" fg:x="1557" fg:w="14"/><text x="12.7340%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.11%)</title><rect x="12.4840%" y="869" width="0.1123%" height="15" fill="rgb(232,99,1)" fg:x="1557" fg:w="14"/><text x="12.7340%" y="879.50"></text></g><g><title>__clock_gettime (14 samples, 0.11%)</title><rect x="12.4840%" y="853" width="0.1123%" height="15" fill="rgb(237,95,45)" fg:x="1557" fg:w="14"/><text x="12.7340%" y="863.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.11%)</title><rect x="12.4840%" y="837" width="0.1123%" height="15" fill="rgb(208,109,11)" fg:x="1557" fg:w="14"/><text x="12.7340%" y="847.50"></text></g><g><title>[[vdso]] (12 samples, 0.10%)</title><rect x="12.5000%" y="821" width="0.0962%" height="15" fill="rgb(216,190,48)" fg:x="1559" fg:w="12"/><text x="12.7500%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="12.5962%" y="869" width="0.0160%" height="15" fill="rgb(251,171,36)" fg:x="1571" fg:w="2"/><text x="12.8462%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.05%)</title><rect x="12.6363%" y="853" width="0.0481%" height="15" fill="rgb(230,62,22)" fg:x="1576" fg:w="6"/><text x="12.8863%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.03%)</title><rect x="12.6523%" y="837" width="0.0321%" height="15" fill="rgb(225,114,35)" fg:x="1578" fg:w="4"/><text x="12.9023%" y="847.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="12.6844%" y="837" width="0.0561%" height="15" fill="rgb(215,118,42)" fg:x="1582" fg:w="7"/><text x="12.9344%" y="847.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (6 samples, 0.05%)</title><rect x="12.6924%" y="821" width="0.0481%" height="15" fill="rgb(243,119,21)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="831.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (6 samples, 0.05%)</title><rect x="12.6924%" y="805" width="0.0481%" height="15" fill="rgb(252,177,53)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="815.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (6 samples, 0.05%)</title><rect x="12.6924%" y="789" width="0.0481%" height="15" fill="rgb(237,209,29)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="799.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (6 samples, 0.05%)</title><rect x="12.6924%" y="773" width="0.0481%" height="15" fill="rgb(212,65,23)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="783.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (6 samples, 0.05%)</title><rect x="12.6924%" y="757" width="0.0481%" height="15" fill="rgb(230,222,46)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (6 samples, 0.05%)</title><rect x="12.6924%" y="741" width="0.0481%" height="15" fill="rgb(215,135,32)" fg:x="1583" fg:w="6"/><text x="12.9424%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="12.7165%" y="725" width="0.0241%" height="15" fill="rgb(246,101,22)" fg:x="1586" fg:w="3"/><text x="12.9665%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="12.7165%" y="709" width="0.0241%" height="15" fill="rgb(206,107,13)" fg:x="1586" fg:w="3"/><text x="12.9665%" y="719.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (20 samples, 0.16%)</title><rect x="12.5962%" y="901" width="0.1604%" height="15" fill="rgb(250,100,44)" fg:x="1571" fg:w="20"/><text x="12.8462%" y="911.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (20 samples, 0.16%)</title><rect x="12.5962%" y="885" width="0.1604%" height="15" fill="rgb(231,147,38)" fg:x="1571" fg:w="20"/><text x="12.8462%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (18 samples, 0.14%)</title><rect x="12.6123%" y="869" width="0.1443%" height="15" fill="rgb(229,8,40)" fg:x="1573" fg:w="18"/><text x="12.8623%" y="879.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (9 samples, 0.07%)</title><rect x="12.6844%" y="853" width="0.0722%" height="15" fill="rgb(221,135,30)" fg:x="1582" fg:w="9"/><text x="12.9344%" y="863.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (2 samples, 0.02%)</title><rect x="12.7405%" y="837" width="0.0160%" height="15" fill="rgb(249,193,18)" fg:x="1589" fg:w="2"/><text x="12.9905%" y="847.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (30 samples, 0.24%)</title><rect x="12.7566%" y="901" width="0.2405%" height="15" fill="rgb(209,133,39)" fg:x="1591" fg:w="30"/><text x="13.0066%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (29 samples, 0.23%)</title><rect x="12.7646%" y="885" width="0.2325%" height="15" fill="rgb(232,100,14)" fg:x="1592" fg:w="29"/><text x="13.0146%" y="895.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (28 samples, 0.22%)</title><rect x="12.7726%" y="869" width="0.2245%" height="15" fill="rgb(224,185,1)" fg:x="1593" fg:w="28"/><text x="13.0226%" y="879.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (28 samples, 0.22%)</title><rect x="12.7726%" y="853" width="0.2245%" height="15" fill="rgb(223,139,8)" fg:x="1593" fg:w="28"/><text x="13.0226%" y="863.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (28 samples, 0.22%)</title><rect x="12.7726%" y="837" width="0.2245%" height="15" fill="rgb(232,213,38)" fg:x="1593" fg:w="28"/><text x="13.0226%" y="847.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (26 samples, 0.21%)</title><rect x="12.7886%" y="821" width="0.2085%" height="15" fill="rgb(207,94,22)" fg:x="1595" fg:w="26"/><text x="13.0386%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.04%)</title><rect x="12.9971%" y="869" width="0.0401%" height="15" fill="rgb(219,183,54)" fg:x="1621" fg:w="5"/><text x="13.2471%" y="879.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (4 samples, 0.03%)</title><rect x="13.0051%" y="853" width="0.0321%" height="15" fill="rgb(216,185,54)" fg:x="1622" fg:w="4"/><text x="13.2551%" y="863.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (4 samples, 0.03%)</title><rect x="13.0051%" y="837" width="0.0321%" height="15" fill="rgb(254,217,39)" fg:x="1622" fg:w="4"/><text x="13.2551%" y="847.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (4 samples, 0.03%)</title><rect x="13.0051%" y="821" width="0.0321%" height="15" fill="rgb(240,178,23)" fg:x="1622" fg:w="4"/><text x="13.2551%" y="831.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (4 samples, 0.03%)</title><rect x="13.0051%" y="805" width="0.0321%" height="15" fill="rgb(218,11,47)" fg:x="1622" fg:w="4"/><text x="13.2551%" y="815.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (142 samples, 1.14%)</title><rect x="11.9548%" y="917" width="1.1386%" height="15" fill="rgb(218,51,51)" fg:x="1491" fg:w="142"/><text x="12.2048%" y="927.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (12 samples, 0.10%)</title><rect x="12.9971%" y="901" width="0.0962%" height="15" fill="rgb(238,126,27)" fg:x="1621" fg:w="12"/><text x="13.2471%" y="911.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (12 samples, 0.10%)</title><rect x="12.9971%" y="885" width="0.0962%" height="15" fill="rgb(249,202,22)" fg:x="1621" fg:w="12"/><text x="13.2471%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 0.06%)</title><rect x="13.0372%" y="869" width="0.0561%" height="15" fill="rgb(254,195,49)" fg:x="1626" fg:w="7"/><text x="13.2872%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 0.06%)</title><rect x="13.0372%" y="853" width="0.0561%" height="15" fill="rgb(208,123,14)" fg:x="1626" fg:w="7"/><text x="13.2872%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (7 samples, 0.06%)</title><rect x="13.0372%" y="837" width="0.0561%" height="15" fill="rgb(224,200,8)" fg:x="1626" fg:w="7"/><text x="13.2872%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (4 samples, 0.03%)</title><rect x="13.0613%" y="821" width="0.0321%" height="15" fill="rgb(217,61,36)" fg:x="1629" fg:w="4"/><text x="13.3113%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="13.0613%" y="805" width="0.0321%" height="15" fill="rgb(206,35,45)" fg:x="1629" fg:w="4"/><text x="13.3113%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.03%)</title><rect x="13.0613%" y="789" width="0.0321%" height="15" fill="rgb(217,65,33)" fg:x="1629" fg:w="4"/><text x="13.3113%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.03%)</title><rect x="13.0613%" y="773" width="0.0321%" height="15" fill="rgb(222,158,48)" fg:x="1629" fg:w="4"/><text x="13.3113%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="13.0613%" y="757" width="0.0321%" height="15" fill="rgb(254,2,54)" fg:x="1629" fg:w="4"/><text x="13.3113%" y="767.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.04%)</title><rect x="13.1895%" y="885" width="0.0401%" height="15" fill="rgb(250,143,38)" fg:x="1645" fg:w="5"/><text x="13.4395%" y="895.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (5 samples, 0.04%)</title><rect x="13.1895%" y="869" width="0.0401%" height="15" fill="rgb(248,25,0)" fg:x="1645" fg:w="5"/><text x="13.4395%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (6 samples, 0.05%)</title><rect x="13.2296%" y="885" width="0.0481%" height="15" fill="rgb(206,152,27)" fg:x="1650" fg:w="6"/><text x="13.4796%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (4 samples, 0.03%)</title><rect x="13.2777%" y="885" width="0.0321%" height="15" fill="rgb(240,77,30)" fg:x="1656" fg:w="4"/><text x="13.5277%" y="895.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="13.2777%" y="869" width="0.0321%" height="15" fill="rgb(231,5,3)" fg:x="1656" fg:w="4"/><text x="13.5277%" y="879.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="13.2777%" y="853" width="0.0321%" height="15" fill="rgb(207,226,32)" fg:x="1656" fg:w="4"/><text x="13.5277%" y="863.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="13.2777%" y="837" width="0.0321%" height="15" fill="rgb(222,207,47)" fg:x="1656" fg:w="4"/><text x="13.5277%" y="847.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="13.3178%" y="853" width="0.0321%" height="15" fill="rgb(229,115,45)" fg:x="1661" fg:w="4"/><text x="13.5678%" y="863.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (4 samples, 0.03%)</title><rect x="13.3178%" y="837" width="0.0321%" height="15" fill="rgb(224,191,6)" fg:x="1661" fg:w="4"/><text x="13.5678%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (4 samples, 0.03%)</title><rect x="13.3178%" y="821" width="0.0321%" height="15" fill="rgb(230,227,24)" fg:x="1661" fg:w="4"/><text x="13.5678%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="13.3178%" y="805" width="0.0321%" height="15" fill="rgb(228,80,19)" fg:x="1661" fg:w="4"/><text x="13.5678%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.07%)</title><rect x="13.4622%" y="789" width="0.0722%" height="15" fill="rgb(247,229,0)" fg:x="1679" fg:w="9"/><text x="13.7122%" y="799.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (49 samples, 0.39%)</title><rect x="13.3098%" y="869" width="0.3929%" height="15" fill="rgb(237,194,15)" fg:x="1660" fg:w="49"/><text x="13.5598%" y="879.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (44 samples, 0.35%)</title><rect x="13.3499%" y="853" width="0.3528%" height="15" fill="rgb(219,203,20)" fg:x="1665" fg:w="44"/><text x="13.5999%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (31 samples, 0.25%)</title><rect x="13.4541%" y="837" width="0.2486%" height="15" fill="rgb(234,128,8)" fg:x="1678" fg:w="31"/><text x="13.7041%" y="847.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (31 samples, 0.25%)</title><rect x="13.4541%" y="821" width="0.2486%" height="15" fill="rgb(248,202,8)" fg:x="1678" fg:w="31"/><text x="13.7041%" y="831.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (31 samples, 0.25%)</title><rect x="13.4541%" y="805" width="0.2486%" height="15" fill="rgb(206,104,37)" fg:x="1678" fg:w="31"/><text x="13.7041%" y="815.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (21 samples, 0.17%)</title><rect x="13.5343%" y="789" width="0.1684%" height="15" fill="rgb(223,8,27)" fg:x="1688" fg:w="21"/><text x="13.7843%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (21 samples, 0.17%)</title><rect x="13.5343%" y="773" width="0.1684%" height="15" fill="rgb(216,217,28)" fg:x="1688" fg:w="21"/><text x="13.7843%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.15%)</title><rect x="13.5504%" y="757" width="0.1523%" height="15" fill="rgb(249,199,1)" fg:x="1690" fg:w="19"/><text x="13.8004%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.15%)</title><rect x="13.5504%" y="741" width="0.1523%" height="15" fill="rgb(240,85,17)" fg:x="1690" fg:w="19"/><text x="13.8004%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (74 samples, 0.59%)</title><rect x="13.1174%" y="901" width="0.5933%" height="15" fill="rgb(206,108,45)" fg:x="1636" fg:w="74"/><text x="13.3674%" y="911.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (50 samples, 0.40%)</title><rect x="13.3098%" y="885" width="0.4009%" height="15" fill="rgb(245,210,41)" fg:x="1660" fg:w="50"/><text x="13.5598%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="13.7668%" y="885" width="0.0160%" height="15" fill="rgb(206,13,37)" fg:x="1717" fg:w="2"/><text x="14.0168%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="13.7668%" y="869" width="0.0160%" height="15" fill="rgb(250,61,18)" fg:x="1717" fg:w="2"/><text x="14.0168%" y="879.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="13.7668%" y="853" width="0.0160%" height="15" fill="rgb(235,172,48)" fg:x="1717" fg:w="2"/><text x="14.0168%" y="863.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (22 samples, 0.18%)</title><rect x="13.7829%" y="837" width="0.1764%" height="15" fill="rgb(249,201,17)" fg:x="1719" fg:w="22"/><text x="14.0329%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.06%)</title><rect x="13.8951%" y="821" width="0.0641%" height="15" fill="rgb(219,208,6)" fg:x="1733" fg:w="8"/><text x="14.1451%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.06%)</title><rect x="13.8951%" y="805" width="0.0641%" height="15" fill="rgb(248,31,23)" fg:x="1733" fg:w="8"/><text x="14.1451%" y="815.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (25 samples, 0.20%)</title><rect x="13.7829%" y="885" width="0.2004%" height="15" fill="rgb(245,15,42)" fg:x="1719" fg:w="25"/><text x="14.0329%" y="895.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (25 samples, 0.20%)</title><rect x="13.7829%" y="869" width="0.2004%" height="15" fill="rgb(222,217,39)" fg:x="1719" fg:w="25"/><text x="14.0329%" y="879.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (25 samples, 0.20%)</title><rect x="13.7829%" y="853" width="0.2004%" height="15" fill="rgb(210,219,27)" fg:x="1719" fg:w="25"/><text x="14.0329%" y="863.50"></text></g><g><title>thread_local::thread_id::get (3 samples, 0.02%)</title><rect x="13.9593%" y="837" width="0.0241%" height="15" fill="rgb(252,166,36)" fg:x="1741" fg:w="3"/><text x="14.2093%" y="847.50"></text></g><g><title>tracing::span::Span::enter (273 samples, 2.19%)</title><rect x="11.8586%" y="981" width="2.1889%" height="15" fill="rgb(245,132,34)" fg:x="1479" fg:w="273"/><text x="12.1086%" y="991.50">t..</text></g><g><title>tracing::span::Span::do_enter (273 samples, 2.19%)</title><rect x="11.8586%" y="965" width="2.1889%" height="15" fill="rgb(236,54,3)" fg:x="1479" fg:w="273"/><text x="12.1086%" y="975.50">t..</text></g><g><title>tracing_core::dispatcher::Dispatch::enter (267 samples, 2.14%)</title><rect x="11.9067%" y="949" width="2.1408%" height="15" fill="rgb(241,173,43)" fg:x="1485" fg:w="267"/><text x="12.1567%" y="959.50">t..</text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (267 samples, 2.14%)</title><rect x="11.9067%" y="933" width="2.1408%" height="15" fill="rgb(215,190,9)" fg:x="1485" fg:w="267"/><text x="12.1567%" y="943.50">&lt;..</text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (119 samples, 0.95%)</title><rect x="13.0933%" y="917" width="0.9541%" height="15" fill="rgb(242,101,16)" fg:x="1633" fg:w="119"/><text x="13.3433%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (42 samples, 0.34%)</title><rect x="13.7107%" y="901" width="0.3368%" height="15" fill="rgb(223,190,21)" fg:x="1710" fg:w="42"/><text x="13.9607%" y="911.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::push (8 samples, 0.06%)</title><rect x="13.9833%" y="885" width="0.0641%" height="15" fill="rgb(215,228,25)" fg:x="1744" fg:w="8"/><text x="14.2333%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.06%)</title><rect x="13.9913%" y="869" width="0.0561%" height="15" fill="rgb(225,36,22)" fg:x="1745" fg:w="7"/><text x="14.2413%" y="879.50"></text></g><g><title>core::ptr::write (5 samples, 0.04%)</title><rect x="14.0074%" y="853" width="0.0401%" height="15" fill="rgb(251,106,46)" fg:x="1747" fg:w="5"/><text x="14.2574%" y="863.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1,067 samples, 8.56%)</title><rect x="5.5083%" y="997" width="8.5552%" height="15" fill="rgb(208,90,1)" fg:x="687" fg:w="1067"/><text x="5.7583%" y="1007.50">&lt;tracing_fut..</text></g><g><title>tracing_futures::_::&lt;impl tracing_futures::Instrumented&lt;T&gt;&gt;::project (2 samples, 0.02%)</title><rect x="14.0475%" y="981" width="0.0160%" height="15" fill="rgb(243,10,4)" fg:x="1752" fg:w="2"/><text x="14.2975%" y="991.50"></text></g><g><title>[libc-2.28.so] (35 samples, 0.28%)</title><rect x="14.0635%" y="997" width="0.2806%" height="15" fill="rgb(212,137,27)" fg:x="1754" fg:w="35"/><text x="14.3135%" y="1007.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="14.3602%" y="965" width="0.0241%" height="15" fill="rgb(231,220,49)" fg:x="1791" fg:w="3"/><text x="14.6102%" y="975.50"></text></g><g><title>[libc-2.28.so] (25 samples, 0.20%)</title><rect x="14.3922%" y="933" width="0.2004%" height="15" fill="rgb(237,96,20)" fg:x="1795" fg:w="25"/><text x="14.6422%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="14.5927%" y="933" width="0.0241%" height="15" fill="rgb(239,229,30)" fg:x="1820" fg:w="3"/><text x="14.8427%" y="943.50"></text></g><g><title>core::mem::drop (4 samples, 0.03%)</title><rect x="14.6408%" y="869" width="0.0321%" height="15" fill="rgb(219,65,33)" fg:x="1826" fg:w="4"/><text x="14.8908%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;opentelemetry::sdk::trace::span::SpanInner&gt;&gt; (4 samples, 0.03%)</title><rect x="14.6408%" y="853" width="0.0321%" height="15" fill="rgb(243,134,7)" fg:x="1826" fg:w="4"/><text x="14.8908%" y="863.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="14.6408%" y="837" width="0.0321%" height="15" fill="rgb(216,177,54)" fg:x="1826" fg:w="4"/><text x="14.8908%" y="847.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::span::SpanInner as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="14.6729%" y="853" width="0.0321%" height="15" fill="rgb(211,160,20)" fg:x="1830" fg:w="4"/><text x="14.9229%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.12%)</title><rect x="14.6408%" y="885" width="0.1203%" height="15" fill="rgb(239,85,39)" fg:x="1826" fg:w="15"/><text x="14.8908%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::span::SpanInner&gt; (11 samples, 0.09%)</title><rect x="14.6729%" y="869" width="0.0882%" height="15" fill="rgb(232,125,22)" fg:x="1830" fg:w="11"/><text x="14.9229%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::tracer::Tracer&gt; (6 samples, 0.05%)</title><rect x="14.7130%" y="853" width="0.0481%" height="15" fill="rgb(244,57,34)" fg:x="1835" fg:w="6"/><text x="14.9630%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (6 samples, 0.05%)</title><rect x="14.7130%" y="837" width="0.0481%" height="15" fill="rgb(214,203,32)" fg:x="1835" fg:w="6"/><text x="14.9630%" y="847.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="14.7130%" y="821" width="0.0481%" height="15" fill="rgb(207,58,43)" fg:x="1835" fg:w="6"/><text x="14.9630%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::span::Span&gt; (24 samples, 0.19%)</title><rect x="14.6167%" y="933" width="0.1924%" height="15" fill="rgb(215,193,15)" fg:x="1823" fg:w="24"/><text x="14.8667%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::span::SpanInner&gt;&gt; (24 samples, 0.19%)</title><rect x="14.6167%" y="917" width="0.1924%" height="15" fill="rgb(232,15,44)" fg:x="1823" fg:w="24"/><text x="14.8667%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.19%)</title><rect x="14.6167%" y="901" width="0.1924%" height="15" fill="rgb(212,3,48)" fg:x="1823" fg:w="24"/><text x="14.8667%" y="911.50"></text></g><g><title>cfree (6 samples, 0.05%)</title><rect x="14.7611%" y="885" width="0.0481%" height="15" fill="rgb(218,128,7)" fg:x="1841" fg:w="6"/><text x="15.0111%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (2 samples, 0.02%)</title><rect x="14.8092%" y="933" width="0.0160%" height="15" fill="rgb(226,216,39)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (2 samples, 0.02%)</title><rect x="14.8092%" y="917" width="0.0160%" height="15" fill="rgb(243,47,51)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="14.8092%" y="901" width="0.0160%" height="15" fill="rgb(241,183,40)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="911.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="14.8092%" y="885" width="0.0160%" height="15" fill="rgb(231,217,32)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="895.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="14.8092%" y="869" width="0.0160%" height="15" fill="rgb(229,61,38)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="879.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="14.8092%" y="853" width="0.0160%" height="15" fill="rgb(225,210,5)" fg:x="1847" fg:w="2"/><text x="15.0592%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (5 samples, 0.04%)</title><rect x="14.8252%" y="933" width="0.0401%" height="15" fill="rgb(231,79,45)" fg:x="1849" fg:w="5"/><text x="15.0752%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (5 samples, 0.04%)</title><rect x="14.8252%" y="917" width="0.0401%" height="15" fill="rgb(224,100,7)" fg:x="1849" fg:w="5"/><text x="15.0752%" y="927.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="14.8252%" y="901" width="0.0401%" height="15" fill="rgb(241,198,18)" fg:x="1849" fg:w="5"/><text x="15.0752%" y="911.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (3 samples, 0.02%)</title><rect x="14.8412%" y="885" width="0.0241%" height="15" fill="rgb(252,97,53)" fg:x="1851" fg:w="3"/><text x="15.0912%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (3 samples, 0.02%)</title><rect x="14.8412%" y="869" width="0.0241%" height="15" fill="rgb(220,88,7)" fg:x="1851" fg:w="3"/><text x="15.0912%" y="879.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.02%)</title><rect x="14.8412%" y="853" width="0.0241%" height="15" fill="rgb(213,176,14)" fg:x="1851" fg:w="3"/><text x="15.0912%" y="863.50"></text></g><g><title>__GI___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="14.8412%" y="837" width="0.0241%" height="15" fill="rgb(246,73,7)" fg:x="1851" fg:w="3"/><text x="15.0912%" y="847.50"></text></g><g><title>opentelemetry::core::KeyValue::new (14 samples, 0.11%)</title><rect x="14.8653%" y="933" width="0.1123%" height="15" fill="rgb(245,64,36)" fg:x="1854" fg:w="14"/><text x="15.1153%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.03%)</title><rect x="14.9455%" y="917" width="0.0321%" height="15" fill="rgb(245,80,10)" fg:x="1864" fg:w="4"/><text x="15.1955%" y="927.50"></text></g><g><title>opentelemetry::core::Key::from_static_str (3 samples, 0.02%)</title><rect x="14.9535%" y="901" width="0.0241%" height="15" fill="rgb(232,107,50)" fg:x="1865" fg:w="3"/><text x="15.2035%" y="911.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::remote_span_context (3 samples, 0.02%)</title><rect x="15.2181%" y="901" width="0.0241%" height="15" fill="rgb(253,3,0)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="911.50"></text></g><g><title>opentelemetry::context::Context::get (3 samples, 0.02%)</title><rect x="15.2181%" y="885" width="0.0241%" height="15" fill="rgb(212,99,53)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="15.2181%" y="869" width="0.0241%" height="15" fill="rgb(249,111,54)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="15.2181%" y="853" width="0.0241%" height="15" fill="rgb(249,55,30)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.02%)</title><rect x="15.2181%" y="837" width="0.0241%" height="15" fill="rgb(237,47,42)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.02%)</title><rect x="15.2181%" y="821" width="0.0241%" height="15" fill="rgb(211,20,18)" fg:x="1898" fg:w="3"/><text x="15.4681%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="15.2261%" y="805" width="0.0160%" height="15" fill="rgb(231,203,46)" fg:x="1899" fg:w="2"/><text x="15.4761%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="15.2261%" y="789" width="0.0160%" height="15" fill="rgb(237,142,3)" fg:x="1899" fg:w="2"/><text x="15.4761%" y="799.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::span_processor::BatchSpanProcessor as opentelemetry::sdk::trace::span_processor::SpanProcessor&gt;::on_start (6 samples, 0.05%)</title><rect x="15.2421%" y="901" width="0.0481%" height="15" fill="rgb(241,107,1)" fg:x="1901" fg:w="6"/><text x="15.4921%" y="911.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as core::clone::Clone&gt;::clone (7 samples, 0.06%)</title><rect x="15.2903%" y="901" width="0.0561%" height="15" fill="rgb(229,83,13)" fg:x="1907" fg:w="7"/><text x="15.5403%" y="911.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="15.3063%" y="885" width="0.0401%" height="15" fill="rgb(241,91,40)" fg:x="1909" fg:w="5"/><text x="15.5563%" y="895.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="15.3464%" y="901" width="0.0401%" height="15" fill="rgb(225,3,45)" fg:x="1914" fg:w="5"/><text x="15.5964%" y="911.50"></text></g><g><title>[libc-2.28.so] (83 samples, 0.67%)</title><rect x="15.3945%" y="805" width="0.6655%" height="15" fill="rgb(244,223,14)" fg:x="1920" fg:w="83"/><text x="15.6445%" y="815.50"></text></g><g><title>cfree (63 samples, 0.51%)</title><rect x="16.0680%" y="805" width="0.5051%" height="15" fill="rgb(224,124,37)" fg:x="2004" fg:w="63"/><text x="16.3180%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::core::Key&gt; (21 samples, 0.17%)</title><rect x="16.5731%" y="805" width="0.1684%" height="15" fill="rgb(251,171,30)" fg:x="2067" fg:w="21"/><text x="16.8231%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (21 samples, 0.17%)</title><rect x="16.5731%" y="789" width="0.1684%" height="15" fill="rgb(236,46,54)" fg:x="2067" fg:w="21"/><text x="16.8231%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (176 samples, 1.41%)</title><rect x="15.3865%" y="853" width="1.4112%" height="15" fill="rgb(245,213,5)" fg:x="1919" fg:w="176"/><text x="15.6365%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[opentelemetry::core::KeyValue]&gt; (176 samples, 1.41%)</title><rect x="15.3865%" y="837" width="1.4112%" height="15" fill="rgb(230,144,27)" fg:x="1919" fg:w="176"/><text x="15.6365%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::core::KeyValue&gt; (175 samples, 1.40%)</title><rect x="15.3945%" y="821" width="1.4031%" height="15" fill="rgb(220,86,6)" fg:x="1920" fg:w="175"/><text x="15.6445%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::core::Value&gt; (7 samples, 0.06%)</title><rect x="16.7415%" y="805" width="0.0561%" height="15" fill="rgb(240,20,13)" fg:x="2088" fg:w="7"/><text x="16.9915%" y="815.50"></text></g><g><title>delay_mwaitx (3 samples, 0.02%)</title><rect x="17.1825%" y="565" width="0.0241%" height="15" fill="rgb(217,89,34)" fg:x="2143" fg:w="3"/><text x="17.4325%" y="575.50"></text></g><g><title>amd_pmu_wait_on_overflow (5 samples, 0.04%)</title><rect x="17.1825%" y="581" width="0.0401%" height="15" fill="rgb(229,13,5)" fg:x="2143" fg:w="5"/><text x="17.4325%" y="591.50"></text></g><g><title>native_read_msr (2 samples, 0.02%)</title><rect x="17.2065%" y="565" width="0.0160%" height="15" fill="rgb(244,67,35)" fg:x="2146" fg:w="2"/><text x="17.4565%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (8 samples, 0.06%)</title><rect x="17.1825%" y="629" width="0.0641%" height="15" fill="rgb(221,40,2)" fg:x="2143" fg:w="8"/><text x="17.4325%" y="639.50"></text></g><g><title>ctx_sched_out (8 samples, 0.06%)</title><rect x="17.1825%" y="613" width="0.0641%" height="15" fill="rgb(237,157,21)" fg:x="2143" fg:w="8"/><text x="17.4325%" y="623.50"></text></g><g><title>amd_pmu_disable_all (8 samples, 0.06%)</title><rect x="17.1825%" y="597" width="0.0641%" height="15" fill="rgb(222,94,11)" fg:x="2143" fg:w="8"/><text x="17.4325%" y="607.50"></text></g><g><title>x86_pmu_disable_all (3 samples, 0.02%)</title><rect x="17.2226%" y="581" width="0.0241%" height="15" fill="rgb(249,113,6)" fg:x="2148" fg:w="3"/><text x="17.4726%" y="591.50"></text></g><g><title>native_write_msr (2 samples, 0.02%)</title><rect x="17.2306%" y="565" width="0.0160%" height="15" fill="rgb(238,137,36)" fg:x="2149" fg:w="2"/><text x="17.4806%" y="575.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.03%)</title><rect x="17.2466%" y="629" width="0.0321%" height="15" fill="rgb(210,102,26)" fg:x="2151" fg:w="4"/><text x="17.4966%" y="639.50"></text></g><g><title>dequeue_entity (4 samples, 0.03%)</title><rect x="17.2466%" y="613" width="0.0321%" height="15" fill="rgb(218,30,30)" fg:x="2151" fg:w="4"/><text x="17.4966%" y="623.50"></text></g><g><title>futex_wait_queue_me (13 samples, 0.10%)</title><rect x="17.1825%" y="677" width="0.1042%" height="15" fill="rgb(214,67,26)" fg:x="2143" fg:w="13"/><text x="17.4325%" y="687.50"></text></g><g><title>schedule (13 samples, 0.10%)</title><rect x="17.1825%" y="661" width="0.1042%" height="15" fill="rgb(251,9,53)" fg:x="2143" fg:w="13"/><text x="17.4325%" y="671.50"></text></g><g><title>__schedule (13 samples, 0.10%)</title><rect x="17.1825%" y="645" width="0.1042%" height="15" fill="rgb(228,204,25)" fg:x="2143" fg:w="13"/><text x="17.4325%" y="655.50"></text></g><g><title>futex_wait (17 samples, 0.14%)</title><rect x="17.1825%" y="693" width="0.1363%" height="15" fill="rgb(207,153,8)" fg:x="2143" fg:w="17"/><text x="17.4325%" y="703.50"></text></g><g><title>futex_wait_setup (4 samples, 0.03%)</title><rect x="17.2867%" y="677" width="0.0321%" height="15" fill="rgb(242,9,16)" fg:x="2156" fg:w="4"/><text x="17.5367%" y="687.50"></text></g><g><title>[libc-2.28.so] (73 samples, 0.59%)</title><rect x="16.7976%" y="789" width="0.5853%" height="15" fill="rgb(217,211,10)" fg:x="2095" fg:w="73"/><text x="17.0476%" y="799.50"></text></g><g><title>[libc-2.28.so] (31 samples, 0.25%)</title><rect x="17.1344%" y="773" width="0.2486%" height="15" fill="rgb(219,228,52)" fg:x="2137" fg:w="31"/><text x="17.3844%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.20%)</title><rect x="17.1825%" y="757" width="0.2004%" height="15" fill="rgb(231,92,29)" fg:x="2143" fg:w="25"/><text x="17.4325%" y="767.50"></text></g><g><title>do_syscall_64 (25 samples, 0.20%)</title><rect x="17.1825%" y="741" width="0.2004%" height="15" fill="rgb(232,8,23)" fg:x="2143" fg:w="25"/><text x="17.4325%" y="751.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.20%)</title><rect x="17.1825%" y="725" width="0.2004%" height="15" fill="rgb(216,211,34)" fg:x="2143" fg:w="25"/><text x="17.4325%" y="735.50"></text></g><g><title>do_futex (25 samples, 0.20%)</title><rect x="17.1825%" y="709" width="0.2004%" height="15" fill="rgb(236,151,0)" fg:x="2143" fg:w="25"/><text x="17.4325%" y="719.50"></text></g><g><title>futex_wake (8 samples, 0.06%)</title><rect x="17.3188%" y="693" width="0.0641%" height="15" fill="rgb(209,168,3)" fg:x="2160" fg:w="8"/><text x="17.5688%" y="703.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="17.3589%" y="677" width="0.0241%" height="15" fill="rgb(208,129,28)" fg:x="2165" fg:w="3"/><text x="17.6089%" y="687.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="17.3589%" y="661" width="0.0241%" height="15" fill="rgb(229,78,22)" fg:x="2165" fg:w="3"/><text x="17.6089%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;opentelemetry::core::KeyValue&gt;&gt; (256 samples, 2.05%)</title><rect x="15.3865%" y="869" width="2.0526%" height="15" fill="rgb(228,187,13)" fg:x="1919" fg:w="256"/><text x="15.6365%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;opentelemetry::core::KeyValue&gt;&gt; (80 samples, 0.64%)</title><rect x="16.7976%" y="853" width="0.6414%" height="15" fill="rgb(240,119,24)" fg:x="2095" fg:w="80"/><text x="17.0476%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.64%)</title><rect x="16.7976%" y="837" width="0.6414%" height="15" fill="rgb(209,194,42)" fg:x="2095" fg:w="80"/><text x="17.0476%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 0.64%)</title><rect x="16.7976%" y="821" width="0.6414%" height="15" fill="rgb(247,200,46)" fg:x="2095" fg:w="80"/><text x="17.0476%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (80 samples, 0.64%)</title><rect x="16.7976%" y="805" width="0.6414%" height="15" fill="rgb(218,76,16)" fg:x="2095" fg:w="80"/><text x="17.0476%" y="815.50"></text></g><g><title>cfree (7 samples, 0.06%)</title><rect x="17.3829%" y="789" width="0.0561%" height="15" fill="rgb(225,21,48)" fg:x="2168" fg:w="7"/><text x="17.6329%" y="799.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="17.4391%" y="741" width="0.0641%" height="15" fill="rgb(239,223,50)" fg:x="2175" fg:w="8"/><text x="17.6891%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (13 samples, 0.10%)</title><rect x="17.4391%" y="853" width="0.1042%" height="15" fill="rgb(244,45,21)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.10%)</title><rect x="17.4391%" y="837" width="0.1042%" height="15" fill="rgb(232,33,43)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.10%)</title><rect x="17.4391%" y="821" width="0.1042%" height="15" fill="rgb(209,8,3)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.10%)</title><rect x="17.4391%" y="805" width="0.1042%" height="15" fill="rgb(214,25,53)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.10%)</title><rect x="17.4391%" y="789" width="0.1042%" height="15" fill="rgb(254,186,54)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.10%)</title><rect x="17.4391%" y="773" width="0.1042%" height="15" fill="rgb(208,174,49)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.10%)</title><rect x="17.4391%" y="757" width="0.1042%" height="15" fill="rgb(233,191,51)" fg:x="2175" fg:w="13"/><text x="17.6891%" y="767.50"></text></g><g><title>cfree (5 samples, 0.04%)</title><rect x="17.5032%" y="741" width="0.0401%" height="15" fill="rgb(222,134,10)" fg:x="2183" fg:w="5"/><text x="17.7532%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (271 samples, 2.17%)</title><rect x="15.3865%" y="901" width="2.1729%" height="15" fill="rgb(230,226,20)" fg:x="1919" fg:w="271"/><text x="15.6365%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build::{{closure}}&gt; (271 samples, 2.17%)</title><rect x="15.3865%" y="885" width="2.1729%" height="15" fill="rgb(251,111,25)" fg:x="1919" fg:w="271"/><text x="15.6365%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::trace::tracer::SpanBuilder&gt; (15 samples, 0.12%)</title><rect x="17.4391%" y="869" width="0.1203%" height="15" fill="rgb(224,40,46)" fg:x="2175" fg:w="15"/><text x="17.6891%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.04%)</title><rect x="17.5593%" y="901" width="0.0401%" height="15" fill="rgb(236,108,47)" fg:x="2190" fg:w="5"/><text x="17.8093%" y="911.50"></text></g><g><title>core::mem::take (5 samples, 0.04%)</title><rect x="17.5593%" y="885" width="0.0401%" height="15" fill="rgb(234,93,0)" fg:x="2190" fg:w="5"/><text x="17.8093%" y="895.50"></text></g><g><title>core::mem::replace (4 samples, 0.03%)</title><rect x="17.5674%" y="869" width="0.0321%" height="15" fill="rgb(224,213,32)" fg:x="2191" fg:w="4"/><text x="17.8174%" y="879.50"></text></g><g><title>core::mem::swap (3 samples, 0.02%)</title><rect x="17.5754%" y="853" width="0.0241%" height="15" fill="rgb(251,11,48)" fg:x="2192" fg:w="3"/><text x="17.8254%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.02%)</title><rect x="17.5754%" y="837" width="0.0241%" height="15" fill="rgb(236,173,5)" fg:x="2192" fg:w="3"/><text x="17.8254%" y="847.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.02%)</title><rect x="17.5754%" y="821" width="0.0241%" height="15" fill="rgb(230,95,12)" fg:x="2192" fg:w="3"/><text x="17.8254%" y="831.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.02%)</title><rect x="17.5754%" y="805" width="0.0241%" height="15" fill="rgb(232,209,1)" fg:x="2192" fg:w="3"/><text x="17.8254%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="17.5754%" y="789" width="0.0241%" height="15" fill="rgb(232,6,1)" fg:x="2192" fg:w="3"/><text x="17.8254%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (5 samples, 0.04%)</title><rect x="17.6155%" y="901" width="0.0401%" height="15" fill="rgb(210,224,50)" fg:x="2197" fg:w="5"/><text x="17.8655%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (5 samples, 0.04%)</title><rect x="17.6155%" y="885" width="0.0401%" height="15" fill="rgb(228,127,35)" fg:x="2197" fg:w="5"/><text x="17.8655%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="17.6155%" y="869" width="0.0401%" height="15" fill="rgb(245,102,45)" fg:x="2197" fg:w="5"/><text x="17.8655%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.10%)</title><rect x="17.6876%" y="885" width="0.0962%" height="15" fill="rgb(214,1,49)" fg:x="2206" fg:w="12"/><text x="17.9376%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.09%)</title><rect x="17.6956%" y="869" width="0.0882%" height="15" fill="rgb(226,163,40)" fg:x="2207" fg:w="11"/><text x="17.9456%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.09%)</title><rect x="17.6956%" y="853" width="0.0882%" height="15" fill="rgb(239,212,28)" fg:x="2207" fg:w="11"/><text x="17.9456%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.09%)</title><rect x="17.6956%" y="837" width="0.0882%" height="15" fill="rgb(220,20,13)" fg:x="2207" fg:w="11"/><text x="17.9456%" y="847.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.09%)</title><rect x="17.6956%" y="821" width="0.0882%" height="15" fill="rgb(210,164,35)" fg:x="2207" fg:w="11"/><text x="17.9456%" y="831.50"></text></g><g><title>__libc_malloc (11 samples, 0.09%)</title><rect x="17.6956%" y="805" width="0.0882%" height="15" fill="rgb(248,109,41)" fg:x="2207" fg:w="11"/><text x="17.9456%" y="815.50"></text></g><g><title>opentelemetry::sdk::trace::span::Span::new (17 samples, 0.14%)</title><rect x="17.6555%" y="901" width="0.1363%" height="15" fill="rgb(238,23,50)" fg:x="2202" fg:w="17"/><text x="17.9055%" y="911.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::process_sampling_result (3 samples, 0.02%)</title><rect x="17.7919%" y="901" width="0.0241%" height="15" fill="rgb(211,48,49)" fg:x="2219" fg:w="3"/><text x="18.0419%" y="911.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::start (383 samples, 3.07%)</title><rect x="14.9775%" y="933" width="3.0709%" height="15" fill="rgb(223,36,21)" fg:x="1868" fg:w="383"/><text x="15.2275%" y="943.50">ope..</text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build (383 samples, 3.07%)</title><rect x="14.9775%" y="917" width="3.0709%" height="15" fill="rgb(207,123,46)" fg:x="1868" fg:w="383"/><text x="15.2275%" y="927.50">&lt;op..</text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (29 samples, 0.23%)</title><rect x="17.8159%" y="901" width="0.2325%" height="15" fill="rgb(240,218,32)" fg:x="2222" fg:w="29"/><text x="18.0659%" y="911.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (29 samples, 0.23%)</title><rect x="17.8159%" y="885" width="0.2325%" height="15" fill="rgb(252,5,43)" fg:x="2222" fg:w="29"/><text x="18.0659%" y="895.50"></text></g><g><title>std::time::SystemTime::now (11 samples, 0.09%)</title><rect x="18.0564%" y="933" width="0.0882%" height="15" fill="rgb(252,84,19)" fg:x="2252" fg:w="11"/><text x="18.3064%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (11 samples, 0.09%)</title><rect x="18.0564%" y="917" width="0.0882%" height="15" fill="rgb(243,152,39)" fg:x="2252" fg:w="11"/><text x="18.3064%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.09%)</title><rect x="18.0564%" y="901" width="0.0882%" height="15" fill="rgb(234,160,15)" fg:x="2252" fg:w="11"/><text x="18.3064%" y="911.50"></text></g><g><title>__clock_gettime (10 samples, 0.08%)</title><rect x="18.0645%" y="885" width="0.0802%" height="15" fill="rgb(237,34,20)" fg:x="2253" fg:w="10"/><text x="18.3145%" y="895.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.07%)</title><rect x="18.0725%" y="869" width="0.0722%" height="15" fill="rgb(229,97,13)" fg:x="2254" fg:w="9"/><text x="18.3225%" y="879.50"></text></g><g><title>[[vdso]] (9 samples, 0.07%)</title><rect x="18.0725%" y="853" width="0.0722%" height="15" fill="rgb(234,71,50)" fg:x="2254" fg:w="9"/><text x="18.3225%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="18.1527%" y="885" width="0.0401%" height="15" fill="rgb(253,155,4)" fg:x="2264" fg:w="5"/><text x="18.4027%" y="895.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="18.1928%" y="869" width="0.0160%" height="15" fill="rgb(222,185,37)" fg:x="2269" fg:w="2"/><text x="18.4428%" y="879.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="18.1928%" y="853" width="0.0160%" height="15" fill="rgb(251,177,13)" fg:x="2269" fg:w="2"/><text x="18.4428%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="18.1928%" y="837" width="0.0160%" height="15" fill="rgb(250,179,40)" fg:x="2269" fg:w="2"/><text x="18.4428%" y="847.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="18.1928%" y="821" width="0.0160%" height="15" fill="rgb(242,44,2)" fg:x="2269" fg:w="2"/><text x="18.4428%" y="831.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="18.1928%" y="805" width="0.0160%" height="15" fill="rgb(216,177,13)" fg:x="2269" fg:w="2"/><text x="18.4428%" y="815.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (9 samples, 0.07%)</title><rect x="18.1446%" y="933" width="0.0722%" height="15" fill="rgb(216,106,43)" fg:x="2263" fg:w="9"/><text x="18.3946%" y="943.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (9 samples, 0.07%)</title><rect x="18.1446%" y="917" width="0.0722%" height="15" fill="rgb(216,183,2)" fg:x="2263" fg:w="9"/><text x="18.3946%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (9 samples, 0.07%)</title><rect x="18.1446%" y="901" width="0.0722%" height="15" fill="rgb(249,75,3)" fg:x="2263" fg:w="9"/><text x="18.3946%" y="911.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (3 samples, 0.02%)</title><rect x="18.1928%" y="885" width="0.0241%" height="15" fill="rgb(219,67,39)" fg:x="2269" fg:w="3"/><text x="18.4428%" y="895.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (2 samples, 0.02%)</title><rect x="18.2168%" y="933" width="0.0160%" height="15" fill="rgb(253,228,2)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (2 samples, 0.02%)</title><rect x="18.2168%" y="917" width="0.0160%" height="15" fill="rgb(235,138,27)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="927.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="18.2168%" y="901" width="0.0160%" height="15" fill="rgb(236,97,51)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="911.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (2 samples, 0.02%)</title><rect x="18.2168%" y="885" width="0.0160%" height="15" fill="rgb(240,80,30)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (2 samples, 0.02%)</title><rect x="18.2168%" y="869" width="0.0160%" height="15" fill="rgb(230,178,19)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="879.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (2 samples, 0.02%)</title><rect x="18.2168%" y="853" width="0.0160%" height="15" fill="rgb(210,190,27)" fg:x="2272" fg:w="2"/><text x="18.4668%" y="863.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (3 samples, 0.02%)</title><rect x="18.2328%" y="933" width="0.0241%" height="15" fill="rgb(222,107,31)" fg:x="2274" fg:w="3"/><text x="18.4828%" y="943.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (3 samples, 0.02%)</title><rect x="18.2328%" y="917" width="0.0241%" height="15" fill="rgb(216,127,34)" fg:x="2274" fg:w="3"/><text x="18.4828%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="18.2409%" y="901" width="0.0160%" height="15" fill="rgb(234,116,52)" fg:x="2275" fg:w="2"/><text x="18.4909%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="18.2409%" y="885" width="0.0160%" height="15" fill="rgb(222,124,15)" fg:x="2275" fg:w="2"/><text x="18.4909%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="18.2409%" y="869" width="0.0160%" height="15" fill="rgb(231,179,28)" fg:x="2275" fg:w="2"/><text x="18.4909%" y="879.50"></text></g><g><title>[libc-2.28.so] (13 samples, 0.10%)</title><rect x="18.2569%" y="837" width="0.1042%" height="15" fill="rgb(226,93,45)" fg:x="2277" fg:w="13"/><text x="18.5069%" y="847.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="18.3611%" y="789" width="0.0481%" height="15" fill="rgb(215,8,51)" fg:x="2290" fg:w="6"/><text x="18.6111%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (26 samples, 0.21%)</title><rect x="18.2569%" y="901" width="0.2085%" height="15" fill="rgb(223,106,5)" fg:x="2277" fg:w="26"/><text x="18.5069%" y="911.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove::_{{closure}} (26 samples, 0.21%)</title><rect x="18.2569%" y="885" width="0.2085%" height="15" fill="rgb(250,191,5)" fg:x="2277" fg:w="26"/><text x="18.5069%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.21%)</title><rect x="18.2569%" y="869" width="0.2085%" height="15" fill="rgb(242,132,44)" fg:x="2277" fg:w="26"/><text x="18.5069%" y="879.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove::_{{closure}}::_{{closure}} (26 samples, 0.21%)</title><rect x="18.2569%" y="853" width="0.2085%" height="15" fill="rgb(251,152,29)" fg:x="2277" fg:w="26"/><text x="18.5069%" y="863.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.10%)</title><rect x="18.3611%" y="837" width="0.1042%" height="15" fill="rgb(218,179,5)" fg:x="2290" fg:w="13"/><text x="18.6111%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.10%)</title><rect x="18.3611%" y="821" width="0.1042%" height="15" fill="rgb(227,67,19)" fg:x="2290" fg:w="13"/><text x="18.6111%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.10%)</title><rect x="18.3611%" y="805" width="0.1042%" height="15" fill="rgb(233,119,31)" fg:x="2290" fg:w="13"/><text x="18.6111%" y="815.50"></text></g><g><title>cfree (7 samples, 0.06%)</title><rect x="18.4092%" y="789" width="0.0561%" height="15" fill="rgb(241,120,22)" fg:x="2296" fg:w="7"/><text x="18.6592%" y="799.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (510 samples, 4.09%)</title><rect x="14.3842%" y="949" width="4.0892%" height="15" fill="rgb(224,102,30)" fg:x="1794" fg:w="510"/><text x="14.6342%" y="959.50">&lt;tra..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::remove (27 samples, 0.22%)</title><rect x="18.2569%" y="933" width="0.2165%" height="15" fill="rgb(210,164,37)" fg:x="2277" fg:w="27"/><text x="18.5069%" y="943.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove (27 samples, 0.22%)</title><rect x="18.2569%" y="917" width="0.2165%" height="15" fill="rgb(226,191,16)" fg:x="2277" fg:w="27"/><text x="18.5069%" y="927.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="18.4814%" y="933" width="0.0160%" height="15" fill="rgb(214,40,45)" fg:x="2305" fg:w="2"/><text x="18.7314%" y="943.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (2 samples, 0.02%)</title><rect x="18.4814%" y="917" width="0.0160%" height="15" fill="rgb(244,29,26)" fg:x="2305" fg:w="2"/><text x="18.7314%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="18.5135%" y="917" width="0.0321%" height="15" fill="rgb(216,16,5)" fg:x="2309" fg:w="4"/><text x="18.7635%" y="927.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="18.5215%" y="901" width="0.0241%" height="15" fill="rgb(249,76,35)" fg:x="2310" fg:w="3"/><text x="18.7715%" y="911.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="18.5295%" y="885" width="0.0160%" height="15" fill="rgb(207,11,44)" fg:x="2311" fg:w="2"/><text x="18.7795%" y="895.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="18.5295%" y="869" width="0.0160%" height="15" fill="rgb(228,190,49)" fg:x="2311" fg:w="2"/><text x="18.7795%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="18.5295%" y="853" width="0.0160%" height="15" fill="rgb(214,173,12)" fg:x="2311" fg:w="2"/><text x="18.7795%" y="863.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="18.5295%" y="837" width="0.0160%" height="15" fill="rgb(218,26,35)" fg:x="2311" fg:w="2"/><text x="18.7795%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="18.5295%" y="821" width="0.0160%" height="15" fill="rgb(220,200,19)" fg:x="2311" fg:w="2"/><text x="18.7795%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (11 samples, 0.09%)</title><rect x="18.4734%" y="949" width="0.0882%" height="15" fill="rgb(239,95,49)" fg:x="2304" fg:w="11"/><text x="18.7234%" y="959.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (6 samples, 0.05%)</title><rect x="18.5135%" y="933" width="0.0481%" height="15" fill="rgb(235,85,53)" fg:x="2309" fg:w="6"/><text x="18.7635%" y="943.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (2 samples, 0.02%)</title><rect x="18.5455%" y="917" width="0.0160%" height="15" fill="rgb(233,133,31)" fg:x="2313" fg:w="2"/><text x="18.7955%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="18.5616%" y="949" width="0.0160%" height="15" fill="rgb(218,25,20)" fg:x="2315" fg:w="2"/><text x="18.8116%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (2 samples, 0.02%)</title><rect x="18.5616%" y="933" width="0.0160%" height="15" fill="rgb(252,210,38)" fg:x="2315" fg:w="2"/><text x="18.8116%" y="943.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="18.5616%" y="917" width="0.0160%" height="15" fill="rgb(242,134,21)" fg:x="2315" fg:w="2"/><text x="18.8116%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="18.5936%" y="805" width="0.0160%" height="15" fill="rgb(213,28,48)" fg:x="2319" fg:w="2"/><text x="18.8436%" y="815.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (8 samples, 0.06%)</title><rect x="18.5936%" y="869" width="0.0641%" height="15" fill="rgb(250,196,2)" fg:x="2319" fg:w="8"/><text x="18.8436%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (8 samples, 0.06%)</title><rect x="18.5936%" y="853" width="0.0641%" height="15" fill="rgb(227,5,17)" fg:x="2319" fg:w="8"/><text x="18.8436%" y="863.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (8 samples, 0.06%)</title><rect x="18.5936%" y="837" width="0.0641%" height="15" fill="rgb(221,226,24)" fg:x="2319" fg:w="8"/><text x="18.8436%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (8 samples, 0.06%)</title><rect x="18.5936%" y="821" width="0.0641%" height="15" fill="rgb(211,5,48)" fg:x="2319" fg:w="8"/><text x="18.8436%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (6 samples, 0.05%)</title><rect x="18.6097%" y="805" width="0.0481%" height="15" fill="rgb(219,150,6)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (6 samples, 0.05%)</title><rect x="18.6097%" y="789" width="0.0481%" height="15" fill="rgb(251,46,16)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (6 samples, 0.05%)</title><rect x="18.6097%" y="773" width="0.0481%" height="15" fill="rgb(220,204,40)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="783.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.05%)</title><rect x="18.6097%" y="757" width="0.0481%" height="15" fill="rgb(211,85,2)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (6 samples, 0.05%)</title><rect x="18.6097%" y="741" width="0.0481%" height="15" fill="rgb(229,17,7)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (6 samples, 0.05%)</title><rect x="18.6097%" y="725" width="0.0481%" height="15" fill="rgb(239,72,28)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.05%)</title><rect x="18.6097%" y="709" width="0.0481%" height="15" fill="rgb(230,47,54)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (6 samples, 0.05%)</title><rect x="18.6097%" y="693" width="0.0481%" height="15" fill="rgb(214,50,8)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (6 samples, 0.05%)</title><rect x="18.6097%" y="677" width="0.0481%" height="15" fill="rgb(216,198,43)" fg:x="2321" fg:w="6"/><text x="18.8597%" y="687.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (5 samples, 0.04%)</title><rect x="18.6177%" y="661" width="0.0401%" height="15" fill="rgb(234,20,35)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (5 samples, 0.04%)</title><rect x="18.6177%" y="645" width="0.0401%" height="15" fill="rgb(254,45,19)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::clear (5 samples, 0.04%)</title><rect x="18.6177%" y="629" width="0.0401%" height="15" fill="rgb(219,14,44)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::clear (5 samples, 0.04%)</title><rect x="18.6177%" y="613" width="0.0401%" height="15" fill="rgb(217,220,26)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.04%)</title><rect x="18.6177%" y="597" width="0.0401%" height="15" fill="rgb(213,158,28)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.04%)</title><rect x="18.6177%" y="581" width="0.0401%" height="15" fill="rgb(252,51,52)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (5 samples, 0.04%)</title><rect x="18.6177%" y="565" width="0.0401%" height="15" fill="rgb(246,89,16)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (5 samples, 0.04%)</title><rect x="18.6177%" y="549" width="0.0401%" height="15" fill="rgb(216,158,49)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="559.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.04%)</title><rect x="18.6177%" y="533" width="0.0401%" height="15" fill="rgb(236,107,19)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.04%)</title><rect x="18.6177%" y="517" width="0.0401%" height="15" fill="rgb(228,185,30)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.04%)</title><rect x="18.6177%" y="501" width="0.0401%" height="15" fill="rgb(246,134,8)" fg:x="2322" fg:w="5"/><text x="18.8677%" y="511.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="18.6257%" y="485" width="0.0321%" height="15" fill="rgb(214,143,50)" fg:x="2323" fg:w="4"/><text x="18.8757%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="18.6738%" y="805" width="0.0241%" height="15" fill="rgb(228,75,8)" fg:x="2329" fg:w="3"/><text x="18.9238%" y="815.50"></text></g><g><title>&lt;sharded_slab::page::stack::TransferStack&lt;C&gt; as sharded_slab::page::FreeList&lt;C&gt;&gt;::push (12 samples, 0.10%)</title><rect x="18.7219%" y="757" width="0.0962%" height="15" fill="rgb(207,175,4)" fg:x="2335" fg:w="12"/><text x="18.9719%" y="767.50"></text></g><g><title>sharded_slab::page::stack::TransferStack&lt;C&gt;::push (12 samples, 0.10%)</title><rect x="18.7219%" y="741" width="0.0962%" height="15" fill="rgb(205,108,24)" fg:x="2335" fg:w="12"/><text x="18.9719%" y="751.50"></text></g><g><title>&lt;sharded_slab::page::stack::TransferStack&lt;C&gt; as sharded_slab::page::FreeList&lt;C&gt;&gt;::push::_{{closure}} (3 samples, 0.02%)</title><rect x="18.7941%" y="725" width="0.0241%" height="15" fill="rgb(244,120,49)" fg:x="2344" fg:w="3"/><text x="19.0441%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::set_next (3 samples, 0.02%)</title><rect x="18.7941%" y="709" width="0.0241%" height="15" fill="rgb(223,47,38)" fg:x="2344" fg:w="3"/><text x="19.0441%" y="719.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.02%)</title><rect x="18.7941%" y="693" width="0.0241%" height="15" fill="rgb(229,179,11)" fg:x="2344" fg:w="3"/><text x="19.0441%" y="703.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::set_next::_{{closure}} (3 samples, 0.02%)</title><rect x="18.7941%" y="677" width="0.0241%" height="15" fill="rgb(231,122,1)" fg:x="2344" fg:w="3"/><text x="19.0441%" y="687.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="18.8502%" y="485" width="0.0401%" height="15" fill="rgb(245,119,9)" fg:x="2351" fg:w="5"/><text x="19.1002%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (17 samples, 0.14%)</title><rect x="18.8342%" y="597" width="0.1363%" height="15" fill="rgb(241,163,25)" fg:x="2349" fg:w="17"/><text x="19.0842%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (17 samples, 0.14%)</title><rect x="18.8342%" y="581" width="0.1363%" height="15" fill="rgb(217,214,3)" fg:x="2349" fg:w="17"/><text x="19.0842%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (17 samples, 0.14%)</title><rect x="18.8342%" y="565" width="0.1363%" height="15" fill="rgb(240,86,28)" fg:x="2349" fg:w="17"/><text x="19.0842%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (17 samples, 0.14%)</title><rect x="18.8342%" y="549" width="0.1363%" height="15" fill="rgb(215,47,9)" fg:x="2349" fg:w="17"/><text x="19.0842%" y="559.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.12%)</title><rect x="18.8502%" y="533" width="0.1203%" height="15" fill="rgb(252,25,45)" fg:x="2351" fg:w="15"/><text x="19.1002%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.12%)</title><rect x="18.8502%" y="517" width="0.1203%" height="15" fill="rgb(251,164,9)" fg:x="2351" fg:w="15"/><text x="19.1002%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.12%)</title><rect x="18.8502%" y="501" width="0.1203%" height="15" fill="rgb(233,194,0)" fg:x="2351" fg:w="15"/><text x="19.1002%" y="511.50"></text></g><g><title>cfree (10 samples, 0.08%)</title><rect x="18.8903%" y="485" width="0.0802%" height="15" fill="rgb(249,111,24)" fg:x="2356" fg:w="10"/><text x="19.1403%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="18.9705%" y="565" width="0.0160%" height="15" fill="rgb(250,223,3)" fg:x="2366" fg:w="2"/><text x="19.2205%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="18.9705%" y="549" width="0.0160%" height="15" fill="rgb(236,178,37)" fg:x="2366" fg:w="2"/><text x="19.2205%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.42%)</title><rect x="18.5856%" y="901" width="0.4250%" height="15" fill="rgb(241,158,50)" fg:x="2318" fg:w="53"/><text x="18.8356%" y="911.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::_{{closure}} (52 samples, 0.42%)</title><rect x="18.5936%" y="885" width="0.4169%" height="15" fill="rgb(213,121,41)" fg:x="2319" fg:w="52"/><text x="18.8436%" y="895.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_remote (44 samples, 0.35%)</title><rect x="18.6578%" y="869" width="0.3528%" height="15" fill="rgb(240,92,3)" fg:x="2327" fg:w="44"/><text x="18.9078%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (42 samples, 0.34%)</title><rect x="18.6738%" y="853" width="0.3368%" height="15" fill="rgb(205,123,3)" fg:x="2329" fg:w="42"/><text x="18.9238%" y="863.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (42 samples, 0.34%)</title><rect x="18.6738%" y="837" width="0.3368%" height="15" fill="rgb(205,97,47)" fg:x="2329" fg:w="42"/><text x="18.9238%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (42 samples, 0.34%)</title><rect x="18.6738%" y="821" width="0.3368%" height="15" fill="rgb(247,152,14)" fg:x="2329" fg:w="42"/><text x="18.9238%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (39 samples, 0.31%)</title><rect x="18.6979%" y="805" width="0.3127%" height="15" fill="rgb(248,195,53)" fg:x="2332" fg:w="39"/><text x="18.9479%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (39 samples, 0.31%)</title><rect x="18.6979%" y="789" width="0.3127%" height="15" fill="rgb(226,201,16)" fg:x="2332" fg:w="39"/><text x="18.9479%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (39 samples, 0.31%)</title><rect x="18.6979%" y="773" width="0.3127%" height="15" fill="rgb(205,98,0)" fg:x="2332" fg:w="39"/><text x="18.9479%" y="783.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (24 samples, 0.19%)</title><rect x="18.8182%" y="757" width="0.1924%" height="15" fill="rgb(214,191,48)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (24 samples, 0.19%)</title><rect x="18.8182%" y="741" width="0.1924%" height="15" fill="rgb(237,112,39)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (24 samples, 0.19%)</title><rect x="18.8182%" y="725" width="0.1924%" height="15" fill="rgb(247,203,27)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.19%)</title><rect x="18.8182%" y="709" width="0.1924%" height="15" fill="rgb(235,124,28)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (24 samples, 0.19%)</title><rect x="18.8182%" y="693" width="0.1924%" height="15" fill="rgb(208,207,46)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (24 samples, 0.19%)</title><rect x="18.8182%" y="677" width="0.1924%" height="15" fill="rgb(234,176,4)" fg:x="2347" fg:w="24"/><text x="19.0682%" y="687.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (23 samples, 0.18%)</title><rect x="18.8262%" y="661" width="0.1844%" height="15" fill="rgb(230,133,28)" fg:x="2348" fg:w="23"/><text x="19.0762%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (23 samples, 0.18%)</title><rect x="18.8262%" y="645" width="0.1844%" height="15" fill="rgb(211,137,40)" fg:x="2348" fg:w="23"/><text x="19.0762%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::clear (23 samples, 0.18%)</title><rect x="18.8262%" y="629" width="0.1844%" height="15" fill="rgb(254,35,13)" fg:x="2348" fg:w="23"/><text x="19.0762%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::clear (23 samples, 0.18%)</title><rect x="18.8262%" y="613" width="0.1844%" height="15" fill="rgb(225,49,51)" fg:x="2348" fg:w="23"/><text x="19.0762%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (5 samples, 0.04%)</title><rect x="18.9705%" y="597" width="0.0401%" height="15" fill="rgb(251,10,15)" fg:x="2366" fg:w="5"/><text x="19.2205%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="18.9705%" y="581" width="0.0401%" height="15" fill="rgb(228,207,15)" fg:x="2366" fg:w="5"/><text x="19.2205%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (3 samples, 0.02%)</title><rect x="18.9865%" y="565" width="0.0241%" height="15" fill="rgb(241,99,19)" fg:x="2368" fg:w="3"/><text x="19.2365%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.02%)</title><rect x="18.9865%" y="549" width="0.0241%" height="15" fill="rgb(207,104,49)" fg:x="2368" fg:w="3"/><text x="19.2365%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="18.9865%" y="533" width="0.0241%" height="15" fill="rgb(234,99,18)" fg:x="2368" fg:w="3"/><text x="19.2365%" y="543.50"></text></g><g><title>sharded_slab::tid::REGISTRATION::__getit (3 samples, 0.02%)</title><rect x="19.0186%" y="869" width="0.0241%" height="15" fill="rgb(213,191,49)" fg:x="2372" fg:w="3"/><text x="19.2686%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="19.0266%" y="853" width="0.0160%" height="15" fill="rgb(210,226,19)" fg:x="2373" fg:w="2"/><text x="19.2766%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="19.0266%" y="837" width="0.0160%" height="15" fill="rgb(229,97,18)" fg:x="2373" fg:w="2"/><text x="19.2766%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="19.0266%" y="821" width="0.0160%" height="15" fill="rgb(211,167,15)" fg:x="2373" fg:w="2"/><text x="19.2766%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (59 samples, 0.47%)</title><rect x="18.5776%" y="949" width="0.4731%" height="15" fill="rgb(210,169,34)" fg:x="2317" fg:w="59"/><text x="18.8276%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (59 samples, 0.47%)</title><rect x="18.5776%" y="933" width="0.4731%" height="15" fill="rgb(241,121,31)" fg:x="2317" fg:w="59"/><text x="18.8276%" y="943.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (59 samples, 0.47%)</title><rect x="18.5776%" y="917" width="0.4731%" height="15" fill="rgb(232,40,11)" fg:x="2317" fg:w="59"/><text x="18.8276%" y="927.50"></text></g><g><title>sharded_slab::tid::Tid&lt;C&gt;::is_current (4 samples, 0.03%)</title><rect x="19.0186%" y="901" width="0.0321%" height="15" fill="rgb(205,86,26)" fg:x="2372" fg:w="4"/><text x="19.2686%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.03%)</title><rect x="19.0186%" y="885" width="0.0321%" height="15" fill="rgb(231,126,28)" fg:x="2372" fg:w="4"/><text x="19.2686%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (584 samples, 4.68%)</title><rect x="14.3842%" y="965" width="4.6825%" height="15" fill="rgb(219,221,18)" fg:x="1794" fg:w="584"/><text x="14.6342%" y="975.50">&lt;trac..</text></g><g><title>tracing_subscriber::registry::sharded::CloseGuard::is_closing (2 samples, 0.02%)</title><rect x="19.0507%" y="949" width="0.0160%" height="15" fill="rgb(211,40,0)" fg:x="2376" fg:w="2"/><text x="19.3007%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_futures::Instrumented&lt;futures_util::future::try_future::AndThen&lt;core::future::from_generator::GenFuture&lt;fred::utils::wait_for_response::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;fred::utils::request_response&lt;fred::commands::one_arg_value_cmd::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,fred::utils::request_response&lt;fred::commands::one_arg_value_cmd::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (596 samples, 4.78%)</title><rect x="14.3441%" y="997" width="4.7787%" height="15" fill="rgb(239,85,43)" fg:x="1789" fg:w="596"/><text x="14.5941%" y="1007.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (594 samples, 4.76%)</title><rect x="14.3602%" y="981" width="4.7627%" height="15" fill="rgb(231,55,21)" fg:x="1791" fg:w="594"/><text x="14.6102%" y="991.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing::span::Inner&gt;&gt; (7 samples, 0.06%)</title><rect x="19.0667%" y="965" width="0.0561%" height="15" fill="rgb(225,184,43)" fg:x="2378" fg:w="7"/><text x="19.3167%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Inner&gt; (6 samples, 0.05%)</title><rect x="19.0747%" y="949" width="0.0481%" height="15" fill="rgb(251,158,41)" fg:x="2379" fg:w="6"/><text x="19.3247%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::Dispatch&gt; (6 samples, 0.05%)</title><rect x="19.0747%" y="933" width="0.0481%" height="15" fill="rgb(234,159,37)" fg:x="2379" fg:w="6"/><text x="19.3247%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt;&gt; (6 samples, 0.05%)</title><rect x="19.0747%" y="917" width="0.0481%" height="15" fill="rgb(216,204,22)" fg:x="2379" fg:w="6"/><text x="19.3247%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="19.0747%" y="901" width="0.0481%" height="15" fill="rgb(214,17,3)" fg:x="2379" fg:w="6"/><text x="19.3247%" y="911.50"></text></g><g><title>__libc_malloc (13 samples, 0.10%)</title><rect x="19.1389%" y="917" width="0.1042%" height="15" fill="rgb(212,111,17)" fg:x="2387" fg:w="13"/><text x="19.3889%" y="927.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="19.1709%" y="901" width="0.0722%" height="15" fill="rgb(221,157,24)" fg:x="2391" fg:w="9"/><text x="19.4209%" y="911.50"></text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}}::_{{closure}} (17 samples, 0.14%)</title><rect x="19.1228%" y="997" width="0.1363%" height="15" fill="rgb(252,16,13)" fg:x="2385" fg:w="17"/><text x="19.3728%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.12%)</title><rect x="19.1389%" y="981" width="0.1203%" height="15" fill="rgb(221,62,2)" fg:x="2387" fg:w="15"/><text x="19.3889%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.12%)</title><rect x="19.1389%" y="965" width="0.1203%" height="15" fill="rgb(247,87,22)" fg:x="2387" fg:w="15"/><text x="19.3889%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.12%)</title><rect x="19.1389%" y="949" width="0.1203%" height="15" fill="rgb(215,73,9)" fg:x="2387" fg:w="15"/><text x="19.3889%" y="959.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.12%)</title><rect x="19.1389%" y="933" width="0.1203%" height="15" fill="rgb(207,175,33)" fg:x="2387" fg:w="15"/><text x="19.3889%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.12%)</title><rect x="19.2752%" y="981" width="0.1203%" height="15" fill="rgb(243,129,54)" fg:x="2404" fg:w="15"/><text x="19.5252%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.12%)</title><rect x="19.2752%" y="965" width="0.1203%" height="15" fill="rgb(227,119,45)" fg:x="2404" fg:w="15"/><text x="19.5252%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.12%)</title><rect x="19.2752%" y="949" width="0.1203%" height="15" fill="rgb(205,109,36)" fg:x="2404" fg:w="15"/><text x="19.5252%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.12%)</title><rect x="19.2752%" y="933" width="0.1203%" height="15" fill="rgb(205,6,39)" fg:x="2404" fg:w="15"/><text x="19.5252%" y="943.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.12%)</title><rect x="19.2752%" y="917" width="0.1203%" height="15" fill="rgb(221,32,16)" fg:x="2404" fg:w="15"/><text x="19.5252%" y="927.50"></text></g><g><title>__libc_malloc (14 samples, 0.11%)</title><rect x="19.2832%" y="901" width="0.1123%" height="15" fill="rgb(228,144,50)" fg:x="2405" fg:w="14"/><text x="19.5332%" y="911.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="19.3393%" y="885" width="0.0561%" height="15" fill="rgb(229,201,53)" fg:x="2412" fg:w="7"/><text x="19.5893%" y="895.50"></text></g><g><title>fred::protocol::types::RedisCommand::new (27 samples, 0.22%)</title><rect x="19.2672%" y="997" width="0.2165%" height="15" fill="rgb(249,153,27)" fg:x="2403" fg:w="27"/><text x="19.5172%" y="1007.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.09%)</title><rect x="19.3954%" y="981" width="0.0882%" height="15" fill="rgb(227,106,25)" fg:x="2419" fg:w="11"/><text x="19.6454%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (11 samples, 0.09%)</title><rect x="19.3954%" y="965" width="0.0882%" height="15" fill="rgb(230,65,29)" fg:x="2419" fg:w="11"/><text x="19.6454%" y="975.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.09%)</title><rect x="19.3954%" y="949" width="0.0882%" height="15" fill="rgb(221,57,46)" fg:x="2419" fg:w="11"/><text x="19.6454%" y="959.50"></text></g><g><title>__clock_gettime (10 samples, 0.08%)</title><rect x="19.4035%" y="933" width="0.0802%" height="15" fill="rgb(229,161,17)" fg:x="2420" fg:w="10"/><text x="19.6535%" y="943.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.08%)</title><rect x="19.4035%" y="917" width="0.0802%" height="15" fill="rgb(222,213,11)" fg:x="2420" fg:w="10"/><text x="19.6535%" y="927.50"></text></g><g><title>[[vdso]] (8 samples, 0.06%)</title><rect x="19.4195%" y="901" width="0.0641%" height="15" fill="rgb(235,35,13)" fg:x="2422" fg:w="8"/><text x="19.6695%" y="911.50"></text></g><g><title>fred::protocol::types::RedisCommandKind::to_str_debug (3 samples, 0.02%)</title><rect x="19.4836%" y="997" width="0.0241%" height="15" fill="rgb(233,158,34)" fg:x="2430" fg:w="3"/><text x="19.7336%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.05%)</title><rect x="19.5077%" y="981" width="0.0481%" height="15" fill="rgb(215,151,48)" fg:x="2433" fg:w="6"/><text x="19.7577%" y="991.50"></text></g><g><title>fred::protocol::utils::args_size (8 samples, 0.06%)</title><rect x="19.5077%" y="997" width="0.0641%" height="15" fill="rgb(229,84,14)" fg:x="2433" fg:w="8"/><text x="19.7577%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="19.5558%" y="981" width="0.0160%" height="15" fill="rgb(229,68,14)" fg:x="2439" fg:w="2"/><text x="19.8058%" y="991.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="19.6119%" y="965" width="0.0160%" height="15" fill="rgb(243,106,26)" fg:x="2446" fg:w="2"/><text x="19.8619%" y="975.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.05%)</title><rect x="19.5879%" y="981" width="0.0481%" height="15" fill="rgb(206,45,38)" fg:x="2443" fg:w="6"/><text x="19.8379%" y="991.50"></text></g><g><title>alloc::string::String::as_str (15 samples, 0.12%)</title><rect x="19.6360%" y="981" width="0.1203%" height="15" fill="rgb(226,6,15)" fg:x="2449" fg:w="15"/><text x="19.8860%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (15 samples, 0.12%)</title><rect x="19.6360%" y="965" width="0.1203%" height="15" fill="rgb(232,22,54)" fg:x="2449" fg:w="15"/><text x="19.8860%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.12%)</title><rect x="19.6360%" y="949" width="0.1203%" height="15" fill="rgb(229,222,32)" fg:x="2449" fg:w="15"/><text x="19.8860%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.10%)</title><rect x="19.6600%" y="933" width="0.0962%" height="15" fill="rgb(228,62,29)" fg:x="2452" fg:w="12"/><text x="19.9100%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (17 samples, 0.14%)</title><rect x="19.7563%" y="981" width="0.1363%" height="15" fill="rgb(251,103,34)" fg:x="2464" fg:w="17"/><text x="20.0063%" y="991.50"></text></g><g><title>tracing::span::Inner::new (10 samples, 0.08%)</title><rect x="19.9647%" y="869" width="0.0802%" height="15" fill="rgb(233,12,30)" fg:x="2490" fg:w="10"/><text x="20.2147%" y="879.50"></text></g><g><title>&lt;tracing_core::dispatcher::Dispatch as core::clone::Clone&gt;::clone (10 samples, 0.08%)</title><rect x="19.9647%" y="853" width="0.0802%" height="15" fill="rgb(238,52,0)" fg:x="2490" fg:w="10"/><text x="20.2147%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.08%)</title><rect x="19.9647%" y="837" width="0.0802%" height="15" fill="rgb(223,98,5)" fg:x="2490" fg:w="10"/><text x="20.2147%" y="847.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="20.1411%" y="565" width="0.0241%" height="15" fill="rgb(228,75,37)" fg:x="2512" fg:w="3"/><text x="20.3911%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="20.1411%" y="661" width="0.0321%" height="15" fill="rgb(205,115,49)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="20.1411%" y="645" width="0.0321%" height="15" fill="rgb(250,154,43)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.03%)</title><rect x="20.1411%" y="629" width="0.0321%" height="15" fill="rgb(226,43,29)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="20.1411%" y="613" width="0.0321%" height="15" fill="rgb(249,228,39)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="20.1411%" y="597" width="0.0321%" height="15" fill="rgb(216,79,43)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="20.1411%" y="581" width="0.0321%" height="15" fill="rgb(228,95,12)" fg:x="2512" fg:w="4"/><text x="20.3911%" y="591.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (10 samples, 0.08%)</title><rect x="20.1411%" y="789" width="0.0802%" height="15" fill="rgb(249,221,15)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.08%)</title><rect x="20.1411%" y="773" width="0.0802%" height="15" fill="rgb(233,34,13)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (10 samples, 0.08%)</title><rect x="20.1411%" y="757" width="0.0802%" height="15" fill="rgb(214,103,39)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10 samples, 0.08%)</title><rect x="20.1411%" y="741" width="0.0802%" height="15" fill="rgb(251,126,39)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.08%)</title><rect x="20.1411%" y="725" width="0.0802%" height="15" fill="rgb(214,216,36)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.08%)</title><rect x="20.1411%" y="709" width="0.0802%" height="15" fill="rgb(220,221,8)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.08%)</title><rect x="20.1411%" y="693" width="0.0802%" height="15" fill="rgb(240,216,3)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.08%)</title><rect x="20.1411%" y="677" width="0.0802%" height="15" fill="rgb(232,218,17)" fg:x="2512" fg:w="10"/><text x="20.3911%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.05%)</title><rect x="20.1732%" y="661" width="0.0481%" height="15" fill="rgb(229,163,45)" fg:x="2516" fg:w="6"/><text x="20.4232%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.05%)</title><rect x="20.1732%" y="645" width="0.0481%" height="15" fill="rgb(231,110,42)" fg:x="2516" fg:w="6"/><text x="20.4232%" y="655.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="20.1732%" y="629" width="0.0481%" height="15" fill="rgb(208,170,48)" fg:x="2516" fg:w="6"/><text x="20.4232%" y="639.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::span_builder (13 samples, 0.10%)</title><rect x="20.1251%" y="805" width="0.1042%" height="15" fill="rgb(239,116,25)" fg:x="2510" fg:w="13"/><text x="20.3751%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (2 samples, 0.02%)</title><rect x="20.2694%" y="757" width="0.0160%" height="15" fill="rgb(219,200,50)" fg:x="2528" fg:w="2"/><text x="20.5194%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (2 samples, 0.02%)</title><rect x="20.2694%" y="741" width="0.0160%" height="15" fill="rgb(245,200,0)" fg:x="2528" fg:w="2"/><text x="20.5194%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="20.2694%" y="725" width="0.0160%" height="15" fill="rgb(245,119,33)" fg:x="2528" fg:w="2"/><text x="20.5194%" y="735.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (2 samples, 0.02%)</title><rect x="20.3015%" y="629" width="0.0160%" height="15" fill="rgb(231,125,12)" fg:x="2532" fg:w="2"/><text x="20.5515%" y="639.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::id_generator::IdGenerator&gt;::new_span_id::_{{closure}} (5 samples, 0.04%)</title><rect x="20.2935%" y="725" width="0.0401%" height="15" fill="rgb(216,96,41)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="735.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.04%)</title><rect x="20.2935%" y="709" width="0.0401%" height="15" fill="rgb(248,43,45)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.04%)</title><rect x="20.2935%" y="693" width="0.0401%" height="15" fill="rgb(217,222,7)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.2935%" y="677" width="0.0401%" height="15" fill="rgb(233,28,6)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.2935%" y="661" width="0.0401%" height="15" fill="rgb(231,218,15)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.2935%" y="645" width="0.0401%" height="15" fill="rgb(226,171,48)" fg:x="2531" fg:w="5"/><text x="20.5435%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.02%)</title><rect x="20.3175%" y="629" width="0.0160%" height="15" fill="rgb(235,201,9)" fg:x="2534" fg:w="2"/><text x="20.5675%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.02%)</title><rect x="20.3175%" y="613" width="0.0160%" height="15" fill="rgb(217,80,15)" fg:x="2534" fg:w="2"/><text x="20.5675%" y="623.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.02%)</title><rect x="20.3175%" y="597" width="0.0160%" height="15" fill="rgb(219,152,8)" fg:x="2534" fg:w="2"/><text x="20.5675%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.02%)</title><rect x="20.3175%" y="581" width="0.0160%" height="15" fill="rgb(243,107,38)" fg:x="2534" fg:w="2"/><text x="20.5675%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide (2 samples, 0.02%)</title><rect x="20.3175%" y="565" width="0.0160%" height="15" fill="rgb(231,17,5)" fg:x="2534" fg:w="2"/><text x="20.5675%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.10%)</title><rect x="20.2534%" y="789" width="0.1042%" height="15" fill="rgb(209,25,54)" fg:x="2526" fg:w="13"/><text x="20.5034%" y="799.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id::_{{closure}} (13 samples, 0.10%)</title><rect x="20.2534%" y="773" width="0.1042%" height="15" fill="rgb(219,0,2)" fg:x="2526" fg:w="13"/><text x="20.5034%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.06%)</title><rect x="20.2935%" y="757" width="0.0641%" height="15" fill="rgb(246,9,5)" fg:x="2531" fg:w="8"/><text x="20.5435%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.06%)</title><rect x="20.2935%" y="741" width="0.0641%" height="15" fill="rgb(226,159,4)" fg:x="2531" fg:w="8"/><text x="20.5435%" y="751.50"></text></g><g><title>opentelemetry::sdk::trace::id_generator::CURRENT_RNG::__getit (3 samples, 0.02%)</title><rect x="20.3335%" y="725" width="0.0241%" height="15" fill="rgb(219,175,34)" fg:x="2536" fg:w="3"/><text x="20.5835%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="20.3335%" y="709" width="0.0241%" height="15" fill="rgb(236,10,46)" fg:x="2536" fg:w="3"/><text x="20.5835%" y="719.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="20.3416%" y="693" width="0.0160%" height="15" fill="rgb(240,211,16)" fg:x="2537" fg:w="2"/><text x="20.5916%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="20.3416%" y="677" width="0.0160%" height="15" fill="rgb(205,3,43)" fg:x="2537" fg:w="2"/><text x="20.5916%" y="687.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (2 samples, 0.02%)</title><rect x="20.3977%" y="757" width="0.0160%" height="15" fill="rgb(245,7,22)" fg:x="2544" fg:w="2"/><text x="20.6477%" y="767.50"></text></g><g><title>alloc::rc::is_dangling (2 samples, 0.02%)</title><rect x="20.3977%" y="741" width="0.0160%" height="15" fill="rgb(239,132,32)" fg:x="2544" fg:w="2"/><text x="20.6477%" y="751.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id (44 samples, 0.35%)</title><rect x="20.2293%" y="805" width="0.3528%" height="15" fill="rgb(228,202,34)" fg:x="2523" fg:w="44"/><text x="20.4793%" y="815.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (28 samples, 0.22%)</title><rect x="20.3576%" y="789" width="0.2245%" height="15" fill="rgb(254,200,22)" fg:x="2539" fg:w="28"/><text x="20.6076%" y="799.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (28 samples, 0.22%)</title><rect x="20.3576%" y="773" width="0.2245%" height="15" fill="rgb(219,10,39)" fg:x="2539" fg:w="28"/><text x="20.6076%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.17%)</title><rect x="20.4137%" y="757" width="0.1684%" height="15" fill="rgb(226,210,39)" fg:x="2546" fg:w="21"/><text x="20.6637%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.17%)</title><rect x="20.4137%" y="741" width="0.1684%" height="15" fill="rgb(208,219,16)" fg:x="2546" fg:w="21"/><text x="20.6637%" y="751.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::id_generator::IdGenerator&gt;::new_trace_id::_{{closure}} (6 samples, 0.05%)</title><rect x="20.6462%" y="725" width="0.0481%" height="15" fill="rgb(216,158,51)" fg:x="2575" fg:w="6"/><text x="20.8962%" y="735.50"></text></g><g><title>rand::rng::Rng::gen (6 samples, 0.05%)</title><rect x="20.6462%" y="709" width="0.0481%" height="15" fill="rgb(233,14,44)" fg:x="2575" fg:w="6"/><text x="20.8962%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u128&gt; for rand::distributions::Standard&gt;::sample (6 samples, 0.05%)</title><rect x="20.6462%" y="693" width="0.0481%" height="15" fill="rgb(237,97,39)" fg:x="2575" fg:w="6"/><text x="20.8962%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.6543%" y="677" width="0.0401%" height="15" fill="rgb(218,198,43)" fg:x="2576" fg:w="5"/><text x="20.9043%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.6543%" y="661" width="0.0401%" height="15" fill="rgb(231,104,20)" fg:x="2576" fg:w="5"/><text x="20.9043%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="20.6543%" y="645" width="0.0401%" height="15" fill="rgb(254,36,13)" fg:x="2576" fg:w="5"/><text x="20.9043%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3 samples, 0.02%)</title><rect x="20.6703%" y="629" width="0.0241%" height="15" fill="rgb(248,14,50)" fg:x="2578" fg:w="3"/><text x="20.9203%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.02%)</title><rect x="20.6703%" y="613" width="0.0241%" height="15" fill="rgb(217,107,29)" fg:x="2578" fg:w="3"/><text x="20.9203%" y="623.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.02%)</title><rect x="20.6703%" y="597" width="0.0241%" height="15" fill="rgb(251,169,33)" fg:x="2578" fg:w="3"/><text x="20.9203%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (3 samples, 0.02%)</title><rect x="20.6703%" y="581" width="0.0241%" height="15" fill="rgb(217,108,32)" fg:x="2578" fg:w="3"/><text x="20.9203%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide (3 samples, 0.02%)</title><rect x="20.6703%" y="565" width="0.0241%" height="15" fill="rgb(219,66,42)" fg:x="2578" fg:w="3"/><text x="20.9203%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2 samples, 0.02%)</title><rect x="20.6783%" y="549" width="0.0160%" height="15" fill="rgb(206,180,7)" fg:x="2579" fg:w="2"/><text x="20.9283%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2 samples, 0.02%)</title><rect x="20.6783%" y="533" width="0.0160%" height="15" fill="rgb(208,226,31)" fg:x="2579" fg:w="2"/><text x="20.9283%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2 samples, 0.02%)</title><rect x="20.6783%" y="517" width="0.0160%" height="15" fill="rgb(218,26,49)" fg:x="2579" fg:w="2"/><text x="20.9283%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.10%)</title><rect x="20.5981%" y="789" width="0.1042%" height="15" fill="rgb(233,197,48)" fg:x="2569" fg:w="13"/><text x="20.8481%" y="799.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_trace_id::_{{closure}} (13 samples, 0.10%)</title><rect x="20.5981%" y="773" width="0.1042%" height="15" fill="rgb(252,181,51)" fg:x="2569" fg:w="13"/><text x="20.8481%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.08%)</title><rect x="20.6222%" y="757" width="0.0802%" height="15" fill="rgb(253,90,19)" fg:x="2572" fg:w="10"/><text x="20.8722%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.06%)</title><rect x="20.6382%" y="741" width="0.0641%" height="15" fill="rgb(215,171,30)" fg:x="2574" fg:w="8"/><text x="20.8882%" y="751.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_trace_id (21 samples, 0.17%)</title><rect x="20.5821%" y="805" width="0.1684%" height="15" fill="rgb(214,222,9)" fg:x="2567" fg:w="21"/><text x="20.8321%" y="815.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (6 samples, 0.05%)</title><rect x="20.7024%" y="789" width="0.0481%" height="15" fill="rgb(223,3,22)" fg:x="2582" fg:w="6"/><text x="20.9524%" y="799.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.05%)</title><rect x="20.7024%" y="773" width="0.0481%" height="15" fill="rgb(225,196,46)" fg:x="2582" fg:w="6"/><text x="20.9524%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="20.7344%" y="757" width="0.0160%" height="15" fill="rgb(209,110,37)" fg:x="2586" fg:w="2"/><text x="20.9844%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="20.7344%" y="741" width="0.0160%" height="15" fill="rgb(249,89,12)" fg:x="2586" fg:w="2"/><text x="20.9844%" y="751.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="20.7505%" y="805" width="0.0722%" height="15" fill="rgb(226,27,33)" fg:x="2588" fg:w="9"/><text x="21.0005%" y="815.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::has_active_span (7 samples, 0.06%)</title><rect x="20.8467%" y="773" width="0.0561%" height="15" fill="rgb(213,82,22)" fg:x="2600" fg:w="7"/><text x="21.0967%" y="783.50"></text></g><g><title>opentelemetry::context::Context::get (3 samples, 0.02%)</title><rect x="20.8788%" y="757" width="0.0241%" height="15" fill="rgb(248,140,0)" fg:x="2604" fg:w="3"/><text x="21.1288%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="20.8788%" y="741" width="0.0241%" height="15" fill="rgb(228,106,3)" fg:x="2604" fg:w="3"/><text x="21.1288%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="20.8788%" y="725" width="0.0241%" height="15" fill="rgb(209,23,37)" fg:x="2604" fg:w="3"/><text x="21.1288%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.02%)</title><rect x="20.8788%" y="709" width="0.0241%" height="15" fill="rgb(241,93,50)" fg:x="2604" fg:w="3"/><text x="21.1288%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.02%)</title><rect x="20.8788%" y="693" width="0.0241%" height="15" fill="rgb(253,46,43)" fg:x="2604" fg:w="3"/><text x="21.1288%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (13 samples, 0.10%)</title><rect x="20.8307%" y="805" width="0.1042%" height="15" fill="rgb(226,206,43)" fg:x="2598" fg:w="13"/><text x="21.0807%" y="815.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span::_{{closure}} (12 samples, 0.10%)</title><rect x="20.8387%" y="789" width="0.0962%" height="15" fill="rgb(217,54,7)" fg:x="2599" fg:w="12"/><text x="21.0887%" y="799.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::remote_span_context (4 samples, 0.03%)</title><rect x="20.9028%" y="773" width="0.0321%" height="15" fill="rgb(223,5,52)" fg:x="2607" fg:w="4"/><text x="21.1528%" y="783.50"></text></g><g><title>opentelemetry::context::Context::get (2 samples, 0.02%)</title><rect x="20.9189%" y="757" width="0.0160%" height="15" fill="rgb(206,52,46)" fg:x="2609" fg:w="2"/><text x="21.1689%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="20.9189%" y="741" width="0.0160%" height="15" fill="rgb(253,136,11)" fg:x="2609" fg:w="2"/><text x="21.1689%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="20.9189%" y="725" width="0.0160%" height="15" fill="rgb(208,106,33)" fg:x="2609" fg:w="2"/><text x="21.1689%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (2 samples, 0.02%)</title><rect x="20.9189%" y="709" width="0.0160%" height="15" fill="rgb(206,54,4)" fg:x="2609" fg:w="2"/><text x="21.1689%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="20.9189%" y="693" width="0.0160%" height="15" fill="rgb(213,3,15)" fg:x="2609" fg:w="2"/><text x="21.1689%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (2 samples, 0.02%)</title><rect x="20.9349%" y="805" width="0.0160%" height="15" fill="rgb(252,211,39)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (2 samples, 0.02%)</title><rect x="20.9349%" y="789" width="0.0160%" height="15" fill="rgb(223,6,36)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="20.9349%" y="773" width="0.0160%" height="15" fill="rgb(252,169,45)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="783.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="20.9349%" y="757" width="0.0160%" height="15" fill="rgb(212,48,26)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="20.9349%" y="741" width="0.0160%" height="15" fill="rgb(251,102,48)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="20.9349%" y="725" width="0.0160%" height="15" fill="rgb(243,208,16)" fg:x="2611" fg:w="2"/><text x="21.1849%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (4 samples, 0.03%)</title><rect x="20.9509%" y="805" width="0.0321%" height="15" fill="rgb(219,96,24)" fg:x="2613" fg:w="4"/><text x="21.2009%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (4 samples, 0.03%)</title><rect x="20.9509%" y="789" width="0.0321%" height="15" fill="rgb(219,33,29)" fg:x="2613" fg:w="4"/><text x="21.2009%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="20.9509%" y="773" width="0.0321%" height="15" fill="rgb(223,176,5)" fg:x="2613" fg:w="4"/><text x="21.2009%" y="783.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (3 samples, 0.02%)</title><rect x="20.9589%" y="757" width="0.0241%" height="15" fill="rgb(228,140,14)" fg:x="2614" fg:w="3"/><text x="21.2089%" y="767.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (3 samples, 0.02%)</title><rect x="20.9589%" y="741" width="0.0241%" height="15" fill="rgb(217,179,31)" fg:x="2614" fg:w="3"/><text x="21.2089%" y="751.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.02%)</title><rect x="20.9589%" y="725" width="0.0241%" height="15" fill="rgb(230,9,30)" fg:x="2614" fg:w="3"/><text x="21.2089%" y="735.50"></text></g><g><title>__GI___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="20.9589%" y="709" width="0.0241%" height="15" fill="rgb(230,136,20)" fg:x="2614" fg:w="3"/><text x="21.2089%" y="719.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::with_span_id (7 samples, 0.06%)</title><rect x="20.9830%" y="805" width="0.0561%" height="15" fill="rgb(215,210,22)" fg:x="2617" fg:w="7"/><text x="21.2330%" y="815.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::with_start_time (3 samples, 0.02%)</title><rect x="21.0391%" y="805" width="0.0241%" height="15" fill="rgb(218,43,5)" fg:x="2624" fg:w="3"/><text x="21.2891%" y="815.50"></text></g><g><title>std::time::SystemTime::now (20 samples, 0.16%)</title><rect x="21.0632%" y="805" width="0.1604%" height="15" fill="rgb(216,11,5)" fg:x="2627" fg:w="20"/><text x="21.3132%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (18 samples, 0.14%)</title><rect x="21.0792%" y="789" width="0.1443%" height="15" fill="rgb(209,82,29)" fg:x="2629" fg:w="18"/><text x="21.3292%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.14%)</title><rect x="21.0792%" y="773" width="0.1443%" height="15" fill="rgb(244,115,12)" fg:x="2629" fg:w="18"/><text x="21.3292%" y="783.50"></text></g><g><title>__clock_gettime (9 samples, 0.07%)</title><rect x="21.1514%" y="757" width="0.0722%" height="15" fill="rgb(222,82,18)" fg:x="2638" fg:w="9"/><text x="21.4014%" y="767.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.07%)</title><rect x="21.1514%" y="741" width="0.0722%" height="15" fill="rgb(249,227,8)" fg:x="2638" fg:w="9"/><text x="21.4014%" y="751.50"></text></g><g><title>[[vdso]] (5 samples, 0.04%)</title><rect x="21.1835%" y="725" width="0.0401%" height="15" fill="rgb(253,141,45)" fg:x="2642" fg:w="5"/><text x="21.4335%" y="735.50"></text></g><g><title>tracing_core::metadata::Metadata::name (3 samples, 0.02%)</title><rect x="21.2235%" y="805" width="0.0241%" height="15" fill="rgb(234,184,4)" fg:x="2647" fg:w="3"/><text x="21.4735%" y="815.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="21.2957%" y="757" width="0.0160%" height="15" fill="rgb(218,194,23)" fg:x="2656" fg:w="2"/><text x="21.5457%" y="767.50"></text></g><g><title>__libc_malloc (16 samples, 0.13%)</title><rect x="21.3518%" y="517" width="0.1283%" height="15" fill="rgb(235,66,41)" fg:x="2663" fg:w="16"/><text x="21.6018%" y="527.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="21.4801%" y="517" width="0.0241%" height="15" fill="rgb(245,217,1)" fg:x="2679" fg:w="3"/><text x="21.7301%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="21.4881%" y="501" width="0.0160%" height="15" fill="rgb(229,91,1)" fg:x="2680" fg:w="2"/><text x="21.7381%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.18%)</title><rect x="21.3518%" y="613" width="0.1844%" height="15" fill="rgb(207,101,30)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.18%)</title><rect x="21.3518%" y="597" width="0.1844%" height="15" fill="rgb(223,82,49)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.18%)</title><rect x="21.3518%" y="581" width="0.1844%" height="15" fill="rgb(218,167,17)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.18%)</title><rect x="21.3518%" y="565" width="0.1844%" height="15" fill="rgb(208,103,14)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.18%)</title><rect x="21.3518%" y="549" width="0.1844%" height="15" fill="rgb(238,20,8)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="559.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.18%)</title><rect x="21.3518%" y="533" width="0.1844%" height="15" fill="rgb(218,80,54)" fg:x="2663" fg:w="23"/><text x="21.6018%" y="543.50"></text></g><g><title>__rust_alloc (4 samples, 0.03%)</title><rect x="21.5042%" y="517" width="0.0321%" height="15" fill="rgb(240,144,17)" fg:x="2682" fg:w="4"/><text x="21.7542%" y="527.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (31 samples, 0.25%)</title><rect x="21.3518%" y="741" width="0.2486%" height="15" fill="rgb(245,27,50)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (31 samples, 0.25%)</title><rect x="21.3518%" y="725" width="0.2486%" height="15" fill="rgb(251,51,7)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (31 samples, 0.25%)</title><rect x="21.3518%" y="709" width="0.2486%" height="15" fill="rgb(245,217,29)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (31 samples, 0.25%)</title><rect x="21.3518%" y="693" width="0.2486%" height="15" fill="rgb(221,176,29)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.25%)</title><rect x="21.3518%" y="677" width="0.2486%" height="15" fill="rgb(212,180,24)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.25%)</title><rect x="21.3518%" y="661" width="0.2486%" height="15" fill="rgb(254,24,2)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.25%)</title><rect x="21.3518%" y="645" width="0.2486%" height="15" fill="rgb(230,100,2)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.25%)</title><rect x="21.3518%" y="629" width="0.2486%" height="15" fill="rgb(219,142,25)" fg:x="2663" fg:w="31"/><text x="21.6018%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.06%)</title><rect x="21.5362%" y="613" width="0.0641%" height="15" fill="rgb(240,73,43)" fg:x="2686" fg:w="8"/><text x="21.7862%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.06%)</title><rect x="21.5362%" y="597" width="0.0641%" height="15" fill="rgb(214,114,15)" fg:x="2686" fg:w="8"/><text x="21.7862%" y="607.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="21.5362%" y="581" width="0.0641%" height="15" fill="rgb(207,130,4)" fg:x="2686" fg:w="8"/><text x="21.7862%" y="591.50"></text></g><g><title>__libc_malloc (8 samples, 0.06%)</title><rect x="21.6084%" y="677" width="0.0641%" height="15" fill="rgb(221,25,40)" fg:x="2695" fg:w="8"/><text x="21.8584%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.10%)</title><rect x="21.6004%" y="741" width="0.0962%" height="15" fill="rgb(241,184,7)" fg:x="2694" fg:w="12"/><text x="21.8504%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.10%)</title><rect x="21.6004%" y="725" width="0.0962%" height="15" fill="rgb(235,159,4)" fg:x="2694" fg:w="12"/><text x="21.8504%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.10%)</title><rect x="21.6004%" y="709" width="0.0962%" height="15" fill="rgb(214,87,48)" fg:x="2694" fg:w="12"/><text x="21.8504%" y="719.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.10%)</title><rect x="21.6004%" y="693" width="0.0962%" height="15" fill="rgb(246,198,24)" fg:x="2694" fg:w="12"/><text x="21.8504%" y="703.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="21.6725%" y="677" width="0.0241%" height="15" fill="rgb(209,66,40)" fg:x="2703" fg:w="3"/><text x="21.9225%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="21.6806%" y="661" width="0.0160%" height="15" fill="rgb(233,147,39)" fg:x="2704" fg:w="2"/><text x="21.9306%" y="671.50"></text></g><g><title>[libc-2.28.so] (50 samples, 0.40%)</title><rect x="22.0414%" y="565" width="0.4009%" height="15" fill="rgb(231,145,52)" fg:x="2749" fg:w="50"/><text x="22.2914%" y="575.50"></text></g><g><title>futex_wait (3 samples, 0.02%)</title><rect x="22.4503%" y="501" width="0.0241%" height="15" fill="rgb(206,20,26)" fg:x="2800" fg:w="3"/><text x="22.7003%" y="511.50"></text></g><g><title>futex_wait_setup (2 samples, 0.02%)</title><rect x="22.4583%" y="485" width="0.0160%" height="15" fill="rgb(238,220,4)" fg:x="2801" fg:w="2"/><text x="22.7083%" y="495.50"></text></g><g><title>get_futex_value_locked (2 samples, 0.02%)</title><rect x="22.4583%" y="469" width="0.0160%" height="15" fill="rgb(252,195,42)" fg:x="2801" fg:w="2"/><text x="22.7083%" y="479.50"></text></g><g><title>mark_wake_futex (2 samples, 0.02%)</title><rect x="22.4824%" y="485" width="0.0160%" height="15" fill="rgb(209,10,6)" fg:x="2804" fg:w="2"/><text x="22.7324%" y="495.50"></text></g><g><title>wake_q_add (2 samples, 0.02%)</title><rect x="22.4824%" y="469" width="0.0160%" height="15" fill="rgb(229,3,52)" fg:x="2804" fg:w="2"/><text x="22.7324%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (107 samples, 0.86%)</title><rect x="21.6966%" y="725" width="0.8579%" height="15" fill="rgb(253,49,37)" fg:x="2706" fg:w="107"/><text x="21.9466%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (107 samples, 0.86%)</title><rect x="21.6966%" y="709" width="0.8579%" height="15" fill="rgb(240,103,49)" fg:x="2706" fg:w="107"/><text x="21.9466%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (107 samples, 0.86%)</title><rect x="21.6966%" y="693" width="0.8579%" height="15" fill="rgb(250,182,30)" fg:x="2706" fg:w="107"/><text x="21.9466%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (107 samples, 0.86%)</title><rect x="21.6966%" y="677" width="0.8579%" height="15" fill="rgb(248,8,30)" fg:x="2706" fg:w="107"/><text x="21.9466%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 samples, 0.84%)</title><rect x="21.7126%" y="661" width="0.8419%" height="15" fill="rgb(237,120,30)" fg:x="2708" fg:w="105"/><text x="21.9626%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (104 samples, 0.83%)</title><rect x="21.7207%" y="645" width="0.8339%" height="15" fill="rgb(221,146,34)" fg:x="2709" fg:w="104"/><text x="21.9707%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (104 samples, 0.83%)</title><rect x="21.7207%" y="629" width="0.8339%" height="15" fill="rgb(242,55,13)" fg:x="2709" fg:w="104"/><text x="21.9707%" y="639.50"></text></g><g><title>alloc::alloc::realloc (104 samples, 0.83%)</title><rect x="21.7207%" y="613" width="0.8339%" height="15" fill="rgb(242,112,31)" fg:x="2709" fg:w="104"/><text x="21.9707%" y="623.50"></text></g><g><title>realloc (104 samples, 0.83%)</title><rect x="21.7207%" y="597" width="0.8339%" height="15" fill="rgb(249,192,27)" fg:x="2709" fg:w="104"/><text x="21.9707%" y="607.50"></text></g><g><title>[libc-2.28.so] (82 samples, 0.66%)</title><rect x="21.8970%" y="581" width="0.6575%" height="15" fill="rgb(208,204,44)" fg:x="2731" fg:w="82"/><text x="22.1470%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.11%)</title><rect x="22.4423%" y="565" width="0.1123%" height="15" fill="rgb(208,93,54)" fg:x="2799" fg:w="14"/><text x="22.6923%" y="575.50"></text></g><g><title>do_syscall_64 (14 samples, 0.11%)</title><rect x="22.4423%" y="549" width="0.1123%" height="15" fill="rgb(242,1,31)" fg:x="2799" fg:w="14"/><text x="22.6923%" y="559.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.10%)</title><rect x="22.4503%" y="533" width="0.1042%" height="15" fill="rgb(241,83,25)" fg:x="2800" fg:w="13"/><text x="22.7003%" y="543.50"></text></g><g><title>do_futex (13 samples, 0.10%)</title><rect x="22.4503%" y="517" width="0.1042%" height="15" fill="rgb(205,169,50)" fg:x="2800" fg:w="13"/><text x="22.7003%" y="527.50"></text></g><g><title>futex_wake (10 samples, 0.08%)</title><rect x="22.4743%" y="501" width="0.0802%" height="15" fill="rgb(239,186,37)" fg:x="2803" fg:w="10"/><text x="22.7243%" y="511.50"></text></g><g><title>wake_up_q (7 samples, 0.06%)</title><rect x="22.4984%" y="485" width="0.0561%" height="15" fill="rgb(205,221,10)" fg:x="2806" fg:w="7"/><text x="22.7484%" y="495.50"></text></g><g><title>try_to_wake_up (7 samples, 0.06%)</title><rect x="22.4984%" y="469" width="0.0561%" height="15" fill="rgb(218,196,15)" fg:x="2806" fg:w="7"/><text x="22.7484%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (111 samples, 0.89%)</title><rect x="21.6966%" y="741" width="0.8900%" height="15" fill="rgb(218,196,35)" fg:x="2706" fg:w="111"/><text x="21.9466%" y="751.50"></text></g><g><title>core::ptr::write (4 samples, 0.03%)</title><rect x="22.5545%" y="725" width="0.0321%" height="15" fill="rgb(233,63,24)" fg:x="2813" fg:w="4"/><text x="22.8045%" y="735.50"></text></g><g><title>opentelemetry::core::KeyValue::new (13 samples, 0.10%)</title><rect x="22.5866%" y="741" width="0.1042%" height="15" fill="rgb(225,8,4)" fg:x="2817" fg:w="13"/><text x="22.8366%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.10%)</title><rect x="22.5946%" y="725" width="0.0962%" height="15" fill="rgb(234,105,35)" fg:x="2818" fg:w="12"/><text x="22.8446%" y="735.50"></text></g><g><title>opentelemetry::core::Key::from_static_str (2 samples, 0.02%)</title><rect x="22.6748%" y="709" width="0.0160%" height="15" fill="rgb(236,21,32)" fg:x="2828" fg:w="2"/><text x="22.9248%" y="719.50"></text></g><g><title>tracing_core::span::Attributes::record (189 samples, 1.52%)</title><rect x="21.2476%" y="805" width="1.5154%" height="15" fill="rgb(228,109,6)" fg:x="2650" fg:w="189"/><text x="21.4976%" y="815.50"></text></g><g><title>tracing_core::field::ValueSet::record (188 samples, 1.51%)</title><rect x="21.2556%" y="789" width="1.5074%" height="15" fill="rgb(229,215,31)" fg:x="2651" fg:w="188"/><text x="21.5056%" y="799.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (186 samples, 1.49%)</title><rect x="21.2716%" y="773" width="1.4913%" height="15" fill="rgb(221,52,54)" fg:x="2653" fg:w="186"/><text x="21.5216%" y="783.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_str (181 samples, 1.45%)</title><rect x="21.3117%" y="757" width="1.4513%" height="15" fill="rgb(252,129,43)" fg:x="2658" fg:w="181"/><text x="21.5617%" y="767.50"></text></g><g><title>tracing_core::field::Field::name (9 samples, 0.07%)</title><rect x="22.6908%" y="741" width="0.0722%" height="15" fill="rgb(248,183,27)" fg:x="2830" fg:w="9"/><text x="22.9408%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (10 samples, 0.08%)</title><rect x="22.7630%" y="789" width="0.0802%" height="15" fill="rgb(250,0,22)" fg:x="2839" fg:w="10"/><text x="23.0130%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.08%)</title><rect x="22.7630%" y="773" width="0.0802%" height="15" fill="rgb(213,166,10)" fg:x="2839" fg:w="10"/><text x="23.0130%" y="783.50"></text></g><g><title>opentelemetry::context::Context::current (10 samples, 0.08%)</title><rect x="22.7630%" y="757" width="0.0802%" height="15" fill="rgb(207,163,36)" fg:x="2839" fg:w="10"/><text x="23.0130%" y="767.50"></text></g><g><title>opentelemetry::context::get_current (5 samples, 0.04%)</title><rect x="22.8031%" y="741" width="0.0401%" height="15" fill="rgb(208,122,22)" fg:x="2844" fg:w="5"/><text x="23.0531%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.04%)</title><rect x="22.8031%" y="725" width="0.0401%" height="15" fill="rgb(207,104,49)" fg:x="2844" fg:w="5"/><text x="23.0531%" y="735.50"></text></g><g><title>opentelemetry::context::get_current::_{{closure}} (4 samples, 0.03%)</title><rect x="22.8111%" y="709" width="0.0321%" height="15" fill="rgb(248,211,50)" fg:x="2845" fg:w="4"/><text x="23.0611%" y="719.50"></text></g><g><title>opentelemetry::context::Context::current::_{{closure}} (4 samples, 0.03%)</title><rect x="22.8111%" y="693" width="0.0321%" height="15" fill="rgb(217,13,45)" fg:x="2845" fg:w="4"/><text x="23.0611%" y="703.50"></text></g><g><title>&lt;opentelemetry::context::Context as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="22.8111%" y="677" width="0.0321%" height="15" fill="rgb(211,216,49)" fg:x="2845" fg:w="4"/><text x="23.0611%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="22.8111%" y="661" width="0.0321%" height="15" fill="rgb(221,58,53)" fg:x="2845" fg:w="4"/><text x="23.0611%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="22.8111%" y="645" width="0.0321%" height="15" fill="rgb(220,112,41)" fg:x="2845" fg:w="4"/><text x="23.0611%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="22.8191%" y="629" width="0.0241%" height="15" fill="rgb(236,38,28)" fg:x="2846" fg:w="3"/><text x="23.0691%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="22.8271%" y="613" width="0.0160%" height="15" fill="rgb(227,195,22)" fg:x="2847" fg:w="2"/><text x="23.0771%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (2 samples, 0.02%)</title><rect x="22.8271%" y="597" width="0.0160%" height="15" fill="rgb(214,55,33)" fg:x="2847" fg:w="2"/><text x="23.0771%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.02%)</title><rect x="22.8512%" y="757" width="0.0160%" height="15" fill="rgb(248,80,13)" fg:x="2850" fg:w="2"/><text x="23.1012%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="22.8512%" y="741" width="0.0160%" height="15" fill="rgb(238,52,6)" fg:x="2850" fg:w="2"/><text x="23.1012%" y="751.50"></text></g><g><title>tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt;::parent_context (15 samples, 0.12%)</title><rect x="22.7630%" y="805" width="0.1203%" height="15" fill="rgb(224,198,47)" fg:x="2839" fg:w="15"/><text x="23.0130%" y="815.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::lookup_current (5 samples, 0.04%)</title><rect x="22.8432%" y="789" width="0.0401%" height="15" fill="rgb(233,171,20)" fg:x="2849" fg:w="5"/><text x="23.0932%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (5 samples, 0.04%)</title><rect x="22.8432%" y="773" width="0.0401%" height="15" fill="rgb(241,30,25)" fg:x="2849" fg:w="5"/><text x="23.0932%" y="783.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="22.8672%" y="757" width="0.0160%" height="15" fill="rgb(207,171,38)" fg:x="2852" fg:w="2"/><text x="23.1172%" y="767.50"></text></g><g><title>tracing_opentelemetry::layer::Timings::new (15 samples, 0.12%)</title><rect x="22.8833%" y="805" width="0.1203%" height="15" fill="rgb(234,70,1)" fg:x="2854" fg:w="15"/><text x="23.1333%" y="815.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.12%)</title><rect x="22.8833%" y="789" width="0.1203%" height="15" fill="rgb(232,178,18)" fg:x="2854" fg:w="15"/><text x="23.1333%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.11%)</title><rect x="22.8913%" y="773" width="0.1123%" height="15" fill="rgb(241,78,40)" fg:x="2855" fg:w="14"/><text x="23.1413%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.11%)</title><rect x="22.8913%" y="757" width="0.1123%" height="15" fill="rgb(222,35,25)" fg:x="2855" fg:w="14"/><text x="23.1413%" y="767.50"></text></g><g><title>__clock_gettime (14 samples, 0.11%)</title><rect x="22.8913%" y="741" width="0.1123%" height="15" fill="rgb(207,92,16)" fg:x="2855" fg:w="14"/><text x="23.1413%" y="751.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.09%)</title><rect x="22.9153%" y="725" width="0.0882%" height="15" fill="rgb(216,59,51)" fg:x="2858" fg:w="11"/><text x="23.1653%" y="735.50"></text></g><g><title>[[vdso]] (9 samples, 0.07%)</title><rect x="22.9314%" y="709" width="0.0722%" height="15" fill="rgb(213,80,28)" fg:x="2860" fg:w="9"/><text x="23.1814%" y="719.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="23.0276%" y="741" width="0.0561%" height="15" fill="rgb(220,93,7)" fg:x="2872" fg:w="7"/><text x="23.2776%" y="751.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (6 samples, 0.05%)</title><rect x="23.0356%" y="725" width="0.0481%" height="15" fill="rgb(225,24,44)" fg:x="2873" fg:w="6"/><text x="23.2856%" y="735.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (5 samples, 0.04%)</title><rect x="23.0436%" y="709" width="0.0401%" height="15" fill="rgb(243,74,40)" fg:x="2874" fg:w="5"/><text x="23.2936%" y="719.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (5 samples, 0.04%)</title><rect x="23.0436%" y="693" width="0.0401%" height="15" fill="rgb(228,39,7)" fg:x="2874" fg:w="5"/><text x="23.2936%" y="703.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (5 samples, 0.04%)</title><rect x="23.0436%" y="677" width="0.0401%" height="15" fill="rgb(227,79,8)" fg:x="2874" fg:w="5"/><text x="23.2936%" y="687.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (5 samples, 0.04%)</title><rect x="23.0436%" y="661" width="0.0401%" height="15" fill="rgb(236,58,11)" fg:x="2874" fg:w="5"/><text x="23.2936%" y="671.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (5 samples, 0.04%)</title><rect x="23.0436%" y="645" width="0.0401%" height="15" fill="rgb(249,63,35)" fg:x="2874" fg:w="5"/><text x="23.2936%" y="655.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (11 samples, 0.09%)</title><rect x="23.0035%" y="805" width="0.0882%" height="15" fill="rgb(252,114,16)" fg:x="2869" fg:w="11"/><text x="23.2535%" y="815.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (10 samples, 0.08%)</title><rect x="23.0115%" y="789" width="0.0802%" height="15" fill="rgb(254,151,24)" fg:x="2870" fg:w="10"/><text x="23.2615%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (9 samples, 0.07%)</title><rect x="23.0196%" y="773" width="0.0722%" height="15" fill="rgb(253,54,39)" fg:x="2871" fg:w="9"/><text x="23.2696%" y="783.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (8 samples, 0.06%)</title><rect x="23.0276%" y="757" width="0.0641%" height="15" fill="rgb(243,25,45)" fg:x="2872" fg:w="8"/><text x="23.2776%" y="767.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (27 samples, 0.22%)</title><rect x="23.0917%" y="805" width="0.2165%" height="15" fill="rgb(234,134,9)" fg:x="2880" fg:w="27"/><text x="23.3417%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (27 samples, 0.22%)</title><rect x="23.0917%" y="789" width="0.2165%" height="15" fill="rgb(227,166,31)" fg:x="2880" fg:w="27"/><text x="23.3417%" y="799.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (25 samples, 0.20%)</title><rect x="23.1078%" y="773" width="0.2004%" height="15" fill="rgb(245,143,41)" fg:x="2882" fg:w="25"/><text x="23.3578%" y="783.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (24 samples, 0.19%)</title><rect x="23.1158%" y="757" width="0.1924%" height="15" fill="rgb(238,181,32)" fg:x="2883" fg:w="24"/><text x="23.3658%" y="767.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (24 samples, 0.19%)</title><rect x="23.1158%" y="741" width="0.1924%" height="15" fill="rgb(224,113,18)" fg:x="2883" fg:w="24"/><text x="23.3658%" y="751.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (23 samples, 0.18%)</title><rect x="23.1238%" y="725" width="0.1844%" height="15" fill="rgb(240,229,28)" fg:x="2884" fg:w="23"/><text x="23.3738%" y="735.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="23.3563%" y="757" width="0.0241%" height="15" fill="rgb(250,185,3)" fg:x="2913" fg:w="3"/><text x="23.6063%" y="767.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="23.3804%" y="741" width="0.0321%" height="15" fill="rgb(212,59,25)" fg:x="2916" fg:w="4"/><text x="23.6304%" y="751.50"></text></g><g><title>__libc_malloc (12 samples, 0.10%)</title><rect x="23.4124%" y="677" width="0.0962%" height="15" fill="rgb(221,87,20)" fg:x="2920" fg:w="12"/><text x="23.6624%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.14%)</title><rect x="23.3804%" y="757" width="0.1443%" height="15" fill="rgb(213,74,28)" fg:x="2916" fg:w="18"/><text x="23.6304%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.11%)</title><rect x="23.4124%" y="741" width="0.1123%" height="15" fill="rgb(224,132,34)" fg:x="2920" fg:w="14"/><text x="23.6624%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.11%)</title><rect x="23.4124%" y="725" width="0.1123%" height="15" fill="rgb(222,101,24)" fg:x="2920" fg:w="14"/><text x="23.6624%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.11%)</title><rect x="23.4124%" y="709" width="0.1123%" height="15" fill="rgb(254,142,4)" fg:x="2920" fg:w="14"/><text x="23.6624%" y="719.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.11%)</title><rect x="23.4124%" y="693" width="0.1123%" height="15" fill="rgb(230,229,49)" fg:x="2920" fg:w="14"/><text x="23.6624%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.02%)</title><rect x="23.5247%" y="725" width="0.0241%" height="15" fill="rgb(238,70,47)" fg:x="2934" fg:w="3"/><text x="23.7747%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="23.5327%" y="709" width="0.0160%" height="15" fill="rgb(231,160,17)" fg:x="2935" fg:w="2"/><text x="23.7827%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="23.5327%" y="693" width="0.0160%" height="15" fill="rgb(218,68,53)" fg:x="2935" fg:w="2"/><text x="23.7827%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (19 samples, 0.15%)</title><rect x="23.5568%" y="709" width="0.1523%" height="15" fill="rgb(236,111,10)" fg:x="2938" fg:w="19"/><text x="23.8068%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (19 samples, 0.15%)</title><rect x="23.5568%" y="693" width="0.1523%" height="15" fill="rgb(224,34,41)" fg:x="2938" fg:w="19"/><text x="23.8068%" y="703.50"></text></g><g><title>core::ptr::write (19 samples, 0.15%)</title><rect x="23.5568%" y="677" width="0.1523%" height="15" fill="rgb(241,118,19)" fg:x="2938" fg:w="19"/><text x="23.8068%" y="687.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.02%)</title><rect x="23.7412%" y="693" width="0.0160%" height="15" fill="rgb(238,129,25)" fg:x="2961" fg:w="2"/><text x="23.9912%" y="703.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (461 samples, 3.70%)</title><rect x="20.0690%" y="821" width="3.6963%" height="15" fill="rgb(238,22,31)" fg:x="2503" fg:w="461"/><text x="20.3190%" y="831.50">&lt;tra..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::insert (56 samples, 0.45%)</title><rect x="23.3162%" y="805" width="0.4490%" height="15" fill="rgb(222,174,48)" fg:x="2908" fg:w="56"/><text x="23.5662%" y="815.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::replace (55 samples, 0.44%)</title><rect x="23.3242%" y="789" width="0.4410%" height="15" fill="rgb(206,152,40)" fg:x="2909" fg:w="55"/><text x="23.5742%" y="799.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::insert (54 samples, 0.43%)</title><rect x="23.3323%" y="773" width="0.4330%" height="15" fill="rgb(218,99,54)" fg:x="2910" fg:w="54"/><text x="23.5823%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (30 samples, 0.24%)</title><rect x="23.5247%" y="757" width="0.2405%" height="15" fill="rgb(220,174,26)" fg:x="2934" fg:w="30"/><text x="23.7747%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (30 samples, 0.24%)</title><rect x="23.5247%" y="741" width="0.2405%" height="15" fill="rgb(245,116,9)" fg:x="2934" fg:w="30"/><text x="23.7747%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (27 samples, 0.22%)</title><rect x="23.5487%" y="725" width="0.2165%" height="15" fill="rgb(209,72,35)" fg:x="2937" fg:w="27"/><text x="23.7987%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find_insert_slot (7 samples, 0.06%)</title><rect x="23.7091%" y="709" width="0.0561%" height="15" fill="rgb(226,126,21)" fg:x="2957" fg:w="7"/><text x="23.9591%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.02%)</title><rect x="23.8053%" y="789" width="0.0160%" height="15" fill="rgb(227,192,1)" fg:x="2969" fg:w="2"/><text x="24.0553%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="23.8053%" y="773" width="0.0160%" height="15" fill="rgb(237,180,29)" fg:x="2969" fg:w="2"/><text x="24.0553%" y="783.50"></text></g><g><title>tracing_core::span::Current::none (2 samples, 0.02%)</title><rect x="23.8053%" y="757" width="0.0160%" height="15" fill="rgb(230,197,35)" fg:x="2969" fg:w="2"/><text x="24.0553%" y="767.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (4 samples, 0.03%)</title><rect x="23.8214%" y="773" width="0.0321%" height="15" fill="rgb(246,193,31)" fg:x="2971" fg:w="4"/><text x="24.0714%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (11 samples, 0.09%)</title><rect x="23.7733%" y="805" width="0.0882%" height="15" fill="rgb(241,36,4)" fg:x="2965" fg:w="11"/><text x="24.0233%" y="815.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (5 samples, 0.04%)</title><rect x="23.8214%" y="789" width="0.0401%" height="15" fill="rgb(241,130,17)" fg:x="2971" fg:w="5"/><text x="24.0714%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="23.9176%" y="789" width="0.0241%" height="15" fill="rgb(206,137,32)" fg:x="2983" fg:w="3"/><text x="24.1676%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.02%)</title><rect x="23.9256%" y="773" width="0.0160%" height="15" fill="rgb(237,228,51)" fg:x="2984" fg:w="2"/><text x="24.1756%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::RefMut&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (6 samples, 0.05%)</title><rect x="23.9496%" y="789" width="0.0481%" height="15" fill="rgb(243,6,42)" fg:x="2987" fg:w="6"/><text x="24.1996%" y="799.50"></text></g><g><title>&lt;sharded_slab::pool::RefMut&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="23.9496%" y="773" width="0.0481%" height="15" fill="rgb(251,74,28)" fg:x="2987" fg:w="6"/><text x="24.1996%" y="783.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release (6 samples, 0.05%)</title><rect x="23.9496%" y="757" width="0.0481%" height="15" fill="rgb(218,20,49)" fg:x="2987" fg:w="6"/><text x="24.1996%" y="767.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release2 (6 samples, 0.05%)</title><rect x="23.9496%" y="741" width="0.0481%" height="15" fill="rgb(238,28,14)" fg:x="2987" fg:w="6"/><text x="24.1996%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="23.9978%" y="773" width="0.0561%" height="15" fill="rgb(229,40,46)" fg:x="2993" fg:w="7"/><text x="24.2478%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.04%)</title><rect x="24.0138%" y="757" width="0.0401%" height="15" fill="rgb(244,195,20)" fg:x="2995" fg:w="5"/><text x="24.2638%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="24.1501%" y="741" width="0.0401%" height="15" fill="rgb(253,56,35)" fg:x="3012" fg:w="5"/><text x="24.4001%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.04%)</title><rect x="24.1501%" y="725" width="0.0401%" height="15" fill="rgb(210,149,44)" fg:x="3012" fg:w="5"/><text x="24.4001%" y="735.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::pop (8 samples, 0.06%)</title><rect x="24.1982%" y="741" width="0.0641%" height="15" fill="rgb(240,135,12)" fg:x="3018" fg:w="8"/><text x="24.4482%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="24.2623%" y="709" width="0.0401%" height="15" fill="rgb(251,24,50)" fg:x="3026" fg:w="5"/><text x="24.5123%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.04%)</title><rect x="24.2623%" y="693" width="0.0401%" height="15" fill="rgb(243,200,47)" fg:x="3026" fg:w="5"/><text x="24.5123%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.10%)</title><rect x="24.3024%" y="709" width="0.0962%" height="15" fill="rgb(224,166,26)" fg:x="3031" fg:w="12"/><text x="24.5524%" y="719.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create::_{{closure}} (12 samples, 0.10%)</title><rect x="24.3024%" y="693" width="0.0962%" height="15" fill="rgb(233,0,47)" fg:x="3031" fg:w="12"/><text x="24.5524%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (12 samples, 0.10%)</title><rect x="24.3024%" y="677" width="0.0962%" height="15" fill="rgb(253,80,5)" fg:x="3031" fg:w="12"/><text x="24.5524%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.02%)</title><rect x="24.3746%" y="661" width="0.0241%" height="15" fill="rgb(214,133,25)" fg:x="3040" fg:w="3"/><text x="24.6246%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (68 samples, 0.55%)</title><rect x="23.8614%" y="805" width="0.5452%" height="15" fill="rgb(209,27,14)" fg:x="2976" fg:w="68"/><text x="24.1114%" y="815.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (51 samples, 0.41%)</title><rect x="23.9978%" y="789" width="0.4089%" height="15" fill="rgb(219,102,51)" fg:x="2993" fg:w="51"/><text x="24.2478%" y="799.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::init_with (44 samples, 0.35%)</title><rect x="24.0539%" y="773" width="0.3528%" height="15" fill="rgb(237,18,16)" fg:x="3000" fg:w="44"/><text x="24.3039%" y="783.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::init_with (37 samples, 0.30%)</title><rect x="24.1100%" y="757" width="0.2967%" height="15" fill="rgb(241,85,17)" fg:x="3007" fg:w="37"/><text x="24.3600%" y="767.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (18 samples, 0.14%)</title><rect x="24.2623%" y="741" width="0.1443%" height="15" fill="rgb(236,90,42)" fg:x="3026" fg:w="18"/><text x="24.5123%" y="751.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::init_with::_{{closure}} (18 samples, 0.14%)</title><rect x="24.2623%" y="725" width="0.1443%" height="15" fill="rgb(249,57,21)" fg:x="3026" fg:w="18"/><text x="24.5123%" y="735.50"></text></g><g><title>tracing::span::Span::make_with (558 samples, 4.47%)</title><rect x="19.9647%" y="885" width="4.4740%" height="15" fill="rgb(243,12,36)" fg:x="2490" fg:w="558"/><text x="20.2147%" y="895.50">traci..</text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (548 samples, 4.39%)</title><rect x="20.0449%" y="869" width="4.3938%" height="15" fill="rgb(253,128,47)" fg:x="2500" fg:w="548"/><text x="20.2949%" y="879.50">traci..</text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (548 samples, 4.39%)</title><rect x="20.0449%" y="853" width="4.3938%" height="15" fill="rgb(207,33,20)" fg:x="2500" fg:w="548"/><text x="20.2949%" y="863.50">&lt;allo..</text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (548 samples, 4.39%)</title><rect x="20.0449%" y="837" width="4.3938%" height="15" fill="rgb(233,215,35)" fg:x="2500" fg:w="548"/><text x="20.2949%" y="847.50">&lt;trac..</text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (84 samples, 0.67%)</title><rect x="23.7652%" y="821" width="0.6735%" height="15" fill="rgb(249,188,52)" fg:x="2964" fg:w="84"/><text x="24.0152%" y="831.50"></text></g><g><title>tracing::span::Span::new::_{{closure}} (562 samples, 4.51%)</title><rect x="19.9407%" y="917" width="4.5061%" height="15" fill="rgb(225,12,32)" fg:x="2487" fg:w="562"/><text x="20.1907%" y="927.50">traci..</text></g><g><title>tracing::span::Span::new_with (562 samples, 4.51%)</title><rect x="19.9407%" y="901" width="4.5061%" height="15" fill="rgb(247,98,14)" fg:x="2487" fg:w="562"/><text x="20.1907%" y="911.50">traci..</text></g><g><title>tracing::span::Span::new (571 samples, 4.58%)</title><rect x="19.9006%" y="981" width="4.5783%" height="15" fill="rgb(247,219,48)" fg:x="2482" fg:w="571"/><text x="20.1506%" y="991.50">traci..</text></g><g><title>tracing_core::dispatcher::get_default (570 samples, 4.57%)</title><rect x="19.9086%" y="965" width="4.5702%" height="15" fill="rgb(253,60,48)" fg:x="2483" fg:w="570"/><text x="20.1586%" y="975.50">traci..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (569 samples, 4.56%)</title><rect x="19.9166%" y="949" width="4.5622%" height="15" fill="rgb(245,15,52)" fg:x="2484" fg:w="569"/><text x="20.1666%" y="959.50">std::..</text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (567 samples, 4.55%)</title><rect x="19.9326%" y="933" width="4.5462%" height="15" fill="rgb(220,133,28)" fg:x="2486" fg:w="567"/><text x="20.1826%" y="943.50">traci..</text></g><g><title>tracing_core::dispatcher::Entered::current (4 samples, 0.03%)</title><rect x="24.4468%" y="917" width="0.0321%" height="15" fill="rgb(217,180,4)" fg:x="3049" fg:w="4"/><text x="24.6968%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (2 samples, 0.02%)</title><rect x="24.4628%" y="901" width="0.0160%" height="15" fill="rgb(251,24,1)" fg:x="3051" fg:w="2"/><text x="24.7128%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="24.4628%" y="885" width="0.0160%" height="15" fill="rgb(212,185,49)" fg:x="3051" fg:w="2"/><text x="24.7128%" y="895.50"></text></g><g><title>fred::trace::enabled::create_command_span (614 samples, 4.92%)</title><rect x="19.5718%" y="997" width="4.9230%" height="15" fill="rgb(215,175,22)" fg:x="2441" fg:w="614"/><text x="19.8218%" y="1007.50">fred::..</text></g><g><title>fred::utils::disallow_nested_values (4 samples, 0.03%)</title><rect x="24.4949%" y="997" width="0.0321%" height="15" fill="rgb(250,205,14)" fg:x="3055" fg:w="4"/><text x="24.7449%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.5109%" y="981" width="0.0160%" height="15" fill="rgb(225,211,22)" fg:x="3057" fg:w="2"/><text x="24.7609%" y="991.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="24.5911%" y="981" width="0.0160%" height="15" fill="rgb(251,179,42)" fg:x="3067" fg:w="2"/><text x="24.8411%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::mpsc::unbounded::UnboundedSender&lt;fred::protocol::types::RedisCommand&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="24.6071%" y="981" width="0.0241%" height="15" fill="rgb(208,216,51)" fg:x="3069" fg:w="3"/><text x="24.8571%" y="991.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="24.6071%" y="965" width="0.0241%" height="15" fill="rgb(235,36,11)" fg:x="3069" fg:w="3"/><text x="24.8571%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (3 samples, 0.02%)</title><rect x="24.6071%" y="949" width="0.0241%" height="15" fill="rgb(213,189,28)" fg:x="3069" fg:w="3"/><text x="24.8571%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.08%)</title><rect x="24.6392%" y="981" width="0.0802%" height="15" fill="rgb(227,203,42)" fg:x="3073" fg:w="10"/><text x="24.8892%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.08%)</title><rect x="24.6392%" y="965" width="0.0802%" height="15" fill="rgb(244,72,36)" fg:x="3073" fg:w="10"/><text x="24.8892%" y="975.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (6 samples, 0.05%)</title><rect x="24.6713%" y="949" width="0.0481%" height="15" fill="rgb(213,53,17)" fg:x="3077" fg:w="6"/><text x="24.9213%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.02%)</title><rect x="24.7434%" y="933" width="0.0241%" height="15" fill="rgb(207,167,3)" fg:x="3086" fg:w="3"/><text x="24.9934%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="24.7514%" y="917" width="0.0160%" height="15" fill="rgb(216,98,30)" fg:x="3087" fg:w="2"/><text x="25.0014%" y="927.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.03%)</title><rect x="24.9278%" y="901" width="0.0321%" height="15" fill="rgb(236,123,15)" fg:x="3109" fg:w="4"/><text x="25.1778%" y="911.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="24.9278%" y="885" width="0.0321%" height="15" fill="rgb(248,81,50)" fg:x="3109" fg:w="4"/><text x="25.1778%" y="895.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (27 samples, 0.22%)</title><rect x="24.7675%" y="933" width="0.2165%" height="15" fill="rgb(214,120,4)" fg:x="3089" fg:w="27"/><text x="25.0175%" y="943.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (7 samples, 0.06%)</title><rect x="24.9278%" y="917" width="0.0561%" height="15" fill="rgb(208,179,34)" fg:x="3109" fg:w="7"/><text x="25.1778%" y="927.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (3 samples, 0.02%)</title><rect x="24.9599%" y="901" width="0.0241%" height="15" fill="rgb(227,140,7)" fg:x="3113" fg:w="3"/><text x="25.2099%" y="911.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="24.9679%" y="885" width="0.0160%" height="15" fill="rgb(214,22,6)" fg:x="3114" fg:w="2"/><text x="25.2179%" y="895.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (46 samples, 0.37%)</title><rect x="24.7354%" y="965" width="0.3688%" height="15" fill="rgb(207,137,27)" fg:x="3085" fg:w="46"/><text x="24.9854%" y="975.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (46 samples, 0.37%)</title><rect x="24.7354%" y="949" width="0.3688%" height="15" fill="rgb(210,8,46)" fg:x="3085" fg:w="46"/><text x="24.9854%" y="959.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (15 samples, 0.12%)</title><rect x="24.9840%" y="933" width="0.1203%" height="15" fill="rgb(240,16,54)" fg:x="3116" fg:w="15"/><text x="25.2340%" y="943.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (12 samples, 0.10%)</title><rect x="25.0080%" y="917" width="0.0962%" height="15" fill="rgb(211,209,29)" fg:x="3119" fg:w="12"/><text x="25.2580%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.10%)</title><rect x="25.0080%" y="901" width="0.0962%" height="15" fill="rgb(226,228,24)" fg:x="3119" fg:w="12"/><text x="25.2580%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.10%)</title><rect x="25.0080%" y="885" width="0.0962%" height="15" fill="rgb(222,84,9)" fg:x="3119" fg:w="12"/><text x="25.2580%" y="895.50"></text></g><g><title>fred::utils::send_command (85 samples, 0.68%)</title><rect x="24.5269%" y="997" width="0.6815%" height="15" fill="rgb(234,203,30)" fg:x="3059" fg:w="85"/><text x="24.7769%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (61 samples, 0.49%)</title><rect x="24.7194%" y="981" width="0.4891%" height="15" fill="rgb(238,109,14)" fg:x="3083" fg:w="61"/><text x="24.9694%" y="991.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::inc_num_messages (13 samples, 0.10%)</title><rect x="25.1042%" y="965" width="0.1042%" height="15" fill="rgb(233,206,34)" fg:x="3131" fg:w="13"/><text x="25.3542%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.09%)</title><rect x="25.1203%" y="949" width="0.0882%" height="15" fill="rgb(220,167,47)" fg:x="3133" fg:w="11"/><text x="25.3703%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.09%)</title><rect x="25.1203%" y="933" width="0.0882%" height="15" fill="rgb(238,105,10)" fg:x="3133" fg:w="11"/><text x="25.3703%" y="943.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="25.2165%" y="933" width="0.0561%" height="15" fill="rgb(213,227,17)" fg:x="3145" fg:w="7"/><text x="25.4665%" y="943.50"></text></g><g><title>futures_util::future::try_future::TryFutureExt::and_then (11 samples, 0.09%)</title><rect x="25.2165%" y="997" width="0.0882%" height="15" fill="rgb(217,132,38)" fg:x="3145" fg:w="11"/><text x="25.4665%" y="1007.50"></text></g><g><title>futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt;::new (11 samples, 0.09%)</title><rect x="25.2165%" y="981" width="0.0882%" height="15" fill="rgb(242,146,4)" fg:x="3145" fg:w="11"/><text x="25.4665%" y="991.50"></text></g><g><title>futures_util::future::try_future::MapOk&lt;Fut,F&gt;::new (11 samples, 0.09%)</title><rect x="25.2165%" y="965" width="0.0882%" height="15" fill="rgb(212,61,9)" fg:x="3145" fg:w="11"/><text x="25.4665%" y="975.50"></text></g><g><title>futures_util::future::future::Map&lt;Fut,F&gt;::new (11 samples, 0.09%)</title><rect x="25.2165%" y="949" width="0.0882%" height="15" fill="rgb(247,126,22)" fg:x="3145" fg:w="11"/><text x="25.4665%" y="959.50"></text></g><g><title>futures_util::future::future::map::Map&lt;Fut,F&gt;::new (4 samples, 0.03%)</title><rect x="25.2726%" y="933" width="0.0321%" height="15" fill="rgb(220,196,2)" fg:x="3152" fg:w="4"/><text x="25.5226%" y="943.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="25.2726%" y="917" width="0.0321%" height="15" fill="rgb(208,46,4)" fg:x="3152" fg:w="4"/><text x="25.5226%" y="927.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (2 samples, 0.02%)</title><rect x="25.3047%" y="981" width="0.0160%" height="15" fill="rgb(252,104,46)" fg:x="3156" fg:w="2"/><text x="25.5547%" y="991.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="25.3287%" y="965" width="0.0321%" height="15" fill="rgb(237,152,48)" fg:x="3159" fg:w="4"/><text x="25.5787%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.10%)</title><rect x="25.3287%" y="981" width="0.0962%" height="15" fill="rgb(221,59,37)" fg:x="3159" fg:w="12"/><text x="25.5787%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.06%)</title><rect x="25.3608%" y="965" width="0.0641%" height="15" fill="rgb(209,202,51)" fg:x="3163" fg:w="8"/><text x="25.6108%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.06%)</title><rect x="25.3608%" y="949" width="0.0641%" height="15" fill="rgb(228,81,30)" fg:x="3163" fg:w="8"/><text x="25.6108%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.06%)</title><rect x="25.3608%" y="933" width="0.0641%" height="15" fill="rgb(227,42,39)" fg:x="3163" fg:w="8"/><text x="25.6108%" y="943.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.06%)</title><rect x="25.3608%" y="917" width="0.0641%" height="15" fill="rgb(221,26,2)" fg:x="3163" fg:w="8"/><text x="25.6108%" y="927.50"></text></g><g><title>__libc_malloc (8 samples, 0.06%)</title><rect x="25.3608%" y="901" width="0.0641%" height="15" fill="rgb(254,61,31)" fg:x="3163" fg:w="8"/><text x="25.6108%" y="911.50"></text></g><g><title>tokio::sync::oneshot::State::as_usize (4 samples, 0.03%)</title><rect x="25.4250%" y="981" width="0.0321%" height="15" fill="rgb(222,173,38)" fg:x="3171" fg:w="4"/><text x="25.6750%" y="991.50"></text></g><g><title>tokio::sync::oneshot::channel (21 samples, 0.17%)</title><rect x="25.3047%" y="997" width="0.1684%" height="15" fill="rgb(218,50,12)" fg:x="3156" fg:w="21"/><text x="25.5547%" y="1007.50"></text></g><g><title>tokio::sync::oneshot::State::new (2 samples, 0.02%)</title><rect x="25.4570%" y="981" width="0.0160%" height="15" fill="rgb(223,88,40)" fg:x="3175" fg:w="2"/><text x="25.7070%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (20 samples, 0.16%)</title><rect x="25.5372%" y="949" width="0.1604%" height="15" fill="rgb(237,54,19)" fg:x="3185" fg:w="20"/><text x="25.7872%" y="959.50"></text></g><g><title>tracing_core::field::FieldSet::field::_{{closure}} (19 samples, 0.15%)</title><rect x="25.5452%" y="933" width="0.1523%" height="15" fill="rgb(251,129,25)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.15%)</title><rect x="25.5452%" y="917" width="0.1523%" height="15" fill="rgb(238,97,19)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.15%)</title><rect x="25.5452%" y="901" width="0.1523%" height="15" fill="rgb(240,169,18)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.15%)</title><rect x="25.5452%" y="885" width="0.1523%" height="15" fill="rgb(230,187,49)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.15%)</title><rect x="25.5452%" y="869" width="0.1523%" height="15" fill="rgb(209,44,26)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.15%)</title><rect x="25.5452%" y="853" width="0.1523%" height="15" fill="rgb(244,0,6)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.15%)</title><rect x="25.5452%" y="837" width="0.1523%" height="15" fill="rgb(248,18,21)" fg:x="3186" fg:w="19"/><text x="25.7952%" y="847.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.09%)</title><rect x="25.6094%" y="821" width="0.0882%" height="15" fill="rgb(245,180,19)" fg:x="3194" fg:w="11"/><text x="25.8594%" y="831.50"></text></g><g><title>tracing_core::field::FieldSet::field (26 samples, 0.21%)</title><rect x="25.5292%" y="965" width="0.2085%" height="15" fill="rgb(252,118,36)" fg:x="3184" fg:w="26"/><text x="25.7792%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.04%)</title><rect x="25.6976%" y="949" width="0.0401%" height="15" fill="rgb(210,224,19)" fg:x="3205" fg:w="5"/><text x="25.9476%" y="959.50"></text></g><g><title>tracing_core::field::FieldSet::field::_{{closure}} (5 samples, 0.04%)</title><rect x="25.6976%" y="933" width="0.0401%" height="15" fill="rgb(218,30,24)" fg:x="3205" fg:w="5"/><text x="25.9476%" y="943.50"></text></g><g><title>tracing_core::field::FieldSet::callsite (3 samples, 0.02%)</title><rect x="25.7136%" y="917" width="0.0241%" height="15" fill="rgb(219,75,50)" fg:x="3207" fg:w="3"/><text x="25.9636%" y="927.50"></text></g><g><title>&lt;str as tracing::field::AsField&gt;::as_field (29 samples, 0.23%)</title><rect x="25.5212%" y="981" width="0.2325%" height="15" fill="rgb(234,72,50)" fg:x="3183" fg:w="29"/><text x="25.7712%" y="991.50"></text></g><g><title>tracing_core::metadata::Metadata::fields (2 samples, 0.02%)</title><rect x="25.7377%" y="965" width="0.0160%" height="15" fill="rgb(219,100,48)" fg:x="3210" fg:w="2"/><text x="25.9877%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (10 samples, 0.08%)</title><rect x="25.7777%" y="901" width="0.0802%" height="15" fill="rgb(253,5,41)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (10 samples, 0.08%)</title><rect x="25.7777%" y="885" width="0.0802%" height="15" fill="rgb(247,181,11)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (10 samples, 0.08%)</title><rect x="25.7777%" y="869" width="0.0802%" height="15" fill="rgb(222,223,25)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="879.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.08%)</title><rect x="25.7777%" y="853" width="0.0802%" height="15" fill="rgb(214,198,28)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="863.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (10 samples, 0.08%)</title><rect x="25.7777%" y="837" width="0.0802%" height="15" fill="rgb(230,46,43)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (10 samples, 0.08%)</title><rect x="25.7777%" y="821" width="0.0802%" height="15" fill="rgb(233,65,53)" fg:x="3215" fg:w="10"/><text x="26.0277%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (32 samples, 0.26%)</title><rect x="25.8579%" y="901" width="0.2566%" height="15" fill="rgb(221,121,27)" fg:x="3225" fg:w="32"/><text x="26.1079%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (32 samples, 0.26%)</title><rect x="25.8579%" y="885" width="0.2566%" height="15" fill="rgb(247,70,47)" fg:x="3225" fg:w="32"/><text x="26.1079%" y="895.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.26%)</title><rect x="25.8579%" y="869" width="0.2566%" height="15" fill="rgb(228,85,35)" fg:x="3225" fg:w="32"/><text x="26.1079%" y="879.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (31 samples, 0.25%)</title><rect x="25.8659%" y="853" width="0.2486%" height="15" fill="rgb(209,50,18)" fg:x="3226" fg:w="31"/><text x="26.1159%" y="863.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (31 samples, 0.25%)</title><rect x="25.8659%" y="837" width="0.2486%" height="15" fill="rgb(250,19,35)" fg:x="3226" fg:w="31"/><text x="26.1159%" y="847.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (31 samples, 0.25%)</title><rect x="25.8659%" y="821" width="0.2486%" height="15" fill="rgb(253,107,29)" fg:x="3226" fg:w="31"/><text x="26.1159%" y="831.50"></text></g><g><title>__GI___pthread_rwlock_unlock (31 samples, 0.25%)</title><rect x="25.8659%" y="805" width="0.2486%" height="15" fill="rgb(252,179,29)" fg:x="3226" fg:w="31"/><text x="26.1159%" y="815.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (4 samples, 0.03%)</title><rect x="26.1145%" y="853" width="0.0321%" height="15" fill="rgb(238,194,6)" fg:x="3257" fg:w="4"/><text x="26.3645%" y="863.50"></text></g><g><title>&lt;str as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="26.1466%" y="853" width="0.0160%" height="15" fill="rgb(238,164,29)" fg:x="3261" fg:w="2"/><text x="26.3966%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.10%)</title><rect x="26.1786%" y="709" width="0.0962%" height="15" fill="rgb(224,25,9)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.10%)</title><rect x="26.1786%" y="693" width="0.0962%" height="15" fill="rgb(244,153,23)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.10%)</title><rect x="26.1786%" y="677" width="0.0962%" height="15" fill="rgb(212,203,14)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.10%)</title><rect x="26.1786%" y="661" width="0.0962%" height="15" fill="rgb(220,164,20)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.10%)</title><rect x="26.1786%" y="645" width="0.0962%" height="15" fill="rgb(222,203,48)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="655.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.10%)</title><rect x="26.1786%" y="629" width="0.0962%" height="15" fill="rgb(215,159,22)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="639.50"></text></g><g><title>__libc_malloc (12 samples, 0.10%)</title><rect x="26.1786%" y="613" width="0.0962%" height="15" fill="rgb(216,183,47)" fg:x="3265" fg:w="12"/><text x="26.4286%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (17 samples, 0.14%)</title><rect x="26.1786%" y="837" width="0.1363%" height="15" fill="rgb(229,195,25)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (17 samples, 0.14%)</title><rect x="26.1786%" y="821" width="0.1363%" height="15" fill="rgb(224,132,51)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.14%)</title><rect x="26.1786%" y="805" width="0.1363%" height="15" fill="rgb(240,63,7)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.14%)</title><rect x="26.1786%" y="789" width="0.1363%" height="15" fill="rgb(249,182,41)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.14%)</title><rect x="26.1786%" y="773" width="0.1363%" height="15" fill="rgb(243,47,26)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.14%)</title><rect x="26.1786%" y="757" width="0.1363%" height="15" fill="rgb(233,48,2)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.14%)</title><rect x="26.1786%" y="741" width="0.1363%" height="15" fill="rgb(244,165,34)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.14%)</title><rect x="26.1786%" y="725" width="0.1363%" height="15" fill="rgb(207,89,7)" fg:x="3265" fg:w="17"/><text x="26.4286%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.04%)</title><rect x="26.2749%" y="709" width="0.0401%" height="15" fill="rgb(244,117,36)" fg:x="3277" fg:w="5"/><text x="26.5249%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="26.2749%" y="693" width="0.0401%" height="15" fill="rgb(226,144,34)" fg:x="3277" fg:w="5"/><text x="26.5249%" y="703.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="26.2749%" y="677" width="0.0401%" height="15" fill="rgb(213,23,19)" fg:x="3277" fg:w="5"/><text x="26.5249%" y="687.50"></text></g><g><title>&lt;opentelemetry::core::Value as core::convert::From&lt;alloc::string::String&gt;&gt;::from (2 samples, 0.02%)</title><rect x="26.4272%" y="805" width="0.0160%" height="15" fill="rgb(217,75,12)" fg:x="3296" fg:w="2"/><text x="26.6772%" y="815.50"></text></g><g><title>opentelemetry::core::KeyValue::new (16 samples, 0.13%)</title><rect x="26.3230%" y="837" width="0.1283%" height="15" fill="rgb(224,159,17)" fg:x="3283" fg:w="16"/><text x="26.5730%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.08%)</title><rect x="26.3711%" y="821" width="0.0802%" height="15" fill="rgb(217,118,1)" fg:x="3289" fg:w="10"/><text x="26.6211%" y="831.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_str (40 samples, 0.32%)</title><rect x="26.1626%" y="853" width="0.3207%" height="15" fill="rgb(232,180,48)" fg:x="3263" fg:w="40"/><text x="26.4126%" y="863.50"></text></g><g><title>tracing_core::field::Field::name (4 samples, 0.03%)</title><rect x="26.4513%" y="837" width="0.0321%" height="15" fill="rgb(230,27,33)" fg:x="3299" fg:w="4"/><text x="26.7013%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="26.5876%" y="773" width="0.0160%" height="15" fill="rgb(205,31,21)" fg:x="3316" fg:w="2"/><text x="26.8376%" y="783.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (4 samples, 0.03%)</title><rect x="26.6116%" y="773" width="0.0321%" height="15" fill="rgb(253,59,4)" fg:x="3319" fg:w="4"/><text x="26.8616%" y="783.50"></text></g><g><title>core::fmt::Formatter::debug_upper_hex (3 samples, 0.02%)</title><rect x="26.6196%" y="757" width="0.0241%" height="15" fill="rgb(224,201,9)" fg:x="3320" fg:w="3"/><text x="26.8696%" y="767.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="26.7158%" y="565" width="0.0160%" height="15" fill="rgb(229,206,30)" fg:x="3332" fg:w="2"/><text x="26.9658%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="26.7158%" y="581" width="0.0401%" height="15" fill="rgb(212,67,47)" fg:x="3332" fg:w="5"/><text x="26.9658%" y="591.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="26.7319%" y="565" width="0.0241%" height="15" fill="rgb(211,96,50)" fg:x="3334" fg:w="3"/><text x="26.9819%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="26.7319%" y="549" width="0.0241%" height="15" fill="rgb(252,114,18)" fg:x="3334" fg:w="3"/><text x="26.9819%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.07%)</title><rect x="26.6998%" y="645" width="0.0722%" height="15" fill="rgb(223,58,37)" fg:x="3330" fg:w="9"/><text x="26.9498%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.07%)</title><rect x="26.6998%" y="629" width="0.0722%" height="15" fill="rgb(237,70,4)" fg:x="3330" fg:w="9"/><text x="26.9498%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (9 samples, 0.07%)</title><rect x="26.6998%" y="613" width="0.0722%" height="15" fill="rgb(244,85,46)" fg:x="3330" fg:w="9"/><text x="26.9498%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.07%)</title><rect x="26.6998%" y="597" width="0.0722%" height="15" fill="rgb(223,39,52)" fg:x="3330" fg:w="9"/><text x="26.9498%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.10%)</title><rect x="26.6758%" y="741" width="0.1042%" height="15" fill="rgb(218,200,14)" fg:x="3327" fg:w="13"/><text x="26.9258%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.08%)</title><rect x="26.6998%" y="725" width="0.0802%" height="15" fill="rgb(208,171,16)" fg:x="3330" fg:w="10"/><text x="26.9498%" y="735.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.08%)</title><rect x="26.6998%" y="709" width="0.0802%" height="15" fill="rgb(234,200,18)" fg:x="3330" fg:w="10"/><text x="26.9498%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.08%)</title><rect x="26.6998%" y="693" width="0.0802%" height="15" fill="rgb(228,45,11)" fg:x="3330" fg:w="10"/><text x="26.9498%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.08%)</title><rect x="26.6998%" y="677" width="0.0802%" height="15" fill="rgb(237,182,11)" fg:x="3330" fg:w="10"/><text x="26.9498%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.08%)</title><rect x="26.6998%" y="661" width="0.0802%" height="15" fill="rgb(241,175,49)" fg:x="3330" fg:w="10"/><text x="26.9498%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (37 samples, 0.30%)</title><rect x="26.4994%" y="805" width="0.2967%" height="15" fill="rgb(247,38,35)" fg:x="3305" fg:w="37"/><text x="26.7494%" y="815.50"></text></g><g><title>core::fmt::write (36 samples, 0.29%)</title><rect x="26.5074%" y="789" width="0.2886%" height="15" fill="rgb(228,39,49)" fg:x="3306" fg:w="36"/><text x="26.7574%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (19 samples, 0.15%)</title><rect x="26.6437%" y="773" width="0.1523%" height="15" fill="rgb(226,101,26)" fg:x="3323" fg:w="19"/><text x="26.8937%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (19 samples, 0.15%)</title><rect x="26.6437%" y="757" width="0.1523%" height="15" fill="rgb(206,141,19)" fg:x="3323" fg:w="19"/><text x="26.8937%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.02%)</title><rect x="26.7800%" y="741" width="0.0160%" height="15" fill="rgb(211,200,13)" fg:x="3340" fg:w="2"/><text x="27.0300%" y="751.50"></text></g><g><title>alloc::fmt::format (40 samples, 0.32%)</title><rect x="26.4833%" y="821" width="0.3207%" height="15" fill="rgb(241,121,6)" fg:x="3303" fg:w="40"/><text x="26.7333%" y="831.50"></text></g><g><title>[libc-2.28.so] (55 samples, 0.44%)</title><rect x="27.0686%" y="645" width="0.4410%" height="15" fill="rgb(234,221,29)" fg:x="3376" fg:w="55"/><text x="27.3186%" y="655.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="27.5257%" y="565" width="0.0160%" height="15" fill="rgb(229,136,5)" fg:x="3433" fg:w="2"/><text x="27.7757%" y="575.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="27.5257%" y="549" width="0.0160%" height="15" fill="rgb(238,36,11)" fg:x="3433" fg:w="2"/><text x="27.7757%" y="559.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="27.5257%" y="533" width="0.0160%" height="15" fill="rgb(251,55,41)" fg:x="3433" fg:w="2"/><text x="27.7757%" y="543.50"></text></g><g><title>futex_wait (8 samples, 0.06%)</title><rect x="27.5176%" y="581" width="0.0641%" height="15" fill="rgb(242,34,40)" fg:x="3432" fg:w="8"/><text x="27.7676%" y="591.50"></text></g><g><title>futex_wait_setup (5 samples, 0.04%)</title><rect x="27.5417%" y="565" width="0.0401%" height="15" fill="rgb(215,42,17)" fg:x="3435" fg:w="5"/><text x="27.7917%" y="575.50"></text></g><g><title>get_futex_value_locked (3 samples, 0.02%)</title><rect x="27.5577%" y="549" width="0.0241%" height="15" fill="rgb(207,44,46)" fg:x="3437" fg:w="3"/><text x="27.8077%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (103 samples, 0.83%)</title><rect x="26.8040%" y="805" width="0.8258%" height="15" fill="rgb(211,206,28)" fg:x="3343" fg:w="103"/><text x="27.0540%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (103 samples, 0.83%)</title><rect x="26.8040%" y="789" width="0.8258%" height="15" fill="rgb(237,167,16)" fg:x="3343" fg:w="103"/><text x="27.0540%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (103 samples, 0.83%)</title><rect x="26.8040%" y="773" width="0.8258%" height="15" fill="rgb(233,66,6)" fg:x="3343" fg:w="103"/><text x="27.0540%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (103 samples, 0.83%)</title><rect x="26.8040%" y="757" width="0.8258%" height="15" fill="rgb(246,123,29)" fg:x="3343" fg:w="103"/><text x="27.0540%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 0.82%)</title><rect x="26.8121%" y="741" width="0.8178%" height="15" fill="rgb(209,62,40)" fg:x="3344" fg:w="102"/><text x="27.0621%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (101 samples, 0.81%)</title><rect x="26.8201%" y="725" width="0.8098%" height="15" fill="rgb(218,4,25)" fg:x="3345" fg:w="101"/><text x="27.0701%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (101 samples, 0.81%)</title><rect x="26.8201%" y="709" width="0.8098%" height="15" fill="rgb(253,91,49)" fg:x="3345" fg:w="101"/><text x="27.0701%" y="719.50"></text></g><g><title>alloc::alloc::realloc (101 samples, 0.81%)</title><rect x="26.8201%" y="693" width="0.8098%" height="15" fill="rgb(228,155,29)" fg:x="3345" fg:w="101"/><text x="27.0701%" y="703.50"></text></g><g><title>realloc (100 samples, 0.80%)</title><rect x="26.8281%" y="677" width="0.8018%" height="15" fill="rgb(243,57,37)" fg:x="3346" fg:w="100"/><text x="27.0781%" y="687.50"></text></g><g><title>[libc-2.28.so] (79 samples, 0.63%)</title><rect x="26.9965%" y="661" width="0.6334%" height="15" fill="rgb(244,167,17)" fg:x="3367" fg:w="79"/><text x="27.2465%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.11%)</title><rect x="27.5176%" y="645" width="0.1123%" height="15" fill="rgb(207,181,38)" fg:x="3432" fg:w="14"/><text x="27.7676%" y="655.50"></text></g><g><title>do_syscall_64 (14 samples, 0.11%)</title><rect x="27.5176%" y="629" width="0.1123%" height="15" fill="rgb(211,8,23)" fg:x="3432" fg:w="14"/><text x="27.7676%" y="639.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.11%)</title><rect x="27.5176%" y="613" width="0.1123%" height="15" fill="rgb(235,11,44)" fg:x="3432" fg:w="14"/><text x="27.7676%" y="623.50"></text></g><g><title>do_futex (14 samples, 0.11%)</title><rect x="27.5176%" y="597" width="0.1123%" height="15" fill="rgb(248,18,52)" fg:x="3432" fg:w="14"/><text x="27.7676%" y="607.50"></text></g><g><title>futex_wake (6 samples, 0.05%)</title><rect x="27.5818%" y="581" width="0.0481%" height="15" fill="rgb(208,4,7)" fg:x="3440" fg:w="6"/><text x="27.8318%" y="591.50"></text></g><g><title>wake_up_q (4 samples, 0.03%)</title><rect x="27.5978%" y="565" width="0.0321%" height="15" fill="rgb(240,17,39)" fg:x="3442" fg:w="4"/><text x="27.8478%" y="575.50"></text></g><g><title>try_to_wake_up (4 samples, 0.03%)</title><rect x="27.5978%" y="549" width="0.0321%" height="15" fill="rgb(207,170,3)" fg:x="3442" fg:w="4"/><text x="27.8478%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (111 samples, 0.89%)</title><rect x="26.8040%" y="821" width="0.8900%" height="15" fill="rgb(236,100,52)" fg:x="3343" fg:w="111"/><text x="27.0540%" y="831.50"></text></g><g><title>core::ptr::write (8 samples, 0.06%)</title><rect x="27.6299%" y="805" width="0.0641%" height="15" fill="rgb(246,78,51)" fg:x="3446" fg:w="8"/><text x="27.8799%" y="815.50"></text></g><g><title>opentelemetry::core::Key::string (5 samples, 0.04%)</title><rect x="27.6940%" y="821" width="0.0401%" height="15" fill="rgb(211,17,15)" fg:x="3454" fg:w="5"/><text x="27.9440%" y="831.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (203 samples, 1.63%)</title><rect x="26.1145%" y="869" width="1.6276%" height="15" fill="rgb(209,59,46)" fg:x="3257" fg:w="203"/><text x="26.3645%" y="879.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (157 samples, 1.26%)</title><rect x="26.4833%" y="853" width="1.2588%" height="15" fill="rgb(210,92,25)" fg:x="3303" fg:w="157"/><text x="26.7333%" y="863.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_debug (157 samples, 1.26%)</title><rect x="26.4833%" y="837" width="1.2588%" height="15" fill="rgb(238,174,52)" fg:x="3303" fg:w="157"/><text x="26.7333%" y="847.50"></text></g><g><title>tracing_core::span::Record::record (204 samples, 1.64%)</title><rect x="26.1145%" y="901" width="1.6357%" height="15" fill="rgb(230,73,7)" fg:x="3257" fg:w="204"/><text x="26.3645%" y="911.50"></text></g><g><title>tracing_core::field::ValueSet::record (204 samples, 1.64%)</title><rect x="26.1145%" y="885" width="1.6357%" height="15" fill="rgb(243,124,40)" fg:x="3257" fg:w="204"/><text x="26.3645%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="27.7502%" y="869" width="0.0321%" height="15" fill="rgb(244,170,11)" fg:x="3461" fg:w="4"/><text x="28.0002%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="27.8143%" y="853" width="0.0321%" height="15" fill="rgb(207,114,54)" fg:x="3469" fg:w="4"/><text x="28.0643%" y="863.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="27.8624%" y="821" width="0.0160%" height="15" fill="rgb(205,42,20)" fg:x="3475" fg:w="2"/><text x="28.1124%" y="831.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (17 samples, 0.14%)</title><rect x="27.8464%" y="837" width="0.1363%" height="15" fill="rgb(230,30,28)" fg:x="3473" fg:w="17"/><text x="28.0964%" y="847.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (13 samples, 0.10%)</title><rect x="27.8784%" y="821" width="0.1042%" height="15" fill="rgb(205,73,54)" fg:x="3477" fg:w="13"/><text x="28.1284%" y="831.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (12 samples, 0.10%)</title><rect x="27.8865%" y="805" width="0.0962%" height="15" fill="rgb(254,227,23)" fg:x="3478" fg:w="12"/><text x="28.1365%" y="815.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (12 samples, 0.10%)</title><rect x="27.8865%" y="789" width="0.0962%" height="15" fill="rgb(228,202,34)" fg:x="3478" fg:w="12"/><text x="28.1365%" y="799.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (12 samples, 0.10%)</title><rect x="27.8865%" y="773" width="0.0962%" height="15" fill="rgb(222,225,37)" fg:x="3478" fg:w="12"/><text x="28.1365%" y="783.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (10 samples, 0.08%)</title><rect x="27.9025%" y="757" width="0.0802%" height="15" fill="rgb(221,14,54)" fg:x="3480" fg:w="10"/><text x="28.1525%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (10 samples, 0.08%)</title><rect x="27.9025%" y="741" width="0.0802%" height="15" fill="rgb(254,102,2)" fg:x="3480" fg:w="10"/><text x="28.1525%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="27.9666%" y="725" width="0.0160%" height="15" fill="rgb(232,104,17)" fg:x="3488" fg:w="2"/><text x="28.2166%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="27.9666%" y="709" width="0.0160%" height="15" fill="rgb(250,220,14)" fg:x="3488" fg:w="2"/><text x="28.2166%" y="719.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (32 samples, 0.26%)</title><rect x="27.7502%" y="901" width="0.2566%" height="15" fill="rgb(241,158,9)" fg:x="3461" fg:w="32"/><text x="28.0002%" y="911.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (32 samples, 0.26%)</title><rect x="27.7502%" y="885" width="0.2566%" height="15" fill="rgb(246,9,43)" fg:x="3461" fg:w="32"/><text x="28.0002%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (28 samples, 0.22%)</title><rect x="27.7822%" y="869" width="0.2245%" height="15" fill="rgb(206,73,33)" fg:x="3465" fg:w="28"/><text x="28.0322%" y="879.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (20 samples, 0.16%)</title><rect x="27.8464%" y="853" width="0.1604%" height="15" fill="rgb(222,79,8)" fg:x="3473" fg:w="20"/><text x="28.0964%" y="863.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (3 samples, 0.02%)</title><rect x="27.9827%" y="837" width="0.0241%" height="15" fill="rgb(234,8,54)" fg:x="3490" fg:w="3"/><text x="28.2327%" y="847.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (6 samples, 0.05%)</title><rect x="28.0067%" y="901" width="0.0481%" height="15" fill="rgb(209,134,38)" fg:x="3493" fg:w="6"/><text x="28.2567%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (5 samples, 0.04%)</title><rect x="28.0148%" y="885" width="0.0401%" height="15" fill="rgb(230,127,29)" fg:x="3494" fg:w="5"/><text x="28.2648%" y="895.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (4 samples, 0.03%)</title><rect x="28.0228%" y="869" width="0.0321%" height="15" fill="rgb(242,44,41)" fg:x="3495" fg:w="4"/><text x="28.2728%" y="879.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (4 samples, 0.03%)</title><rect x="28.0228%" y="853" width="0.0321%" height="15" fill="rgb(222,56,43)" fg:x="3495" fg:w="4"/><text x="28.2728%" y="863.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (4 samples, 0.03%)</title><rect x="28.0228%" y="837" width="0.0321%" height="15" fill="rgb(238,39,47)" fg:x="3495" fg:w="4"/><text x="28.2728%" y="847.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (4 samples, 0.03%)</title><rect x="28.0228%" y="821" width="0.0321%" height="15" fill="rgb(226,79,43)" fg:x="3495" fg:w="4"/><text x="28.2728%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.02%)</title><rect x="28.0548%" y="869" width="0.0241%" height="15" fill="rgb(242,105,53)" fg:x="3499" fg:w="3"/><text x="28.3048%" y="879.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (2 samples, 0.02%)</title><rect x="28.0629%" y="853" width="0.0160%" height="15" fill="rgb(251,132,46)" fg:x="3500" fg:w="2"/><text x="28.3129%" y="863.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (2 samples, 0.02%)</title><rect x="28.0629%" y="837" width="0.0160%" height="15" fill="rgb(231,77,14)" fg:x="3500" fg:w="2"/><text x="28.3129%" y="847.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="28.0629%" y="821" width="0.0160%" height="15" fill="rgb(240,135,9)" fg:x="3500" fg:w="2"/><text x="28.3129%" y="831.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="28.0629%" y="805" width="0.0160%" height="15" fill="rgb(248,109,14)" fg:x="3500" fg:w="2"/><text x="28.3129%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="28.0949%" y="821" width="0.0160%" height="15" fill="rgb(227,146,52)" fg:x="3504" fg:w="2"/><text x="28.3449%" y="831.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_record (293 samples, 2.35%)</title><rect x="25.7777%" y="917" width="2.3493%" height="15" fill="rgb(232,54,3)" fg:x="3215" fg:w="293"/><text x="26.0277%" y="927.50">&lt;..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (9 samples, 0.07%)</title><rect x="28.0548%" y="901" width="0.0722%" height="15" fill="rgb(229,201,43)" fg:x="3499" fg:w="9"/><text x="28.3048%" y="911.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (9 samples, 0.07%)</title><rect x="28.0548%" y="885" width="0.0722%" height="15" fill="rgb(252,161,33)" fg:x="3499" fg:w="9"/><text x="28.3048%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.05%)</title><rect x="28.0789%" y="869" width="0.0481%" height="15" fill="rgb(226,146,40)" fg:x="3502" fg:w="6"/><text x="28.3289%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.05%)</title><rect x="28.0789%" y="853" width="0.0481%" height="15" fill="rgb(219,47,25)" fg:x="3502" fg:w="6"/><text x="28.3289%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (6 samples, 0.05%)</title><rect x="28.0789%" y="837" width="0.0481%" height="15" fill="rgb(250,135,13)" fg:x="3502" fg:w="6"/><text x="28.3289%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="28.1110%" y="821" width="0.0160%" height="15" fill="rgb(219,229,18)" fg:x="3506" fg:w="2"/><text x="28.3610%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="28.1110%" y="805" width="0.0160%" height="15" fill="rgb(217,152,27)" fg:x="3506" fg:w="2"/><text x="28.3610%" y="815.50"></text></g><g><title>tracing::span::Inner::record (294 samples, 2.36%)</title><rect x="25.7777%" y="965" width="2.3573%" height="15" fill="rgb(225,71,47)" fg:x="3215" fg:w="294"/><text x="26.0277%" y="975.50">t..</text></g><g><title>tracing_core::dispatcher::Dispatch::record (294 samples, 2.36%)</title><rect x="25.7777%" y="949" width="2.3573%" height="15" fill="rgb(220,139,14)" fg:x="3215" fg:w="294"/><text x="26.0277%" y="959.50">t..</text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::record (294 samples, 2.36%)</title><rect x="25.7777%" y="933" width="2.3573%" height="15" fill="rgb(247,54,32)" fg:x="3215" fg:w="294"/><text x="26.0277%" y="943.50">&lt;..</text></g><g><title>tracing::span::Span::record_all (299 samples, 2.40%)</title><rect x="25.7537%" y="981" width="2.3974%" height="15" fill="rgb(252,131,39)" fg:x="3212" fg:w="299"/><text x="26.0037%" y="991.50">tr..</text></g><g><title>tracing_core::span::Record::new (2 samples, 0.02%)</title><rect x="28.1350%" y="965" width="0.0160%" height="15" fill="rgb(210,108,39)" fg:x="3509" fg:w="2"/><text x="28.3850%" y="975.50"></text></g><g><title>tracing::span::Span::record (335 samples, 2.69%)</title><rect x="25.4811%" y="997" width="2.6860%" height="15" fill="rgb(205,23,29)" fg:x="3178" fg:w="335"/><text x="25.7311%" y="1007.50">tr..</text></g><g><title>tracing_core::metadata::Metadata::fields (2 samples, 0.02%)</title><rect x="28.1511%" y="981" width="0.0160%" height="15" fill="rgb(246,139,46)" fg:x="3511" fg:w="2"/><text x="28.4011%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,879 samples, 23.08%)</title><rect x="5.1796%" y="1029" width="23.0837%" height="15" fill="rgb(250,81,26)" fg:x="646" fg:w="2879"/><text x="5.4296%" y="1039.50">&lt;core::future::from_generator::GenFut..</text></g><g><title>fred::utils::request_response::_{{closure}} (2,879 samples, 23.08%)</title><rect x="5.1796%" y="1013" width="23.0837%" height="15" fill="rgb(214,104,7)" fg:x="646" fg:w="2879"/><text x="5.4296%" y="1023.50">fred::utils::request_response::_{{clo..</text></g><g><title>tracing_futures::Instrument::instrument (12 samples, 0.10%)</title><rect x="28.1671%" y="997" width="0.0962%" height="15" fill="rgb(233,189,8)" fg:x="3513" fg:w="12"/><text x="28.4171%" y="1007.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="28.1911%" y="981" width="0.0722%" height="15" fill="rgb(228,141,17)" fg:x="3516" fg:w="9"/><text x="28.4411%" y="991.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="28.2633%" y="1029" width="0.0321%" height="15" fill="rgb(247,157,1)" fg:x="3525" fg:w="4"/><text x="28.5133%" y="1039.50"></text></g><g><title>fred::protocol::utils::frame_to_single_result (5 samples, 0.04%)</title><rect x="28.2954%" y="1029" width="0.0401%" height="15" fill="rgb(249,225,5)" fg:x="3529" fg:w="5"/><text x="28.5454%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (2 samples, 0.02%)</title><rect x="28.3194%" y="1013" width="0.0160%" height="15" fill="rgb(242,55,13)" fg:x="3532" fg:w="2"/><text x="28.5694%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,915 samples, 23.37%)</title><rect x="5.0353%" y="1061" width="23.3724%" height="15" fill="rgb(230,49,50)" fg:x="628" fg:w="2915"/><text x="5.2853%" y="1071.50">&lt;core::future::from_generator::GenFut..</text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (2,912 samples, 23.35%)</title><rect x="5.0593%" y="1045" width="23.3483%" height="15" fill="rgb(241,111,38)" fg:x="631" fg:w="2912"/><text x="5.3093%" y="1055.50">fred::commands::one_arg_value_cmd::_{..</text></g><g><title>fred::utils::request_response (9 samples, 0.07%)</title><rect x="28.3355%" y="1029" width="0.0722%" height="15" fill="rgb(252,155,4)" fg:x="3534" fg:w="9"/><text x="28.5855%" y="1039.50"></text></g><g><title>core::future::from_generator (9 samples, 0.07%)</title><rect x="28.3355%" y="1013" width="0.0722%" height="15" fill="rgb(212,69,32)" fg:x="3534" fg:w="9"/><text x="28.5855%" y="1023.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="28.3355%" y="997" width="0.0722%" height="15" fill="rgb(243,107,47)" fg:x="3534" fg:w="9"/><text x="28.5855%" y="1007.50"></text></g><g><title>[libc-2.28.so] (24 samples, 0.19%)</title><rect x="28.4076%" y="1061" width="0.1924%" height="15" fill="rgb(247,130,12)" fg:x="3543" fg:w="24"/><text x="28.6576%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,952 samples, 23.67%)</title><rect x="4.9471%" y="1093" width="23.6690%" height="15" fill="rgb(233,74,16)" fg:x="617" fg:w="2952"/><text x="5.1971%" y="1103.50">&lt;core::future::from_generator::GenFutu..</text></g><g><title>fred::commands::keys::incr::_{{closure}} (2,952 samples, 23.67%)</title><rect x="4.9471%" y="1077" width="23.6690%" height="15" fill="rgb(208,58,18)" fg:x="617" fg:w="2952"/><text x="5.1971%" y="1087.50">fred::commands::keys::incr::_{{closure..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,955 samples, 23.69%)</title><rect x="4.9310%" y="1125" width="23.6931%" height="15" fill="rgb(242,225,1)" fg:x="615" fg:w="2955"/><text x="5.1810%" y="1135.50">&lt;core::future::from_generator::GenFutu..</text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (2,955 samples, 23.69%)</title><rect x="4.9310%" y="1109" width="23.6931%" height="15" fill="rgb(249,39,40)" fg:x="615" fg:w="2955"/><text x="5.1810%" y="1119.50">fred::client::RedisClient::incr::_{{cl..</text></g><g><title>core::ptr::drop_in_place&lt;fred::types::RedisValue&gt; (4 samples, 0.03%)</title><rect x="28.6241%" y="1125" width="0.0321%" height="15" fill="rgb(207,72,44)" fg:x="3570" fg:w="4"/><text x="28.8741%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,430 samples, 27.50%)</title><rect x="1.3711%" y="1157" width="27.5016%" height="15" fill="rgb(215,193,12)" fg:x="171" fg:w="3430"/><text x="1.6211%" y="1167.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (2,998 samples, 24.04%)</title><rect x="4.8348%" y="1141" width="24.0378%" height="15" fill="rgb(248,41,39)" fg:x="603" fg:w="2998"/><text x="5.0848%" y="1151.50">pipeline_test::spawn_client_task::_{{c..</text></g><g><title>pipeline_test::utils::incr_atomic (27 samples, 0.22%)</title><rect x="28.6562%" y="1125" width="0.2165%" height="15" fill="rgb(253,85,4)" fg:x="3574" fg:w="27"/><text x="28.9062%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (25 samples, 0.20%)</title><rect x="28.6722%" y="1109" width="0.2004%" height="15" fill="rgb(243,70,31)" fg:x="3576" fg:w="25"/><text x="28.9222%" y="1119.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (2 samples, 0.02%)</title><rect x="28.9047%" y="997" width="0.0160%" height="15" fill="rgb(253,195,26)" fg:x="3605" fg:w="2"/><text x="29.1547%" y="1007.50"></text></g><g><title>fred::multiplexer::responses::check_command_resp_tx (7 samples, 0.06%)</title><rect x="28.9208%" y="997" width="0.0561%" height="15" fill="rgb(243,42,11)" fg:x="3607" fg:w="7"/><text x="29.1708%" y="1007.50"></text></g><g><title>fred::protocol::types::RedisCommand::take_resp_tx (7 samples, 0.06%)</title><rect x="28.9208%" y="981" width="0.0561%" height="15" fill="rgb(239,66,17)" fg:x="3607" fg:w="7"/><text x="29.1708%" y="991.50"></text></g><g><title>fred::utils::take_locked (7 samples, 0.06%)</title><rect x="28.9208%" y="965" width="0.0561%" height="15" fill="rgb(217,132,21)" fg:x="3607" fg:w="7"/><text x="29.1708%" y="975.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (7 samples, 0.06%)</title><rect x="28.9208%" y="949" width="0.0561%" height="15" fill="rgb(252,202,21)" fg:x="3607" fg:w="7"/><text x="29.1708%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (7 samples, 0.06%)</title><rect x="28.9208%" y="933" width="0.0561%" height="15" fill="rgb(233,98,36)" fg:x="3607" fg:w="7"/><text x="29.1708%" y="943.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="29.0651%" y="949" width="0.0641%" height="15" fill="rgb(216,153,54)" fg:x="3625" fg:w="8"/><text x="29.3151%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.08%)</title><rect x="29.1292%" y="949" width="0.0802%" height="15" fill="rgb(250,99,7)" fg:x="3633" fg:w="10"/><text x="29.3792%" y="959.50"></text></g><g><title>core::mem::drop (10 samples, 0.08%)</title><rect x="29.1292%" y="933" width="0.0802%" height="15" fill="rgb(207,56,50)" fg:x="3633" fg:w="10"/><text x="29.3792%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt;&gt; (10 samples, 0.08%)</title><rect x="29.1292%" y="917" width="0.0802%" height="15" fill="rgb(244,61,34)" fg:x="3633" fg:w="10"/><text x="29.3792%" y="927.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.08%)</title><rect x="29.1292%" y="901" width="0.0802%" height="15" fill="rgb(241,50,38)" fg:x="3633" fg:w="10"/><text x="29.3792%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt;&gt; (28 samples, 0.22%)</title><rect x="29.0090%" y="981" width="0.2245%" height="15" fill="rgb(212,166,30)" fg:x="3618" fg:w="28"/><text x="29.2590%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.22%)</title><rect x="29.0090%" y="965" width="0.2245%" height="15" fill="rgb(249,127,32)" fg:x="3618" fg:w="28"/><text x="29.2590%" y="975.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="29.2094%" y="949" width="0.0241%" height="15" fill="rgb(209,103,0)" fg:x="3643" fg:w="3"/><text x="29.4594%" y="959.50"></text></g><g><title>[libc-2.28.so] (17 samples, 0.14%)</title><rect x="29.2335%" y="933" width="0.1363%" height="15" fill="rgb(238,209,51)" fg:x="3646" fg:w="17"/><text x="29.4835%" y="943.50"></text></g><g><title>cfree (18 samples, 0.14%)</title><rect x="29.3698%" y="933" width="0.1443%" height="15" fill="rgb(237,56,23)" fg:x="3663" fg:w="18"/><text x="29.6198%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.42%)</title><rect x="29.2335%" y="965" width="0.4169%" height="15" fill="rgb(215,153,46)" fg:x="3646" fg:w="52"/><text x="29.4835%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fred::types::RedisValue]&gt; (52 samples, 0.42%)</title><rect x="29.2335%" y="949" width="0.4169%" height="15" fill="rgb(224,49,31)" fg:x="3646" fg:w="52"/><text x="29.4835%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::types::RedisValue&gt; (17 samples, 0.14%)</title><rect x="29.5141%" y="933" width="0.1363%" height="15" fill="rgb(250,18,42)" fg:x="3681" fg:w="17"/><text x="29.7641%" y="943.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="29.6504%" y="901" width="0.0641%" height="15" fill="rgb(215,176,39)" fg:x="3698" fg:w="8"/><text x="29.9004%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fred::types::RedisValue&gt;&gt; (63 samples, 0.51%)</title><rect x="29.2335%" y="981" width="0.5051%" height="15" fill="rgb(223,77,29)" fg:x="3646" fg:w="63"/><text x="29.4835%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fred::types::RedisValue&gt;&gt; (11 samples, 0.09%)</title><rect x="29.6504%" y="965" width="0.0882%" height="15" fill="rgb(234,94,52)" fg:x="3698" fg:w="11"/><text x="29.9004%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.09%)</title><rect x="29.6504%" y="949" width="0.0882%" height="15" fill="rgb(220,154,50)" fg:x="3698" fg:w="11"/><text x="29.9004%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.09%)</title><rect x="29.6504%" y="933" width="0.0882%" height="15" fill="rgb(212,11,10)" fg:x="3698" fg:w="11"/><text x="29.9004%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.09%)</title><rect x="29.6504%" y="917" width="0.0882%" height="15" fill="rgb(205,166,19)" fg:x="3698" fg:w="11"/><text x="29.9004%" y="927.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="29.7146%" y="901" width="0.0241%" height="15" fill="rgb(244,198,16)" fg:x="3706" fg:w="3"/><text x="29.9646%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::protocol::types::RedisCommandKind&gt; (5 samples, 0.04%)</title><rect x="29.7386%" y="981" width="0.0401%" height="15" fill="rgb(219,69,12)" fg:x="3709" fg:w="5"/><text x="29.9886%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (7 samples, 0.06%)</title><rect x="29.7787%" y="853" width="0.0561%" height="15" fill="rgb(245,30,7)" fg:x="3714" fg:w="7"/><text x="30.0287%" y="863.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.05%)</title><rect x="29.7867%" y="837" width="0.0481%" height="15" fill="rgb(218,221,48)" fg:x="3715" fg:w="6"/><text x="30.0367%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (6 samples, 0.05%)</title><rect x="29.7867%" y="821" width="0.0481%" height="15" fill="rgb(216,66,15)" fg:x="3715" fg:w="6"/><text x="30.0367%" y="831.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.04%)</title><rect x="29.7947%" y="805" width="0.0401%" height="15" fill="rgb(226,122,50)" fg:x="3716" fg:w="5"/><text x="30.0447%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (6 samples, 0.05%)</title><rect x="29.8509%" y="853" width="0.0481%" height="15" fill="rgb(239,156,16)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (6 samples, 0.05%)</title><rect x="29.8509%" y="837" width="0.0481%" height="15" fill="rgb(224,27,38)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="847.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="29.8509%" y="821" width="0.0481%" height="15" fill="rgb(224,39,27)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="831.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (6 samples, 0.05%)</title><rect x="29.8509%" y="805" width="0.0481%" height="15" fill="rgb(215,92,29)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="815.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (6 samples, 0.05%)</title><rect x="29.8509%" y="789" width="0.0481%" height="15" fill="rgb(207,159,16)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="799.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (6 samples, 0.05%)</title><rect x="29.8509%" y="773" width="0.0481%" height="15" fill="rgb(238,163,47)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="783.50"></text></g><g><title>__GI___pthread_rwlock_unlock (6 samples, 0.05%)</title><rect x="29.8509%" y="757" width="0.0481%" height="15" fill="rgb(219,91,49)" fg:x="3723" fg:w="6"/><text x="30.1009%" y="767.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.06%)</title><rect x="29.8990%" y="853" width="0.0641%" height="15" fill="rgb(227,167,31)" fg:x="3729" fg:w="8"/><text x="30.1490%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.06%)</title><rect x="29.8990%" y="837" width="0.0641%" height="15" fill="rgb(234,80,54)" fg:x="3729" fg:w="8"/><text x="30.1490%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.06%)</title><rect x="29.8990%" y="821" width="0.0641%" height="15" fill="rgb(212,114,2)" fg:x="3729" fg:w="8"/><text x="30.1490%" y="831.50"></text></g><g><title>__clock_gettime (7 samples, 0.06%)</title><rect x="29.9070%" y="805" width="0.0561%" height="15" fill="rgb(234,50,24)" fg:x="3730" fg:w="7"/><text x="30.1570%" y="815.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.05%)</title><rect x="29.9150%" y="789" width="0.0481%" height="15" fill="rgb(221,68,8)" fg:x="3731" fg:w="6"/><text x="30.1650%" y="799.50"></text></g><g><title>[[vdso]] (5 samples, 0.04%)</title><rect x="29.9230%" y="773" width="0.0401%" height="15" fill="rgb(254,180,31)" fg:x="3732" fg:w="5"/><text x="30.1730%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="29.9872%" y="805" width="0.0401%" height="15" fill="rgb(247,130,50)" fg:x="3740" fg:w="5"/><text x="30.2372%" y="815.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (9 samples, 0.07%)</title><rect x="29.9631%" y="853" width="0.0722%" height="15" fill="rgb(211,109,4)" fg:x="3737" fg:w="9"/><text x="30.2131%" y="863.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (9 samples, 0.07%)</title><rect x="29.9631%" y="837" width="0.0722%" height="15" fill="rgb(238,50,21)" fg:x="3737" fg:w="9"/><text x="30.2131%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (8 samples, 0.06%)</title><rect x="29.9711%" y="821" width="0.0641%" height="15" fill="rgb(225,57,45)" fg:x="3738" fg:w="8"/><text x="30.2211%" y="831.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (4 samples, 0.03%)</title><rect x="30.0353%" y="853" width="0.0321%" height="15" fill="rgb(209,196,50)" fg:x="3746" fg:w="4"/><text x="30.2853%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (4 samples, 0.03%)</title><rect x="30.0353%" y="837" width="0.0321%" height="15" fill="rgb(242,140,13)" fg:x="3746" fg:w="4"/><text x="30.2853%" y="847.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (4 samples, 0.03%)</title><rect x="30.0353%" y="821" width="0.0321%" height="15" fill="rgb(217,111,7)" fg:x="3746" fg:w="4"/><text x="30.2853%" y="831.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="30.0433%" y="805" width="0.0241%" height="15" fill="rgb(253,193,51)" fg:x="3747" fg:w="3"/><text x="30.2933%" y="815.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="30.0433%" y="789" width="0.0241%" height="15" fill="rgb(252,70,29)" fg:x="3747" fg:w="3"/><text x="30.2933%" y="799.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="30.0433%" y="773" width="0.0241%" height="15" fill="rgb(232,127,12)" fg:x="3747" fg:w="3"/><text x="30.2933%" y="783.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (39 samples, 0.31%)</title><rect x="29.7787%" y="869" width="0.3127%" height="15" fill="rgb(211,180,21)" fg:x="3714" fg:w="39"/><text x="30.0287%" y="879.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (3 samples, 0.02%)</title><rect x="30.0674%" y="853" width="0.0241%" height="15" fill="rgb(229,72,13)" fg:x="3750" fg:w="3"/><text x="30.3174%" y="863.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (2 samples, 0.02%)</title><rect x="30.0754%" y="837" width="0.0160%" height="15" fill="rgb(240,211,49)" fg:x="3751" fg:w="2"/><text x="30.3254%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="30.0754%" y="821" width="0.0160%" height="15" fill="rgb(219,149,40)" fg:x="3751" fg:w="2"/><text x="30.3254%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="30.0754%" y="805" width="0.0160%" height="15" fill="rgb(210,127,46)" fg:x="3751" fg:w="2"/><text x="30.3254%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="30.0754%" y="789" width="0.0160%" height="15" fill="rgb(220,106,7)" fg:x="3751" fg:w="2"/><text x="30.3254%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="30.1636%" y="709" width="0.0160%" height="15" fill="rgb(249,31,22)" fg:x="3762" fg:w="2"/><text x="30.4136%" y="719.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.1636%" y="693" width="0.0160%" height="15" fill="rgb(253,1,49)" fg:x="3762" fg:w="2"/><text x="30.4136%" y="703.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="30.1636%" y="677" width="0.0160%" height="15" fill="rgb(227,144,33)" fg:x="3762" fg:w="2"/><text x="30.4136%" y="687.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="30.1636%" y="661" width="0.0160%" height="15" fill="rgb(249,163,44)" fg:x="3762" fg:w="2"/><text x="30.4136%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (12 samples, 0.10%)</title><rect x="30.1315%" y="725" width="0.0962%" height="15" fill="rgb(234,15,39)" fg:x="3758" fg:w="12"/><text x="30.3815%" y="735.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (6 samples, 0.05%)</title><rect x="30.1796%" y="709" width="0.0481%" height="15" fill="rgb(207,66,16)" fg:x="3764" fg:w="6"/><text x="30.4296%" y="719.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (6 samples, 0.05%)</title><rect x="30.1796%" y="693" width="0.0481%" height="15" fill="rgb(233,112,24)" fg:x="3764" fg:w="6"/><text x="30.4296%" y="703.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="30.2037%" y="677" width="0.0241%" height="15" fill="rgb(230,90,22)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="30.2037%" y="661" width="0.0241%" height="15" fill="rgb(229,61,13)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="671.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="30.2037%" y="645" width="0.0241%" height="15" fill="rgb(225,57,24)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="655.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="30.2037%" y="629" width="0.0241%" height="15" fill="rgb(208,169,48)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="639.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (3 samples, 0.02%)</title><rect x="30.2037%" y="613" width="0.0241%" height="15" fill="rgb(244,218,51)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="623.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (3 samples, 0.02%)</title><rect x="30.2037%" y="597" width="0.0241%" height="15" fill="rgb(214,148,10)" fg:x="3767" fg:w="3"/><text x="30.4537%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="30.2117%" y="581" width="0.0160%" height="15" fill="rgb(225,174,27)" fg:x="3768" fg:w="2"/><text x="30.4617%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="30.2117%" y="565" width="0.0160%" height="15" fill="rgb(230,96,26)" fg:x="3768" fg:w="2"/><text x="30.4617%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="30.2277%" y="725" width="0.0160%" height="15" fill="rgb(232,10,30)" fg:x="3770" fg:w="2"/><text x="30.4777%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (2 samples, 0.02%)</title><rect x="30.2277%" y="709" width="0.0160%" height="15" fill="rgb(222,8,50)" fg:x="3770" fg:w="2"/><text x="30.4777%" y="719.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="30.2277%" y="693" width="0.0160%" height="15" fill="rgb(213,81,27)" fg:x="3770" fg:w="2"/><text x="30.4777%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (16 samples, 0.13%)</title><rect x="30.1235%" y="789" width="0.1283%" height="15" fill="rgb(245,50,10)" fg:x="3757" fg:w="16"/><text x="30.3735%" y="799.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (16 samples, 0.13%)</title><rect x="30.1235%" y="773" width="0.1283%" height="15" fill="rgb(216,100,18)" fg:x="3757" fg:w="16"/><text x="30.3735%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (16 samples, 0.13%)</title><rect x="30.1235%" y="757" width="0.1283%" height="15" fill="rgb(236,147,54)" fg:x="3757" fg:w="16"/><text x="30.3735%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.12%)</title><rect x="30.1315%" y="741" width="0.1203%" height="15" fill="rgb(205,143,26)" fg:x="3758" fg:w="15"/><text x="30.3815%" y="751.50"></text></g><g><title>tracing_core::dispatcher::get_default (20 samples, 0.16%)</title><rect x="30.1155%" y="837" width="0.1604%" height="15" fill="rgb(236,26,9)" fg:x="3756" fg:w="20"/><text x="30.3655%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.16%)</title><rect x="30.1155%" y="821" width="0.1604%" height="15" fill="rgb(221,165,53)" fg:x="3756" fg:w="20"/><text x="30.3655%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (20 samples, 0.16%)</title><rect x="30.1155%" y="805" width="0.1604%" height="15" fill="rgb(214,110,17)" fg:x="3756" fg:w="20"/><text x="30.3655%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (3 samples, 0.02%)</title><rect x="30.2518%" y="789" width="0.0241%" height="15" fill="rgb(237,197,12)" fg:x="3773" fg:w="3"/><text x="30.5018%" y="799.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (2 samples, 0.02%)</title><rect x="30.2598%" y="773" width="0.0160%" height="15" fill="rgb(205,84,17)" fg:x="3774" fg:w="2"/><text x="30.5098%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (63 samples, 0.51%)</title><rect x="29.7787%" y="949" width="0.5051%" height="15" fill="rgb(237,18,45)" fg:x="3714" fg:w="63"/><text x="30.0287%" y="959.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (63 samples, 0.51%)</title><rect x="29.7787%" y="933" width="0.5051%" height="15" fill="rgb(221,87,14)" fg:x="3714" fg:w="63"/><text x="30.0287%" y="943.50"></text></g><g><title>tracing::span::Span::do_exit (63 samples, 0.51%)</title><rect x="29.7787%" y="917" width="0.5051%" height="15" fill="rgb(238,186,15)" fg:x="3714" fg:w="63"/><text x="30.0287%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (63 samples, 0.51%)</title><rect x="29.7787%" y="901" width="0.5051%" height="15" fill="rgb(208,115,11)" fg:x="3714" fg:w="63"/><text x="30.0287%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (63 samples, 0.51%)</title><rect x="29.7787%" y="885" width="0.5051%" height="15" fill="rgb(254,175,0)" fg:x="3714" fg:w="63"/><text x="30.0287%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (24 samples, 0.19%)</title><rect x="30.0914%" y="869" width="0.1924%" height="15" fill="rgb(227,24,42)" fg:x="3753" fg:w="24"/><text x="30.3414%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (24 samples, 0.19%)</title><rect x="30.0914%" y="853" width="0.1924%" height="15" fill="rgb(223,211,37)" fg:x="3753" fg:w="24"/><text x="30.3414%" y="863.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="30.3159%" y="901" width="0.0160%" height="15" fill="rgb(235,49,27)" fg:x="3781" fg:w="2"/><text x="30.5659%" y="911.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (2 samples, 0.02%)</title><rect x="30.3159%" y="885" width="0.0160%" height="15" fill="rgb(254,97,51)" fg:x="3781" fg:w="2"/><text x="30.5659%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (8 samples, 0.06%)</title><rect x="30.2999%" y="917" width="0.0641%" height="15" fill="rgb(249,51,40)" fg:x="3779" fg:w="8"/><text x="30.5499%" y="927.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (2 samples, 0.02%)</title><rect x="30.3480%" y="901" width="0.0160%" height="15" fill="rgb(210,128,45)" fg:x="3785" fg:w="2"/><text x="30.5980%" y="911.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="30.3480%" y="885" width="0.0160%" height="15" fill="rgb(224,137,50)" fg:x="3785" fg:w="2"/><text x="30.5980%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::Dispatch&gt; (2 samples, 0.02%)</title><rect x="30.4121%" y="629" width="0.0160%" height="15" fill="rgb(242,15,9)" fg:x="3793" fg:w="2"/><text x="30.6621%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.02%)</title><rect x="30.4121%" y="613" width="0.0160%" height="15" fill="rgb(233,187,41)" fg:x="3793" fg:w="2"/><text x="30.6621%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.4121%" y="597" width="0.0160%" height="15" fill="rgb(227,2,29)" fg:x="3793" fg:w="2"/><text x="30.6621%" y="607.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (3 samples, 0.02%)</title><rect x="30.4362%" y="629" width="0.0241%" height="15" fill="rgb(222,70,3)" fg:x="3796" fg:w="3"/><text x="30.6862%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 0.02%)</title><rect x="30.4362%" y="613" width="0.0241%" height="15" fill="rgb(213,11,42)" fg:x="3796" fg:w="3"/><text x="30.6862%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 0.02%)</title><rect x="30.4362%" y="597" width="0.0241%" height="15" fill="rgb(225,150,9)" fg:x="3796" fg:w="3"/><text x="30.6862%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (3 samples, 0.02%)</title><rect x="30.4362%" y="581" width="0.0241%" height="15" fill="rgb(230,162,45)" fg:x="3796" fg:w="3"/><text x="30.6862%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.02%)</title><rect x="30.4602%" y="565" width="0.0241%" height="15" fill="rgb(222,14,52)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.02%)</title><rect x="30.4602%" y="549" width="0.0241%" height="15" fill="rgb(254,198,14)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (3 samples, 0.02%)</title><rect x="30.4602%" y="533" width="0.0241%" height="15" fill="rgb(220,217,30)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (3 samples, 0.02%)</title><rect x="30.4602%" y="517" width="0.0241%" height="15" fill="rgb(215,146,41)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="527.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.02%)</title><rect x="30.4602%" y="501" width="0.0241%" height="15" fill="rgb(217,27,36)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="30.4602%" y="485" width="0.0241%" height="15" fill="rgb(219,218,39)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="30.4602%" y="469" width="0.0241%" height="15" fill="rgb(219,4,42)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="479.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="30.4602%" y="453" width="0.0241%" height="15" fill="rgb(249,119,36)" fg:x="3799" fg:w="3"/><text x="30.7102%" y="463.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (11 samples, 0.09%)</title><rect x="30.4041%" y="837" width="0.0882%" height="15" fill="rgb(209,23,33)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (11 samples, 0.09%)</title><rect x="30.4041%" y="821" width="0.0882%" height="15" fill="rgb(211,10,0)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="831.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (11 samples, 0.09%)</title><rect x="30.4041%" y="805" width="0.0882%" height="15" fill="rgb(208,99,37)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="815.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (11 samples, 0.09%)</title><rect x="30.4041%" y="789" width="0.0882%" height="15" fill="rgb(213,132,31)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (11 samples, 0.09%)</title><rect x="30.4041%" y="773" width="0.0882%" height="15" fill="rgb(243,129,40)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (11 samples, 0.09%)</title><rect x="30.4041%" y="757" width="0.0882%" height="15" fill="rgb(210,66,33)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (11 samples, 0.09%)</title><rect x="30.4041%" y="741" width="0.0882%" height="15" fill="rgb(209,189,4)" fg:x="3792" fg:w="11"/><text x="30.6541%" y="751.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (10 samples, 0.08%)</title><rect x="30.4121%" y="725" width="0.0802%" height="15" fill="rgb(214,107,37)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (10 samples, 0.08%)</title><rect x="30.4121%" y="709" width="0.0802%" height="15" fill="rgb(245,88,54)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (10 samples, 0.08%)</title><rect x="30.4121%" y="693" width="0.0802%" height="15" fill="rgb(205,146,20)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.08%)</title><rect x="30.4121%" y="677" width="0.0802%" height="15" fill="rgb(220,161,25)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="687.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (10 samples, 0.08%)</title><rect x="30.4121%" y="661" width="0.0802%" height="15" fill="rgb(215,152,15)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (10 samples, 0.08%)</title><rect x="30.4121%" y="645" width="0.0802%" height="15" fill="rgb(233,192,44)" fg:x="3793" fg:w="10"/><text x="30.6621%" y="655.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (4 samples, 0.03%)</title><rect x="30.4602%" y="629" width="0.0321%" height="15" fill="rgb(240,170,46)" fg:x="3799" fg:w="4"/><text x="30.7102%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (4 samples, 0.03%)</title><rect x="30.4602%" y="613" width="0.0321%" height="15" fill="rgb(207,104,33)" fg:x="3799" fg:w="4"/><text x="30.7102%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::clear (4 samples, 0.03%)</title><rect x="30.4602%" y="597" width="0.0321%" height="15" fill="rgb(219,21,39)" fg:x="3799" fg:w="4"/><text x="30.7102%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::clear (4 samples, 0.03%)</title><rect x="30.4602%" y="581" width="0.0321%" height="15" fill="rgb(214,133,29)" fg:x="3799" fg:w="4"/><text x="30.7102%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="30.5003%" y="773" width="0.0160%" height="15" fill="rgb(226,93,6)" fg:x="3804" fg:w="2"/><text x="30.7503%" y="783.50"></text></g><g><title>&lt;sharded_slab::page::stack::TransferStack&lt;C&gt; as sharded_slab::page::FreeList&lt;C&gt;&gt;::push (13 samples, 0.10%)</title><rect x="30.5244%" y="725" width="0.1042%" height="15" fill="rgb(252,222,34)" fg:x="3807" fg:w="13"/><text x="30.7744%" y="735.50"></text></g><g><title>sharded_slab::page::stack::TransferStack&lt;C&gt;::push (13 samples, 0.10%)</title><rect x="30.5244%" y="709" width="0.1042%" height="15" fill="rgb(252,92,48)" fg:x="3807" fg:w="13"/><text x="30.7744%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::Dispatch&gt; (2 samples, 0.02%)</title><rect x="30.6607%" y="629" width="0.0160%" height="15" fill="rgb(245,223,24)" fg:x="3824" fg:w="2"/><text x="30.9107%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.02%)</title><rect x="30.6607%" y="613" width="0.0160%" height="15" fill="rgb(205,176,3)" fg:x="3824" fg:w="2"/><text x="30.9107%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.6607%" y="597" width="0.0160%" height="15" fill="rgb(235,151,15)" fg:x="3824" fg:w="2"/><text x="30.9107%" y="607.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (2 samples, 0.02%)</title><rect x="30.6767%" y="629" width="0.0160%" height="15" fill="rgb(237,209,11)" fg:x="3826" fg:w="2"/><text x="30.9267%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="30.6767%" y="613" width="0.0160%" height="15" fill="rgb(243,227,24)" fg:x="3826" fg:w="2"/><text x="30.9267%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="30.6767%" y="597" width="0.0160%" height="15" fill="rgb(239,193,16)" fg:x="3826" fg:w="2"/><text x="30.9267%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default (6 samples, 0.05%)</title><rect x="30.6928%" y="629" width="0.0481%" height="15" fill="rgb(231,27,9)" fg:x="3828" fg:w="6"/><text x="30.9428%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.05%)</title><rect x="30.6928%" y="613" width="0.0481%" height="15" fill="rgb(219,169,10)" fg:x="3828" fg:w="6"/><text x="30.9428%" y="623.50"></text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (5 samples, 0.04%)</title><rect x="30.7008%" y="597" width="0.0401%" height="15" fill="rgb(244,229,43)" fg:x="3829" fg:w="5"/><text x="30.9508%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.04%)</title><rect x="30.7008%" y="581" width="0.0401%" height="15" fill="rgb(254,38,20)" fg:x="3829" fg:w="5"/><text x="30.9508%" y="591.50"></text></g><g><title>&lt;tracing_core::dispatcher::Dispatch as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="30.7008%" y="565" width="0.0401%" height="15" fill="rgb(250,47,30)" fg:x="3829" fg:w="5"/><text x="30.9508%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="30.7008%" y="549" width="0.0401%" height="15" fill="rgb(224,124,36)" fg:x="3829" fg:w="5"/><text x="30.9508%" y="559.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="30.7489%" y="453" width="0.0160%" height="15" fill="rgb(246,68,51)" fg:x="3835" fg:w="2"/><text x="30.9989%" y="463.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.03%)</title><rect x="30.7489%" y="501" width="0.0321%" height="15" fill="rgb(253,43,49)" fg:x="3835" fg:w="4"/><text x="30.9989%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="30.7489%" y="485" width="0.0321%" height="15" fill="rgb(219,54,36)" fg:x="3835" fg:w="4"/><text x="30.9989%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="30.7489%" y="469" width="0.0321%" height="15" fill="rgb(227,133,34)" fg:x="3835" fg:w="4"/><text x="30.9989%" y="479.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="30.7649%" y="453" width="0.0160%" height="15" fill="rgb(247,227,15)" fg:x="3837" fg:w="2"/><text x="31.0149%" y="463.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (34 samples, 0.27%)</title><rect x="30.5164%" y="757" width="0.2726%" height="15" fill="rgb(229,96,14)" fg:x="3806" fg:w="34"/><text x="30.7664%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (34 samples, 0.27%)</title><rect x="30.5164%" y="741" width="0.2726%" height="15" fill="rgb(220,79,17)" fg:x="3806" fg:w="34"/><text x="30.7664%" y="751.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.16%)</title><rect x="30.6286%" y="725" width="0.1604%" height="15" fill="rgb(205,131,53)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (20 samples, 0.16%)</title><rect x="30.6286%" y="709" width="0.1604%" height="15" fill="rgb(209,50,29)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (20 samples, 0.16%)</title><rect x="30.6286%" y="693" width="0.1604%" height="15" fill="rgb(245,86,46)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.16%)</title><rect x="30.6286%" y="677" width="0.1604%" height="15" fill="rgb(235,66,46)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="687.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (20 samples, 0.16%)</title><rect x="30.6286%" y="661" width="0.1604%" height="15" fill="rgb(232,148,31)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (20 samples, 0.16%)</title><rect x="30.6286%" y="645" width="0.1604%" height="15" fill="rgb(217,149,8)" fg:x="3820" fg:w="20"/><text x="30.8786%" y="655.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (6 samples, 0.05%)</title><rect x="30.7409%" y="629" width="0.0481%" height="15" fill="rgb(209,183,11)" fg:x="3834" fg:w="6"/><text x="30.9909%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (6 samples, 0.05%)</title><rect x="30.7409%" y="613" width="0.0481%" height="15" fill="rgb(208,55,20)" fg:x="3834" fg:w="6"/><text x="30.9909%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::clear (6 samples, 0.05%)</title><rect x="30.7409%" y="597" width="0.0481%" height="15" fill="rgb(218,39,14)" fg:x="3834" fg:w="6"/><text x="30.9909%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::clear (6 samples, 0.05%)</title><rect x="30.7409%" y="581" width="0.0481%" height="15" fill="rgb(216,169,33)" fg:x="3834" fg:w="6"/><text x="30.9909%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.04%)</title><rect x="30.7489%" y="565" width="0.0401%" height="15" fill="rgb(233,80,24)" fg:x="3835" fg:w="5"/><text x="30.9989%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.04%)</title><rect x="30.7489%" y="549" width="0.0401%" height="15" fill="rgb(213,179,31)" fg:x="3835" fg:w="5"/><text x="30.9989%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (5 samples, 0.04%)</title><rect x="30.7489%" y="533" width="0.0401%" height="15" fill="rgb(209,19,5)" fg:x="3835" fg:w="5"/><text x="30.9989%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (5 samples, 0.04%)</title><rect x="30.7489%" y="517" width="0.0401%" height="15" fill="rgb(219,18,35)" fg:x="3835" fg:w="5"/><text x="30.9989%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (51 samples, 0.41%)</title><rect x="30.3961%" y="869" width="0.4089%" height="15" fill="rgb(209,169,16)" fg:x="3791" fg:w="51"/><text x="30.6461%" y="879.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::_{{closure}} (50 samples, 0.40%)</title><rect x="30.4041%" y="853" width="0.4009%" height="15" fill="rgb(245,90,51)" fg:x="3792" fg:w="50"/><text x="30.6541%" y="863.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_remote (39 samples, 0.31%)</title><rect x="30.4923%" y="837" width="0.3127%" height="15" fill="rgb(220,99,45)" fg:x="3803" fg:w="39"/><text x="30.7423%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (38 samples, 0.30%)</title><rect x="30.5003%" y="821" width="0.3047%" height="15" fill="rgb(249,89,25)" fg:x="3804" fg:w="38"/><text x="30.7503%" y="831.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (38 samples, 0.30%)</title><rect x="30.5003%" y="805" width="0.3047%" height="15" fill="rgb(239,193,0)" fg:x="3804" fg:w="38"/><text x="30.7503%" y="815.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (38 samples, 0.30%)</title><rect x="30.5003%" y="789" width="0.3047%" height="15" fill="rgb(231,126,1)" fg:x="3804" fg:w="38"/><text x="30.7503%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (36 samples, 0.29%)</title><rect x="30.5164%" y="773" width="0.2886%" height="15" fill="rgb(243,166,3)" fg:x="3806" fg:w="36"/><text x="30.7664%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::mark_release (2 samples, 0.02%)</title><rect x="30.7890%" y="757" width="0.0160%" height="15" fill="rgb(223,22,34)" fg:x="3840" fg:w="2"/><text x="31.0390%" y="767.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (2 samples, 0.02%)</title><rect x="30.8050%" y="869" width="0.0160%" height="15" fill="rgb(251,52,51)" fg:x="3842" fg:w="2"/><text x="31.0550%" y="879.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (2 samples, 0.02%)</title><rect x="30.8050%" y="853" width="0.0160%" height="15" fill="rgb(221,165,28)" fg:x="3842" fg:w="2"/><text x="31.0550%" y="863.50"></text></g><g><title>sharded_slab::Pack::from_packed (2 samples, 0.02%)</title><rect x="30.8050%" y="837" width="0.0160%" height="15" fill="rgb(218,121,47)" fg:x="3842" fg:w="2"/><text x="31.0550%" y="847.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="30.8210%" y="869" width="0.0160%" height="15" fill="rgb(209,120,9)" fg:x="3844" fg:w="2"/><text x="31.0710%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (59 samples, 0.47%)</title><rect x="30.3720%" y="917" width="0.4731%" height="15" fill="rgb(236,68,12)" fg:x="3788" fg:w="59"/><text x="30.6220%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (57 samples, 0.46%)</title><rect x="30.3881%" y="901" width="0.4570%" height="15" fill="rgb(225,194,26)" fg:x="3790" fg:w="57"/><text x="30.6381%" y="911.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (57 samples, 0.46%)</title><rect x="30.3881%" y="885" width="0.4570%" height="15" fill="rgb(231,84,39)" fg:x="3790" fg:w="57"/><text x="30.6381%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (70 samples, 0.56%)</title><rect x="30.2919%" y="933" width="0.5613%" height="15" fill="rgb(210,11,45)" fg:x="3778" fg:w="70"/><text x="30.5419%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (74 samples, 0.59%)</title><rect x="30.2838%" y="949" width="0.5933%" height="15" fill="rgb(224,54,52)" fg:x="3777" fg:w="74"/><text x="30.5338%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing::span::Inner&gt;&gt; (3 samples, 0.02%)</title><rect x="30.8531%" y="933" width="0.0241%" height="15" fill="rgb(238,102,14)" fg:x="3848" fg:w="3"/><text x="31.1031%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Inner&gt; (3 samples, 0.02%)</title><rect x="30.8531%" y="917" width="0.0241%" height="15" fill="rgb(243,160,52)" fg:x="3848" fg:w="3"/><text x="31.1031%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::Dispatch&gt; (3 samples, 0.02%)</title><rect x="30.8531%" y="901" width="0.0241%" height="15" fill="rgb(216,114,19)" fg:x="3848" fg:w="3"/><text x="31.1031%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt;&gt; (3 samples, 0.02%)</title><rect x="30.8531%" y="885" width="0.0241%" height="15" fill="rgb(244,166,37)" fg:x="3848" fg:w="3"/><text x="31.1031%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="30.8531%" y="869" width="0.0241%" height="15" fill="rgb(246,29,44)" fg:x="3848" fg:w="3"/><text x="31.1031%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (2 samples, 0.02%)</title><rect x="30.9974%" y="821" width="0.0160%" height="15" fill="rgb(215,56,53)" fg:x="3866" fg:w="2"/><text x="31.2474%" y="831.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (9 samples, 0.07%)</title><rect x="30.9974%" y="869" width="0.0722%" height="15" fill="rgb(217,60,2)" fg:x="3866" fg:w="9"/><text x="31.2474%" y="879.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.07%)</title><rect x="30.9974%" y="853" width="0.0722%" height="15" fill="rgb(207,26,24)" fg:x="3866" fg:w="9"/><text x="31.2474%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (9 samples, 0.07%)</title><rect x="30.9974%" y="837" width="0.0722%" height="15" fill="rgb(252,210,15)" fg:x="3866" fg:w="9"/><text x="31.2474%" y="847.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (7 samples, 0.06%)</title><rect x="31.0135%" y="821" width="0.0561%" height="15" fill="rgb(253,209,26)" fg:x="3868" fg:w="7"/><text x="31.2635%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="31.0696%" y="869" width="0.0160%" height="15" fill="rgb(238,170,14)" fg:x="3875" fg:w="2"/><text x="31.3196%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (4 samples, 0.03%)</title><rect x="31.0856%" y="869" width="0.0321%" height="15" fill="rgb(216,178,15)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (4 samples, 0.03%)</title><rect x="31.0856%" y="853" width="0.0321%" height="15" fill="rgb(250,197,2)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (4 samples, 0.03%)</title><rect x="31.0856%" y="837" width="0.0321%" height="15" fill="rgb(212,70,42)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="847.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="31.0856%" y="821" width="0.0321%" height="15" fill="rgb(227,213,9)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="31.0856%" y="805" width="0.0321%" height="15" fill="rgb(245,99,25)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="31.0856%" y="789" width="0.0321%" height="15" fill="rgb(250,82,29)" fg:x="3877" fg:w="4"/><text x="31.3356%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (17 samples, 0.14%)</title><rect x="31.1177%" y="869" width="0.1363%" height="15" fill="rgb(241,226,54)" fg:x="3881" fg:w="17"/><text x="31.3677%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (17 samples, 0.14%)</title><rect x="31.1177%" y="853" width="0.1363%" height="15" fill="rgb(221,99,41)" fg:x="3881" fg:w="17"/><text x="31.3677%" y="863.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.14%)</title><rect x="31.1177%" y="837" width="0.1363%" height="15" fill="rgb(213,90,21)" fg:x="3881" fg:w="17"/><text x="31.3677%" y="847.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (16 samples, 0.13%)</title><rect x="31.1257%" y="821" width="0.1283%" height="15" fill="rgb(205,208,24)" fg:x="3882" fg:w="16"/><text x="31.3757%" y="831.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (16 samples, 0.13%)</title><rect x="31.1257%" y="805" width="0.1283%" height="15" fill="rgb(246,31,12)" fg:x="3882" fg:w="16"/><text x="31.3757%" y="815.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (16 samples, 0.13%)</title><rect x="31.1257%" y="789" width="0.1283%" height="15" fill="rgb(213,154,6)" fg:x="3882" fg:w="16"/><text x="31.3757%" y="799.50"></text></g><g><title>__GI___pthread_rwlock_unlock (16 samples, 0.13%)</title><rect x="31.1257%" y="773" width="0.1283%" height="15" fill="rgb(222,163,29)" fg:x="3882" fg:w="16"/><text x="31.3757%" y="783.50"></text></g><g><title>std::time::Instant::now (18 samples, 0.14%)</title><rect x="31.2620%" y="869" width="0.1443%" height="15" fill="rgb(227,201,8)" fg:x="3899" fg:w="18"/><text x="31.5120%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (16 samples, 0.13%)</title><rect x="31.2781%" y="853" width="0.1283%" height="15" fill="rgb(233,9,32)" fg:x="3901" fg:w="16"/><text x="31.5281%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::now (16 samples, 0.13%)</title><rect x="31.2781%" y="837" width="0.1283%" height="15" fill="rgb(217,54,24)" fg:x="3901" fg:w="16"/><text x="31.5281%" y="847.50"></text></g><g><title>__clock_gettime (16 samples, 0.13%)</title><rect x="31.2781%" y="821" width="0.1283%" height="15" fill="rgb(235,192,0)" fg:x="3901" fg:w="16"/><text x="31.5281%" y="831.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.11%)</title><rect x="31.2941%" y="805" width="0.1123%" height="15" fill="rgb(235,45,9)" fg:x="3903" fg:w="14"/><text x="31.5441%" y="815.50"></text></g><g><title>[[vdso]] (11 samples, 0.09%)</title><rect x="31.3182%" y="789" width="0.0882%" height="15" fill="rgb(246,42,40)" fg:x="3906" fg:w="11"/><text x="31.5682%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="31.4064%" y="837" width="0.0241%" height="15" fill="rgb(248,111,24)" fg:x="3917" fg:w="3"/><text x="31.6564%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.02%)</title><rect x="31.4144%" y="821" width="0.0160%" height="15" fill="rgb(249,65,22)" fg:x="3918" fg:w="2"/><text x="31.6644%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="31.4384%" y="821" width="0.0160%" height="15" fill="rgb(238,111,51)" fg:x="3921" fg:w="2"/><text x="31.6884%" y="831.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (10 samples, 0.08%)</title><rect x="31.4064%" y="869" width="0.0802%" height="15" fill="rgb(250,118,22)" fg:x="3917" fg:w="10"/><text x="31.6564%" y="879.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (10 samples, 0.08%)</title><rect x="31.4064%" y="853" width="0.0802%" height="15" fill="rgb(234,84,26)" fg:x="3917" fg:w="10"/><text x="31.6564%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (7 samples, 0.06%)</title><rect x="31.4304%" y="837" width="0.0561%" height="15" fill="rgb(243,172,12)" fg:x="3920" fg:w="7"/><text x="31.6804%" y="847.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (4 samples, 0.03%)</title><rect x="31.4545%" y="821" width="0.0321%" height="15" fill="rgb(236,150,49)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="831.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="31.4545%" y="805" width="0.0321%" height="15" fill="rgb(225,197,26)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="815.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (4 samples, 0.03%)</title><rect x="31.4545%" y="789" width="0.0321%" height="15" fill="rgb(214,17,42)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="799.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (4 samples, 0.03%)</title><rect x="31.4545%" y="773" width="0.0321%" height="15" fill="rgb(224,165,40)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="783.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (4 samples, 0.03%)</title><rect x="31.4545%" y="757" width="0.0321%" height="15" fill="rgb(246,100,4)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="767.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (4 samples, 0.03%)</title><rect x="31.4545%" y="741" width="0.0321%" height="15" fill="rgb(222,103,0)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="751.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (4 samples, 0.03%)</title><rect x="31.4545%" y="725" width="0.0321%" height="15" fill="rgb(227,189,26)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="31.4545%" y="709" width="0.0321%" height="15" fill="rgb(214,202,17)" fg:x="3923" fg:w="4"/><text x="31.7045%" y="719.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (18 samples, 0.14%)</title><rect x="31.4865%" y="869" width="0.1443%" height="15" fill="rgb(229,111,3)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (18 samples, 0.14%)</title><rect x="31.4865%" y="853" width="0.1443%" height="15" fill="rgb(229,172,15)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="863.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (18 samples, 0.14%)</title><rect x="31.4865%" y="837" width="0.1443%" height="15" fill="rgb(230,224,35)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="847.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (18 samples, 0.14%)</title><rect x="31.4865%" y="821" width="0.1443%" height="15" fill="rgb(251,141,6)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="831.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (18 samples, 0.14%)</title><rect x="31.4865%" y="805" width="0.1443%" height="15" fill="rgb(225,208,6)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="815.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (18 samples, 0.14%)</title><rect x="31.4865%" y="789" width="0.1443%" height="15" fill="rgb(246,181,16)" fg:x="3927" fg:w="18"/><text x="31.7365%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="31.6309%" y="837" width="0.0160%" height="15" fill="rgb(227,129,36)" fg:x="3945" fg:w="2"/><text x="31.8809%" y="847.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (2 samples, 0.02%)</title><rect x="31.6309%" y="821" width="0.0160%" height="15" fill="rgb(248,117,24)" fg:x="3945" fg:w="2"/><text x="31.8809%" y="831.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (2 samples, 0.02%)</title><rect x="31.6309%" y="805" width="0.0160%" height="15" fill="rgb(214,185,35)" fg:x="3945" fg:w="2"/><text x="31.8809%" y="815.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="31.6309%" y="789" width="0.0160%" height="15" fill="rgb(236,150,34)" fg:x="3945" fg:w="2"/><text x="31.8809%" y="799.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="31.6309%" y="773" width="0.0160%" height="15" fill="rgb(243,228,27)" fg:x="3945" fg:w="2"/><text x="31.8809%" y="783.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (96 samples, 0.77%)</title><rect x="30.8932%" y="885" width="0.7697%" height="15" fill="rgb(245,77,44)" fg:x="3853" fg:w="96"/><text x="31.1432%" y="895.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (4 samples, 0.03%)</title><rect x="31.6309%" y="869" width="0.0321%" height="15" fill="rgb(235,214,42)" fg:x="3945" fg:w="4"/><text x="31.8809%" y="879.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (4 samples, 0.03%)</title><rect x="31.6309%" y="853" width="0.0321%" height="15" fill="rgb(221,74,3)" fg:x="3945" fg:w="4"/><text x="31.8809%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="31.6469%" y="837" width="0.0160%" height="15" fill="rgb(206,121,29)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="31.6469%" y="821" width="0.0160%" height="15" fill="rgb(249,131,53)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="31.6469%" y="805" width="0.0160%" height="15" fill="rgb(236,170,29)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="31.6469%" y="789" width="0.0160%" height="15" fill="rgb(247,96,15)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="31.6469%" y="773" width="0.0160%" height="15" fill="rgb(211,210,7)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="31.6469%" y="757" width="0.0160%" height="15" fill="rgb(240,88,50)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="31.6469%" y="741" width="0.0160%" height="15" fill="rgb(209,229,26)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="31.6469%" y="725" width="0.0160%" height="15" fill="rgb(210,68,23)" fg:x="3947" fg:w="2"/><text x="31.8969%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.02%)</title><rect x="31.7511%" y="853" width="0.0160%" height="15" fill="rgb(229,180,13)" fg:x="3960" fg:w="2"/><text x="32.0011%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="31.7752%" y="757" width="0.0241%" height="15" fill="rgb(236,53,44)" fg:x="3963" fg:w="3"/><text x="32.0252%" y="767.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (42 samples, 0.34%)</title><rect x="31.7752%" y="805" width="0.3368%" height="15" fill="rgb(244,214,29)" fg:x="3963" fg:w="42"/><text x="32.0252%" y="815.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (42 samples, 0.34%)</title><rect x="31.7752%" y="789" width="0.3368%" height="15" fill="rgb(220,75,29)" fg:x="3963" fg:w="42"/><text x="32.0252%" y="799.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (42 samples, 0.34%)</title><rect x="31.7752%" y="773" width="0.3368%" height="15" fill="rgb(214,183,37)" fg:x="3963" fg:w="42"/><text x="32.0252%" y="783.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (39 samples, 0.31%)</title><rect x="31.7992%" y="757" width="0.3127%" height="15" fill="rgb(239,117,29)" fg:x="3966" fg:w="39"/><text x="32.0492%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (39 samples, 0.31%)</title><rect x="31.7992%" y="741" width="0.3127%" height="15" fill="rgb(237,171,35)" fg:x="3966" fg:w="39"/><text x="32.0492%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.14%)</title><rect x="31.9756%" y="725" width="0.1363%" height="15" fill="rgb(229,178,53)" fg:x="3988" fg:w="17"/><text x="32.2256%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.14%)</title><rect x="31.9756%" y="709" width="0.1363%" height="15" fill="rgb(210,102,19)" fg:x="3988" fg:w="17"/><text x="32.2256%" y="719.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (44 samples, 0.35%)</title><rect x="31.7672%" y="837" width="0.3528%" height="15" fill="rgb(235,127,22)" fg:x="3962" fg:w="44"/><text x="32.0172%" y="847.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (43 samples, 0.34%)</title><rect x="31.7752%" y="821" width="0.3448%" height="15" fill="rgb(244,31,31)" fg:x="3963" fg:w="43"/><text x="32.0252%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (57 samples, 0.46%)</title><rect x="31.6709%" y="869" width="0.4570%" height="15" fill="rgb(231,43,21)" fg:x="3950" fg:w="57"/><text x="31.9209%" y="879.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (45 samples, 0.36%)</title><rect x="31.7672%" y="853" width="0.3608%" height="15" fill="rgb(217,131,35)" fg:x="3962" fg:w="45"/><text x="32.0172%" y="863.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (7 samples, 0.06%)</title><rect x="32.1280%" y="805" width="0.0561%" height="15" fill="rgb(221,149,4)" fg:x="4007" fg:w="7"/><text x="32.3780%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="32.1600%" y="789" width="0.0241%" height="15" fill="rgb(232,170,28)" fg:x="4011" fg:w="3"/><text x="32.4100%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.02%)</title><rect x="32.1600%" y="773" width="0.0241%" height="15" fill="rgb(238,56,10)" fg:x="4011" fg:w="3"/><text x="32.4100%" y="783.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (8 samples, 0.06%)</title><rect x="32.1280%" y="853" width="0.0641%" height="15" fill="rgb(235,196,14)" fg:x="4007" fg:w="8"/><text x="32.3780%" y="863.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (8 samples, 0.06%)</title><rect x="32.1280%" y="837" width="0.0641%" height="15" fill="rgb(216,45,48)" fg:x="4007" fg:w="8"/><text x="32.3780%" y="847.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (8 samples, 0.06%)</title><rect x="32.1280%" y="821" width="0.0641%" height="15" fill="rgb(238,213,17)" fg:x="4007" fg:w="8"/><text x="32.3780%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::trace::enabled::CommandTraces&gt; (304 samples, 2.44%)</title><rect x="29.7787%" y="981" width="2.4375%" height="15" fill="rgb(212,13,2)" fg:x="3714" fg:w="304"/><text x="30.0287%" y="991.50">co..</text></g><g><title>&lt;fred::trace::enabled::CommandTraces as core::ops::drop::Drop&gt;::drop (304 samples, 2.44%)</title><rect x="29.7787%" y="965" width="2.4375%" height="15" fill="rgb(240,114,20)" fg:x="3714" fg:w="304"/><text x="30.0287%" y="975.50">&lt;f..</text></g><g><title>tracing::span::Span::enter (167 samples, 1.34%)</title><rect x="30.8772%" y="949" width="1.3390%" height="15" fill="rgb(228,41,40)" fg:x="3851" fg:w="167"/><text x="31.1272%" y="959.50"></text></g><g><title>tracing::span::Span::do_enter (167 samples, 1.34%)</title><rect x="30.8772%" y="933" width="1.3390%" height="15" fill="rgb(244,132,35)" fg:x="3851" fg:w="167"/><text x="31.1272%" y="943.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (166 samples, 1.33%)</title><rect x="30.8852%" y="917" width="1.3310%" height="15" fill="rgb(253,189,4)" fg:x="3852" fg:w="166"/><text x="31.1352%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (166 samples, 1.33%)</title><rect x="30.8852%" y="901" width="1.3310%" height="15" fill="rgb(224,37,19)" fg:x="3852" fg:w="166"/><text x="31.1352%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (69 samples, 0.55%)</title><rect x="31.6629%" y="885" width="0.5532%" height="15" fill="rgb(235,223,18)" fg:x="3949" fg:w="69"/><text x="31.9129%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (11 samples, 0.09%)</title><rect x="32.1280%" y="869" width="0.0882%" height="15" fill="rgb(235,163,25)" fg:x="4007" fg:w="11"/><text x="32.3780%" y="879.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::push (3 samples, 0.02%)</title><rect x="32.1921%" y="853" width="0.0241%" height="15" fill="rgb(217,145,28)" fg:x="4015" fg:w="3"/><text x="32.4421%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="32.1921%" y="837" width="0.0241%" height="15" fill="rgb(223,223,32)" fg:x="4015" fg:w="3"/><text x="32.4421%" y="847.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="32.1921%" y="821" width="0.0241%" height="15" fill="rgb(227,189,39)" fg:x="4015" fg:w="3"/><text x="32.4421%" y="831.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (2 samples, 0.02%)</title><rect x="32.2162%" y="981" width="0.0160%" height="15" fill="rgb(248,10,22)" fg:x="4018" fg:w="2"/><text x="32.4662%" y="991.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.02%)</title><rect x="32.2162%" y="965" width="0.0160%" height="15" fill="rgb(248,46,39)" fg:x="4018" fg:w="2"/><text x="32.4662%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="32.2482%" y="965" width="0.0241%" height="15" fill="rgb(248,113,48)" fg:x="4022" fg:w="3"/><text x="32.4982%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="32.2482%" y="949" width="0.0241%" height="15" fill="rgb(245,16,25)" fg:x="4022" fg:w="3"/><text x="32.4982%" y="959.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.09%)</title><rect x="32.2723%" y="933" width="0.0882%" height="15" fill="rgb(249,152,16)" fg:x="4025" fg:w="11"/><text x="32.5223%" y="943.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (22 samples, 0.18%)</title><rect x="32.2723%" y="965" width="0.1764%" height="15" fill="rgb(250,16,1)" fg:x="4025" fg:w="22"/><text x="32.5223%" y="975.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::_{{closure}} (22 samples, 0.18%)</title><rect x="32.2723%" y="949" width="0.1764%" height="15" fill="rgb(249,138,3)" fg:x="4025" fg:w="22"/><text x="32.5223%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt; (11 samples, 0.09%)</title><rect x="32.3605%" y="933" width="0.0882%" height="15" fill="rgb(227,71,41)" fg:x="4036" fg:w="11"/><text x="32.6105%" y="943.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (2 samples, 0.02%)</title><rect x="32.4487%" y="949" width="0.0160%" height="15" fill="rgb(209,184,23)" fg:x="4047" fg:w="2"/><text x="32.6987%" y="959.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (8 samples, 0.06%)</title><rect x="32.4647%" y="949" width="0.0641%" height="15" fill="rgb(223,215,31)" fg:x="4049" fg:w="8"/><text x="32.7147%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.06%)</title><rect x="32.4647%" y="933" width="0.0641%" height="15" fill="rgb(210,146,28)" fg:x="4049" fg:w="8"/><text x="32.7147%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.06%)</title><rect x="32.4647%" y="917" width="0.0641%" height="15" fill="rgb(209,183,41)" fg:x="4049" fg:w="8"/><text x="32.7147%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (19 samples, 0.15%)</title><rect x="32.5369%" y="869" width="0.1523%" height="15" fill="rgb(209,224,45)" fg:x="4058" fg:w="19"/><text x="32.7869%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (18 samples, 0.14%)</title><rect x="32.5449%" y="853" width="0.1443%" height="15" fill="rgb(224,209,51)" fg:x="4059" fg:w="18"/><text x="32.7949%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (18 samples, 0.14%)</title><rect x="32.5449%" y="837" width="0.1443%" height="15" fill="rgb(223,17,39)" fg:x="4059" fg:w="18"/><text x="32.7949%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (18 samples, 0.14%)</title><rect x="32.5449%" y="821" width="0.1443%" height="15" fill="rgb(234,204,37)" fg:x="4059" fg:w="18"/><text x="32.7949%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_or (18 samples, 0.14%)</title><rect x="32.5449%" y="805" width="0.1443%" height="15" fill="rgb(236,120,5)" fg:x="4059" fg:w="18"/><text x="32.7949%" y="815.50"></text></g><g><title>fred::multiplexer::responses::respond_to_caller (470 samples, 3.77%)</title><rect x="28.9769%" y="997" width="3.7684%" height="15" fill="rgb(248,97,27)" fg:x="3614" fg:w="470"/><text x="29.2269%" y="1007.50">fred..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (64 samples, 0.51%)</title><rect x="32.2322%" y="981" width="0.5131%" height="15" fill="rgb(240,66,17)" fg:x="4020" fg:w="64"/><text x="32.4822%" y="991.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (37 samples, 0.30%)</title><rect x="32.4487%" y="965" width="0.2967%" height="15" fill="rgb(210,79,3)" fg:x="4047" fg:w="37"/><text x="32.6987%" y="975.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (27 samples, 0.22%)</title><rect x="32.5289%" y="949" width="0.2165%" height="15" fill="rgb(214,176,27)" fg:x="4057" fg:w="27"/><text x="32.7789%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (27 samples, 0.22%)</title><rect x="32.5289%" y="933" width="0.2165%" height="15" fill="rgb(235,185,3)" fg:x="4057" fg:w="27"/><text x="32.7789%" y="943.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (27 samples, 0.22%)</title><rect x="32.5289%" y="917" width="0.2165%" height="15" fill="rgb(227,24,12)" fg:x="4057" fg:w="27"/><text x="32.7789%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.22%)</title><rect x="32.5289%" y="901" width="0.2165%" height="15" fill="rgb(252,169,48)" fg:x="4057" fg:w="27"/><text x="32.7789%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (27 samples, 0.22%)</title><rect x="32.5289%" y="885" width="0.2165%" height="15" fill="rgb(212,65,1)" fg:x="4057" fg:w="27"/><text x="32.7789%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (7 samples, 0.06%)</title><rect x="32.6892%" y="869" width="0.0561%" height="15" fill="rgb(242,39,24)" fg:x="4077" fg:w="7"/><text x="32.9392%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (7 samples, 0.06%)</title><rect x="32.6892%" y="853" width="0.0561%" height="15" fill="rgb(249,32,23)" fg:x="4077" fg:w="7"/><text x="32.9392%" y="863.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (7 samples, 0.06%)</title><rect x="32.6892%" y="837" width="0.0561%" height="15" fill="rgb(251,195,23)" fg:x="4077" fg:w="7"/><text x="32.9392%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (3 samples, 0.02%)</title><rect x="32.7213%" y="821" width="0.0241%" height="15" fill="rgb(236,174,8)" fg:x="4081" fg:w="3"/><text x="32.9713%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::LatencyStats&gt;&gt; (6 samples, 0.05%)</title><rect x="32.7614%" y="981" width="0.0481%" height="15" fill="rgb(220,197,8)" fg:x="4086" fg:w="6"/><text x="33.0114%" y="991.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="32.7614%" y="965" width="0.0481%" height="15" fill="rgb(240,108,37)" fg:x="4086" fg:w="6"/><text x="33.0114%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (6 samples, 0.05%)</title><rect x="32.7614%" y="949" width="0.0481%" height="15" fill="rgb(232,176,24)" fg:x="4086" fg:w="6"/><text x="33.0114%" y="959.50"></text></g><g><title>fred::metrics::LatencyStats::sample (14 samples, 0.11%)</title><rect x="32.8095%" y="981" width="0.1123%" height="15" fill="rgb(243,35,29)" fg:x="4092" fg:w="14"/><text x="33.0595%" y="991.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (26 samples, 0.21%)</title><rect x="32.9217%" y="981" width="0.2085%" height="15" fill="rgb(210,37,18)" fg:x="4106" fg:w="26"/><text x="33.1717%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (26 samples, 0.21%)</title><rect x="32.9217%" y="965" width="0.2085%" height="15" fill="rgb(224,184,40)" fg:x="4106" fg:w="26"/><text x="33.1717%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (2 samples, 0.02%)</title><rect x="33.1302%" y="949" width="0.0160%" height="15" fill="rgb(236,39,29)" fg:x="4132" fg:w="2"/><text x="33.3802%" y="959.50"></text></g><g><title>std::time::Instant::duration_since (8 samples, 0.06%)</title><rect x="33.1302%" y="981" width="0.0641%" height="15" fill="rgb(232,48,39)" fg:x="4132" fg:w="8"/><text x="33.3802%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (8 samples, 0.06%)</title><rect x="33.1302%" y="965" width="0.0641%" height="15" fill="rgb(236,34,42)" fg:x="4132" fg:w="8"/><text x="33.3802%" y="975.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.05%)</title><rect x="33.1462%" y="949" width="0.0481%" height="15" fill="rgb(243,106,37)" fg:x="4134" fg:w="6"/><text x="33.3962%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1157" width="4.5863%" height="15" fill="rgb(218,96,6)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1167.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1141" width="4.5863%" height="15" fill="rgb(235,130,12)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1151.50">&lt;futu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1125" width="4.5863%" height="15" fill="rgb(231,95,0)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1135.50">&lt;F as..</text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1109" width="4.5863%" height="15" fill="rgb(228,12,23)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1119.50">&lt;futu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1093" width="4.5863%" height="15" fill="rgb(216,12,1)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1103.50">&lt;F as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1077" width="4.5863%" height="15" fill="rgb(219,59,3)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1087.50">&lt;core..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (572 samples, 4.59%)</title><rect x="28.8727%" y="1061" width="4.5863%" height="15" fill="rgb(215,208,46)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1071.50">fred:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (572 samples, 4.59%)</title><rect x="28.8727%" y="1045" width="4.5863%" height="15" fill="rgb(254,224,29)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1055.50">&lt;core..</text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (572 samples, 4.59%)</title><rect x="28.8727%" y="1029" width="4.5863%" height="15" fill="rgb(232,14,29)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1039.50">fred:..</text></g><g><title>fred::multiplexer::responses::process_response (572 samples, 4.59%)</title><rect x="28.8727%" y="1013" width="4.5863%" height="15" fill="rgb(208,45,52)" fg:x="3601" fg:w="572"/><text x="29.1227%" y="1023.50">fred:..</text></g><g><title>fred::multiplexer::responses::sample_latency (89 samples, 0.71%)</title><rect x="32.7453%" y="997" width="0.7136%" height="15" fill="rgb(234,191,28)" fg:x="4084" fg:w="89"/><text x="32.9953%" y="1007.50"></text></g><g><title>std::time::Instant::now (33 samples, 0.26%)</title><rect x="33.1944%" y="981" width="0.2646%" height="15" fill="rgb(244,67,43)" fg:x="4140" fg:w="33"/><text x="33.4444%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (31 samples, 0.25%)</title><rect x="33.2104%" y="965" width="0.2486%" height="15" fill="rgb(236,189,24)" fg:x="4142" fg:w="31"/><text x="33.4604%" y="975.50"></text></g><g><title>std::sys::unix::time::inner::now (31 samples, 0.25%)</title><rect x="33.2104%" y="949" width="0.2486%" height="15" fill="rgb(239,214,33)" fg:x="4142" fg:w="31"/><text x="33.4604%" y="959.50"></text></g><g><title>__clock_gettime (25 samples, 0.20%)</title><rect x="33.2585%" y="933" width="0.2004%" height="15" fill="rgb(226,176,41)" fg:x="4148" fg:w="25"/><text x="33.5085%" y="943.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.18%)</title><rect x="33.2826%" y="917" width="0.1764%" height="15" fill="rgb(248,47,8)" fg:x="4151" fg:w="22"/><text x="33.5326%" y="927.50"></text></g><g><title>[[vdso]] (15 samples, 0.12%)</title><rect x="33.3387%" y="901" width="0.1203%" height="15" fill="rgb(218,81,44)" fg:x="4158" fg:w="15"/><text x="33.5887%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;tokio_util::codec::framed::Framed&lt;tokio::net::tcp::stream::TcpStream,fred::protocol::codec::RedisCodec&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="33.4589%" y="821" width="0.0321%" height="15" fill="rgb(213,98,6)" fg:x="4173" fg:w="4"/><text x="33.7089%" y="831.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="33.4589%" y="805" width="0.0321%" height="15" fill="rgb(222,85,22)" fg:x="4173" fg:w="4"/><text x="33.7089%" y="815.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (4 samples, 0.03%)</title><rect x="33.4589%" y="789" width="0.0321%" height="15" fill="rgb(239,46,39)" fg:x="4173" fg:w="4"/><text x="33.7089%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.02%)</title><rect x="33.4670%" y="773" width="0.0241%" height="15" fill="rgb(237,12,29)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.02%)</title><rect x="33.4670%" y="757" width="0.0241%" height="15" fill="rgb(214,77,8)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (3 samples, 0.02%)</title><rect x="33.4670%" y="741" width="0.0241%" height="15" fill="rgb(217,168,37)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (3 samples, 0.02%)</title><rect x="33.4670%" y="725" width="0.0241%" height="15" fill="rgb(221,217,23)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (3 samples, 0.02%)</title><rect x="33.4670%" y="709" width="0.0241%" height="15" fill="rgb(243,229,36)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="33.4670%" y="693" width="0.0241%" height="15" fill="rgb(251,163,40)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (3 samples, 0.02%)</title><rect x="33.4670%" y="677" width="0.0241%" height="15" fill="rgb(237,222,12)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (3 samples, 0.02%)</title><rect x="33.4670%" y="661" width="0.0241%" height="15" fill="rgb(248,132,6)" fg:x="4174" fg:w="3"/><text x="33.7170%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (2 samples, 0.02%)</title><rect x="33.4750%" y="645" width="0.0160%" height="15" fill="rgb(227,167,50)" fg:x="4175" fg:w="2"/><text x="33.7250%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (2 samples, 0.02%)</title><rect x="33.4750%" y="629" width="0.0160%" height="15" fill="rgb(242,84,37)" fg:x="4175" fg:w="2"/><text x="33.7250%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (2 samples, 0.02%)</title><rect x="33.4750%" y="613" width="0.0160%" height="15" fill="rgb(212,4,50)" fg:x="4175" fg:w="2"/><text x="33.7250%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="33.5311%" y="773" width="0.0160%" height="15" fill="rgb(230,228,32)" fg:x="4182" fg:w="2"/><text x="33.7811%" y="783.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1157" width="0.0962%" height="15" fill="rgb(248,217,23)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1167.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (12 samples, 0.10%)</title><rect x="33.4589%" y="1141" width="0.0962%" height="15" fill="rgb(238,197,32)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.10%)</title><rect x="33.4589%" y="1125" width="0.0962%" height="15" fill="rgb(236,106,1)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1135.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (12 samples, 0.10%)</title><rect x="33.4589%" y="1109" width="0.0962%" height="15" fill="rgb(219,228,13)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1119.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (12 samples, 0.10%)</title><rect x="33.4589%" y="1093" width="0.0962%" height="15" fill="rgb(238,30,35)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1077" width="0.0962%" height="15" fill="rgb(236,70,23)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1061" width="0.0962%" height="15" fill="rgb(249,104,48)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1071.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1045" width="0.0962%" height="15" fill="rgb(254,117,50)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1055.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1029" width="0.0962%" height="15" fill="rgb(223,152,4)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1039.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="1013" width="0.0962%" height="15" fill="rgb(245,6,2)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1023.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="997" width="0.0962%" height="15" fill="rgb(249,150,24)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="1007.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="981" width="0.0962%" height="15" fill="rgb(228,185,42)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="991.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (12 samples, 0.10%)</title><rect x="33.4589%" y="965" width="0.0962%" height="15" fill="rgb(226,39,33)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="949" width="0.0962%" height="15" fill="rgb(221,166,19)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="933" width="0.0962%" height="15" fill="rgb(209,109,2)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="917" width="0.0962%" height="15" fill="rgb(252,216,26)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="901" width="0.0962%" height="15" fill="rgb(227,173,36)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="911.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (12 samples, 0.10%)</title><rect x="33.4589%" y="885" width="0.0962%" height="15" fill="rgb(209,90,7)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="895.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="33.4589%" y="869" width="0.0962%" height="15" fill="rgb(250,194,11)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="879.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.10%)</title><rect x="33.4589%" y="853" width="0.0962%" height="15" fill="rgb(220,72,50)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.10%)</title><rect x="33.4589%" y="837" width="0.0962%" height="15" fill="rgb(222,106,48)" fg:x="4173" fg:w="12"/><text x="33.7089%" y="847.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (8 samples, 0.06%)</title><rect x="33.4910%" y="821" width="0.0641%" height="15" fill="rgb(216,220,45)" fg:x="4177" fg:w="8"/><text x="33.7410%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.02%)</title><rect x="33.5311%" y="805" width="0.0241%" height="15" fill="rgb(234,112,18)" fg:x="4182" fg:w="3"/><text x="33.7811%" y="815.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock::_{{closure}} (3 samples, 0.02%)</title><rect x="33.5311%" y="789" width="0.0241%" height="15" fill="rgb(206,179,9)" fg:x="4182" fg:w="3"/><text x="33.7811%" y="799.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="33.6193%" y="965" width="0.0321%" height="15" fill="rgb(215,115,40)" fg:x="4193" fg:w="4"/><text x="33.8693%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.03%)</title><rect x="33.9962%" y="853" width="0.0321%" height="15" fill="rgb(222,69,34)" fg:x="4240" fg:w="4"/><text x="34.2462%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="33.9962%" y="837" width="0.0321%" height="15" fill="rgb(209,161,10)" fg:x="4240" fg:w="4"/><text x="34.2462%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="34.0282%" y="853" width="0.0241%" height="15" fill="rgb(217,6,38)" fg:x="4244" fg:w="3"/><text x="34.2782%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="34.0282%" y="837" width="0.0241%" height="15" fill="rgb(229,229,48)" fg:x="4244" fg:w="3"/><text x="34.2782%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="34.0282%" y="821" width="0.0241%" height="15" fill="rgb(225,21,28)" fg:x="4244" fg:w="3"/><text x="34.2782%" y="831.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.03%)</title><rect x="34.0523%" y="853" width="0.0321%" height="15" fill="rgb(206,33,13)" fg:x="4247" fg:w="4"/><text x="34.3023%" y="863.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::_{{closure}} (4 samples, 0.03%)</title><rect x="34.0523%" y="837" width="0.0321%" height="15" fill="rgb(242,178,17)" fg:x="4247" fg:w="4"/><text x="34.3023%" y="847.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="34.0523%" y="821" width="0.0321%" height="15" fill="rgb(220,162,5)" fg:x="4247" fg:w="4"/><text x="34.3023%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (4 samples, 0.03%)</title><rect x="34.0523%" y="805" width="0.0321%" height="15" fill="rgb(210,33,43)" fg:x="4247" fg:w="4"/><text x="34.3023%" y="815.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 0.02%)</title><rect x="34.0843%" y="853" width="0.0160%" height="15" fill="rgb(216,116,54)" fg:x="4251" fg:w="2"/><text x="34.3343%" y="863.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (26 samples, 0.21%)</title><rect x="33.8999%" y="885" width="0.2085%" height="15" fill="rgb(249,92,24)" fg:x="4228" fg:w="26"/><text x="34.1499%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (24 samples, 0.19%)</title><rect x="33.9160%" y="869" width="0.1924%" height="15" fill="rgb(231,189,14)" fg:x="4230" fg:w="24"/><text x="34.1660%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.24%)</title><rect x="33.8839%" y="917" width="0.2405%" height="15" fill="rgb(230,8,41)" fg:x="4226" fg:w="30"/><text x="34.1339%" y="927.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::_{{closure}} (30 samples, 0.24%)</title><rect x="33.8839%" y="901" width="0.2405%" height="15" fill="rgb(249,7,27)" fg:x="4226" fg:w="30"/><text x="34.1339%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.04%)</title><rect x="34.1244%" y="917" width="0.0401%" height="15" fill="rgb(232,86,5)" fg:x="4256" fg:w="5"/><text x="34.3744%" y="927.50"></text></g><g><title>fred::multiplexer::responses::last_centralized_command_ends_transaction::_{{closure}}::_{{closure}} (5 samples, 0.04%)</title><rect x="34.1244%" y="901" width="0.0401%" height="15" fill="rgb(224,175,18)" fg:x="4256" fg:w="5"/><text x="34.3744%" y="911.50"></text></g><g><title>fred::protocol::types::RedisCommandKind::is_exec (5 samples, 0.04%)</title><rect x="34.1244%" y="885" width="0.0401%" height="15" fill="rgb(220,129,12)" fg:x="4256" fg:w="5"/><text x="34.3744%" y="895.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (2 samples, 0.02%)</title><rect x="34.1886%" y="869" width="0.0160%" height="15" fill="rgb(210,19,36)" fg:x="4264" fg:w="2"/><text x="34.4386%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8 samples, 0.06%)</title><rect x="34.2046%" y="805" width="0.0641%" height="15" fill="rgb(219,96,14)" fg:x="4266" fg:w="8"/><text x="34.4546%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.06%)</title><rect x="34.2046%" y="789" width="0.0641%" height="15" fill="rgb(249,106,1)" fg:x="4266" fg:w="8"/><text x="34.4546%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (8 samples, 0.06%)</title><rect x="34.2046%" y="773" width="0.0641%" height="15" fill="rgb(249,155,20)" fg:x="4266" fg:w="8"/><text x="34.4546%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (8 samples, 0.06%)</title><rect x="34.2046%" y="757" width="0.0641%" height="15" fill="rgb(244,168,9)" fg:x="4266" fg:w="8"/><text x="34.4546%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (7 samples, 0.06%)</title><rect x="34.2126%" y="741" width="0.0561%" height="15" fill="rgb(216,23,50)" fg:x="4267" fg:w="7"/><text x="34.4626%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (6 samples, 0.05%)</title><rect x="34.2207%" y="725" width="0.0481%" height="15" fill="rgb(224,219,20)" fg:x="4268" fg:w="6"/><text x="34.4707%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.05%)</title><rect x="34.2207%" y="709" width="0.0481%" height="15" fill="rgb(222,156,15)" fg:x="4268" fg:w="6"/><text x="34.4707%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.05%)</title><rect x="34.2207%" y="693" width="0.0481%" height="15" fill="rgb(231,97,17)" fg:x="4268" fg:w="6"/><text x="34.4707%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (5 samples, 0.04%)</title><rect x="34.2287%" y="677" width="0.0401%" height="15" fill="rgb(218,70,48)" fg:x="4269" fg:w="5"/><text x="34.4787%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (2 samples, 0.02%)</title><rect x="34.2527%" y="661" width="0.0160%" height="15" fill="rgb(212,196,52)" fg:x="4272" fg:w="2"/><text x="34.5027%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.07%)</title><rect x="34.2046%" y="869" width="0.0722%" height="15" fill="rgb(243,203,18)" fg:x="4266" fg:w="9"/><text x="34.4546%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.07%)</title><rect x="34.2046%" y="853" width="0.0722%" height="15" fill="rgb(252,125,41)" fg:x="4266" fg:w="9"/><text x="34.4546%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.07%)</title><rect x="34.2046%" y="837" width="0.0722%" height="15" fill="rgb(223,180,33)" fg:x="4266" fg:w="9"/><text x="34.4546%" y="847.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (9 samples, 0.07%)</title><rect x="34.2046%" y="821" width="0.0722%" height="15" fill="rgb(254,159,46)" fg:x="4266" fg:w="9"/><text x="34.4546%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (4 samples, 0.03%)</title><rect x="34.2848%" y="869" width="0.0321%" height="15" fill="rgb(254,38,10)" fg:x="4276" fg:w="4"/><text x="34.5348%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (4 samples, 0.03%)</title><rect x="34.2848%" y="853" width="0.0321%" height="15" fill="rgb(208,217,32)" fg:x="4276" fg:w="4"/><text x="34.5348%" y="863.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (20 samples, 0.16%)</title><rect x="34.1645%" y="885" width="0.1604%" height="15" fill="rgb(221,120,13)" fg:x="4261" fg:w="20"/><text x="34.4145%" y="895.50"></text></g><g><title>fred::multiplexer::responses::last_centralized_command_ends_transaction::_{{closure}} (58 samples, 0.47%)</title><rect x="33.8839%" y="933" width="0.4650%" height="15" fill="rgb(246,54,52)" fg:x="4226" fg:w="58"/><text x="34.1339%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::read_guard::RwLockReadGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (23 samples, 0.18%)</title><rect x="34.1645%" y="917" width="0.1844%" height="15" fill="rgb(242,34,25)" fg:x="4261" fg:w="23"/><text x="34.4145%" y="927.50"></text></g><g><title>&lt;tokio::sync::rwlock::read_guard::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.18%)</title><rect x="34.1645%" y="901" width="0.1844%" height="15" fill="rgb(247,209,9)" fg:x="4261" fg:w="23"/><text x="34.4145%" y="911.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (3 samples, 0.02%)</title><rect x="34.3249%" y="885" width="0.0241%" height="15" fill="rgb(228,71,26)" fg:x="4281" fg:w="3"/><text x="34.5749%" y="895.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="34.3810%" y="917" width="0.0722%" height="15" fill="rgb(222,145,49)" fg:x="4288" fg:w="9"/><text x="34.6310%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (7 samples, 0.06%)</title><rect x="34.3970%" y="901" width="0.0561%" height="15" fill="rgb(218,121,17)" fg:x="4290" fg:w="7"/><text x="34.6470%" y="911.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (2 samples, 0.02%)</title><rect x="34.4371%" y="885" width="0.0160%" height="15" fill="rgb(244,50,7)" fg:x="4295" fg:w="2"/><text x="34.6871%" y="895.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="34.4532%" y="901" width="0.0160%" height="15" fill="rgb(246,229,37)" fg:x="4297" fg:w="2"/><text x="34.7032%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 0.60%)</title><rect x="33.8759%" y="949" width="0.6013%" height="15" fill="rgb(225,18,5)" fg:x="4225" fg:w="75"/><text x="34.1259%" y="959.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (16 samples, 0.13%)</title><rect x="34.3489%" y="933" width="0.1283%" height="15" fill="rgb(213,204,8)" fg:x="4284" fg:w="16"/><text x="34.5989%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (3 samples, 0.02%)</title><rect x="34.4532%" y="917" width="0.0241%" height="15" fill="rgb(238,103,6)" fg:x="4297" fg:w="3"/><text x="34.7032%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="34.4772%" y="949" width="0.0561%" height="15" fill="rgb(222,25,35)" fg:x="4300" fg:w="7"/><text x="34.7272%" y="959.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="34.4772%" y="933" width="0.0561%" height="15" fill="rgb(213,203,35)" fg:x="4300" fg:w="7"/><text x="34.7272%" y="943.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="34.5334%" y="949" width="0.0561%" height="15" fill="rgb(221,79,53)" fg:x="4307" fg:w="7"/><text x="34.7834%" y="959.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_read (21 samples, 0.17%)</title><rect x="34.5975%" y="933" width="0.1684%" height="15" fill="rgb(243,200,35)" fg:x="4315" fg:w="21"/><text x="34.8475%" y="943.50"></text></g><g><title>core::ptr::read (21 samples, 0.17%)</title><rect x="34.5975%" y="917" width="0.1684%" height="15" fill="rgb(248,60,25)" fg:x="4315" fg:w="21"/><text x="34.8475%" y="927.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::pop_front (23 samples, 0.18%)</title><rect x="34.5895%" y="949" width="0.1844%" height="15" fill="rgb(227,53,46)" fg:x="4314" fg:w="23"/><text x="34.8395%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (4 samples, 0.03%)</title><rect x="34.8220%" y="901" width="0.0321%" height="15" fill="rgb(216,120,32)" fg:x="4343" fg:w="4"/><text x="35.0720%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.03%)</title><rect x="34.8541%" y="901" width="0.0321%" height="15" fill="rgb(220,134,1)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="34.8541%" y="885" width="0.0321%" height="15" fill="rgb(237,168,5)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.03%)</title><rect x="34.8541%" y="869" width="0.0321%" height="15" fill="rgb(231,100,33)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="879.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (4 samples, 0.03%)</title><rect x="34.8541%" y="853" width="0.0321%" height="15" fill="rgb(236,177,47)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.03%)</title><rect x="34.8541%" y="837" width="0.0321%" height="15" fill="rgb(235,7,49)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.03%)</title><rect x="34.8541%" y="821" width="0.0321%" height="15" fill="rgb(232,119,22)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.03%)</title><rect x="34.8541%" y="805" width="0.0321%" height="15" fill="rgb(254,73,53)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (4 samples, 0.03%)</title><rect x="34.8541%" y="789" width="0.0321%" height="15" fill="rgb(251,35,20)" fg:x="4347" fg:w="4"/><text x="35.1041%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (3 samples, 0.02%)</title><rect x="34.8621%" y="773" width="0.0241%" height="15" fill="rgb(241,119,20)" fg:x="4348" fg:w="3"/><text x="35.1121%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (3 samples, 0.02%)</title><rect x="34.8621%" y="757" width="0.0241%" height="15" fill="rgb(207,102,14)" fg:x="4348" fg:w="3"/><text x="35.1121%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (3 samples, 0.02%)</title><rect x="34.8621%" y="741" width="0.0241%" height="15" fill="rgb(248,201,50)" fg:x="4348" fg:w="3"/><text x="35.1121%" y="751.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="34.8621%" y="725" width="0.0241%" height="15" fill="rgb(222,185,44)" fg:x="4348" fg:w="3"/><text x="35.1121%" y="735.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (18 samples, 0.14%)</title><rect x="34.7739%" y="917" width="0.1443%" height="15" fill="rgb(218,107,18)" fg:x="4337" fg:w="18"/><text x="35.0239%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (2 samples, 0.02%)</title><rect x="34.9022%" y="901" width="0.0160%" height="15" fill="rgb(237,177,39)" fg:x="4353" fg:w="2"/><text x="35.1522%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (20 samples, 0.16%)</title><rect x="34.7739%" y="949" width="0.1604%" height="15" fill="rgb(246,69,6)" fg:x="4337" fg:w="20"/><text x="35.0239%" y="959.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.16%)</title><rect x="34.7739%" y="933" width="0.1604%" height="15" fill="rgb(234,208,37)" fg:x="4337" fg:w="20"/><text x="35.0239%" y="943.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (2 samples, 0.02%)</title><rect x="34.9182%" y="917" width="0.0160%" height="15" fill="rgb(225,4,6)" fg:x="4355" fg:w="2"/><text x="35.1682%" y="927.50"></text></g><g><title>fred::multiplexer::responses::check_pubsub_message (16 samples, 0.13%)</title><rect x="34.9343%" y="949" width="0.1283%" height="15" fill="rgb(233,45,0)" fg:x="4357" fg:w="16"/><text x="35.1843%" y="959.50"></text></g><g><title>redis_protocol::types::Frame::is_pubsub_message (6 samples, 0.05%)</title><rect x="35.0144%" y="933" width="0.0481%" height="15" fill="rgb(226,136,5)" fg:x="4367" fg:w="6"/><text x="35.2644%" y="943.50"></text></g><g><title>fred::multiplexer::responses::check_redirection_error (6 samples, 0.05%)</title><rect x="35.0625%" y="949" width="0.0481%" height="15" fill="rgb(211,91,47)" fg:x="4373" fg:w="6"/><text x="35.3125%" y="959.50"></text></g><g><title>redis_protocol::types::Frame::is_moved_or_ask_error (3 samples, 0.02%)</title><rect x="35.0866%" y="933" width="0.0241%" height="15" fill="rgb(242,88,51)" fg:x="4376" fg:w="3"/><text x="35.3366%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1157" width="1.6036%" height="15" fill="rgb(230,91,28)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1167.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1141" width="1.6036%" height="15" fill="rgb(254,186,29)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1151.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1125" width="1.6036%" height="15" fill="rgb(238,6,4)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1135.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1109" width="1.6036%" height="15" fill="rgb(221,151,16)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1093" width="1.6036%" height="15" fill="rgb(251,143,52)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1103.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1077" width="1.6036%" height="15" fill="rgb(206,90,15)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1087.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1061" width="1.6036%" height="15" fill="rgb(218,35,8)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1045" width="1.6036%" height="15" fill="rgb(239,215,6)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1055.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1029" width="1.6036%" height="15" fill="rgb(245,116,39)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="1013" width="1.6036%" height="15" fill="rgb(242,65,28)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1023.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (200 samples, 1.60%)</title><rect x="33.5552%" y="997" width="1.6036%" height="15" fill="rgb(252,132,53)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (200 samples, 1.60%)</title><rect x="33.5552%" y="981" width="1.6036%" height="15" fill="rgb(224,159,50)" fg:x="4185" fg:w="200"/><text x="33.8052%" y="991.50"></text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (188 samples, 1.51%)</title><rect x="33.6514%" y="965" width="1.5074%" height="15" fill="rgb(224,93,4)" fg:x="4197" fg:w="188"/><text x="33.9014%" y="975.50"></text></g><g><title>fred::multiplexer::responses::process_response (6 samples, 0.05%)</title><rect x="35.1106%" y="949" width="0.0481%" height="15" fill="rgb(208,81,34)" fg:x="4379" fg:w="6"/><text x="35.3606%" y="959.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="35.1588%" y="1109" width="0.0481%" height="15" fill="rgb(233,92,54)" fg:x="4385" fg:w="6"/><text x="35.4088%" y="1119.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="35.3432%" y="1045" width="0.0160%" height="15" fill="rgb(237,21,14)" fg:x="4408" fg:w="2"/><text x="35.5932%" y="1055.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="35.7601%" y="933" width="0.0160%" height="15" fill="rgb(249,128,51)" fg:x="4460" fg:w="2"/><text x="36.0101%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="35.7441%" y="965" width="0.0481%" height="15" fill="rgb(223,129,24)" fg:x="4458" fg:w="6"/><text x="35.9941%" y="975.50"></text></g><g><title>fred::multiplexer::commands::check_deferred_multi_command::_{{closure}} (6 samples, 0.05%)</title><rect x="35.7441%" y="949" width="0.0481%" height="15" fill="rgb(231,168,25)" fg:x="4458" fg:w="6"/><text x="35.9941%" y="959.50"></text></g><g><title>fred::utils::should_send_multi_command (2 samples, 0.02%)</title><rect x="35.7761%" y="933" width="0.0160%" height="15" fill="rgb(224,39,20)" fg:x="4462" fg:w="2"/><text x="36.0261%" y="943.50"></text></g><g><title>fred::utils::is_clustered (2 samples, 0.02%)</title><rect x="35.7761%" y="917" width="0.0160%" height="15" fill="rgb(225,152,53)" fg:x="4462" fg:w="2"/><text x="36.0261%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::types::RedisConfig&gt;&gt; (2 samples, 0.02%)</title><rect x="35.7761%" y="901" width="0.0160%" height="15" fill="rgb(252,17,24)" fg:x="4462" fg:w="2"/><text x="36.0261%" y="911.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="35.7761%" y="885" width="0.0160%" height="15" fill="rgb(250,114,30)" fg:x="4462" fg:w="2"/><text x="36.0261%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="35.7761%" y="869" width="0.0160%" height="15" fill="rgb(229,5,4)" fg:x="4462" fg:w="2"/><text x="36.0261%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="35.7922%" y="965" width="0.0321%" height="15" fill="rgb(225,176,49)" fg:x="4464" fg:w="4"/><text x="36.0422%" y="975.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="35.7922%" y="949" width="0.0321%" height="15" fill="rgb(224,221,49)" fg:x="4464" fg:w="4"/><text x="36.0422%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::check_deferred_multi_command::{{closure}}&gt;&gt; (3 samples, 0.02%)</title><rect x="35.8323%" y="965" width="0.0241%" height="15" fill="rgb(253,169,27)" fg:x="4469" fg:w="3"/><text x="36.0823%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::types::RedisConfig&gt;&gt; (2 samples, 0.02%)</title><rect x="35.8884%" y="933" width="0.0160%" height="15" fill="rgb(211,206,16)" fg:x="4476" fg:w="2"/><text x="36.1384%" y="943.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="35.8884%" y="917" width="0.0160%" height="15" fill="rgb(244,87,35)" fg:x="4476" fg:w="2"/><text x="36.1384%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="35.8884%" y="901" width="0.0160%" height="15" fill="rgb(246,28,10)" fg:x="4476" fg:w="2"/><text x="36.1384%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.37%)</title><rect x="35.6879%" y="997" width="0.3688%" height="15" fill="rgb(229,12,44)" fg:x="4451" fg:w="46"/><text x="35.9379%" y="1007.50"></text></g><g><title>fred::multiplexer::commands::check_command_structure::_{{closure}} (46 samples, 0.37%)</title><rect x="35.6879%" y="981" width="0.3688%" height="15" fill="rgb(210,145,37)" fg:x="4451" fg:w="46"/><text x="35.9379%" y="991.50"></text></g><g><title>fred::multiplexer::commands::check_transaction_hash_slot (25 samples, 0.20%)</title><rect x="35.8563%" y="965" width="0.2004%" height="15" fill="rgb(227,112,52)" fg:x="4472" fg:w="25"/><text x="36.1063%" y="975.50"></text></g><g><title>fred::utils::is_clustered (21 samples, 0.17%)</title><rect x="35.8884%" y="949" width="0.1684%" height="15" fill="rgb(238,155,34)" fg:x="4476" fg:w="21"/><text x="36.1384%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (19 samples, 0.15%)</title><rect x="35.9044%" y="933" width="0.1523%" height="15" fill="rgb(239,226,36)" fg:x="4478" fg:w="19"/><text x="36.1544%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (19 samples, 0.15%)</title><rect x="35.9044%" y="917" width="0.1523%" height="15" fill="rgb(230,16,23)" fg:x="4478" fg:w="19"/><text x="36.1544%" y="927.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (5 samples, 0.04%)</title><rect x="36.0167%" y="901" width="0.0401%" height="15" fill="rgb(236,171,36)" fg:x="4492" fg:w="5"/><text x="36.2667%" y="911.50"></text></g><g><title>fred::multiplexer::commands::check_command_structure_t::_{{closure}} (51 samples, 0.41%)</title><rect x="35.6639%" y="1013" width="0.4089%" height="15" fill="rgb(221,22,14)" fg:x="4448" fg:w="51"/><text x="35.9139%" y="1023.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="36.0568%" y="997" width="0.0160%" height="15" fill="rgb(242,43,11)" fg:x="4497" fg:w="2"/><text x="36.3068%" y="1007.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="36.1049%" y="981" width="0.0481%" height="15" fill="rgb(232,69,23)" fg:x="4503" fg:w="6"/><text x="36.3549%" y="991.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="36.3534%" y="949" width="0.0401%" height="15" fill="rgb(216,180,54)" fg:x="4534" fg:w="5"/><text x="36.6034%" y="959.50"></text></g><g><title>tokio::coop::poll_proceed (9 samples, 0.07%)</title><rect x="36.8826%" y="853" width="0.0722%" height="15" fill="rgb(216,5,24)" fg:x="4600" fg:w="9"/><text x="37.1326%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.07%)</title><rect x="36.8826%" y="837" width="0.0722%" height="15" fill="rgb(225,89,9)" fg:x="4600" fg:w="9"/><text x="37.1326%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.07%)</title><rect x="36.8826%" y="821" width="0.0722%" height="15" fill="rgb(243,75,33)" fg:x="4600" fg:w="9"/><text x="37.1326%" y="831.50"></text></g><g><title>tokio::coop::CURRENT::__getit (8 samples, 0.06%)</title><rect x="36.8906%" y="805" width="0.0641%" height="15" fill="rgb(247,141,45)" fg:x="4601" fg:w="8"/><text x="37.1406%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.03%)</title><rect x="36.9227%" y="789" width="0.0321%" height="15" fill="rgb(232,177,36)" fg:x="4605" fg:w="4"/><text x="37.1727%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.04%)</title><rect x="37.0109%" y="837" width="0.0401%" height="15" fill="rgb(219,125,36)" fg:x="4616" fg:w="5"/><text x="37.2609%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.04%)</title><rect x="37.0109%" y="821" width="0.0401%" height="15" fill="rgb(227,94,9)" fg:x="4616" fg:w="5"/><text x="37.2609%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="37.0510%" y="837" width="0.0160%" height="15" fill="rgb(240,34,52)" fg:x="4621" fg:w="2"/><text x="37.3010%" y="847.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="37.0510%" y="821" width="0.0160%" height="15" fill="rgb(216,45,12)" fg:x="4621" fg:w="2"/><text x="37.3010%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="37.0510%" y="805" width="0.0160%" height="15" fill="rgb(246,21,19)" fg:x="4621" fg:w="2"/><text x="37.3010%" y="815.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.10%)</title><rect x="37.0670%" y="837" width="0.1042%" height="15" fill="rgb(213,98,42)" fg:x="4623" fg:w="13"/><text x="37.3170%" y="847.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::_{{closure}} (13 samples, 0.10%)</title><rect x="37.0670%" y="821" width="0.1042%" height="15" fill="rgb(250,136,47)" fg:x="4623" fg:w="13"/><text x="37.3170%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (11 samples, 0.09%)</title><rect x="37.0831%" y="805" width="0.0882%" height="15" fill="rgb(251,124,27)" fg:x="4625" fg:w="11"/><text x="37.3331%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (10 samples, 0.08%)</title><rect x="37.0911%" y="789" width="0.0802%" height="15" fill="rgb(229,180,14)" fg:x="4626" fg:w="10"/><text x="37.3411%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (9 samples, 0.07%)</title><rect x="37.0991%" y="773" width="0.0722%" height="15" fill="rgb(245,216,25)" fg:x="4627" fg:w="9"/><text x="37.3491%" y="783.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 0.02%)</title><rect x="37.1713%" y="837" width="0.0160%" height="15" fill="rgb(251,43,5)" fg:x="4636" fg:w="2"/><text x="37.4213%" y="847.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (8 samples, 0.06%)</title><rect x="37.1873%" y="837" width="0.0641%" height="15" fill="rgb(250,128,24)" fg:x="4638" fg:w="8"/><text x="37.4373%" y="847.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (50 samples, 0.40%)</title><rect x="36.8586%" y="869" width="0.4009%" height="15" fill="rgb(217,117,27)" fg:x="4597" fg:w="50"/><text x="37.1086%" y="879.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (38 samples, 0.30%)</title><rect x="36.9548%" y="853" width="0.3047%" height="15" fill="rgb(245,147,4)" fg:x="4609" fg:w="38"/><text x="37.2048%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (3 samples, 0.02%)</title><rect x="37.2595%" y="869" width="0.0241%" height="15" fill="rgb(242,201,35)" fg:x="4647" fg:w="3"/><text x="37.5095%" y="879.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="37.2595%" y="853" width="0.0241%" height="15" fill="rgb(218,181,1)" fg:x="4647" fg:w="3"/><text x="37.5095%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.56%)</title><rect x="36.7543%" y="901" width="0.5613%" height="15" fill="rgb(222,6,29)" fg:x="4584" fg:w="70"/><text x="37.0043%" y="911.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (68 samples, 0.55%)</title><rect x="36.7704%" y="885" width="0.5452%" height="15" fill="rgb(208,186,3)" fg:x="4586" fg:w="68"/><text x="37.0204%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (4 samples, 0.03%)</title><rect x="37.2835%" y="869" width="0.0321%" height="15" fill="rgb(216,36,26)" fg:x="4650" fg:w="4"/><text x="37.5335%" y="879.50"></text></g><g><title>[libc-2.28.so] (23 samples, 0.18%)</title><rect x="37.3156%" y="901" width="0.1844%" height="15" fill="rgb(248,201,23)" fg:x="4654" fg:w="23"/><text x="37.5656%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (10 samples, 0.08%)</title><rect x="37.5641%" y="709" width="0.0802%" height="15" fill="rgb(251,170,31)" fg:x="4685" fg:w="10"/><text x="37.8141%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.08%)</title><rect x="37.5641%" y="693" width="0.0802%" height="15" fill="rgb(207,110,25)" fg:x="4685" fg:w="10"/><text x="37.8141%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.08%)</title><rect x="37.5641%" y="677" width="0.0802%" height="15" fill="rgb(250,54,15)" fg:x="4685" fg:w="10"/><text x="37.8141%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="37.6604%" y="661" width="0.0160%" height="15" fill="rgb(227,68,33)" fg:x="4697" fg:w="2"/><text x="37.9104%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="37.6604%" y="645" width="0.0160%" height="15" fill="rgb(238,34,41)" fg:x="4697" fg:w="2"/><text x="37.9104%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (2 samples, 0.02%)</title><rect x="37.6604%" y="629" width="0.0160%" height="15" fill="rgb(220,11,15)" fg:x="4697" fg:w="2"/><text x="37.9104%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (23 samples, 0.18%)</title><rect x="37.5401%" y="741" width="0.1844%" height="15" fill="rgb(246,111,35)" fg:x="4682" fg:w="23"/><text x="37.7901%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (20 samples, 0.16%)</title><rect x="37.5641%" y="725" width="0.1604%" height="15" fill="rgb(209,88,53)" fg:x="4685" fg:w="20"/><text x="37.8141%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (10 samples, 0.08%)</title><rect x="37.6443%" y="709" width="0.0802%" height="15" fill="rgb(231,185,47)" fg:x="4695" fg:w="10"/><text x="37.8943%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (9 samples, 0.07%)</title><rect x="37.6523%" y="693" width="0.0722%" height="15" fill="rgb(233,154,1)" fg:x="4696" fg:w="9"/><text x="37.9023%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.07%)</title><rect x="37.6523%" y="677" width="0.0722%" height="15" fill="rgb(225,15,46)" fg:x="4696" fg:w="9"/><text x="37.9023%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (6 samples, 0.05%)</title><rect x="37.6764%" y="661" width="0.0481%" height="15" fill="rgb(211,135,41)" fg:x="4699" fg:w="6"/><text x="37.9264%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (4 samples, 0.03%)</title><rect x="37.6924%" y="645" width="0.0321%" height="15" fill="rgb(208,54,0)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.03%)</title><rect x="37.6924%" y="629" width="0.0321%" height="15" fill="rgb(244,136,14)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="639.50"></text></g><g><title>core::mem::take (4 samples, 0.03%)</title><rect x="37.6924%" y="613" width="0.0321%" height="15" fill="rgb(241,56,14)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="623.50"></text></g><g><title>core::mem::replace (4 samples, 0.03%)</title><rect x="37.6924%" y="597" width="0.0321%" height="15" fill="rgb(205,80,24)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="607.50"></text></g><g><title>core::mem::swap (4 samples, 0.03%)</title><rect x="37.6924%" y="581" width="0.0321%" height="15" fill="rgb(220,57,4)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.03%)</title><rect x="37.6924%" y="565" width="0.0321%" height="15" fill="rgb(226,193,50)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="37.6924%" y="549" width="0.0321%" height="15" fill="rgb(231,168,22)" fg:x="4701" fg:w="4"/><text x="37.9424%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (24 samples, 0.19%)</title><rect x="37.5401%" y="789" width="0.1924%" height="15" fill="rgb(254,215,14)" fg:x="4682" fg:w="24"/><text x="37.7901%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (24 samples, 0.19%)</title><rect x="37.5401%" y="773" width="0.1924%" height="15" fill="rgb(211,115,16)" fg:x="4682" fg:w="24"/><text x="37.7901%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.19%)</title><rect x="37.5401%" y="757" width="0.1924%" height="15" fill="rgb(236,210,16)" fg:x="4682" fg:w="24"/><text x="37.7901%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.20%)</title><rect x="37.5401%" y="853" width="0.2004%" height="15" fill="rgb(221,94,12)" fg:x="4682" fg:w="25"/><text x="37.7901%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.20%)</title><rect x="37.5401%" y="837" width="0.2004%" height="15" fill="rgb(235,218,49)" fg:x="4682" fg:w="25"/><text x="37.7901%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.20%)</title><rect x="37.5401%" y="821" width="0.2004%" height="15" fill="rgb(217,114,14)" fg:x="4682" fg:w="25"/><text x="37.7901%" y="831.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (25 samples, 0.20%)</title><rect x="37.5401%" y="805" width="0.2004%" height="15" fill="rgb(216,145,22)" fg:x="4682" fg:w="25"/><text x="37.7901%" y="815.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="37.7405%" y="853" width="0.0160%" height="15" fill="rgb(217,112,39)" fg:x="4707" fg:w="2"/><text x="37.9905%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (2 samples, 0.02%)</title><rect x="37.7405%" y="837" width="0.0160%" height="15" fill="rgb(225,85,32)" fg:x="4707" fg:w="2"/><text x="37.9905%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="37.7405%" y="821" width="0.0160%" height="15" fill="rgb(245,209,47)" fg:x="4707" fg:w="2"/><text x="37.9905%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="37.7405%" y="805" width="0.0160%" height="15" fill="rgb(218,220,15)" fg:x="4707" fg:w="2"/><text x="37.9905%" y="815.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (12 samples, 0.10%)</title><rect x="37.7646%" y="853" width="0.0962%" height="15" fill="rgb(222,202,31)" fg:x="4710" fg:w="12"/><text x="38.0146%" y="863.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (45 samples, 0.36%)</title><rect x="37.5080%" y="869" width="0.3608%" height="15" fill="rgb(243,203,4)" fg:x="4678" fg:w="45"/><text x="37.7580%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (50 samples, 0.40%)</title><rect x="37.5000%" y="901" width="0.4009%" height="15" fill="rgb(237,92,17)" fg:x="4677" fg:w="50"/><text x="37.7500%" y="911.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.40%)</title><rect x="37.5000%" y="885" width="0.4009%" height="15" fill="rgb(231,119,7)" fg:x="4677" fg:w="50"/><text x="37.7500%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (4 samples, 0.03%)</title><rect x="37.8688%" y="869" width="0.0321%" height="15" fill="rgb(237,82,41)" fg:x="4723" fg:w="4"/><text x="38.1188%" y="879.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="37.8849%" y="853" width="0.0160%" height="15" fill="rgb(226,81,48)" fg:x="4725" fg:w="2"/><text x="38.1349%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="37.8849%" y="837" width="0.0160%" height="15" fill="rgb(234,70,51)" fg:x="4725" fg:w="2"/><text x="38.1349%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="37.8849%" y="821" width="0.0160%" height="15" fill="rgb(251,86,4)" fg:x="4725" fg:w="2"/><text x="38.1349%" y="831.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (2 samples, 0.02%)</title><rect x="37.9410%" y="853" width="0.0160%" height="15" fill="rgb(244,144,28)" fg:x="4732" fg:w="2"/><text x="38.1910%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="37.9570%" y="853" width="0.0160%" height="15" fill="rgb(232,161,39)" fg:x="4734" fg:w="2"/><text x="38.2070%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="37.9570%" y="837" width="0.0160%" height="15" fill="rgb(247,34,51)" fg:x="4734" fg:w="2"/><text x="38.2070%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="37.9570%" y="821" width="0.0160%" height="15" fill="rgb(225,132,2)" fg:x="4734" fg:w="2"/><text x="38.2070%" y="831.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (2 samples, 0.02%)</title><rect x="37.9570%" y="805" width="0.0160%" height="15" fill="rgb(209,159,44)" fg:x="4734" fg:w="2"/><text x="38.2070%" y="815.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (13 samples, 0.10%)</title><rect x="37.9009%" y="869" width="0.1042%" height="15" fill="rgb(251,214,1)" fg:x="4727" fg:w="13"/><text x="38.1509%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (3 samples, 0.02%)</title><rect x="37.9811%" y="853" width="0.0241%" height="15" fill="rgb(247,84,47)" fg:x="4737" fg:w="3"/><text x="38.2311%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3 samples, 0.02%)</title><rect x="37.9811%" y="837" width="0.0241%" height="15" fill="rgb(240,111,43)" fg:x="4737" fg:w="3"/><text x="38.2311%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;core::option::Option&lt;fred::protocol::connection::RedisSink&gt;&gt;&gt; (21 samples, 0.17%)</title><rect x="37.9009%" y="901" width="0.1684%" height="15" fill="rgb(215,214,35)" fg:x="4727" fg:w="21"/><text x="38.1509%" y="911.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.17%)</title><rect x="37.9009%" y="885" width="0.1684%" height="15" fill="rgb(248,207,23)" fg:x="4727" fg:w="21"/><text x="38.1509%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (8 samples, 0.06%)</title><rect x="38.0051%" y="869" width="0.0641%" height="15" fill="rgb(214,186,4)" fg:x="4740" fg:w="8"/><text x="38.2551%" y="879.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.06%)</title><rect x="38.0131%" y="853" width="0.0561%" height="15" fill="rgb(220,133,22)" fg:x="4741" fg:w="7"/><text x="38.2631%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.06%)</title><rect x="38.0131%" y="837" width="0.0561%" height="15" fill="rgb(239,134,19)" fg:x="4741" fg:w="7"/><text x="38.2631%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.06%)</title><rect x="38.0131%" y="821" width="0.0561%" height="15" fill="rgb(250,140,9)" fg:x="4741" fg:w="7"/><text x="38.2631%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (204 samples, 1.64%)</title><rect x="36.4737%" y="933" width="1.6357%" height="15" fill="rgb(225,59,14)" fg:x="4549" fg:w="204"/><text x="36.7237%" y="943.50"></text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (196 samples, 1.57%)</title><rect x="36.5378%" y="917" width="1.5715%" height="15" fill="rgb(214,152,51)" fg:x="4557" fg:w="196"/><text x="36.7878%" y="927.50"></text></g><g><title>fred::multiplexer::utils::should_apply_backpressure (5 samples, 0.04%)</title><rect x="38.0693%" y="901" width="0.0401%" height="15" fill="rgb(251,227,43)" fg:x="4748" fg:w="5"/><text x="38.3193%" y="911.50"></text></g><g><title>[libc-2.28.so] (14 samples, 0.11%)</title><rect x="38.1094%" y="933" width="0.1123%" height="15" fill="rgb(241,96,17)" fg:x="4753" fg:w="14"/><text x="38.3594%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::utils::write_centralized_command::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="38.2216%" y="933" width="0.0160%" height="15" fill="rgb(234,198,43)" fg:x="4767" fg:w="2"/><text x="38.4716%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::utils::write_centralized_command::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="38.2216%" y="917" width="0.0160%" height="15" fill="rgb(220,108,29)" fg:x="4767" fg:w="2"/><text x="38.4716%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (245 samples, 1.96%)</title><rect x="36.3294%" y="965" width="1.9644%" height="15" fill="rgb(226,163,33)" fg:x="4531" fg:w="245"/><text x="36.5794%" y="975.50">&lt;..</text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (237 samples, 1.90%)</title><rect x="36.3935%" y="949" width="1.9003%" height="15" fill="rgb(205,194,45)" fg:x="4539" fg:w="237"/><text x="36.6435%" y="959.50">f..</text></g><g><title>fred::multiplexer::utils::max_attempts_reached (7 samples, 0.06%)</title><rect x="38.2377%" y="933" width="0.0561%" height="15" fill="rgb(206,143,44)" fg:x="4769" fg:w="7"/><text x="38.4877%" y="943.50"></text></g><g><title>fred::protocol::types::RedisCommand::max_attempts_exceeded (4 samples, 0.03%)</title><rect x="38.2617%" y="917" width="0.0321%" height="15" fill="rgb(236,136,36)" fg:x="4772" fg:w="4"/><text x="38.5117%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (287 samples, 2.30%)</title><rect x="36.1049%" y="997" width="2.3012%" height="15" fill="rgb(249,172,42)" fg:x="4503" fg:w="287"/><text x="36.3549%" y="1007.50">&lt;..</text></g><g><title>fred::multiplexer::commands::write_command::_{{closure}} (281 samples, 2.25%)</title><rect x="36.1530%" y="981" width="2.2530%" height="15" fill="rgb(216,139,23)" fg:x="4509" fg:w="281"/><text x="36.4030%" y="991.50">f..</text></g><g><title>[libc-2.28.so] (14 samples, 0.11%)</title><rect x="38.2938%" y="965" width="0.1123%" height="15" fill="rgb(207,166,20)" fg:x="4776" fg:w="14"/><text x="38.5438%" y="975.50"></text></g><g><title>[libc-2.28.so] (14 samples, 0.11%)</title><rect x="38.4060%" y="997" width="0.1123%" height="15" fill="rgb(210,209,22)" fg:x="4790" fg:w="14"/><text x="38.6560%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (359 samples, 2.88%)</title><rect x="35.6639%" y="1029" width="2.8784%" height="15" fill="rgb(232,118,20)" fg:x="4448" fg:w="359"/><text x="35.9139%" y="1039.50">&lt;c..</text></g><g><title>fred::multiplexer::commands::write_command_t::_{{closure}} (308 samples, 2.47%)</title><rect x="36.0728%" y="1013" width="2.4695%" height="15" fill="rgb(238,113,42)" fg:x="4499" fg:w="308"/><text x="36.3228%" y="1023.50">fr..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::write_command::{{closure}}&gt;&gt; (3 samples, 0.02%)</title><rect x="38.5183%" y="997" width="0.0241%" height="15" fill="rgb(231,42,5)" fg:x="4804" fg:w="3"/><text x="38.7683%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::commands::write_command::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="38.5183%" y="981" width="0.0241%" height="15" fill="rgb(243,166,24)" fg:x="4804" fg:w="3"/><text x="38.7683%" y="991.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="38.5584%" y="1029" width="0.0722%" height="15" fill="rgb(237,226,12)" fg:x="4809" fg:w="9"/><text x="38.8084%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="38.6386%" y="1029" width="0.0160%" height="15" fill="rgb(229,133,24)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="1039.50"></text></g><g><title>core::mem::take (2 samples, 0.02%)</title><rect x="38.6386%" y="1013" width="0.0160%" height="15" fill="rgb(238,33,43)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="1023.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="38.6386%" y="997" width="0.0160%" height="15" fill="rgb(227,59,38)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="1007.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="38.6386%" y="981" width="0.0160%" height="15" fill="rgb(230,97,0)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="38.6386%" y="965" width="0.0160%" height="15" fill="rgb(250,173,50)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping (2 samples, 0.02%)</title><rect x="38.6386%" y="949" width="0.0160%" height="15" fill="rgb(240,15,50)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (2 samples, 0.02%)</title><rect x="38.6386%" y="933" width="0.0160%" height="15" fill="rgb(221,93,22)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="38.6386%" y="917" width="0.0160%" height="15" fill="rgb(245,180,53)" fg:x="4819" fg:w="2"/><text x="38.8886%" y="927.50"></text></g><g><title>&lt;fred::protocol::types::RedisCommandKind as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="38.7588%" y="1013" width="0.0160%" height="15" fill="rgb(231,88,51)" fg:x="4834" fg:w="2"/><text x="39.0088%" y="1023.50"></text></g><g><title>fred::multiplexer::commands::is_async_flush (2 samples, 0.02%)</title><rect x="38.7749%" y="1013" width="0.0160%" height="15" fill="rgb(240,58,21)" fg:x="4836" fg:w="2"/><text x="39.0249%" y="1023.50"></text></g><g><title>&lt;fred::protocol::types::RedisCommandKind as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="38.7749%" y="997" width="0.0160%" height="15" fill="rgb(237,21,10)" fg:x="4836" fg:w="2"/><text x="39.0249%" y="1007.50"></text></g><g><title>fred::multiplexer::commands::should_disable_pipeline (19 samples, 0.15%)</title><rect x="38.6706%" y="1029" width="0.1523%" height="15" fill="rgb(218,43,11)" fg:x="4823" fg:w="19"/><text x="38.9206%" y="1039.50"></text></g><g><title>fred::utils::is_locked_some (2 samples, 0.02%)</title><rect x="38.8069%" y="1013" width="0.0160%" height="15" fill="rgb(218,221,29)" fg:x="4840" fg:w="2"/><text x="39.0569%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;fred::client::MultiPolicy&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="38.8069%" y="997" width="0.0160%" height="15" fill="rgb(214,118,42)" fg:x="4840" fg:w="2"/><text x="39.0569%" y="1007.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="38.8069%" y="981" width="0.0160%" height="15" fill="rgb(251,200,26)" fg:x="4840" fg:w="2"/><text x="39.0569%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="38.8069%" y="965" width="0.0160%" height="15" fill="rgb(237,101,39)" fg:x="4840" fg:w="2"/><text x="39.0569%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (449 samples, 3.60%)</title><rect x="35.3191%" y="1061" width="3.6001%" height="15" fill="rgb(251,117,11)" fg:x="4405" fg:w="449"/><text x="35.5691%" y="1071.50">&lt;cor..</text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (444 samples, 3.56%)</title><rect x="35.3592%" y="1045" width="3.5600%" height="15" fill="rgb(216,223,23)" fg:x="4410" fg:w="444"/><text x="35.6092%" y="1055.50">fred..</text></g><g><title>fred::utils::decr_atomic (12 samples, 0.10%)</title><rect x="38.8230%" y="1029" width="0.0962%" height="15" fill="rgb(251,54,12)" fg:x="4842" fg:w="12"/><text x="39.0730%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.09%)</title><rect x="38.8310%" y="1013" width="0.0882%" height="15" fill="rgb(254,176,54)" fg:x="4843" fg:w="11"/><text x="39.0810%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.09%)</title><rect x="38.8310%" y="997" width="0.0882%" height="15" fill="rgb(210,32,8)" fg:x="4843" fg:w="11"/><text x="39.0810%" y="1007.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="38.9192%" y="1061" width="0.0481%" height="15" fill="rgb(235,52,38)" fg:x="4854" fg:w="6"/><text x="39.1692%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (464 samples, 3.72%)</title><rect x="35.2550%" y="1093" width="3.7203%" height="15" fill="rgb(231,4,44)" fg:x="4397" fg:w="464"/><text x="35.5050%" y="1103.50">&lt;cor..</text></g><g><title>fred::multiplexer::commands::handle_command_t::_{{closure}} (464 samples, 3.72%)</title><rect x="35.2550%" y="1077" width="3.7203%" height="15" fill="rgb(249,2,32)" fg:x="4397" fg:w="464"/><text x="35.5050%" y="1087.50">fred..</text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="38.9753%" y="1093" width="0.0401%" height="15" fill="rgb(224,65,26)" fg:x="4861" fg:w="5"/><text x="39.2253%" y="1103.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}}::_{{closure}}::_{{closure}} (480 samples, 3.85%)</title><rect x="35.2069%" y="1109" width="3.8486%" height="15" fill="rgb(250,73,40)" fg:x="4391" fg:w="480"/><text x="35.4569%" y="1119.50">fred..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::handle_command_t::{{closure}}&gt;&gt; (5 samples, 0.04%)</title><rect x="39.0154%" y="1093" width="0.0401%" height="15" fill="rgb(253,177,16)" fg:x="4866" fg:w="5"/><text x="39.2654%" y="1103.50"></text></g><g><title>[libc-2.28.so] (27 samples, 0.22%)</title><rect x="39.0635%" y="949" width="0.2165%" height="15" fill="rgb(217,32,34)" fg:x="4872" fg:w="27"/><text x="39.3135%" y="959.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="39.3521%" y="805" width="0.0160%" height="15" fill="rgb(212,7,10)" fg:x="4908" fg:w="2"/><text x="39.6021%" y="815.50"></text></g><g><title>[libc-2.28.so] (95 samples, 0.76%)</title><rect x="39.6729%" y="773" width="0.7617%" height="15" fill="rgb(245,89,8)" fg:x="4948" fg:w="95"/><text x="39.9229%" y="783.50"></text></g><g><title>futex_wait (3 samples, 0.02%)</title><rect x="40.4506%" y="709" width="0.0241%" height="15" fill="rgb(237,16,53)" fg:x="5045" fg:w="3"/><text x="40.7006%" y="719.50"></text></g><g><title>futex_wait_queue_me (3 samples, 0.02%)</title><rect x="40.4506%" y="693" width="0.0241%" height="15" fill="rgb(250,204,30)" fg:x="5045" fg:w="3"/><text x="40.7006%" y="703.50"></text></g><g><title>schedule (3 samples, 0.02%)</title><rect x="40.4506%" y="677" width="0.0241%" height="15" fill="rgb(208,77,27)" fg:x="5045" fg:w="3"/><text x="40.7006%" y="687.50"></text></g><g><title>__schedule (3 samples, 0.02%)</title><rect x="40.4506%" y="661" width="0.0241%" height="15" fill="rgb(250,204,28)" fg:x="5045" fg:w="3"/><text x="40.7006%" y="671.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.02%)</title><rect x="40.4586%" y="645" width="0.0160%" height="15" fill="rgb(244,63,21)" fg:x="5046" fg:w="2"/><text x="40.7086%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (150 samples, 1.20%)</title><rect x="39.3201%" y="885" width="1.2027%" height="15" fill="rgb(236,85,44)" fg:x="4904" fg:w="150"/><text x="39.5701%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 samples, 1.18%)</title><rect x="39.3441%" y="869" width="1.1786%" height="15" fill="rgb(215,98,4)" fg:x="4907" fg:w="147"/><text x="39.5941%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (146 samples, 1.17%)</title><rect x="39.3521%" y="853" width="1.1706%" height="15" fill="rgb(235,38,11)" fg:x="4908" fg:w="146"/><text x="39.6021%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (146 samples, 1.17%)</title><rect x="39.3521%" y="837" width="1.1706%" height="15" fill="rgb(254,186,25)" fg:x="4908" fg:w="146"/><text x="39.6021%" y="847.50"></text></g><g><title>alloc::alloc::realloc (146 samples, 1.17%)</title><rect x="39.3521%" y="821" width="1.1706%" height="15" fill="rgb(225,55,31)" fg:x="4908" fg:w="146"/><text x="39.6021%" y="831.50"></text></g><g><title>realloc (144 samples, 1.15%)</title><rect x="39.3682%" y="805" width="1.1546%" height="15" fill="rgb(211,15,21)" fg:x="4910" fg:w="144"/><text x="39.6182%" y="815.50"></text></g><g><title>[libc-2.28.so] (123 samples, 0.99%)</title><rect x="39.5366%" y="789" width="0.9862%" height="15" fill="rgb(215,187,41)" fg:x="4931" fg:w="123"/><text x="39.7866%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.09%)</title><rect x="40.4346%" y="773" width="0.0882%" height="15" fill="rgb(248,69,32)" fg:x="5043" fg:w="11"/><text x="40.6846%" y="783.50"></text></g><g><title>do_syscall_64 (9 samples, 0.07%)</title><rect x="40.4506%" y="757" width="0.0722%" height="15" fill="rgb(252,102,52)" fg:x="5045" fg:w="9"/><text x="40.7006%" y="767.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.07%)</title><rect x="40.4506%" y="741" width="0.0722%" height="15" fill="rgb(253,140,32)" fg:x="5045" fg:w="9"/><text x="40.7006%" y="751.50"></text></g><g><title>do_futex (9 samples, 0.07%)</title><rect x="40.4506%" y="725" width="0.0722%" height="15" fill="rgb(216,56,42)" fg:x="5045" fg:w="9"/><text x="40.7006%" y="735.50"></text></g><g><title>futex_wake (6 samples, 0.05%)</title><rect x="40.4747%" y="709" width="0.0481%" height="15" fill="rgb(216,184,14)" fg:x="5048" fg:w="6"/><text x="40.7247%" y="719.50"></text></g><g><title>wake_up_q (2 samples, 0.02%)</title><rect x="40.5067%" y="693" width="0.0160%" height="15" fill="rgb(237,187,27)" fg:x="5052" fg:w="2"/><text x="40.7567%" y="703.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="40.5067%" y="677" width="0.0160%" height="15" fill="rgb(219,65,3)" fg:x="5052" fg:w="2"/><text x="40.7567%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (155 samples, 1.24%)</title><rect x="39.2880%" y="933" width="1.2428%" height="15" fill="rgb(245,83,25)" fg:x="4900" fg:w="155"/><text x="39.5380%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (155 samples, 1.24%)</title><rect x="39.2880%" y="917" width="1.2428%" height="15" fill="rgb(214,205,45)" fg:x="4900" fg:w="155"/><text x="39.5380%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (154 samples, 1.23%)</title><rect x="39.2960%" y="901" width="1.2348%" height="15" fill="rgb(241,20,18)" fg:x="4901" fg:w="154"/><text x="39.5460%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (165 samples, 1.32%)</title><rect x="39.2800%" y="949" width="1.3230%" height="15" fill="rgb(232,163,23)" fg:x="4899" fg:w="165"/><text x="39.5300%" y="959.50"></text></g><g><title>core::ptr::write (9 samples, 0.07%)</title><rect x="40.5308%" y="933" width="0.0722%" height="15" fill="rgb(214,5,46)" fg:x="5055" fg:w="9"/><text x="40.7808%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="40.6671%" y="901" width="0.0241%" height="15" fill="rgb(229,78,17)" fg:x="5072" fg:w="3"/><text x="40.9171%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::span::SpanInner&gt; (2 samples, 0.02%)</title><rect x="40.6751%" y="885" width="0.0160%" height="15" fill="rgb(248,89,10)" fg:x="5073" fg:w="2"/><text x="40.9251%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::span::Span&gt; (11 samples, 0.09%)</title><rect x="40.6110%" y="949" width="0.0882%" height="15" fill="rgb(248,54,15)" fg:x="5065" fg:w="11"/><text x="40.8610%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::span::SpanInner&gt;&gt; (11 samples, 0.09%)</title><rect x="40.6110%" y="933" width="0.0882%" height="15" fill="rgb(223,116,6)" fg:x="5065" fg:w="11"/><text x="40.8610%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.09%)</title><rect x="40.6110%" y="917" width="0.0882%" height="15" fill="rgb(205,125,38)" fg:x="5065" fg:w="11"/><text x="40.8610%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (4 samples, 0.03%)</title><rect x="40.6992%" y="949" width="0.0321%" height="15" fill="rgb(251,78,38)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (4 samples, 0.03%)</title><rect x="40.6992%" y="933" width="0.0321%" height="15" fill="rgb(253,78,28)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (4 samples, 0.03%)</title><rect x="40.6992%" y="917" width="0.0321%" height="15" fill="rgb(209,120,3)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="927.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="40.6992%" y="901" width="0.0321%" height="15" fill="rgb(238,229,9)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="911.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="40.6992%" y="885" width="0.0321%" height="15" fill="rgb(253,159,18)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="895.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="40.6992%" y="869" width="0.0321%" height="15" fill="rgb(244,42,34)" fg:x="5076" fg:w="4"/><text x="40.9492%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (9 samples, 0.07%)</title><rect x="40.7312%" y="949" width="0.0722%" height="15" fill="rgb(224,8,7)" fg:x="5080" fg:w="9"/><text x="40.9812%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (9 samples, 0.07%)</title><rect x="40.7312%" y="933" width="0.0722%" height="15" fill="rgb(210,201,45)" fg:x="5080" fg:w="9"/><text x="40.9812%" y="943.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.07%)</title><rect x="40.7312%" y="917" width="0.0722%" height="15" fill="rgb(252,185,21)" fg:x="5080" fg:w="9"/><text x="40.9812%" y="927.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (9 samples, 0.07%)</title><rect x="40.7312%" y="901" width="0.0722%" height="15" fill="rgb(223,131,1)" fg:x="5080" fg:w="9"/><text x="40.9812%" y="911.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (9 samples, 0.07%)</title><rect x="40.7312%" y="885" width="0.0722%" height="15" fill="rgb(245,141,16)" fg:x="5080" fg:w="9"/><text x="40.9812%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (8 samples, 0.06%)</title><rect x="40.7393%" y="869" width="0.0641%" height="15" fill="rgb(229,55,45)" fg:x="5081" fg:w="8"/><text x="40.9893%" y="879.50"></text></g><g><title>__GI___pthread_rwlock_unlock (6 samples, 0.05%)</title><rect x="40.7553%" y="853" width="0.0481%" height="15" fill="rgb(208,92,15)" fg:x="5083" fg:w="6"/><text x="41.0053%" y="863.50"></text></g><g><title>opentelemetry::core::KeyValue::new (14 samples, 0.11%)</title><rect x="40.8034%" y="949" width="0.1123%" height="15" fill="rgb(234,185,47)" fg:x="5089" fg:w="14"/><text x="41.0534%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="40.8916%" y="933" width="0.0241%" height="15" fill="rgb(253,104,50)" fg:x="5100" fg:w="3"/><text x="41.1416%" y="943.50"></text></g><g><title>&lt;opentelemetry::core::Value as core::convert::From&lt;i64&gt;&gt;::from (3 samples, 0.02%)</title><rect x="40.8916%" y="917" width="0.0241%" height="15" fill="rgb(205,70,7)" fg:x="5100" fg:w="3"/><text x="41.1416%" y="927.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::start (3 samples, 0.02%)</title><rect x="40.9157%" y="949" width="0.0241%" height="15" fill="rgb(240,178,43)" fg:x="5103" fg:w="3"/><text x="41.1657%" y="959.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build (2 samples, 0.02%)</title><rect x="40.9237%" y="933" width="0.0160%" height="15" fill="rgb(214,112,2)" fg:x="5104" fg:w="2"/><text x="41.1737%" y="943.50"></text></g><g><title>std::time::SystemTime::now (13 samples, 0.10%)</title><rect x="40.9477%" y="949" width="0.1042%" height="15" fill="rgb(206,46,17)" fg:x="5107" fg:w="13"/><text x="41.1977%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (11 samples, 0.09%)</title><rect x="40.9638%" y="933" width="0.0882%" height="15" fill="rgb(225,220,16)" fg:x="5109" fg:w="11"/><text x="41.2138%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.09%)</title><rect x="40.9638%" y="917" width="0.0882%" height="15" fill="rgb(238,65,40)" fg:x="5109" fg:w="11"/><text x="41.2138%" y="927.50"></text></g><g><title>__clock_gettime (11 samples, 0.09%)</title><rect x="40.9638%" y="901" width="0.0882%" height="15" fill="rgb(230,151,21)" fg:x="5109" fg:w="11"/><text x="41.2138%" y="911.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.07%)</title><rect x="40.9798%" y="885" width="0.0722%" height="15" fill="rgb(218,58,49)" fg:x="5111" fg:w="9"/><text x="41.2298%" y="895.50"></text></g><g><title>[[vdso]] (8 samples, 0.06%)</title><rect x="40.9878%" y="869" width="0.0641%" height="15" fill="rgb(219,179,14)" fg:x="5112" fg:w="8"/><text x="41.2378%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="41.0680%" y="901" width="0.0561%" height="15" fill="rgb(223,72,1)" fg:x="5122" fg:w="7"/><text x="41.3180%" y="911.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="41.1241%" y="885" width="0.0160%" height="15" fill="rgb(238,126,10)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="895.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="41.1241%" y="869" width="0.0160%" height="15" fill="rgb(224,206,38)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="41.1241%" y="853" width="0.0160%" height="15" fill="rgb(212,201,54)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="863.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="41.1241%" y="837" width="0.0160%" height="15" fill="rgb(218,154,48)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="847.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="41.1241%" y="821" width="0.0160%" height="15" fill="rgb(232,93,24)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="831.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="41.1241%" y="805" width="0.0160%" height="15" fill="rgb(245,30,21)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="41.1241%" y="789" width="0.0160%" height="15" fill="rgb(242,148,29)" fg:x="5129" fg:w="2"/><text x="41.3741%" y="799.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (14 samples, 0.11%)</title><rect x="41.0520%" y="949" width="0.1123%" height="15" fill="rgb(244,153,54)" fg:x="5120" fg:w="14"/><text x="41.3020%" y="959.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (14 samples, 0.11%)</title><rect x="41.0520%" y="933" width="0.1123%" height="15" fill="rgb(252,87,22)" fg:x="5120" fg:w="14"/><text x="41.3020%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (13 samples, 0.10%)</title><rect x="41.0600%" y="917" width="0.1042%" height="15" fill="rgb(210,51,29)" fg:x="5121" fg:w="13"/><text x="41.3100%" y="927.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (5 samples, 0.04%)</title><rect x="41.1241%" y="901" width="0.0401%" height="15" fill="rgb(242,136,47)" fg:x="5129" fg:w="5"/><text x="41.3741%" y="911.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (3 samples, 0.02%)</title><rect x="41.1402%" y="885" width="0.0241%" height="15" fill="rgb(238,68,4)" fg:x="5131" fg:w="3"/><text x="41.3902%" y="895.50"></text></g><g><title>tracing_core::span::Id::into_u64 (2 samples, 0.02%)</title><rect x="41.1482%" y="869" width="0.0160%" height="15" fill="rgb(242,161,30)" fg:x="5132" fg:w="2"/><text x="41.3982%" y="879.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (4 samples, 0.03%)</title><rect x="41.1642%" y="949" width="0.0321%" height="15" fill="rgb(218,58,44)" fg:x="5134" fg:w="4"/><text x="41.4142%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (4 samples, 0.03%)</title><rect x="41.1642%" y="933" width="0.0321%" height="15" fill="rgb(252,125,32)" fg:x="5134" fg:w="4"/><text x="41.4142%" y="943.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="41.1722%" y="917" width="0.0241%" height="15" fill="rgb(219,178,0)" fg:x="5135" fg:w="3"/><text x="41.4222%" y="927.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="41.1722%" y="901" width="0.0241%" height="15" fill="rgb(213,152,7)" fg:x="5135" fg:w="3"/><text x="41.4222%" y="911.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="41.1722%" y="885" width="0.0241%" height="15" fill="rgb(249,109,34)" fg:x="5135" fg:w="3"/><text x="41.4222%" y="895.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="41.1722%" y="869" width="0.0241%" height="15" fill="rgb(232,96,21)" fg:x="5135" fg:w="3"/><text x="41.4222%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.02%)</title><rect x="41.1963%" y="917" width="0.0241%" height="15" fill="rgb(228,27,39)" fg:x="5138" fg:w="3"/><text x="41.4463%" y="927.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (3 samples, 0.02%)</title><rect x="41.1963%" y="901" width="0.0241%" height="15" fill="rgb(211,182,52)" fg:x="5138" fg:w="3"/><text x="41.4463%" y="911.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (3 samples, 0.02%)</title><rect x="41.1963%" y="885" width="0.0241%" height="15" fill="rgb(234,178,38)" fg:x="5138" fg:w="3"/><text x="41.4463%" y="895.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (3 samples, 0.02%)</title><rect x="41.1963%" y="869" width="0.0241%" height="15" fill="rgb(221,111,3)" fg:x="5138" fg:w="3"/><text x="41.4463%" y="879.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (3 samples, 0.02%)</title><rect x="41.1963%" y="853" width="0.0241%" height="15" fill="rgb(228,175,21)" fg:x="5138" fg:w="3"/><text x="41.4463%" y="863.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (5 samples, 0.04%)</title><rect x="41.1963%" y="949" width="0.0401%" height="15" fill="rgb(228,174,43)" fg:x="5138" fg:w="5"/><text x="41.4463%" y="959.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (5 samples, 0.04%)</title><rect x="41.1963%" y="933" width="0.0401%" height="15" fill="rgb(211,191,0)" fg:x="5138" fg:w="5"/><text x="41.4463%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="41.2203%" y="917" width="0.0160%" height="15" fill="rgb(253,117,3)" fg:x="5141" fg:w="2"/><text x="41.4703%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="41.2203%" y="901" width="0.0160%" height="15" fill="rgb(241,127,19)" fg:x="5141" fg:w="2"/><text x="41.4703%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="41.2203%" y="885" width="0.0160%" height="15" fill="rgb(218,103,12)" fg:x="5141" fg:w="2"/><text x="41.4703%" y="895.50"></text></g><g><title>[libc-2.28.so] (26 samples, 0.21%)</title><rect x="41.2364%" y="853" width="0.2085%" height="15" fill="rgb(236,214,43)" fg:x="5143" fg:w="26"/><text x="41.4864%" y="863.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.10%)</title><rect x="41.4448%" y="805" width="0.0962%" height="15" fill="rgb(244,144,19)" fg:x="5169" fg:w="12"/><text x="41.6948%" y="815.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="41.5170%" y="789" width="0.0241%" height="15" fill="rgb(246,188,10)" fg:x="5178" fg:w="3"/><text x="41.7670%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="41.5250%" y="773" width="0.0160%" height="15" fill="rgb(212,193,33)" fg:x="5179" fg:w="2"/><text x="41.7750%" y="783.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="41.5250%" y="757" width="0.0160%" height="15" fill="rgb(241,51,29)" fg:x="5179" fg:w="2"/><text x="41.7750%" y="767.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="41.5250%" y="741" width="0.0160%" height="15" fill="rgb(211,58,19)" fg:x="5179" fg:w="2"/><text x="41.7750%" y="751.50"></text></g><g><title>do_futex (2 samples, 0.02%)</title><rect x="41.5250%" y="725" width="0.0160%" height="15" fill="rgb(229,111,26)" fg:x="5179" fg:w="2"/><text x="41.7750%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (42 samples, 0.34%)</title><rect x="41.2364%" y="917" width="0.3368%" height="15" fill="rgb(213,115,40)" fg:x="5143" fg:w="42"/><text x="41.4864%" y="927.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove::_{{closure}} (42 samples, 0.34%)</title><rect x="41.2364%" y="901" width="0.3368%" height="15" fill="rgb(209,56,44)" fg:x="5143" fg:w="42"/><text x="41.4864%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (42 samples, 0.34%)</title><rect x="41.2364%" y="885" width="0.3368%" height="15" fill="rgb(230,108,32)" fg:x="5143" fg:w="42"/><text x="41.4864%" y="895.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove::_{{closure}}::_{{closure}} (42 samples, 0.34%)</title><rect x="41.2364%" y="869" width="0.3368%" height="15" fill="rgb(216,165,31)" fg:x="5143" fg:w="42"/><text x="41.4864%" y="879.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.13%)</title><rect x="41.4448%" y="853" width="0.1283%" height="15" fill="rgb(218,122,21)" fg:x="5169" fg:w="16"/><text x="41.6948%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.13%)</title><rect x="41.4448%" y="837" width="0.1283%" height="15" fill="rgb(223,224,47)" fg:x="5169" fg:w="16"/><text x="41.6948%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.13%)</title><rect x="41.4448%" y="821" width="0.1283%" height="15" fill="rgb(238,102,44)" fg:x="5169" fg:w="16"/><text x="41.6948%" y="831.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="41.5411%" y="805" width="0.0321%" height="15" fill="rgb(236,46,40)" fg:x="5181" fg:w="4"/><text x="41.7911%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (4 samples, 0.03%)</title><rect x="41.5731%" y="869" width="0.0321%" height="15" fill="rgb(247,202,50)" fg:x="5185" fg:w="4"/><text x="41.8231%" y="879.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (320 samples, 2.57%)</title><rect x="39.0555%" y="965" width="2.5657%" height="15" fill="rgb(209,99,20)" fg:x="4871" fg:w="320"/><text x="39.3055%" y="975.50">&lt;t..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::remove (48 samples, 0.38%)</title><rect x="41.2364%" y="949" width="0.3849%" height="15" fill="rgb(252,27,34)" fg:x="5143" fg:w="48"/><text x="41.4864%" y="959.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::remove (48 samples, 0.38%)</title><rect x="41.2364%" y="933" width="0.3849%" height="15" fill="rgb(215,206,23)" fg:x="5143" fg:w="48"/><text x="41.4864%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (6 samples, 0.05%)</title><rect x="41.5731%" y="917" width="0.0481%" height="15" fill="rgb(212,135,36)" fg:x="5185" fg:w="6"/><text x="41.8231%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (6 samples, 0.05%)</title><rect x="41.5731%" y="901" width="0.0481%" height="15" fill="rgb(240,189,1)" fg:x="5185" fg:w="6"/><text x="41.8231%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove_entry (6 samples, 0.05%)</title><rect x="41.5731%" y="885" width="0.0481%" height="15" fill="rgb(242,56,20)" fg:x="5185" fg:w="6"/><text x="41.8231%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::remove (2 samples, 0.02%)</title><rect x="41.6052%" y="869" width="0.0160%" height="15" fill="rgb(247,132,33)" fg:x="5189" fg:w="2"/><text x="41.8552%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::erase_no_drop (2 samples, 0.02%)</title><rect x="41.6052%" y="853" width="0.0160%" height="15" fill="rgb(208,149,11)" fg:x="5189" fg:w="2"/><text x="41.8552%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (2 samples, 0.02%)</title><rect x="41.6052%" y="837" width="0.0160%" height="15" fill="rgb(211,33,11)" fg:x="5189" fg:w="2"/><text x="41.8552%" y="847.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (2 samples, 0.02%)</title><rect x="41.6052%" y="821" width="0.0160%" height="15" fill="rgb(221,29,38)" fg:x="5189" fg:w="2"/><text x="41.8552%" y="831.50"></text></g><g><title>std::thread::panicking (2 samples, 0.02%)</title><rect x="41.6453%" y="613" width="0.0160%" height="15" fill="rgb(206,182,49)" fg:x="5194" fg:w="2"/><text x="41.8953%" y="623.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.02%)</title><rect x="41.6453%" y="597" width="0.0160%" height="15" fill="rgb(216,140,1)" fg:x="5194" fg:w="2"/><text x="41.8953%" y="607.50"></text></g><g><title>std::panicking::panic_count::is_zero (2 samples, 0.02%)</title><rect x="41.6453%" y="581" width="0.0160%" height="15" fill="rgb(232,57,40)" fg:x="5194" fg:w="2"/><text x="41.8953%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="41.6453%" y="565" width="0.0160%" height="15" fill="rgb(224,186,18)" fg:x="5194" fg:w="2"/><text x="41.8953%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="41.6453%" y="549" width="0.0160%" height="15" fill="rgb(215,121,11)" fg:x="5194" fg:w="2"/><text x="41.8953%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="41.6774%" y="517" width="0.0160%" height="15" fill="rgb(245,147,10)" fg:x="5198" fg:w="2"/><text x="41.9274%" y="527.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (11 samples, 0.09%)</title><rect x="41.6613%" y="597" width="0.0882%" height="15" fill="rgb(238,153,13)" fg:x="5196" fg:w="11"/><text x="41.9113%" y="607.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (11 samples, 0.09%)</title><rect x="41.6613%" y="581" width="0.0882%" height="15" fill="rgb(233,108,0)" fg:x="5196" fg:w="11"/><text x="41.9113%" y="591.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (9 samples, 0.07%)</title><rect x="41.6774%" y="565" width="0.0722%" height="15" fill="rgb(212,157,17)" fg:x="5198" fg:w="9"/><text x="41.9274%" y="575.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (9 samples, 0.07%)</title><rect x="41.6774%" y="549" width="0.0722%" height="15" fill="rgb(225,213,38)" fg:x="5198" fg:w="9"/><text x="41.9274%" y="559.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (9 samples, 0.07%)</title><rect x="41.6774%" y="533" width="0.0722%" height="15" fill="rgb(248,16,11)" fg:x="5198" fg:w="9"/><text x="41.9274%" y="543.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (7 samples, 0.06%)</title><rect x="41.6934%" y="517" width="0.0561%" height="15" fill="rgb(241,33,4)" fg:x="5200" fg:w="7"/><text x="41.9434%" y="527.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (7 samples, 0.06%)</title><rect x="41.6934%" y="501" width="0.0561%" height="15" fill="rgb(222,26,43)" fg:x="5200" fg:w="7"/><text x="41.9434%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="41.7255%" y="485" width="0.0241%" height="15" fill="rgb(243,29,36)" fg:x="5204" fg:w="3"/><text x="41.9755%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="41.7255%" y="469" width="0.0241%" height="15" fill="rgb(241,9,27)" fg:x="5204" fg:w="3"/><text x="41.9755%" y="479.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (17 samples, 0.14%)</title><rect x="41.6212%" y="885" width="0.1363%" height="15" fill="rgb(205,117,26)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="895.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (17 samples, 0.14%)</title><rect x="41.6212%" y="869" width="0.1363%" height="15" fill="rgb(209,80,39)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="879.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (17 samples, 0.14%)</title><rect x="41.6212%" y="853" width="0.1363%" height="15" fill="rgb(239,155,6)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (17 samples, 0.14%)</title><rect x="41.6212%" y="837" width="0.1363%" height="15" fill="rgb(212,104,12)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (17 samples, 0.14%)</title><rect x="41.6212%" y="821" width="0.1363%" height="15" fill="rgb(234,204,3)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (17 samples, 0.14%)</title><rect x="41.6212%" y="805" width="0.1363%" height="15" fill="rgb(251,218,7)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (17 samples, 0.14%)</title><rect x="41.6212%" y="789" width="0.1363%" height="15" fill="rgb(221,81,32)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (17 samples, 0.14%)</title><rect x="41.6212%" y="773" width="0.1363%" height="15" fill="rgb(214,152,26)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (17 samples, 0.14%)</title><rect x="41.6212%" y="757" width="0.1363%" height="15" fill="rgb(223,22,3)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (17 samples, 0.14%)</title><rect x="41.6212%" y="741" width="0.1363%" height="15" fill="rgb(207,174,7)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.14%)</title><rect x="41.6212%" y="725" width="0.1363%" height="15" fill="rgb(224,19,52)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (17 samples, 0.14%)</title><rect x="41.6212%" y="709" width="0.1363%" height="15" fill="rgb(228,24,14)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (17 samples, 0.14%)</title><rect x="41.6212%" y="693" width="0.1363%" height="15" fill="rgb(230,153,43)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="703.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (17 samples, 0.14%)</title><rect x="41.6212%" y="677" width="0.1363%" height="15" fill="rgb(231,106,12)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (17 samples, 0.14%)</title><rect x="41.6212%" y="661" width="0.1363%" height="15" fill="rgb(215,92,2)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (17 samples, 0.14%)</title><rect x="41.6212%" y="645" width="0.1363%" height="15" fill="rgb(249,143,25)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (17 samples, 0.14%)</title><rect x="41.6212%" y="629" width="0.1363%" height="15" fill="rgb(252,7,35)" fg:x="5191" fg:w="17"/><text x="41.8712%" y="639.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (12 samples, 0.10%)</title><rect x="41.6613%" y="613" width="0.0962%" height="15" fill="rgb(216,69,40)" fg:x="5196" fg:w="12"/><text x="41.9113%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="41.7736%" y="613" width="0.0160%" height="15" fill="rgb(240,36,33)" fg:x="5210" fg:w="2"/><text x="42.0236%" y="623.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="41.7736%" y="597" width="0.0160%" height="15" fill="rgb(231,128,14)" fg:x="5210" fg:w="2"/><text x="42.0236%" y="607.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="41.7736%" y="581" width="0.0160%" height="15" fill="rgb(245,143,14)" fg:x="5210" fg:w="2"/><text x="42.0236%" y="591.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="41.7736%" y="565" width="0.0160%" height="15" fill="rgb(222,130,28)" fg:x="5210" fg:w="2"/><text x="42.0236%" y="575.50"></text></g><g><title>std::thread::panicking (4 samples, 0.03%)</title><rect x="41.7896%" y="613" width="0.0321%" height="15" fill="rgb(212,10,48)" fg:x="5212" fg:w="4"/><text x="42.0396%" y="623.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.03%)</title><rect x="41.7896%" y="597" width="0.0321%" height="15" fill="rgb(254,118,45)" fg:x="5212" fg:w="4"/><text x="42.0396%" y="607.50"></text></g><g><title>std::panicking::panic_count::is_zero (4 samples, 0.03%)</title><rect x="41.7896%" y="581" width="0.0321%" height="15" fill="rgb(228,6,45)" fg:x="5212" fg:w="4"/><text x="42.0396%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.03%)</title><rect x="41.7896%" y="565" width="0.0321%" height="15" fill="rgb(241,18,35)" fg:x="5212" fg:w="4"/><text x="42.0396%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="41.7896%" y="549" width="0.0321%" height="15" fill="rgb(227,214,53)" fg:x="5212" fg:w="4"/><text x="42.0396%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="41.8618%" y="517" width="0.0160%" height="15" fill="rgb(224,107,51)" fg:x="5221" fg:w="2"/><text x="42.1118%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::trace::enabled::CommandTraces&gt; (369 samples, 2.96%)</title><rect x="39.0555%" y="1029" width="2.9586%" height="15" fill="rgb(248,60,28)" fg:x="4871" fg:w="369"/><text x="39.3055%" y="1039.50">cor..</text></g><g><title>&lt;fred::trace::enabled::CommandTraces as core::ops::drop::Drop&gt;::drop (369 samples, 2.96%)</title><rect x="39.0555%" y="1013" width="2.9586%" height="15" fill="rgb(249,101,23)" fg:x="4871" fg:w="369"/><text x="39.3055%" y="1023.50">&lt;fr..</text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (369 samples, 2.96%)</title><rect x="39.0555%" y="997" width="2.9586%" height="15" fill="rgb(228,51,19)" fg:x="4871" fg:w="369"/><text x="39.3055%" y="1007.50">cor..</text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (369 samples, 2.96%)</title><rect x="39.0555%" y="981" width="2.9586%" height="15" fill="rgb(213,20,6)" fg:x="4871" fg:w="369"/><text x="39.3055%" y="991.50">&lt;tr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (49 samples, 0.39%)</title><rect x="41.6212%" y="965" width="0.3929%" height="15" fill="rgb(212,124,10)" fg:x="5191" fg:w="49"/><text x="41.8712%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (49 samples, 0.39%)</title><rect x="41.6212%" y="949" width="0.3929%" height="15" fill="rgb(248,3,40)" fg:x="5191" fg:w="49"/><text x="41.8712%" y="959.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (49 samples, 0.39%)</title><rect x="41.6212%" y="933" width="0.3929%" height="15" fill="rgb(223,178,23)" fg:x="5191" fg:w="49"/><text x="41.8712%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.39%)</title><rect x="41.6212%" y="917" width="0.3929%" height="15" fill="rgb(240,132,45)" fg:x="5191" fg:w="49"/><text x="41.8712%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::_{{closure}} (49 samples, 0.39%)</title><rect x="41.6212%" y="901" width="0.3929%" height="15" fill="rgb(245,164,36)" fg:x="5191" fg:w="49"/><text x="41.8712%" y="911.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_remote (32 samples, 0.26%)</title><rect x="41.7575%" y="885" width="0.2566%" height="15" fill="rgb(231,188,53)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="895.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (32 samples, 0.26%)</title><rect x="41.7575%" y="869" width="0.2566%" height="15" fill="rgb(237,198,39)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="879.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (32 samples, 0.26%)</title><rect x="41.7575%" y="853" width="0.2566%" height="15" fill="rgb(223,120,35)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::_{{closure}} (32 samples, 0.26%)</title><rect x="41.7575%" y="837" width="0.2566%" height="15" fill="rgb(253,107,49)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (32 samples, 0.26%)</title><rect x="41.7575%" y="821" width="0.2566%" height="15" fill="rgb(216,44,31)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (32 samples, 0.26%)</title><rect x="41.7575%" y="805" width="0.2566%" height="15" fill="rgb(253,87,21)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (32 samples, 0.26%)</title><rect x="41.7575%" y="789" width="0.2566%" height="15" fill="rgb(226,18,2)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (32 samples, 0.26%)</title><rect x="41.7575%" y="773" width="0.2566%" height="15" fill="rgb(216,8,46)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::_{{closure}} (32 samples, 0.26%)</title><rect x="41.7575%" y="757" width="0.2566%" height="15" fill="rgb(226,140,39)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}} (32 samples, 0.26%)</title><rect x="41.7575%" y="741" width="0.2566%" height="15" fill="rgb(221,194,54)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32 samples, 0.26%)</title><rect x="41.7575%" y="725" width="0.2566%" height="15" fill="rgb(213,92,11)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::_{{closure}}::_{{closure}} (32 samples, 0.26%)</title><rect x="41.7575%" y="709" width="0.2566%" height="15" fill="rgb(229,162,46)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (32 samples, 0.26%)</title><rect x="41.7575%" y="693" width="0.2566%" height="15" fill="rgb(214,111,36)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="703.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (32 samples, 0.26%)</title><rect x="41.7575%" y="677" width="0.2566%" height="15" fill="rgb(207,6,21)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (32 samples, 0.26%)</title><rect x="41.7575%" y="661" width="0.2566%" height="15" fill="rgb(213,127,38)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (32 samples, 0.26%)</title><rect x="41.7575%" y="645" width="0.2566%" height="15" fill="rgb(238,118,32)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (32 samples, 0.26%)</title><rect x="41.7575%" y="629" width="0.2566%" height="15" fill="rgb(240,139,39)" fg:x="5208" fg:w="32"/><text x="42.0075%" y="639.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (24 samples, 0.19%)</title><rect x="41.8217%" y="613" width="0.1924%" height="15" fill="rgb(235,10,37)" fg:x="5216" fg:w="24"/><text x="42.0717%" y="623.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (24 samples, 0.19%)</title><rect x="41.8217%" y="597" width="0.1924%" height="15" fill="rgb(249,171,38)" fg:x="5216" fg:w="24"/><text x="42.0717%" y="607.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (24 samples, 0.19%)</title><rect x="41.8217%" y="581" width="0.1924%" height="15" fill="rgb(242,144,32)" fg:x="5216" fg:w="24"/><text x="42.0717%" y="591.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (20 samples, 0.16%)</title><rect x="41.8538%" y="565" width="0.1604%" height="15" fill="rgb(217,117,21)" fg:x="5220" fg:w="20"/><text x="42.1038%" y="575.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (19 samples, 0.15%)</title><rect x="41.8618%" y="549" width="0.1523%" height="15" fill="rgb(249,87,1)" fg:x="5221" fg:w="19"/><text x="42.1118%" y="559.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (19 samples, 0.15%)</title><rect x="41.8618%" y="533" width="0.1523%" height="15" fill="rgb(248,196,48)" fg:x="5221" fg:w="19"/><text x="42.1118%" y="543.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (17 samples, 0.14%)</title><rect x="41.8778%" y="517" width="0.1363%" height="15" fill="rgb(251,206,33)" fg:x="5223" fg:w="17"/><text x="42.1278%" y="527.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (17 samples, 0.14%)</title><rect x="41.8778%" y="501" width="0.1363%" height="15" fill="rgb(232,141,28)" fg:x="5223" fg:w="17"/><text x="42.1278%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.09%)</title><rect x="41.9259%" y="485" width="0.0882%" height="15" fill="rgb(209,167,14)" fg:x="5229" fg:w="11"/><text x="42.1759%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.09%)</title><rect x="41.9259%" y="469" width="0.0882%" height="15" fill="rgb(225,11,50)" fg:x="5229" fg:w="11"/><text x="42.1759%" y="479.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (3 samples, 0.02%)</title><rect x="42.0382%" y="837" width="0.0241%" height="15" fill="rgb(209,50,20)" fg:x="5243" fg:w="3"/><text x="42.2882%" y="847.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (27 samples, 0.22%)</title><rect x="42.0702%" y="821" width="0.2165%" height="15" fill="rgb(212,17,46)" fg:x="5247" fg:w="27"/><text x="42.3202%" y="831.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (24 samples, 0.19%)</title><rect x="42.0943%" y="805" width="0.1924%" height="15" fill="rgb(216,101,39)" fg:x="5250" fg:w="24"/><text x="42.3443%" y="815.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (3 samples, 0.02%)</title><rect x="42.2627%" y="789" width="0.0241%" height="15" fill="rgb(212,228,48)" fg:x="5271" fg:w="3"/><text x="42.5127%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="42.2627%" y="773" width="0.0241%" height="15" fill="rgb(250,6,50)" fg:x="5271" fg:w="3"/><text x="42.5127%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="42.2627%" y="757" width="0.0241%" height="15" fill="rgb(250,160,48)" fg:x="5271" fg:w="3"/><text x="42.5127%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="42.2627%" y="741" width="0.0241%" height="15" fill="rgb(244,216,33)" fg:x="5271" fg:w="3"/><text x="42.5127%" y="751.50"></text></g><g><title>drop_futex_key_refs.isra.18 (2 samples, 0.02%)</title><rect x="42.6074%" y="677" width="0.0160%" height="15" fill="rgb(207,157,5)" fg:x="5314" fg:w="2"/><text x="42.8574%" y="687.50"></text></g><g><title>get_futex_key (4 samples, 0.03%)</title><rect x="42.6235%" y="677" width="0.0321%" height="15" fill="rgb(228,199,8)" fg:x="5316" fg:w="4"/><text x="42.8735%" y="687.50"></text></g><g><title>hash_futex (3 samples, 0.02%)</title><rect x="42.6555%" y="677" width="0.0241%" height="15" fill="rgb(227,80,20)" fg:x="5320" fg:w="3"/><text x="42.9055%" y="687.50"></text></g><g><title>mark_wake_futex (28 samples, 0.22%)</title><rect x="42.6796%" y="677" width="0.2245%" height="15" fill="rgb(222,9,33)" fg:x="5323" fg:w="28"/><text x="42.9296%" y="687.50"></text></g><g><title>wake_q_add (13 samples, 0.10%)</title><rect x="42.7999%" y="661" width="0.1042%" height="15" fill="rgb(239,44,28)" fg:x="5338" fg:w="13"/><text x="43.0499%" y="671.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.05%)</title><rect x="43.2088%" y="645" width="0.0481%" height="15" fill="rgb(249,187,43)" fg:x="5389" fg:w="6"/><text x="43.4588%" y="655.50"></text></g><g><title>llist_add_batch (3 samples, 0.02%)</title><rect x="43.2649%" y="645" width="0.0241%" height="15" fill="rgb(216,141,28)" fg:x="5396" fg:w="3"/><text x="43.5149%" y="655.50"></text></g><g><title>select_task_rq_fair (24 samples, 0.19%)</title><rect x="43.3050%" y="645" width="0.1924%" height="15" fill="rgb(230,154,53)" fg:x="5401" fg:w="24"/><text x="43.5550%" y="655.50"></text></g><g><title>update_cfs_rq_h_load (2 samples, 0.02%)</title><rect x="43.4814%" y="629" width="0.0160%" height="15" fill="rgb(227,82,4)" fg:x="5423" fg:w="2"/><text x="43.7314%" y="639.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.02%)</title><rect x="43.5455%" y="597" width="0.0160%" height="15" fill="rgb(220,107,16)" fg:x="5431" fg:w="2"/><text x="43.7955%" y="607.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.02%)</title><rect x="43.5856%" y="581" width="0.0160%" height="15" fill="rgb(207,187,2)" fg:x="5436" fg:w="2"/><text x="43.8356%" y="591.50"></text></g><g><title>ttwu_do_activate (15 samples, 0.12%)</title><rect x="43.4974%" y="645" width="0.1203%" height="15" fill="rgb(210,162,52)" fg:x="5425" fg:w="15"/><text x="43.7474%" y="655.50"></text></g><g><title>enqueue_task_fair (15 samples, 0.12%)</title><rect x="43.4974%" y="629" width="0.1203%" height="15" fill="rgb(217,216,49)" fg:x="5425" fg:w="15"/><text x="43.7474%" y="639.50"></text></g><g><title>enqueue_entity (13 samples, 0.10%)</title><rect x="43.5135%" y="613" width="0.1042%" height="15" fill="rgb(218,146,49)" fg:x="5427" fg:w="13"/><text x="43.7635%" y="623.50"></text></g><g><title>update_load_avg (6 samples, 0.05%)</title><rect x="43.5696%" y="597" width="0.0481%" height="15" fill="rgb(216,55,40)" fg:x="5434" fg:w="6"/><text x="43.8196%" y="607.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.02%)</title><rect x="43.6017%" y="581" width="0.0160%" height="15" fill="rgb(208,196,21)" fg:x="5438" fg:w="2"/><text x="43.8517%" y="591.50"></text></g><g><title>ttwu_do_wakeup (9 samples, 0.07%)</title><rect x="43.6177%" y="645" width="0.0722%" height="15" fill="rgb(242,117,42)" fg:x="5440" fg:w="9"/><text x="43.8677%" y="655.50"></text></g><g><title>check_preempt_curr (9 samples, 0.07%)</title><rect x="43.6177%" y="629" width="0.0722%" height="15" fill="rgb(210,11,23)" fg:x="5440" fg:w="9"/><text x="43.8677%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (160 samples, 1.28%)</title><rect x="42.4230%" y="757" width="1.2829%" height="15" fill="rgb(217,110,2)" fg:x="5291" fg:w="160"/><text x="42.6730%" y="767.50"></text></g><g><title>do_syscall_64 (160 samples, 1.28%)</title><rect x="42.4230%" y="741" width="1.2829%" height="15" fill="rgb(229,77,54)" fg:x="5291" fg:w="160"/><text x="42.6730%" y="751.50"></text></g><g><title>__x64_sys_futex (157 samples, 1.26%)</title><rect x="42.4471%" y="725" width="1.2588%" height="15" fill="rgb(218,53,16)" fg:x="5294" fg:w="157"/><text x="42.6971%" y="735.50"></text></g><g><title>do_futex (156 samples, 1.25%)</title><rect x="42.4551%" y="709" width="1.2508%" height="15" fill="rgb(215,38,13)" fg:x="5295" fg:w="156"/><text x="42.7051%" y="719.50"></text></g><g><title>futex_wake (155 samples, 1.24%)</title><rect x="42.4631%" y="693" width="1.2428%" height="15" fill="rgb(235,42,18)" fg:x="5296" fg:w="155"/><text x="42.7131%" y="703.50"></text></g><g><title>wake_up_q (100 samples, 0.80%)</title><rect x="42.9041%" y="677" width="0.8018%" height="15" fill="rgb(219,66,54)" fg:x="5351" fg:w="100"/><text x="43.1541%" y="687.50"></text></g><g><title>try_to_wake_up (97 samples, 0.78%)</title><rect x="42.9282%" y="661" width="0.7777%" height="15" fill="rgb(222,205,4)" fg:x="5354" fg:w="97"/><text x="43.1782%" y="671.50"></text></g><g><title>update_rq_clock (2 samples, 0.02%)</title><rect x="43.6899%" y="645" width="0.0160%" height="15" fill="rgb(227,213,46)" fg:x="5449" fg:w="2"/><text x="43.9399%" y="655.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (168 samples, 1.35%)</title><rect x="42.3669%" y="789" width="1.3470%" height="15" fill="rgb(250,145,42)" fg:x="5284" fg:w="168"/><text x="42.6169%" y="799.50"></text></g><g><title>syscall (167 samples, 1.34%)</title><rect x="42.3749%" y="773" width="1.3390%" height="15" fill="rgb(219,15,2)" fg:x="5285" fg:w="167"/><text x="42.6249%" y="783.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (2 samples, 0.02%)</title><rect x="43.7219%" y="773" width="0.0160%" height="15" fill="rgb(231,181,52)" fg:x="5453" fg:w="2"/><text x="43.9719%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="43.7219%" y="757" width="0.0160%" height="15" fill="rgb(235,1,42)" fg:x="5453" fg:w="2"/><text x="43.9719%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (10 samples, 0.08%)</title><rect x="43.7219%" y="789" width="0.0802%" height="15" fill="rgb(249,88,27)" fg:x="5453" fg:w="10"/><text x="43.9719%" y="799.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.06%)</title><rect x="43.7380%" y="773" width="0.0641%" height="15" fill="rgb(235,145,16)" fg:x="5455" fg:w="8"/><text x="43.9880%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.06%)</title><rect x="43.7460%" y="757" width="0.0561%" height="15" fill="rgb(237,114,19)" fg:x="5456" fg:w="7"/><text x="43.9960%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.06%)</title><rect x="43.7460%" y="741" width="0.0561%" height="15" fill="rgb(238,51,50)" fg:x="5456" fg:w="7"/><text x="43.9960%" y="751.50"></text></g><g><title>__clock_gettime (7 samples, 0.06%)</title><rect x="43.7460%" y="725" width="0.0561%" height="15" fill="rgb(205,194,25)" fg:x="5456" fg:w="7"/><text x="43.9960%" y="735.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.06%)</title><rect x="43.7460%" y="709" width="0.0561%" height="15" fill="rgb(215,203,17)" fg:x="5456" fg:w="7"/><text x="43.9960%" y="719.50"></text></g><g><title>[[vdso]] (6 samples, 0.05%)</title><rect x="43.7540%" y="693" width="0.0481%" height="15" fill="rgb(233,112,49)" fg:x="5457" fg:w="6"/><text x="44.0040%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (13 samples, 0.10%)</title><rect x="43.8021%" y="789" width="0.1042%" height="15" fill="rgb(241,130,26)" fg:x="5463" fg:w="13"/><text x="44.0521%" y="799.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (10 samples, 0.08%)</title><rect x="43.8262%" y="773" width="0.0802%" height="15" fill="rgb(252,223,19)" fg:x="5466" fg:w="10"/><text x="44.0762%" y="783.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (203 samples, 1.63%)</title><rect x="42.2867%" y="821" width="1.6276%" height="15" fill="rgb(211,95,25)" fg:x="5274" fg:w="203"/><text x="42.5367%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (202 samples, 1.62%)</title><rect x="42.2947%" y="805" width="1.6196%" height="15" fill="rgb(251,182,27)" fg:x="5275" fg:w="202"/><text x="42.5447%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (20 samples, 0.16%)</title><rect x="43.9144%" y="805" width="0.1604%" height="15" fill="rgb(238,24,4)" fg:x="5477" fg:w="20"/><text x="44.1644%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="44.0827%" y="805" width="0.0160%" height="15" fill="rgb(224,220,25)" fg:x="5498" fg:w="2"/><text x="44.3327%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="44.0827%" y="789" width="0.0160%" height="15" fill="rgb(239,133,26)" fg:x="5498" fg:w="2"/><text x="44.3327%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="44.0827%" y="773" width="0.0160%" height="15" fill="rgb(211,94,48)" fg:x="5498" fg:w="2"/><text x="44.3327%" y="783.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,156 samples, 9.27%)</title><rect x="35.1588%" y="1141" width="9.2688%" height="15" fill="rgb(239,87,6)" fg:x="4385" fg:w="1156"/><text x="35.4088%" y="1151.50">&lt;F as futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,156 samples, 9.27%)</title><rect x="35.1588%" y="1125" width="9.2688%" height="15" fill="rgb(227,62,0)" fg:x="4385" fg:w="1156"/><text x="35.4088%" y="1135.50">&lt;core::future..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (670 samples, 5.37%)</title><rect x="39.0555%" y="1109" width="5.3720%" height="15" fill="rgb(211,226,4)" fg:x="4871" fg:w="670"/><text x="39.3055%" y="1119.50">fred::m..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (670 samples, 5.37%)</title><rect x="39.0555%" y="1093" width="5.3720%" height="15" fill="rgb(253,38,52)" fg:x="4871" fg:w="670"/><text x="39.3055%" y="1103.50">&lt;core::..</text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (670 samples, 5.37%)</title><rect x="39.0555%" y="1077" width="5.3720%" height="15" fill="rgb(229,126,40)" fg:x="4871" fg:w="670"/><text x="39.3055%" y="1087.50">fred::m..</text></g><g><title>fred::multiplexer::responses::process_response (670 samples, 5.37%)</title><rect x="39.0555%" y="1061" width="5.3720%" height="15" fill="rgb(229,165,44)" fg:x="4871" fg:w="670"/><text x="39.3055%" y="1071.50">fred::m..</text></g><g><title>fred::multiplexer::responses::respond_to_caller (670 samples, 5.37%)</title><rect x="39.0555%" y="1045" width="5.3720%" height="15" fill="rgb(247,95,47)" fg:x="4871" fg:w="670"/><text x="39.3055%" y="1055.50">fred::m..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (301 samples, 2.41%)</title><rect x="42.0141%" y="1029" width="2.4134%" height="15" fill="rgb(216,140,30)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="1039.50">to..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (301 samples, 2.41%)</title><rect x="42.0141%" y="1013" width="2.4134%" height="15" fill="rgb(246,214,8)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="1023.50">to..</text></g><g><title>tokio::sync::oneshot::Task::with_task (301 samples, 2.41%)</title><rect x="42.0141%" y="997" width="2.4134%" height="15" fill="rgb(227,224,15)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="1007.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (301 samples, 2.41%)</title><rect x="42.0141%" y="981" width="2.4134%" height="15" fill="rgb(233,175,4)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="991.50">to..</text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (301 samples, 2.41%)</title><rect x="42.0141%" y="965" width="2.4134%" height="15" fill="rgb(221,66,45)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="975.50">to..</text></g><g><title>core::ops::function::FnOnce::call_once (301 samples, 2.41%)</title><rect x="42.0141%" y="949" width="2.4134%" height="15" fill="rgb(221,178,18)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="959.50">co..</text></g><g><title>core::task::wake::Waker::wake_by_ref (301 samples, 2.41%)</title><rect x="42.0141%" y="933" width="2.4134%" height="15" fill="rgb(213,81,29)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="943.50">co..</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (301 samples, 2.41%)</title><rect x="42.0141%" y="917" width="2.4134%" height="15" fill="rgb(220,89,49)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="927.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (301 samples, 2.41%)</title><rect x="42.0141%" y="901" width="2.4134%" height="15" fill="rgb(227,60,33)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="911.50">to..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (301 samples, 2.41%)</title><rect x="42.0141%" y="885" width="2.4134%" height="15" fill="rgb(205,113,12)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="895.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (301 samples, 2.41%)</title><rect x="42.0141%" y="869" width="2.4134%" height="15" fill="rgb(211,32,1)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="879.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (301 samples, 2.41%)</title><rect x="42.0141%" y="853" width="2.4134%" height="15" fill="rgb(246,2,12)" fg:x="5240" fg:w="301"/><text x="42.2641%" y="863.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (295 samples, 2.37%)</title><rect x="42.0622%" y="837" width="2.3653%" height="15" fill="rgb(243,37,27)" fg:x="5246" fg:w="295"/><text x="42.3122%" y="847.50">to..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (64 samples, 0.51%)</title><rect x="43.9144%" y="821" width="0.5131%" height="15" fill="rgb(248,211,31)" fg:x="5477" fg:w="64"/><text x="44.1644%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (41 samples, 0.33%)</title><rect x="44.0988%" y="805" width="0.3287%" height="15" fill="rgb(242,146,47)" fg:x="5500" fg:w="41"/><text x="44.3488%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.14%)</title><rect x="44.2832%" y="789" width="0.1443%" height="15" fill="rgb(206,70,20)" fg:x="5523" fg:w="18"/><text x="44.5332%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.14%)</title><rect x="44.2832%" y="773" width="0.1443%" height="15" fill="rgb(215,10,51)" fg:x="5523" fg:w="18"/><text x="44.5332%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (2 samples, 0.02%)</title><rect x="44.4275%" y="1061" width="0.0160%" height="15" fill="rgb(243,178,53)" fg:x="5541" fg:w="2"/><text x="44.6775%" y="1071.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="44.4275%" y="1045" width="0.0160%" height="15" fill="rgb(233,221,20)" fg:x="5541" fg:w="2"/><text x="44.6775%" y="1055.50"></text></g><g><title>tokio::coop::CURRENT::__getit (3 samples, 0.02%)</title><rect x="44.4436%" y="1013" width="0.0241%" height="15" fill="rgb(218,95,35)" fg:x="5543" fg:w="3"/><text x="44.6936%" y="1023.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="44.4436%" y="997" width="0.0241%" height="15" fill="rgb(229,13,5)" fg:x="5543" fg:w="3"/><text x="44.6936%" y="1007.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="44.4516%" y="981" width="0.0160%" height="15" fill="rgb(252,164,30)" fg:x="5544" fg:w="2"/><text x="44.7016%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="44.4516%" y="965" width="0.0160%" height="15" fill="rgb(232,68,36)" fg:x="5544" fg:w="2"/><text x="44.7016%" y="975.50"></text></g><g><title>tokio::coop::poll_proceed (5 samples, 0.04%)</title><rect x="44.4436%" y="1061" width="0.0401%" height="15" fill="rgb(219,59,54)" fg:x="5543" fg:w="5"/><text x="44.6936%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.04%)</title><rect x="44.4436%" y="1045" width="0.0401%" height="15" fill="rgb(250,92,33)" fg:x="5543" fg:w="5"/><text x="44.6936%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.04%)</title><rect x="44.4436%" y="1029" width="0.0401%" height="15" fill="rgb(229,162,54)" fg:x="5543" fg:w="5"/><text x="44.6936%" y="1039.50"></text></g><g><title>tokio::coop::poll_proceed::_{{closure}} (2 samples, 0.02%)</title><rect x="44.4676%" y="1013" width="0.0160%" height="15" fill="rgb(244,114,52)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="44.4676%" y="997" width="0.0160%" height="15" fill="rgb(212,211,43)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="44.4676%" y="981" width="0.0160%" height="15" fill="rgb(226,147,8)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="991.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="44.4676%" y="965" width="0.0160%" height="15" fill="rgb(226,23,13)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="975.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="44.4676%" y="949" width="0.0160%" height="15" fill="rgb(240,63,4)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="44.4676%" y="933" width="0.0160%" height="15" fill="rgb(221,1,32)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="44.4676%" y="917" width="0.0160%" height="15" fill="rgb(242,117,10)" fg:x="5546" fg:w="2"/><text x="44.7176%" y="927.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (2 samples, 0.02%)</title><rect x="44.4917%" y="1029" width="0.0160%" height="15" fill="rgb(249,172,44)" fg:x="5549" fg:w="2"/><text x="44.7417%" y="1039.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="44.5077%" y="1029" width="0.0561%" height="15" fill="rgb(244,46,45)" fg:x="5551" fg:w="7"/><text x="44.7577%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.06%)</title><rect x="44.6119%" y="997" width="0.0641%" height="15" fill="rgb(206,43,17)" fg:x="5564" fg:w="8"/><text x="44.8619%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::_{{closure}} (8 samples, 0.06%)</title><rect x="44.6119%" y="981" width="0.0641%" height="15" fill="rgb(239,218,39)" fg:x="5564" fg:w="8"/><text x="44.8619%" y="991.50"></text></g><g><title>core::ptr::read (8 samples, 0.06%)</title><rect x="44.6119%" y="965" width="0.0641%" height="15" fill="rgb(208,169,54)" fg:x="5564" fg:w="8"/><text x="44.8619%" y="975.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (11 samples, 0.09%)</title><rect x="44.5959%" y="1013" width="0.0882%" height="15" fill="rgb(247,25,42)" fg:x="5562" fg:w="11"/><text x="44.8459%" y="1023.50"></text></g><g><title>__sched_yield (4 samples, 0.03%)</title><rect x="44.6841%" y="997" width="0.0321%" height="15" fill="rgb(226,23,31)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="44.6841%" y="981" width="0.0321%" height="15" fill="rgb(247,16,28)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="991.50"></text></g><g><title>do_syscall_64 (4 samples, 0.03%)</title><rect x="44.6841%" y="965" width="0.0321%" height="15" fill="rgb(231,147,38)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="975.50"></text></g><g><title>__x64_sys_sched_yield (4 samples, 0.03%)</title><rect x="44.6841%" y="949" width="0.0321%" height="15" fill="rgb(253,81,48)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="959.50"></text></g><g><title>schedule (4 samples, 0.03%)</title><rect x="44.6841%" y="933" width="0.0321%" height="15" fill="rgb(249,222,43)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="943.50"></text></g><g><title>__schedule (4 samples, 0.03%)</title><rect x="44.6841%" y="917" width="0.0321%" height="15" fill="rgb(221,3,27)" fg:x="5573" fg:w="4"/><text x="44.9341%" y="927.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="44.7001%" y="901" width="0.0160%" height="15" fill="rgb(228,180,5)" fg:x="5575" fg:w="2"/><text x="44.9501%" y="911.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="44.7001%" y="885" width="0.0160%" height="15" fill="rgb(227,131,42)" fg:x="5575" fg:w="2"/><text x="44.9501%" y="895.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (6 samples, 0.05%)</title><rect x="44.6841%" y="1013" width="0.0481%" height="15" fill="rgb(212,3,39)" fg:x="5573" fg:w="6"/><text x="44.9341%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::reclaim_block (2 samples, 0.02%)</title><rect x="44.7162%" y="997" width="0.0160%" height="15" fill="rgb(226,45,5)" fg:x="5577" fg:w="2"/><text x="44.9662%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::try_push (2 samples, 0.02%)</title><rect x="44.7162%" y="981" width="0.0160%" height="15" fill="rgb(215,167,45)" fg:x="5577" fg:w="2"/><text x="44.9662%" y="991.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (40 samples, 0.32%)</title><rect x="44.5638%" y="1029" width="0.3207%" height="15" fill="rgb(250,218,53)" fg:x="5558" fg:w="40"/><text x="44.8138%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (19 samples, 0.15%)</title><rect x="44.7322%" y="1013" width="0.1523%" height="15" fill="rgb(207,140,0)" fg:x="5579" fg:w="19"/><text x="44.9822%" y="1023.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (1,215 samples, 9.74%)</title><rect x="35.1588%" y="1157" width="9.7418%" height="15" fill="rgb(238,133,51)" fg:x="4385" fg:w="1215"/><text x="35.4088%" y="1167.50">&lt;futures_util:..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (59 samples, 0.47%)</title><rect x="44.4275%" y="1141" width="0.4731%" height="15" fill="rgb(218,203,53)" fg:x="5541" fg:w="59"/><text x="44.6775%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (59 samples, 0.47%)</title><rect x="44.4275%" y="1125" width="0.4731%" height="15" fill="rgb(226,184,25)" fg:x="5541" fg:w="59"/><text x="44.6775%" y="1135.50"></text></g><g><title>&lt;tokio_stream::wrappers::mpsc_unbounded::UnboundedReceiverStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (59 samples, 0.47%)</title><rect x="44.4275%" y="1109" width="0.4731%" height="15" fill="rgb(231,121,21)" fg:x="5541" fg:w="59"/><text x="44.6775%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::poll_recv (59 samples, 0.47%)</title><rect x="44.4275%" y="1093" width="0.4731%" height="15" fill="rgb(251,14,34)" fg:x="5541" fg:w="59"/><text x="44.6775%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (59 samples, 0.47%)</title><rect x="44.4275%" y="1077" width="0.4731%" height="15" fill="rgb(249,193,11)" fg:x="5541" fg:w="59"/><text x="44.6775%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (52 samples, 0.42%)</title><rect x="44.4836%" y="1061" width="0.4169%" height="15" fill="rgb(220,172,37)" fg:x="5548" fg:w="52"/><text x="44.7336%" y="1071.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (52 samples, 0.42%)</title><rect x="44.4836%" y="1045" width="0.4169%" height="15" fill="rgb(231,229,43)" fg:x="5548" fg:w="52"/><text x="44.7336%" y="1055.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2 samples, 0.02%)</title><rect x="44.8845%" y="1029" width="0.0160%" height="15" fill="rgb(250,161,5)" fg:x="5598" fg:w="2"/><text x="45.1345%" y="1039.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="44.9086%" y="997" width="0.0561%" height="15" fill="rgb(218,225,18)" fg:x="5601" fg:w="7"/><text x="45.1586%" y="1007.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="44.9808%" y="965" width="0.0561%" height="15" fill="rgb(245,45,42)" fg:x="5610" fg:w="7"/><text x="45.2308%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.05%)</title><rect x="45.1411%" y="949" width="0.0481%" height="15" fill="rgb(211,115,1)" fg:x="5630" fg:w="6"/><text x="45.3911%" y="959.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="45.1411%" y="933" width="0.0481%" height="15" fill="rgb(248,133,52)" fg:x="5630" fg:w="6"/><text x="45.3911%" y="943.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="45.2213%" y="901" width="0.0321%" height="15" fill="rgb(238,100,21)" fg:x="5640" fg:w="4"/><text x="45.4713%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (8 samples, 0.06%)</title><rect x="45.2614%" y="885" width="0.0641%" height="15" fill="rgb(247,144,11)" fg:x="5645" fg:w="8"/><text x="45.5114%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="45.3416%" y="837" width="0.0241%" height="15" fill="rgb(206,164,16)" fg:x="5655" fg:w="3"/><text x="45.5916%" y="847.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="45.3496%" y="821" width="0.0160%" height="15" fill="rgb(222,34,3)" fg:x="5656" fg:w="2"/><text x="45.5996%" y="831.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="45.3817%" y="805" width="0.0321%" height="15" fill="rgb(248,82,4)" fg:x="5660" fg:w="4"/><text x="45.6317%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::SizeStats&gt;&gt; (3 samples, 0.02%)</title><rect x="45.4137%" y="805" width="0.0241%" height="15" fill="rgb(228,81,46)" fg:x="5664" fg:w="3"/><text x="45.6637%" y="815.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="45.4137%" y="789" width="0.0241%" height="15" fill="rgb(227,67,47)" fg:x="5664" fg:w="3"/><text x="45.6637%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (3 samples, 0.02%)</title><rect x="45.4137%" y="773" width="0.0241%" height="15" fill="rgb(215,93,53)" fg:x="5664" fg:w="3"/><text x="45.6637%" y="783.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="45.4378%" y="741" width="0.0401%" height="15" fill="rgb(248,194,39)" fg:x="5667" fg:w="5"/><text x="45.6878%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (9 samples, 0.07%)</title><rect x="45.4378%" y="805" width="0.0722%" height="15" fill="rgb(215,5,19)" fg:x="5667" fg:w="9"/><text x="45.6878%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;redis_protocol::types::Frame&gt;&gt; (9 samples, 0.07%)</title><rect x="45.4378%" y="789" width="0.0722%" height="15" fill="rgb(226,215,51)" fg:x="5667" fg:w="9"/><text x="45.6878%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.07%)</title><rect x="45.4378%" y="773" width="0.0722%" height="15" fill="rgb(225,56,26)" fg:x="5667" fg:w="9"/><text x="45.6878%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[redis_protocol::types::Frame]&gt; (9 samples, 0.07%)</title><rect x="45.4378%" y="757" width="0.0722%" height="15" fill="rgb(222,75,29)" fg:x="5667" fg:w="9"/><text x="45.6878%" y="767.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="45.4939%" y="741" width="0.0160%" height="15" fill="rgb(236,139,6)" fg:x="5674" fg:w="2"/><text x="45.7439%" y="751.50"></text></g><g><title>fred::metrics::SizeStats::sample (2 samples, 0.02%)</title><rect x="45.5099%" y="805" width="0.0160%" height="15" fill="rgb(223,137,36)" fg:x="5676" fg:w="2"/><text x="45.7599%" y="815.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (12 samples, 0.10%)</title><rect x="45.5260%" y="805" width="0.0962%" height="15" fill="rgb(226,99,2)" fg:x="5678" fg:w="12"/><text x="45.7760%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (12 samples, 0.10%)</title><rect x="45.5260%" y="789" width="0.0962%" height="15" fill="rgb(206,133,23)" fg:x="5678" fg:w="12"/><text x="45.7760%" y="799.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="45.9108%" y="709" width="0.0160%" height="15" fill="rgb(243,173,15)" fg:x="5726" fg:w="2"/><text x="46.1608%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="45.9830%" y="613" width="0.0321%" height="15" fill="rgb(228,69,28)" fg:x="5735" fg:w="4"/><text x="46.2330%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="45.9910%" y="597" width="0.0241%" height="15" fill="rgb(212,51,22)" fg:x="5736" fg:w="3"/><text x="46.2410%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.10%)</title><rect x="45.9269%" y="709" width="0.1042%" height="15" fill="rgb(227,113,0)" fg:x="5728" fg:w="13"/><text x="46.1769%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.06%)</title><rect x="45.9670%" y="693" width="0.0641%" height="15" fill="rgb(252,84,27)" fg:x="5733" fg:w="8"/><text x="46.2170%" y="703.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.06%)</title><rect x="45.9670%" y="677" width="0.0641%" height="15" fill="rgb(223,145,39)" fg:x="5733" fg:w="8"/><text x="46.2170%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.06%)</title><rect x="45.9670%" y="661" width="0.0641%" height="15" fill="rgb(239,219,30)" fg:x="5733" fg:w="8"/><text x="46.2170%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.06%)</title><rect x="45.9670%" y="645" width="0.0641%" height="15" fill="rgb(224,196,39)" fg:x="5733" fg:w="8"/><text x="46.2170%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.06%)</title><rect x="45.9670%" y="629" width="0.0641%" height="15" fill="rgb(205,35,43)" fg:x="5733" fg:w="8"/><text x="46.2170%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="46.0151%" y="613" width="0.0160%" height="15" fill="rgb(228,201,21)" fg:x="5739" fg:w="2"/><text x="46.2651%" y="623.50"></text></g><g><title>__libc_malloc (25 samples, 0.20%)</title><rect x="46.0953%" y="501" width="0.2004%" height="15" fill="rgb(237,118,16)" fg:x="5749" fg:w="25"/><text x="46.3453%" y="511.50"></text></g><g><title>[libc-2.28.so] (13 samples, 0.10%)</title><rect x="46.1915%" y="485" width="0.1042%" height="15" fill="rgb(241,17,19)" fg:x="5761" fg:w="13"/><text x="46.4415%" y="495.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="46.2957%" y="501" width="0.0241%" height="15" fill="rgb(214,10,25)" fg:x="5774" fg:w="3"/><text x="46.5457%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="46.3037%" y="485" width="0.0160%" height="15" fill="rgb(238,37,29)" fg:x="5775" fg:w="2"/><text x="46.5537%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.27%)</title><rect x="46.0792%" y="517" width="0.2726%" height="15" fill="rgb(253,83,25)" fg:x="5747" fg:w="34"/><text x="46.3292%" y="527.50"></text></g><g><title>__rust_alloc (4 samples, 0.03%)</title><rect x="46.3198%" y="501" width="0.0321%" height="15" fill="rgb(234,192,12)" fg:x="5777" fg:w="4"/><text x="46.5698%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.32%)</title><rect x="46.0712%" y="533" width="0.3207%" height="15" fill="rgb(241,216,45)" fg:x="5746" fg:w="40"/><text x="46.3212%" y="543.50"></text></g><g><title>core::cmp::max (5 samples, 0.04%)</title><rect x="46.3518%" y="517" width="0.0401%" height="15" fill="rgb(242,22,33)" fg:x="5781" fg:w="5"/><text x="46.6018%" y="527.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.04%)</title><rect x="46.3518%" y="501" width="0.0401%" height="15" fill="rgb(231,105,49)" fg:x="5781" fg:w="5"/><text x="46.6018%" y="511.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.04%)</title><rect x="46.3518%" y="485" width="0.0401%" height="15" fill="rgb(218,204,15)" fg:x="5781" fg:w="5"/><text x="46.6018%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (43 samples, 0.34%)</title><rect x="46.0552%" y="581" width="0.3448%" height="15" fill="rgb(235,138,41)" fg:x="5744" fg:w="43"/><text x="46.3052%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.34%)</title><rect x="46.0632%" y="565" width="0.3368%" height="15" fill="rgb(246,0,9)" fg:x="5745" fg:w="42"/><text x="46.3132%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (41 samples, 0.33%)</title><rect x="46.0712%" y="549" width="0.3287%" height="15" fill="rgb(210,74,4)" fg:x="5746" fg:w="41"/><text x="46.3212%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.05%)</title><rect x="46.3999%" y="581" width="0.0481%" height="15" fill="rgb(250,60,41)" fg:x="5787" fg:w="6"/><text x="46.6499%" y="591.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="46.4160%" y="565" width="0.0321%" height="15" fill="rgb(220,115,12)" fg:x="5789" fg:w="4"/><text x="46.6660%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (50 samples, 0.40%)</title><rect x="46.0552%" y="677" width="0.4009%" height="15" fill="rgb(237,100,13)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (50 samples, 0.40%)</title><rect x="46.0552%" y="661" width="0.4009%" height="15" fill="rgb(213,55,26)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="671.50"></text></g><g><title>alloc::string::String::push_str (50 samples, 0.40%)</title><rect x="46.0552%" y="645" width="0.4009%" height="15" fill="rgb(216,17,4)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.40%)</title><rect x="46.0552%" y="629" width="0.4009%" height="15" fill="rgb(220,153,47)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.40%)</title><rect x="46.0552%" y="613" width="0.4009%" height="15" fill="rgb(215,131,9)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.40%)</title><rect x="46.0552%" y="597" width="0.4009%" height="15" fill="rgb(233,46,42)" fg:x="5744" fg:w="50"/><text x="46.3052%" y="607.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (95 samples, 0.76%)</title><rect x="45.7826%" y="757" width="0.7617%" height="15" fill="rgb(226,86,7)" fg:x="5710" fg:w="95"/><text x="46.0326%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (93 samples, 0.75%)</title><rect x="45.7986%" y="741" width="0.7457%" height="15" fill="rgb(239,226,21)" fg:x="5712" fg:w="93"/><text x="46.0486%" y="751.50"></text></g><g><title>core::fmt::write (93 samples, 0.75%)</title><rect x="45.7986%" y="725" width="0.7457%" height="15" fill="rgb(244,137,22)" fg:x="5712" fg:w="93"/><text x="46.0486%" y="735.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (63 samples, 0.51%)</title><rect x="46.0391%" y="709" width="0.5051%" height="15" fill="rgb(211,139,35)" fg:x="5742" fg:w="63"/><text x="46.2891%" y="719.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (61 samples, 0.49%)</title><rect x="46.0552%" y="693" width="0.4891%" height="15" fill="rgb(214,62,50)" fg:x="5744" fg:w="61"/><text x="46.3052%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11 samples, 0.09%)</title><rect x="46.4561%" y="677" width="0.0882%" height="15" fill="rgb(212,113,44)" fg:x="5794" fg:w="11"/><text x="46.7061%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.02%)</title><rect x="46.5202%" y="661" width="0.0241%" height="15" fill="rgb(226,150,43)" fg:x="5802" fg:w="3"/><text x="46.7702%" y="671.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="46.5523%" y="661" width="0.0401%" height="15" fill="rgb(250,71,37)" fg:x="5806" fg:w="5"/><text x="46.8023%" y="671.50"></text></g><g><title>__rust_dealloc (4 samples, 0.03%)</title><rect x="46.5924%" y="661" width="0.0321%" height="15" fill="rgb(219,76,19)" fg:x="5811" fg:w="4"/><text x="46.8424%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.11%)</title><rect x="46.5523%" y="693" width="0.1123%" height="15" fill="rgb(250,39,11)" fg:x="5806" fg:w="14"/><text x="46.8023%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.11%)</title><rect x="46.5523%" y="677" width="0.1123%" height="15" fill="rgb(230,64,31)" fg:x="5806" fg:w="14"/><text x="46.8023%" y="687.50"></text></g><g><title>cfree (5 samples, 0.04%)</title><rect x="46.6244%" y="661" width="0.0401%" height="15" fill="rgb(208,222,23)" fg:x="5815" fg:w="5"/><text x="46.8744%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15 samples, 0.12%)</title><rect x="46.5523%" y="757" width="0.1203%" height="15" fill="rgb(227,125,18)" fg:x="5806" fg:w="15"/><text x="46.8023%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.12%)</title><rect x="46.5523%" y="741" width="0.1203%" height="15" fill="rgb(234,210,9)" fg:x="5806" fg:w="15"/><text x="46.8023%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.12%)</title><rect x="46.5523%" y="725" width="0.1203%" height="15" fill="rgb(217,127,24)" fg:x="5806" fg:w="15"/><text x="46.8023%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.12%)</title><rect x="46.5523%" y="709" width="0.1203%" height="15" fill="rgb(239,141,48)" fg:x="5806" fg:w="15"/><text x="46.8023%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (3 samples, 0.02%)</title><rect x="46.6725%" y="757" width="0.0241%" height="15" fill="rgb(227,109,8)" fg:x="5821" fg:w="3"/><text x="46.9225%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="46.6725%" y="741" width="0.0241%" height="15" fill="rgb(235,184,23)" fg:x="5821" fg:w="3"/><text x="46.9225%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="46.6966%" y="757" width="0.0160%" height="15" fill="rgb(227,226,48)" fg:x="5824" fg:w="2"/><text x="46.9466%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="46.6966%" y="741" width="0.0160%" height="15" fill="rgb(206,150,11)" fg:x="5824" fg:w="2"/><text x="46.9466%" y="751.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="46.9692%" y="693" width="0.0241%" height="15" fill="rgb(254,2,33)" fg:x="5858" fg:w="3"/><text x="47.2192%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="47.0173%" y="597" width="0.0160%" height="15" fill="rgb(243,160,20)" fg:x="5864" fg:w="2"/><text x="47.2673%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="47.0334%" y="597" width="0.0321%" height="15" fill="rgb(218,208,30)" fg:x="5866" fg:w="4"/><text x="47.2834%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="47.0414%" y="581" width="0.0241%" height="15" fill="rgb(224,120,49)" fg:x="5867" fg:w="3"/><text x="47.2914%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.09%)</title><rect x="46.9933%" y="693" width="0.0882%" height="15" fill="rgb(246,12,2)" fg:x="5861" fg:w="11"/><text x="47.2433%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.07%)</title><rect x="47.0093%" y="677" width="0.0722%" height="15" fill="rgb(236,117,3)" fg:x="5863" fg:w="9"/><text x="47.2593%" y="687.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.07%)</title><rect x="47.0093%" y="661" width="0.0722%" height="15" fill="rgb(216,128,52)" fg:x="5863" fg:w="9"/><text x="47.2593%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.07%)</title><rect x="47.0093%" y="645" width="0.0722%" height="15" fill="rgb(246,145,19)" fg:x="5863" fg:w="9"/><text x="47.2593%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.07%)</title><rect x="47.0093%" y="629" width="0.0722%" height="15" fill="rgb(222,11,46)" fg:x="5863" fg:w="9"/><text x="47.2593%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.07%)</title><rect x="47.0093%" y="613" width="0.0722%" height="15" fill="rgb(245,82,36)" fg:x="5863" fg:w="9"/><text x="47.2593%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="47.0654%" y="597" width="0.0160%" height="15" fill="rgb(250,73,51)" fg:x="5870" fg:w="2"/><text x="47.3154%" y="607.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="47.0654%" y="581" width="0.0160%" height="15" fill="rgb(221,189,23)" fg:x="5870" fg:w="2"/><text x="47.3154%" y="591.50"></text></g><g><title>__libc_malloc (16 samples, 0.13%)</title><rect x="47.1937%" y="485" width="0.1283%" height="15" fill="rgb(210,33,7)" fg:x="5886" fg:w="16"/><text x="47.4437%" y="495.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="47.3220%" y="485" width="0.0241%" height="15" fill="rgb(210,107,22)" fg:x="5902" fg:w="3"/><text x="47.5720%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="47.3220%" y="469" width="0.0241%" height="15" fill="rgb(222,116,37)" fg:x="5902" fg:w="3"/><text x="47.5720%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.22%)</title><rect x="47.1456%" y="501" width="0.2165%" height="15" fill="rgb(254,17,48)" fg:x="5880" fg:w="27"/><text x="47.3956%" y="511.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="47.3461%" y="485" width="0.0160%" height="15" fill="rgb(224,36,32)" fg:x="5905" fg:w="2"/><text x="47.5961%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.26%)</title><rect x="47.1135%" y="565" width="0.2646%" height="15" fill="rgb(232,90,46)" fg:x="5876" fg:w="33"/><text x="47.3635%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.25%)</title><rect x="47.1296%" y="549" width="0.2486%" height="15" fill="rgb(241,66,40)" fg:x="5878" fg:w="31"/><text x="47.3796%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (30 samples, 0.24%)</title><rect x="47.1376%" y="533" width="0.2405%" height="15" fill="rgb(249,184,29)" fg:x="5879" fg:w="30"/><text x="47.3876%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.24%)</title><rect x="47.1376%" y="517" width="0.2405%" height="15" fill="rgb(231,181,1)" fg:x="5879" fg:w="30"/><text x="47.3876%" y="527.50"></text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="47.3621%" y="501" width="0.0160%" height="15" fill="rgb(224,94,2)" fg:x="5907" fg:w="2"/><text x="47.6121%" y="511.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="47.3621%" y="485" width="0.0160%" height="15" fill="rgb(229,170,15)" fg:x="5907" fg:w="2"/><text x="47.6121%" y="495.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.02%)</title><rect x="47.3621%" y="469" width="0.0160%" height="15" fill="rgb(240,127,35)" fg:x="5907" fg:w="2"/><text x="47.6121%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="47.3781%" y="565" width="0.0160%" height="15" fill="rgb(248,196,34)" fg:x="5909" fg:w="2"/><text x="47.6281%" y="575.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="47.3781%" y="549" width="0.0160%" height="15" fill="rgb(236,137,7)" fg:x="5909" fg:w="2"/><text x="47.6281%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.32%)</title><rect x="47.0975%" y="661" width="0.3207%" height="15" fill="rgb(235,127,16)" fg:x="5874" fg:w="40"/><text x="47.3475%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (39 samples, 0.31%)</title><rect x="47.1055%" y="645" width="0.3127%" height="15" fill="rgb(250,192,54)" fg:x="5875" fg:w="39"/><text x="47.3555%" y="655.50"></text></g><g><title>alloc::string::String::push_str (39 samples, 0.31%)</title><rect x="47.1055%" y="629" width="0.3127%" height="15" fill="rgb(218,98,20)" fg:x="5875" fg:w="39"/><text x="47.3555%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.31%)</title><rect x="47.1055%" y="613" width="0.3127%" height="15" fill="rgb(230,176,47)" fg:x="5875" fg:w="39"/><text x="47.3555%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.31%)</title><rect x="47.1055%" y="597" width="0.3127%" height="15" fill="rgb(244,2,33)" fg:x="5875" fg:w="39"/><text x="47.3555%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.31%)</title><rect x="47.1055%" y="581" width="0.3127%" height="15" fill="rgb(231,100,17)" fg:x="5875" fg:w="39"/><text x="47.3555%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="47.3942%" y="565" width="0.0241%" height="15" fill="rgb(245,23,12)" fg:x="5911" fg:w="3"/><text x="47.6442%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="47.3942%" y="549" width="0.0241%" height="15" fill="rgb(249,55,22)" fg:x="5911" fg:w="3"/><text x="47.6442%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (94 samples, 0.75%)</title><rect x="46.8008%" y="725" width="0.7537%" height="15" fill="rgb(207,134,9)" fg:x="5837" fg:w="94"/><text x="47.0508%" y="735.50"></text></g><g><title>core::fmt::write (91 samples, 0.73%)</title><rect x="46.8249%" y="709" width="0.7296%" height="15" fill="rgb(218,134,0)" fg:x="5840" fg:w="91"/><text x="47.0749%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (59 samples, 0.47%)</title><rect x="47.0815%" y="693" width="0.4731%" height="15" fill="rgb(213,212,33)" fg:x="5872" fg:w="59"/><text x="47.3315%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (58 samples, 0.47%)</title><rect x="47.0895%" y="677" width="0.4650%" height="15" fill="rgb(252,106,18)" fg:x="5873" fg:w="58"/><text x="47.3395%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (17 samples, 0.14%)</title><rect x="47.4182%" y="661" width="0.1363%" height="15" fill="rgb(208,126,42)" fg:x="5914" fg:w="17"/><text x="47.6682%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.02%)</title><rect x="47.5305%" y="645" width="0.0241%" height="15" fill="rgb(246,175,29)" fg:x="5928" fg:w="3"/><text x="47.7805%" y="655.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (96 samples, 0.77%)</title><rect x="46.7928%" y="741" width="0.7697%" height="15" fill="rgb(215,13,50)" fg:x="5836" fg:w="96"/><text x="47.0428%" y="751.50"></text></g><g><title>alloc::string::String::as_bytes (3 samples, 0.02%)</title><rect x="47.5625%" y="741" width="0.0241%" height="15" fill="rgb(216,172,15)" fg:x="5932" fg:w="3"/><text x="47.8125%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="47.5625%" y="725" width="0.0241%" height="15" fill="rgb(212,103,13)" fg:x="5932" fg:w="3"/><text x="47.8125%" y="735.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="47.5866%" y="645" width="0.0722%" height="15" fill="rgb(231,171,36)" fg:x="5935" fg:w="9"/><text x="47.8366%" y="655.50"></text></g><g><title>__rust_dealloc (5 samples, 0.04%)</title><rect x="47.6668%" y="645" width="0.0401%" height="15" fill="rgb(250,123,20)" fg:x="5945" fg:w="5"/><text x="47.9168%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.15%)</title><rect x="47.5866%" y="677" width="0.1523%" height="15" fill="rgb(212,53,50)" fg:x="5935" fg:w="19"/><text x="47.8366%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.15%)</title><rect x="47.5866%" y="661" width="0.1523%" height="15" fill="rgb(243,54,12)" fg:x="5935" fg:w="19"/><text x="47.8366%" y="671.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="47.7069%" y="645" width="0.0321%" height="15" fill="rgb(234,101,34)" fg:x="5950" fg:w="4"/><text x="47.9569%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20 samples, 0.16%)</title><rect x="47.5866%" y="741" width="0.1604%" height="15" fill="rgb(254,67,22)" fg:x="5935" fg:w="20"/><text x="47.8366%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.16%)</title><rect x="47.5866%" y="725" width="0.1604%" height="15" fill="rgb(250,35,47)" fg:x="5935" fg:w="20"/><text x="47.8366%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.16%)</title><rect x="47.5866%" y="709" width="0.1604%" height="15" fill="rgb(226,126,38)" fg:x="5935" fg:w="20"/><text x="47.8366%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.16%)</title><rect x="47.5866%" y="693" width="0.1604%" height="15" fill="rgb(216,138,53)" fg:x="5935" fg:w="20"/><text x="47.8366%" y="703.50"></text></g><g><title>core::clone::Clone::clone_from (9 samples, 0.07%)</title><rect x="47.7470%" y="725" width="0.0722%" height="15" fill="rgb(246,199,43)" fg:x="5955" fg:w="9"/><text x="47.9970%" y="735.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="47.7470%" y="709" width="0.0722%" height="15" fill="rgb(232,125,11)" fg:x="5955" fg:w="9"/><text x="47.9970%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (10 samples, 0.08%)</title><rect x="47.7470%" y="741" width="0.0802%" height="15" fill="rgb(218,219,45)" fg:x="5955" fg:w="10"/><text x="47.9970%" y="751.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (150 samples, 1.20%)</title><rect x="46.7207%" y="757" width="1.2027%" height="15" fill="rgb(216,102,54)" fg:x="5827" fg:w="150"/><text x="46.9707%" y="767.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (10 samples, 0.08%)</title><rect x="47.8432%" y="741" width="0.0802%" height="15" fill="rgb(250,228,7)" fg:x="5967" fg:w="10"/><text x="48.0932%" y="751.50"></text></g><g><title>redis_protocol::utils::digits_in_number (10 samples, 0.08%)</title><rect x="47.8432%" y="725" width="0.0802%" height="15" fill="rgb(226,125,25)" fg:x="5967" fg:w="10"/><text x="48.0932%" y="735.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (8 samples, 0.06%)</title><rect x="47.8592%" y="709" width="0.0641%" height="15" fill="rgb(224,165,27)" fg:x="5969" fg:w="8"/><text x="48.1092%" y="719.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (8 samples, 0.06%)</title><rect x="47.8592%" y="693" width="0.0641%" height="15" fill="rgb(233,86,3)" fg:x="5969" fg:w="8"/><text x="48.1092%" y="703.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (8 samples, 0.06%)</title><rect x="47.8592%" y="677" width="0.0641%" height="15" fill="rgb(228,116,20)" fg:x="5969" fg:w="8"/><text x="48.1092%" y="687.50"></text></g><g><title>__log10_finite (8 samples, 0.06%)</title><rect x="47.8592%" y="661" width="0.0641%" height="15" fill="rgb(209,192,17)" fg:x="5969" fg:w="8"/><text x="48.1092%" y="671.50"></text></g><g><title>[libm-2.28.so] (6 samples, 0.05%)</title><rect x="47.8752%" y="645" width="0.0481%" height="15" fill="rgb(224,88,34)" fg:x="5971" fg:w="6"/><text x="48.1252%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="47.9233%" y="725" width="0.0160%" height="15" fill="rgb(233,38,6)" fg:x="5977" fg:w="2"/><text x="48.1733%" y="735.50"></text></g><g><title>__log10_finite (20 samples, 0.16%)</title><rect x="48.0997%" y="581" width="0.1604%" height="15" fill="rgb(212,59,30)" fg:x="5999" fg:w="20"/><text x="48.3497%" y="591.50"></text></g><g><title>[libm-2.28.so] (15 samples, 0.12%)</title><rect x="48.1398%" y="565" width="0.1203%" height="15" fill="rgb(213,80,3)" fg:x="6004" fg:w="15"/><text x="48.3898%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (44 samples, 0.35%)</title><rect x="47.9233%" y="741" width="0.3528%" height="15" fill="rgb(251,178,7)" fg:x="5977" fg:w="44"/><text x="48.1733%" y="751.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (42 samples, 0.34%)</title><rect x="47.9394%" y="725" width="0.3368%" height="15" fill="rgb(213,154,26)" fg:x="5979" fg:w="42"/><text x="48.1894%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (42 samples, 0.34%)</title><rect x="47.9394%" y="709" width="0.3368%" height="15" fill="rgb(238,165,49)" fg:x="5979" fg:w="42"/><text x="48.1894%" y="719.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (42 samples, 0.34%)</title><rect x="47.9394%" y="693" width="0.3368%" height="15" fill="rgb(248,91,46)" fg:x="5979" fg:w="42"/><text x="48.1894%" y="703.50"></text></g><g><title>redis_protocol::utils::encode_len (42 samples, 0.34%)</title><rect x="47.9394%" y="677" width="0.3368%" height="15" fill="rgb(244,21,52)" fg:x="5979" fg:w="42"/><text x="48.1894%" y="687.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (28 samples, 0.22%)</title><rect x="48.0516%" y="661" width="0.2245%" height="15" fill="rgb(247,122,20)" fg:x="5993" fg:w="28"/><text x="48.3016%" y="671.50"></text></g><g><title>redis_protocol::utils::digits_in_number (28 samples, 0.22%)</title><rect x="48.0516%" y="645" width="0.2245%" height="15" fill="rgb(218,27,9)" fg:x="5993" fg:w="28"/><text x="48.3016%" y="655.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (23 samples, 0.18%)</title><rect x="48.0917%" y="629" width="0.1844%" height="15" fill="rgb(246,7,6)" fg:x="5998" fg:w="23"/><text x="48.3417%" y="639.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (23 samples, 0.18%)</title><rect x="48.0917%" y="613" width="0.1844%" height="15" fill="rgb(227,135,54)" fg:x="5998" fg:w="23"/><text x="48.3417%" y="623.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (23 samples, 0.18%)</title><rect x="48.0917%" y="597" width="0.1844%" height="15" fill="rgb(247,14,11)" fg:x="5998" fg:w="23"/><text x="48.3417%" y="607.50"></text></g><g><title>log10f32x (2 samples, 0.02%)</title><rect x="48.2601%" y="581" width="0.0160%" height="15" fill="rgb(206,149,34)" fg:x="6019" fg:w="2"/><text x="48.5101%" y="591.50"></text></g><g><title>__log10_finite (3 samples, 0.02%)</title><rect x="48.3403%" y="677" width="0.0241%" height="15" fill="rgb(227,228,4)" fg:x="6029" fg:w="3"/><text x="48.5903%" y="687.50"></text></g><g><title>[libm-2.28.so] (3 samples, 0.02%)</title><rect x="48.3403%" y="661" width="0.0241%" height="15" fill="rgb(238,218,28)" fg:x="6029" fg:w="3"/><text x="48.5903%" y="671.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (378 samples, 3.03%)</title><rect x="45.3416%" y="869" width="3.0308%" height="15" fill="rgb(252,86,40)" fg:x="5655" fg:w="378"/><text x="45.5916%" y="879.50">&lt;to..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (378 samples, 3.03%)</title><rect x="45.3416%" y="853" width="3.0308%" height="15" fill="rgb(251,225,11)" fg:x="5655" fg:w="378"/><text x="45.5916%" y="863.50">&lt;to..</text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (375 samples, 3.01%)</title><rect x="45.3656%" y="837" width="3.0067%" height="15" fill="rgb(206,46,49)" fg:x="5658" fg:w="375"/><text x="45.6156%" y="847.50">&lt;fr..</text></g><g><title>fred::protocol::codec::encode_frame (375 samples, 3.01%)</title><rect x="45.3656%" y="821" width="3.0067%" height="15" fill="rgb(245,128,24)" fg:x="5658" fg:w="375"/><text x="45.6156%" y="831.50">fre..</text></g><g><title>redis_protocol::encode::encode_bytes (343 samples, 2.75%)</title><rect x="45.6222%" y="805" width="2.7502%" height="15" fill="rgb(219,177,34)" fg:x="5690" fg:w="343"/><text x="45.8722%" y="815.50">re..</text></g><g><title>redis_protocol::encode::attempt_encoding (338 samples, 2.71%)</title><rect x="45.6623%" y="789" width="2.7101%" height="15" fill="rgb(218,60,48)" fg:x="5695" fg:w="338"/><text x="45.9123%" y="799.50">re..</text></g><g><title>redis_protocol::encode::gen_array (334 samples, 2.68%)</title><rect x="45.6944%" y="773" width="2.6780%" height="15" fill="rgb(221,11,5)" fg:x="5699" fg:w="334"/><text x="45.9444%" y="783.50">re..</text></g><g><title>redis_protocol::utils::array_encode_len (56 samples, 0.45%)</title><rect x="47.9233%" y="757" width="0.4490%" height="15" fill="rgb(220,148,13)" fg:x="5977" fg:w="56"/><text x="48.1733%" y="767.50"></text></g><g><title>redis_protocol::utils::digits_in_number (12 samples, 0.10%)</title><rect x="48.2761%" y="741" width="0.0962%" height="15" fill="rgb(210,16,3)" fg:x="6021" fg:w="12"/><text x="48.5261%" y="751.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (4 samples, 0.03%)</title><rect x="48.3403%" y="725" width="0.0321%" height="15" fill="rgb(236,80,2)" fg:x="6029" fg:w="4"/><text x="48.5903%" y="735.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (4 samples, 0.03%)</title><rect x="48.3403%" y="709" width="0.0321%" height="15" fill="rgb(239,129,19)" fg:x="6029" fg:w="4"/><text x="48.5903%" y="719.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (4 samples, 0.03%)</title><rect x="48.3403%" y="693" width="0.0321%" height="15" fill="rgb(220,106,35)" fg:x="6029" fg:w="4"/><text x="48.5903%" y="703.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (398 samples, 3.19%)</title><rect x="45.2053%" y="933" width="3.1911%" height="15" fill="rgb(252,139,45)" fg:x="5638" fg:w="398"/><text x="45.4553%" y="943.50">&lt;&amp;m..</text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (398 samples, 3.19%)</title><rect x="45.2053%" y="917" width="3.1911%" height="15" fill="rgb(229,8,36)" fg:x="5638" fg:w="398"/><text x="45.4553%" y="927.50">&lt;fu..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (392 samples, 3.14%)</title><rect x="45.2534%" y="901" width="3.1430%" height="15" fill="rgb(230,126,33)" fg:x="5644" fg:w="392"/><text x="45.5034%" y="911.50">fut..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (382 samples, 3.06%)</title><rect x="45.3335%" y="885" width="3.0629%" height="15" fill="rgb(239,140,21)" fg:x="5654" fg:w="382"/><text x="45.5835%" y="895.50">fut..</text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="48.3724%" y="869" width="0.0241%" height="15" fill="rgb(254,104,9)" fg:x="6033" fg:w="3"/><text x="48.6224%" y="879.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (406 samples, 3.26%)</title><rect x="45.1892%" y="949" width="3.2553%" height="15" fill="rgb(239,52,14)" fg:x="5636" fg:w="406"/><text x="45.4392%" y="959.50">&lt;fu..</text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="48.3964%" y="933" width="0.0481%" height="15" fill="rgb(208,227,44)" fg:x="6036" fg:w="6"/><text x="48.6464%" y="943.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (5 samples, 0.04%)</title><rect x="48.4766%" y="869" width="0.0401%" height="15" fill="rgb(246,18,19)" fg:x="6046" fg:w="5"/><text x="48.7266%" y="879.50"></text></g><g><title>cfree (5 samples, 0.04%)</title><rect x="48.5487%" y="789" width="0.0401%" height="15" fill="rgb(235,228,25)" fg:x="6055" fg:w="5"/><text x="48.7987%" y="799.50"></text></g><g><title>fred::metrics::SizeStats::sample (2 samples, 0.02%)</title><rect x="48.5969%" y="789" width="0.0160%" height="15" fill="rgb(240,156,20)" fg:x="6061" fg:w="2"/><text x="48.8469%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="48.6369%" y="693" width="0.0160%" height="15" fill="rgb(224,8,20)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="48.6369%" y="677" width="0.0160%" height="15" fill="rgb(214,12,52)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="687.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="48.6369%" y="661" width="0.0160%" height="15" fill="rgb(211,220,47)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="48.6369%" y="645" width="0.0160%" height="15" fill="rgb(250,173,5)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="48.6369%" y="629" width="0.0160%" height="15" fill="rgb(250,125,52)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="48.6369%" y="613" width="0.0160%" height="15" fill="rgb(209,133,18)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="48.6369%" y="597" width="0.0160%" height="15" fill="rgb(216,173,22)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="607.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="48.6369%" y="581" width="0.0160%" height="15" fill="rgb(205,3,22)" fg:x="6066" fg:w="2"/><text x="48.8869%" y="591.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="48.6690%" y="485" width="0.0321%" height="15" fill="rgb(248,22,20)" fg:x="6070" fg:w="4"/><text x="48.9190%" y="495.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="48.6770%" y="469" width="0.0241%" height="15" fill="rgb(233,6,29)" fg:x="6071" fg:w="3"/><text x="48.9270%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.04%)</title><rect x="48.6690%" y="661" width="0.0401%" height="15" fill="rgb(240,22,54)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.04%)</title><rect x="48.6690%" y="645" width="0.0401%" height="15" fill="rgb(231,133,32)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="655.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.04%)</title><rect x="48.6690%" y="629" width="0.0401%" height="15" fill="rgb(248,193,4)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.04%)</title><rect x="48.6690%" y="613" width="0.0401%" height="15" fill="rgb(211,178,46)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.04%)</title><rect x="48.6690%" y="597" width="0.0401%" height="15" fill="rgb(224,5,42)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.04%)</title><rect x="48.6690%" y="581" width="0.0401%" height="15" fill="rgb(239,176,25)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="48.6690%" y="565" width="0.0401%" height="15" fill="rgb(245,187,50)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="48.6690%" y="549" width="0.0401%" height="15" fill="rgb(248,24,15)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.04%)</title><rect x="48.6690%" y="533" width="0.0401%" height="15" fill="rgb(205,166,13)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.04%)</title><rect x="48.6690%" y="517" width="0.0401%" height="15" fill="rgb(208,114,23)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="48.6690%" y="501" width="0.0401%" height="15" fill="rgb(239,127,18)" fg:x="6070" fg:w="5"/><text x="48.9190%" y="511.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (14 samples, 0.11%)</title><rect x="48.6209%" y="741" width="0.1123%" height="15" fill="rgb(219,154,28)" fg:x="6064" fg:w="14"/><text x="48.8709%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.11%)</title><rect x="48.6209%" y="725" width="0.1123%" height="15" fill="rgb(225,157,23)" fg:x="6064" fg:w="14"/><text x="48.8709%" y="735.50"></text></g><g><title>core::fmt::write (13 samples, 0.10%)</title><rect x="48.6289%" y="709" width="0.1042%" height="15" fill="rgb(219,8,6)" fg:x="6065" fg:w="13"/><text x="48.8789%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.08%)</title><rect x="48.6530%" y="693" width="0.0802%" height="15" fill="rgb(212,47,6)" fg:x="6068" fg:w="10"/><text x="48.9030%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.08%)</title><rect x="48.6530%" y="677" width="0.0802%" height="15" fill="rgb(224,190,4)" fg:x="6068" fg:w="10"/><text x="48.9030%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.02%)</title><rect x="48.7091%" y="661" width="0.0241%" height="15" fill="rgb(239,183,29)" fg:x="6075" fg:w="3"/><text x="48.9591%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.02%)</title><rect x="48.7171%" y="645" width="0.0160%" height="15" fill="rgb(213,57,7)" fg:x="6076" fg:w="2"/><text x="48.9671%" y="655.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="48.7332%" y="645" width="0.0160%" height="15" fill="rgb(216,148,1)" fg:x="6078" fg:w="2"/><text x="48.9832%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.03%)</title><rect x="48.7332%" y="741" width="0.0321%" height="15" fill="rgb(236,182,29)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="48.7332%" y="725" width="0.0321%" height="15" fill="rgb(244,120,48)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="48.7332%" y="709" width="0.0321%" height="15" fill="rgb(206,71,34)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="48.7332%" y="693" width="0.0321%" height="15" fill="rgb(242,32,6)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="48.7332%" y="677" width="0.0321%" height="15" fill="rgb(241,35,3)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="48.7332%" y="661" width="0.0321%" height="15" fill="rgb(222,62,19)" fg:x="6078" fg:w="4"/><text x="48.9832%" y="671.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="48.7492%" y="645" width="0.0160%" height="15" fill="rgb(223,110,41)" fg:x="6080" fg:w="2"/><text x="48.9992%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="48.8294%" y="645" width="0.0321%" height="15" fill="rgb(208,224,4)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="48.8294%" y="629" width="0.0321%" height="15" fill="rgb(241,137,19)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="639.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.03%)</title><rect x="48.8294%" y="613" width="0.0321%" height="15" fill="rgb(244,24,17)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.03%)</title><rect x="48.8294%" y="597" width="0.0321%" height="15" fill="rgb(245,178,49)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="48.8294%" y="581" width="0.0321%" height="15" fill="rgb(219,160,38)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.03%)</title><rect x="48.8294%" y="565" width="0.0321%" height="15" fill="rgb(228,137,14)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="48.8294%" y="549" width="0.0321%" height="15" fill="rgb(237,134,11)" fg:x="6090" fg:w="4"/><text x="49.0794%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="48.8374%" y="533" width="0.0241%" height="15" fill="rgb(211,126,44)" fg:x="6091" fg:w="3"/><text x="49.0874%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.02%)</title><rect x="48.8374%" y="517" width="0.0241%" height="15" fill="rgb(226,171,33)" fg:x="6091" fg:w="3"/><text x="49.0874%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="48.8374%" y="501" width="0.0241%" height="15" fill="rgb(253,99,13)" fg:x="6091" fg:w="3"/><text x="49.0874%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="48.8374%" y="485" width="0.0241%" height="15" fill="rgb(244,48,7)" fg:x="6091" fg:w="3"/><text x="49.0874%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="48.8374%" y="469" width="0.0241%" height="15" fill="rgb(244,217,54)" fg:x="6091" fg:w="3"/><text x="49.0874%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.02%)</title><rect x="48.8935%" y="629" width="0.0160%" height="15" fill="rgb(224,15,18)" fg:x="6098" fg:w="2"/><text x="49.1435%" y="639.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (16 samples, 0.13%)</title><rect x="48.7893%" y="725" width="0.1283%" height="15" fill="rgb(244,99,12)" fg:x="6085" fg:w="16"/><text x="49.0393%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.13%)</title><rect x="48.7893%" y="709" width="0.1283%" height="15" fill="rgb(233,226,8)" fg:x="6085" fg:w="16"/><text x="49.0393%" y="719.50"></text></g><g><title>core::fmt::write (16 samples, 0.13%)</title><rect x="48.7893%" y="693" width="0.1283%" height="15" fill="rgb(229,211,3)" fg:x="6085" fg:w="16"/><text x="49.0393%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (12 samples, 0.10%)</title><rect x="48.8214%" y="677" width="0.0962%" height="15" fill="rgb(216,140,21)" fg:x="6089" fg:w="12"/><text x="49.0714%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (11 samples, 0.09%)</title><rect x="48.8294%" y="661" width="0.0882%" height="15" fill="rgb(234,122,30)" fg:x="6090" fg:w="11"/><text x="49.0794%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.06%)</title><rect x="48.8614%" y="645" width="0.0561%" height="15" fill="rgb(236,25,46)" fg:x="6094" fg:w="7"/><text x="49.1114%" y="655.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="48.9176%" y="629" width="0.0241%" height="15" fill="rgb(217,52,54)" fg:x="6101" fg:w="3"/><text x="49.1676%" y="639.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="48.9416%" y="629" width="0.0160%" height="15" fill="rgb(222,29,26)" fg:x="6104" fg:w="2"/><text x="49.1916%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.06%)</title><rect x="48.9176%" y="725" width="0.0641%" height="15" fill="rgb(216,177,29)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.06%)</title><rect x="48.9176%" y="709" width="0.0641%" height="15" fill="rgb(247,136,51)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.06%)</title><rect x="48.9176%" y="693" width="0.0641%" height="15" fill="rgb(231,47,47)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="48.9176%" y="677" width="0.0641%" height="15" fill="rgb(211,192,36)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.06%)</title><rect x="48.9176%" y="661" width="0.0641%" height="15" fill="rgb(229,156,32)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.06%)</title><rect x="48.9176%" y="645" width="0.0641%" height="15" fill="rgb(248,213,20)" fg:x="6101" fg:w="8"/><text x="49.1676%" y="655.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="48.9577%" y="629" width="0.0241%" height="15" fill="rgb(217,64,7)" fg:x="6106" fg:w="3"/><text x="49.2077%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (4 samples, 0.03%)</title><rect x="48.9817%" y="725" width="0.0321%" height="15" fill="rgb(232,142,8)" fg:x="6109" fg:w="4"/><text x="49.2317%" y="735.50"></text></g><g><title>core::clone::Clone::clone_from (4 samples, 0.03%)</title><rect x="48.9817%" y="709" width="0.0321%" height="15" fill="rgb(224,92,44)" fg:x="6109" fg:w="4"/><text x="49.2317%" y="719.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="48.9817%" y="693" width="0.0321%" height="15" fill="rgb(214,169,17)" fg:x="6109" fg:w="4"/><text x="49.2317%" y="703.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (33 samples, 0.26%)</title><rect x="48.7733%" y="741" width="0.2646%" height="15" fill="rgb(210,59,37)" fg:x="6083" fg:w="33"/><text x="49.0233%" y="751.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (3 samples, 0.02%)</title><rect x="49.0138%" y="725" width="0.0241%" height="15" fill="rgb(214,116,48)" fg:x="6113" fg:w="3"/><text x="49.2638%" y="735.50"></text></g><g><title>redis_protocol::utils::digits_in_number (3 samples, 0.02%)</title><rect x="49.0138%" y="709" width="0.0241%" height="15" fill="rgb(244,191,6)" fg:x="6113" fg:w="3"/><text x="49.2638%" y="719.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (5 samples, 0.04%)</title><rect x="49.0699%" y="645" width="0.0401%" height="15" fill="rgb(241,50,52)" fg:x="6120" fg:w="5"/><text x="49.3199%" y="655.50"></text></g><g><title>redis_protocol::utils::digits_in_number (4 samples, 0.03%)</title><rect x="49.0779%" y="629" width="0.0321%" height="15" fill="rgb(236,75,39)" fg:x="6121" fg:w="4"/><text x="49.3279%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.08%)</title><rect x="49.0378%" y="725" width="0.0802%" height="15" fill="rgb(236,99,0)" fg:x="6116" fg:w="10"/><text x="49.2878%" y="735.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (9 samples, 0.07%)</title><rect x="49.0459%" y="709" width="0.0722%" height="15" fill="rgb(207,202,15)" fg:x="6117" fg:w="9"/><text x="49.2959%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.07%)</title><rect x="49.0459%" y="693" width="0.0722%" height="15" fill="rgb(233,207,14)" fg:x="6117" fg:w="9"/><text x="49.2959%" y="703.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (9 samples, 0.07%)</title><rect x="49.0459%" y="677" width="0.0722%" height="15" fill="rgb(226,27,51)" fg:x="6117" fg:w="9"/><text x="49.2959%" y="687.50"></text></g><g><title>redis_protocol::utils::encode_len (9 samples, 0.07%)</title><rect x="49.0459%" y="661" width="0.0722%" height="15" fill="rgb(206,104,42)" fg:x="6117" fg:w="9"/><text x="49.2959%" y="671.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (83 samples, 0.67%)</title><rect x="48.4606%" y="917" width="0.6655%" height="15" fill="rgb(212,225,4)" fg:x="6044" fg:w="83"/><text x="48.7106%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (82 samples, 0.66%)</title><rect x="48.4686%" y="901" width="0.6575%" height="15" fill="rgb(233,96,42)" fg:x="6045" fg:w="82"/><text x="48.7186%" y="911.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (81 samples, 0.65%)</title><rect x="48.4766%" y="885" width="0.6495%" height="15" fill="rgb(229,21,32)" fg:x="6046" fg:w="81"/><text x="48.7266%" y="895.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (76 samples, 0.61%)</title><rect x="48.5167%" y="869" width="0.6094%" height="15" fill="rgb(226,216,24)" fg:x="6051" fg:w="76"/><text x="48.7667%" y="879.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (75 samples, 0.60%)</title><rect x="48.5247%" y="853" width="0.6013%" height="15" fill="rgb(221,163,17)" fg:x="6052" fg:w="75"/><text x="48.7747%" y="863.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (75 samples, 0.60%)</title><rect x="48.5247%" y="837" width="0.6013%" height="15" fill="rgb(216,216,42)" fg:x="6052" fg:w="75"/><text x="48.7747%" y="847.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (74 samples, 0.59%)</title><rect x="48.5327%" y="821" width="0.5933%" height="15" fill="rgb(240,118,7)" fg:x="6053" fg:w="74"/><text x="48.7827%" y="831.50"></text></g><g><title>fred::protocol::codec::encode_frame (74 samples, 0.59%)</title><rect x="48.5327%" y="805" width="0.5933%" height="15" fill="rgb(221,67,37)" fg:x="6053" fg:w="74"/><text x="48.7827%" y="815.50"></text></g><g><title>redis_protocol::encode::encode_bytes (63 samples, 0.51%)</title><rect x="48.6209%" y="789" width="0.5051%" height="15" fill="rgb(241,32,44)" fg:x="6064" fg:w="63"/><text x="48.8709%" y="799.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (63 samples, 0.51%)</title><rect x="48.6209%" y="773" width="0.5051%" height="15" fill="rgb(235,204,43)" fg:x="6064" fg:w="63"/><text x="48.8709%" y="783.50"></text></g><g><title>redis_protocol::encode::gen_array (63 samples, 0.51%)</title><rect x="48.6209%" y="757" width="0.5051%" height="15" fill="rgb(213,116,10)" fg:x="6064" fg:w="63"/><text x="48.8709%" y="767.50"></text></g><g><title>redis_protocol::utils::array_encode_len (11 samples, 0.09%)</title><rect x="49.0378%" y="741" width="0.0882%" height="15" fill="rgb(239,15,48)" fg:x="6116" fg:w="11"/><text x="49.2878%" y="751.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (85 samples, 0.68%)</title><rect x="48.4606%" y="933" width="0.6815%" height="15" fill="rgb(207,123,36)" fg:x="6044" fg:w="85"/><text x="48.7106%" y="943.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.02%)</title><rect x="49.1742%" y="885" width="0.0160%" height="15" fill="rgb(209,103,30)" fg:x="6133" fg:w="2"/><text x="49.4242%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.05%)</title><rect x="49.2784%" y="869" width="0.0481%" height="15" fill="rgb(238,100,19)" fg:x="6146" fg:w="6"/><text x="49.5284%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (4 samples, 0.03%)</title><rect x="49.2944%" y="853" width="0.0321%" height="15" fill="rgb(244,30,14)" fg:x="6148" fg:w="4"/><text x="49.5444%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as tokio::io::async_write::AsyncWrite&gt;::is_write_vectored (2 samples, 0.02%)</title><rect x="49.3265%" y="869" width="0.0160%" height="15" fill="rgb(249,174,6)" fg:x="6152" fg:w="2"/><text x="49.5765%" y="879.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::is_write_vectored (2 samples, 0.02%)</title><rect x="49.3265%" y="853" width="0.0160%" height="15" fill="rgb(235,213,41)" fg:x="6152" fg:w="2"/><text x="49.5765%" y="863.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="49.4387%" y="773" width="0.0160%" height="15" fill="rgb(213,118,6)" fg:x="6166" fg:w="2"/><text x="49.6887%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="49.4387%" y="757" width="0.0160%" height="15" fill="rgb(235,44,51)" fg:x="6166" fg:w="2"/><text x="49.6887%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="49.4387%" y="741" width="0.0160%" height="15" fill="rgb(217,9,53)" fg:x="6166" fg:w="2"/><text x="49.6887%" y="751.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.02%)</title><rect x="49.4387%" y="725" width="0.0160%" height="15" fill="rgb(237,172,34)" fg:x="6166" fg:w="2"/><text x="49.6887%" y="735.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (8 samples, 0.06%)</title><rect x="49.4227%" y="789" width="0.0641%" height="15" fill="rgb(206,206,11)" fg:x="6164" fg:w="8"/><text x="49.6727%" y="799.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.03%)</title><rect x="49.4548%" y="773" width="0.0321%" height="15" fill="rgb(214,149,29)" fg:x="6168" fg:w="4"/><text x="49.7048%" y="783.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="49.5350%" y="645" width="0.0160%" height="15" fill="rgb(208,123,3)" fg:x="6178" fg:w="2"/><text x="49.7850%" y="655.50"></text></g><g><title>__indirect_thunk_start (2 samples, 0.02%)</title><rect x="49.5510%" y="645" width="0.0160%" height="15" fill="rgb(229,126,4)" fg:x="6180" fg:w="2"/><text x="49.8010%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="49.5670%" y="645" width="0.0160%" height="15" fill="rgb(222,92,36)" fg:x="6182" fg:w="2"/><text x="49.8170%" y="655.50"></text></g><g><title>__fdget_pos (18 samples, 0.14%)</title><rect x="49.6312%" y="597" width="0.1443%" height="15" fill="rgb(216,39,41)" fg:x="6190" fg:w="18"/><text x="49.8812%" y="607.50"></text></g><g><title>__fget_light (18 samples, 0.14%)</title><rect x="49.6312%" y="581" width="0.1443%" height="15" fill="rgb(253,127,28)" fg:x="6190" fg:w="18"/><text x="49.8812%" y="591.50"></text></g><g><title>__fget (11 samples, 0.09%)</title><rect x="49.6873%" y="565" width="0.0882%" height="15" fill="rgb(249,152,51)" fg:x="6197" fg:w="11"/><text x="49.9373%" y="575.50"></text></g><g><title>fput (4 samples, 0.03%)</title><rect x="49.7755%" y="597" width="0.0321%" height="15" fill="rgb(209,123,42)" fg:x="6208" fg:w="4"/><text x="50.0255%" y="607.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.02%)</title><rect x="49.8797%" y="565" width="0.0241%" height="15" fill="rgb(241,118,22)" fg:x="6221" fg:w="3"/><text x="50.1297%" y="575.50"></text></g><g><title>inet_sendmsg (3 samples, 0.02%)</title><rect x="50.0080%" y="517" width="0.0241%" height="15" fill="rgb(208,25,7)" fg:x="6237" fg:w="3"/><text x="50.2580%" y="527.50"></text></g><g><title>security_socket_sendmsg (4 samples, 0.03%)</title><rect x="50.0321%" y="517" width="0.0321%" height="15" fill="rgb(243,144,39)" fg:x="6240" fg:w="4"/><text x="50.2821%" y="527.50"></text></g><g><title>lock_sock_nested (12 samples, 0.10%)</title><rect x="50.1203%" y="501" width="0.0962%" height="15" fill="rgb(250,50,5)" fg:x="6251" fg:w="12"/><text x="50.3703%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (11 samples, 0.09%)</title><rect x="50.1283%" y="485" width="0.0882%" height="15" fill="rgb(207,67,11)" fg:x="6252" fg:w="11"/><text x="50.3783%" y="495.50"></text></g><g><title>native_queued_spin_lock_slowpath (6 samples, 0.05%)</title><rect x="50.1684%" y="469" width="0.0481%" height="15" fill="rgb(245,204,40)" fg:x="6257" fg:w="6"/><text x="50.4184%" y="479.50"></text></g><g><title>ip_local_out (5 samples, 0.04%)</title><rect x="50.2646%" y="373" width="0.0401%" height="15" fill="rgb(238,228,24)" fg:x="6269" fg:w="5"/><text x="50.5146%" y="383.50"></text></g><g><title>__ip_local_out (5 samples, 0.04%)</title><rect x="50.2646%" y="357" width="0.0401%" height="15" fill="rgb(217,116,22)" fg:x="6269" fg:w="5"/><text x="50.5146%" y="367.50"></text></g><g><title>nf_hook_slow (4 samples, 0.03%)</title><rect x="50.2726%" y="341" width="0.0321%" height="15" fill="rgb(234,98,12)" fg:x="6270" fg:w="4"/><text x="50.5226%" y="351.50"></text></g><g><title>nf_conntrack_in (4 samples, 0.03%)</title><rect x="50.2726%" y="325" width="0.0321%" height="15" fill="rgb(242,170,50)" fg:x="6270" fg:w="4"/><text x="50.5226%" y="335.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="50.3127%" y="341" width="0.0160%" height="15" fill="rgb(235,7,5)" fg:x="6275" fg:w="2"/><text x="50.5627%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="50.3127%" y="325" width="0.0160%" height="15" fill="rgb(241,114,28)" fg:x="6275" fg:w="2"/><text x="50.5627%" y="335.50"></text></g><g><title>loopback_xmit (2 samples, 0.02%)</title><rect x="50.3127%" y="309" width="0.0160%" height="15" fill="rgb(246,112,42)" fg:x="6275" fg:w="2"/><text x="50.5627%" y="319.50"></text></g><g><title>tcp_wfree (2 samples, 0.02%)</title><rect x="50.3127%" y="293" width="0.0160%" height="15" fill="rgb(248,228,14)" fg:x="6275" fg:w="2"/><text x="50.5627%" y="303.50"></text></g><g><title>refcount_sub_and_test_checked (2 samples, 0.02%)</title><rect x="50.3127%" y="277" width="0.0160%" height="15" fill="rgb(208,133,18)" fg:x="6275" fg:w="2"/><text x="50.5627%" y="287.50"></text></g><g><title>ip_local_deliver (3 samples, 0.02%)</title><rect x="50.3448%" y="213" width="0.0241%" height="15" fill="rgb(207,35,49)" fg:x="6279" fg:w="3"/><text x="50.5948%" y="223.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="50.3448%" y="197" width="0.0241%" height="15" fill="rgb(205,68,36)" fg:x="6279" fg:w="3"/><text x="50.5948%" y="207.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="50.3448%" y="181" width="0.0241%" height="15" fill="rgb(245,62,40)" fg:x="6279" fg:w="3"/><text x="50.5948%" y="191.50"></text></g><g><title>__ip_queue_xmit (15 samples, 0.12%)</title><rect x="50.2646%" y="389" width="0.1203%" height="15" fill="rgb(228,27,24)" fg:x="6269" fg:w="15"/><text x="50.5146%" y="399.50"></text></g><g><title>ip_output (10 samples, 0.08%)</title><rect x="50.3047%" y="373" width="0.0802%" height="15" fill="rgb(253,19,12)" fg:x="6274" fg:w="10"/><text x="50.5547%" y="383.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.07%)</title><rect x="50.3127%" y="357" width="0.0722%" height="15" fill="rgb(232,28,20)" fg:x="6275" fg:w="9"/><text x="50.5627%" y="367.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.06%)</title><rect x="50.3287%" y="341" width="0.0561%" height="15" fill="rgb(218,35,51)" fg:x="6277" fg:w="7"/><text x="50.5787%" y="351.50"></text></g><g><title>do_softirq.part.19 (7 samples, 0.06%)</title><rect x="50.3287%" y="325" width="0.0561%" height="15" fill="rgb(212,90,40)" fg:x="6277" fg:w="7"/><text x="50.5787%" y="335.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="50.3287%" y="309" width="0.0561%" height="15" fill="rgb(220,172,12)" fg:x="6277" fg:w="7"/><text x="50.5787%" y="319.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="50.3287%" y="293" width="0.0561%" height="15" fill="rgb(226,159,20)" fg:x="6277" fg:w="7"/><text x="50.5787%" y="303.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="50.3368%" y="277" width="0.0481%" height="15" fill="rgb(234,205,16)" fg:x="6278" fg:w="6"/><text x="50.5868%" y="287.50"></text></g><g><title>process_backlog (6 samples, 0.05%)</title><rect x="50.3368%" y="261" width="0.0481%" height="15" fill="rgb(207,9,39)" fg:x="6278" fg:w="6"/><text x="50.5868%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.04%)</title><rect x="50.3448%" y="245" width="0.0401%" height="15" fill="rgb(249,143,15)" fg:x="6279" fg:w="5"/><text x="50.5948%" y="255.50"></text></g><g><title>ip_rcv (5 samples, 0.04%)</title><rect x="50.3448%" y="229" width="0.0401%" height="15" fill="rgb(253,133,29)" fg:x="6279" fg:w="5"/><text x="50.5948%" y="239.50"></text></g><g><title>nf_hook_slow (2 samples, 0.02%)</title><rect x="50.3688%" y="213" width="0.0160%" height="15" fill="rgb(221,187,0)" fg:x="6282" fg:w="2"/><text x="50.6188%" y="223.50"></text></g><g><title>nf_conntrack_in (2 samples, 0.02%)</title><rect x="50.3688%" y="197" width="0.0160%" height="15" fill="rgb(205,204,26)" fg:x="6282" fg:w="2"/><text x="50.6188%" y="207.50"></text></g><g><title>__tcp_transmit_skb (16 samples, 0.13%)</title><rect x="50.2646%" y="405" width="0.1283%" height="15" fill="rgb(224,68,54)" fg:x="6269" fg:w="16"/><text x="50.5146%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (17 samples, 0.14%)</title><rect x="50.2646%" y="437" width="0.1363%" height="15" fill="rgb(209,67,4)" fg:x="6269" fg:w="17"/><text x="50.5146%" y="447.50"></text></g><g><title>tcp_write_xmit (17 samples, 0.14%)</title><rect x="50.2646%" y="421" width="0.1363%" height="15" fill="rgb(228,229,18)" fg:x="6269" fg:w="17"/><text x="50.5146%" y="431.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="50.4089%" y="437" width="0.0160%" height="15" fill="rgb(231,89,13)" fg:x="6287" fg:w="2"/><text x="50.6589%" y="447.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="50.4089%" y="421" width="0.0160%" height="15" fill="rgb(210,182,18)" fg:x="6287" fg:w="2"/><text x="50.6589%" y="431.50"></text></g><g><title>skb_release_data (2 samples, 0.02%)</title><rect x="50.4089%" y="405" width="0.0160%" height="15" fill="rgb(240,105,2)" fg:x="6287" fg:w="2"/><text x="50.6589%" y="415.50"></text></g><g><title>kfree_skb_partial (2 samples, 0.02%)</title><rect x="50.4250%" y="421" width="0.0160%" height="15" fill="rgb(207,170,50)" fg:x="6289" fg:w="2"/><text x="50.6750%" y="431.50"></text></g><g><title>__wake_up_common (3 samples, 0.02%)</title><rect x="50.4490%" y="357" width="0.0241%" height="15" fill="rgb(232,133,24)" fg:x="6292" fg:w="3"/><text x="50.6990%" y="367.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="50.4570%" y="341" width="0.0160%" height="15" fill="rgb(235,166,27)" fg:x="6293" fg:w="2"/><text x="50.7070%" y="351.50"></text></g><g><title>sock_def_readable (5 samples, 0.04%)</title><rect x="50.4410%" y="421" width="0.0401%" height="15" fill="rgb(209,19,13)" fg:x="6291" fg:w="5"/><text x="50.6910%" y="431.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.03%)</title><rect x="50.4490%" y="405" width="0.0321%" height="15" fill="rgb(226,79,39)" fg:x="6292" fg:w="4"/><text x="50.6990%" y="415.50"></text></g><g><title>__wake_up_common (4 samples, 0.03%)</title><rect x="50.4490%" y="389" width="0.0321%" height="15" fill="rgb(222,163,10)" fg:x="6292" fg:w="4"/><text x="50.6990%" y="399.50"></text></g><g><title>ep_poll_callback (4 samples, 0.03%)</title><rect x="50.4490%" y="373" width="0.0321%" height="15" fill="rgb(214,44,19)" fg:x="6292" fg:w="4"/><text x="50.6990%" y="383.50"></text></g><g><title>__release_sock (29 samples, 0.23%)</title><rect x="50.2566%" y="485" width="0.2325%" height="15" fill="rgb(210,217,13)" fg:x="6268" fg:w="29"/><text x="50.5066%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (29 samples, 0.23%)</title><rect x="50.2566%" y="469" width="0.2325%" height="15" fill="rgb(237,61,54)" fg:x="6268" fg:w="29"/><text x="50.5066%" y="479.50"></text></g><g><title>tcp_rcv_established (29 samples, 0.23%)</title><rect x="50.2566%" y="453" width="0.2325%" height="15" fill="rgb(226,184,24)" fg:x="6268" fg:w="29"/><text x="50.5066%" y="463.50"></text></g><g><title>tcp_data_queue (8 samples, 0.06%)</title><rect x="50.4250%" y="437" width="0.0641%" height="15" fill="rgb(223,226,4)" fg:x="6289" fg:w="8"/><text x="50.6750%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="50.4891%" y="485" width="0.0241%" height="15" fill="rgb(210,26,41)" fg:x="6297" fg:w="3"/><text x="50.7391%" y="495.50"></text></g><g><title>release_sock (39 samples, 0.31%)</title><rect x="50.2165%" y="501" width="0.3127%" height="15" fill="rgb(220,221,6)" fg:x="6263" fg:w="39"/><text x="50.4665%" y="511.50"></text></g><g><title>tcp_release_cb (2 samples, 0.02%)</title><rect x="50.5131%" y="485" width="0.0160%" height="15" fill="rgb(225,89,49)" fg:x="6300" fg:w="2"/><text x="50.7631%" y="495.50"></text></g><g><title>__check_object_size (10 samples, 0.08%)</title><rect x="50.5613%" y="485" width="0.0802%" height="15" fill="rgb(218,70,45)" fg:x="6306" fg:w="10"/><text x="50.8113%" y="495.50"></text></g><g><title>__virt_addr_valid (5 samples, 0.04%)</title><rect x="50.6013%" y="469" width="0.0401%" height="15" fill="rgb(238,166,21)" fg:x="6311" fg:w="5"/><text x="50.8513%" y="479.50"></text></g><g><title>__sk_dst_check (7 samples, 0.06%)</title><rect x="50.9702%" y="421" width="0.0561%" height="15" fill="rgb(224,141,44)" fg:x="6357" fg:w="7"/><text x="51.2202%" y="431.50"></text></g><g><title>ipv4_dst_check (3 samples, 0.02%)</title><rect x="51.0022%" y="405" width="0.0241%" height="15" fill="rgb(230,12,49)" fg:x="6361" fg:w="3"/><text x="51.2522%" y="415.50"></text></g><g><title>ipv4_conntrack_defrag (2 samples, 0.02%)</title><rect x="51.0824%" y="373" width="0.0160%" height="15" fill="rgb(212,174,12)" fg:x="6371" fg:w="2"/><text x="51.3324%" y="383.50"></text></g><g><title>__nf_conntrack_find_get (15 samples, 0.12%)</title><rect x="51.1546%" y="357" width="0.1203%" height="15" fill="rgb(246,67,9)" fg:x="6380" fg:w="15"/><text x="51.4046%" y="367.50"></text></g><g><title>get_l4proto (2 samples, 0.02%)</title><rect x="51.2829%" y="357" width="0.0160%" height="15" fill="rgb(239,35,23)" fg:x="6396" fg:w="2"/><text x="51.5329%" y="367.50"></text></g><g><title>hash_conntrack_raw (4 samples, 0.03%)</title><rect x="51.2989%" y="357" width="0.0321%" height="15" fill="rgb(211,167,0)" fg:x="6398" fg:w="4"/><text x="51.5489%" y="367.50"></text></g><g><title>nf_ct_get_tuple (2 samples, 0.02%)</title><rect x="51.3310%" y="357" width="0.0160%" height="15" fill="rgb(225,119,45)" fg:x="6402" fg:w="2"/><text x="51.5810%" y="367.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="51.4352%" y="341" width="0.0160%" height="15" fill="rgb(210,162,6)" fg:x="6415" fg:w="2"/><text x="51.6852%" y="351.50"></text></g><g><title>__nf_ct_refresh_acct (2 samples, 0.02%)</title><rect x="51.4513%" y="341" width="0.0160%" height="15" fill="rgb(208,118,35)" fg:x="6417" fg:w="2"/><text x="51.7013%" y="351.50"></text></g><g><title>nf_conntrack_in (53 samples, 0.42%)</title><rect x="51.1065%" y="373" width="0.4250%" height="15" fill="rgb(239,4,53)" fg:x="6374" fg:w="53"/><text x="51.3565%" y="383.50"></text></g><g><title>tcp_packet (22 samples, 0.18%)</title><rect x="51.3550%" y="357" width="0.1764%" height="15" fill="rgb(213,130,21)" fg:x="6405" fg:w="22"/><text x="51.6050%" y="367.50"></text></g><g><title>nf_ct_seq_offset (8 samples, 0.06%)</title><rect x="51.4673%" y="341" width="0.0641%" height="15" fill="rgb(235,148,0)" fg:x="6419" fg:w="8"/><text x="51.7173%" y="351.50"></text></g><g><title>nf_nat_ipv4_local_fn (4 samples, 0.03%)</title><rect x="51.5314%" y="373" width="0.0321%" height="15" fill="rgb(244,224,18)" fg:x="6427" fg:w="4"/><text x="51.7814%" y="383.50"></text></g><g><title>nf_nat_ipv4_fn (2 samples, 0.02%)</title><rect x="51.5475%" y="357" width="0.0160%" height="15" fill="rgb(211,214,4)" fg:x="6429" fg:w="2"/><text x="51.7975%" y="367.50"></text></g><g><title>ip_local_out (78 samples, 0.63%)</title><rect x="51.0263%" y="421" width="0.6254%" height="15" fill="rgb(206,119,25)" fg:x="6364" fg:w="78"/><text x="51.2763%" y="431.50"></text></g><g><title>__ip_local_out (77 samples, 0.62%)</title><rect x="51.0343%" y="405" width="0.6174%" height="15" fill="rgb(243,93,47)" fg:x="6365" fg:w="77"/><text x="51.2843%" y="415.50"></text></g><g><title>nf_hook_slow (74 samples, 0.59%)</title><rect x="51.0584%" y="389" width="0.5933%" height="15" fill="rgb(224,194,6)" fg:x="6368" fg:w="74"/><text x="51.3084%" y="399.50"></text></g><g><title>nft_do_chain_ipv4 (11 samples, 0.09%)</title><rect x="51.5635%" y="373" width="0.0882%" height="15" fill="rgb(243,229,6)" fg:x="6431" fg:w="11"/><text x="51.8135%" y="383.50"></text></g><g><title>nft_do_chain (10 samples, 0.08%)</title><rect x="51.5715%" y="357" width="0.0802%" height="15" fill="rgb(207,23,50)" fg:x="6432" fg:w="10"/><text x="51.8215%" y="367.50"></text></g><g><title>ip_finish_output (5 samples, 0.04%)</title><rect x="51.6918%" y="405" width="0.0401%" height="15" fill="rgb(253,192,32)" fg:x="6447" fg:w="5"/><text x="51.9418%" y="415.50"></text></g><g><title>eth_type_trans (6 samples, 0.05%)</title><rect x="51.9243%" y="341" width="0.0481%" height="15" fill="rgb(213,21,6)" fg:x="6476" fg:w="6"/><text x="52.1743%" y="351.50"></text></g><g><title>netif_rx_internal (5 samples, 0.04%)</title><rect x="51.9724%" y="341" width="0.0401%" height="15" fill="rgb(243,151,13)" fg:x="6482" fg:w="5"/><text x="52.2224%" y="351.50"></text></g><g><title>enqueue_to_backlog (4 samples, 0.03%)</title><rect x="51.9804%" y="325" width="0.0321%" height="15" fill="rgb(233,165,41)" fg:x="6483" fg:w="4"/><text x="52.2304%" y="335.50"></text></g><g><title>sk_free (2 samples, 0.02%)</title><rect x="52.0125%" y="341" width="0.0160%" height="15" fill="rgb(246,176,45)" fg:x="6487" fg:w="2"/><text x="52.2625%" y="351.50"></text></g><g><title>dev_hard_start_xmit (23 samples, 0.18%)</title><rect x="51.8682%" y="373" width="0.1844%" height="15" fill="rgb(217,170,52)" fg:x="6469" fg:w="23"/><text x="52.1182%" y="383.50"></text></g><g><title>loopback_xmit (21 samples, 0.17%)</title><rect x="51.8842%" y="357" width="0.1684%" height="15" fill="rgb(214,203,54)" fg:x="6471" fg:w="21"/><text x="52.1342%" y="367.50"></text></g><g><title>tcp_wfree (3 samples, 0.02%)</title><rect x="52.0285%" y="341" width="0.0241%" height="15" fill="rgb(248,215,49)" fg:x="6489" fg:w="3"/><text x="52.2785%" y="351.50"></text></g><g><title>refcount_sub_and_test_checked (2 samples, 0.02%)</title><rect x="52.0366%" y="325" width="0.0160%" height="15" fill="rgb(208,46,10)" fg:x="6490" fg:w="2"/><text x="52.2866%" y="335.50"></text></g><g><title>netdev_pick_tx (3 samples, 0.02%)</title><rect x="52.0526%" y="373" width="0.0241%" height="15" fill="rgb(254,5,31)" fg:x="6492" fg:w="3"/><text x="52.3026%" y="383.50"></text></g><g><title>netif_skb_features (6 samples, 0.05%)</title><rect x="52.1087%" y="357" width="0.0481%" height="15" fill="rgb(222,104,33)" fg:x="6499" fg:w="6"/><text x="52.3587%" y="367.50"></text></g><g><title>validate_xmit_skb (11 samples, 0.09%)</title><rect x="52.0767%" y="373" width="0.0882%" height="15" fill="rgb(248,49,16)" fg:x="6495" fg:w="11"/><text x="52.3267%" y="383.50"></text></g><g><title>__dev_queue_xmit (47 samples, 0.38%)</title><rect x="51.7960%" y="389" width="0.3768%" height="15" fill="rgb(232,198,41)" fg:x="6460" fg:w="47"/><text x="52.0460%" y="399.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="52.3493%" y="309" width="0.0160%" height="15" fill="rgb(214,125,3)" fg:x="6529" fg:w="2"/><text x="52.5993%" y="319.50"></text></g><g><title>__netif_receive_skb (2 samples, 0.02%)</title><rect x="52.3813%" y="293" width="0.0160%" height="15" fill="rgb(229,220,28)" fg:x="6533" fg:w="2"/><text x="52.6313%" y="303.50"></text></g><g><title>__netif_receive_skb_core (5 samples, 0.04%)</title><rect x="52.4214%" y="277" width="0.0401%" height="15" fill="rgb(222,64,37)" fg:x="6538" fg:w="5"/><text x="52.6714%" y="287.50"></text></g><g><title>raw_local_deliver (3 samples, 0.02%)</title><rect x="52.5497%" y="229" width="0.0241%" height="15" fill="rgb(249,184,13)" fg:x="6554" fg:w="3"/><text x="52.7997%" y="239.50"></text></g><g><title>inet_ehashfn (2 samples, 0.02%)</title><rect x="52.7742%" y="197" width="0.0160%" height="15" fill="rgb(252,176,6)" fg:x="6582" fg:w="2"/><text x="53.0242%" y="207.50"></text></g><g><title>__inet_lookup_established (13 samples, 0.10%)</title><rect x="52.7101%" y="213" width="0.1042%" height="15" fill="rgb(228,153,7)" fg:x="6574" fg:w="13"/><text x="52.9601%" y="223.50"></text></g><g><title>refcount_inc_not_zero_checked (3 samples, 0.02%)</title><rect x="52.7903%" y="197" width="0.0241%" height="15" fill="rgb(242,193,5)" fg:x="6584" fg:w="3"/><text x="53.0403%" y="207.50"></text></g><g><title>sk_filter_trim_cap (6 samples, 0.05%)</title><rect x="52.8223%" y="213" width="0.0481%" height="15" fill="rgb(232,140,9)" fg:x="6588" fg:w="6"/><text x="53.0723%" y="223.50"></text></g><g><title>security_sock_rcv_skb (4 samples, 0.03%)</title><rect x="52.8384%" y="197" width="0.0321%" height="15" fill="rgb(213,222,16)" fg:x="6590" fg:w="4"/><text x="53.0884%" y="207.50"></text></g><g><title>apparmor_socket_sock_rcv_skb (2 samples, 0.02%)</title><rect x="52.8544%" y="181" width="0.0160%" height="15" fill="rgb(222,75,50)" fg:x="6592" fg:w="2"/><text x="53.1044%" y="191.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="52.8784%" y="197" width="0.0160%" height="15" fill="rgb(205,180,2)" fg:x="6595" fg:w="2"/><text x="53.1284%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (2 samples, 0.02%)</title><rect x="52.9586%" y="181" width="0.0160%" height="15" fill="rgb(216,34,7)" fg:x="6605" fg:w="2"/><text x="53.2086%" y="191.50"></text></g><g><title>__slab_free (6 samples, 0.05%)</title><rect x="53.1751%" y="149" width="0.0481%" height="15" fill="rgb(253,16,32)" fg:x="6632" fg:w="6"/><text x="53.4251%" y="159.50"></text></g><g><title>kfree (5 samples, 0.04%)</title><rect x="53.2232%" y="149" width="0.0401%" height="15" fill="rgb(208,97,28)" fg:x="6638" fg:w="5"/><text x="53.4732%" y="159.50"></text></g><g><title>__kfree_skb (21 samples, 0.17%)</title><rect x="53.1751%" y="165" width="0.1684%" height="15" fill="rgb(225,92,11)" fg:x="6632" fg:w="21"/><text x="53.4251%" y="175.50"></text></g><g><title>skb_release_data (9 samples, 0.07%)</title><rect x="53.2713%" y="149" width="0.0722%" height="15" fill="rgb(243,38,12)" fg:x="6644" fg:w="9"/><text x="53.5213%" y="159.50"></text></g><g><title>kfree_skbmem (2 samples, 0.02%)</title><rect x="53.3595%" y="165" width="0.0160%" height="15" fill="rgb(208,139,16)" fg:x="6655" fg:w="2"/><text x="53.6095%" y="175.50"></text></g><g><title>kmem_cache_free (6 samples, 0.05%)</title><rect x="53.3756%" y="165" width="0.0481%" height="15" fill="rgb(227,24,9)" fg:x="6657" fg:w="6"/><text x="53.6256%" y="175.50"></text></g><g><title>rb_first (4 samples, 0.03%)</title><rect x="53.4317%" y="165" width="0.0321%" height="15" fill="rgb(206,62,11)" fg:x="6664" fg:w="4"/><text x="53.6817%" y="175.50"></text></g><g><title>tcp_ack_update_rtt.isra.49 (6 samples, 0.05%)</title><rect x="53.4718%" y="165" width="0.0481%" height="15" fill="rgb(228,134,27)" fg:x="6669" fg:w="6"/><text x="53.7218%" y="175.50"></text></g><g><title>tcp_newly_delivered (2 samples, 0.02%)</title><rect x="53.5199%" y="165" width="0.0160%" height="15" fill="rgb(205,55,33)" fg:x="6675" fg:w="2"/><text x="53.7699%" y="175.50"></text></g><g><title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="53.5439%" y="165" width="0.0160%" height="15" fill="rgb(243,75,43)" fg:x="6678" fg:w="2"/><text x="53.7939%" y="175.50"></text></g><g><title>tcp_ack (73 samples, 0.59%)</title><rect x="52.9907%" y="181" width="0.5853%" height="15" fill="rgb(223,27,42)" fg:x="6609" fg:w="73"/><text x="53.2407%" y="191.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="53.5600%" y="165" width="0.0160%" height="15" fill="rgb(232,189,33)" fg:x="6680" fg:w="2"/><text x="53.8100%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.02%)</title><rect x="53.8486%" y="69" width="0.0241%" height="15" fill="rgb(210,9,39)" fg:x="6716" fg:w="3"/><text x="54.0986%" y="79.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.10%)</title><rect x="53.8967%" y="69" width="0.1042%" height="15" fill="rgb(242,85,26)" fg:x="6722" fg:w="13"/><text x="54.1467%" y="79.50"></text></g><g><title>update_cfs_rq_h_load (4 samples, 0.03%)</title><rect x="53.9689%" y="53" width="0.0321%" height="15" fill="rgb(248,44,4)" fg:x="6731" fg:w="4"/><text x="54.2189%" y="63.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.04%)</title><rect x="54.0010%" y="69" width="0.0401%" height="15" fill="rgb(250,96,46)" fg:x="6735" fg:w="5"/><text x="54.2510%" y="79.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.04%)</title><rect x="54.0010%" y="53" width="0.0401%" height="15" fill="rgb(229,116,26)" fg:x="6735" fg:w="5"/><text x="54.2510%" y="63.50"></text></g><g><title>enqueue_entity (5 samples, 0.04%)</title><rect x="54.0010%" y="37" width="0.0401%" height="15" fill="rgb(246,94,34)" fg:x="6735" fg:w="5"/><text x="54.2510%" y="47.50"></text></g><g><title>__wake_up_common (42 samples, 0.34%)</title><rect x="53.7123%" y="101" width="0.3368%" height="15" fill="rgb(251,73,21)" fg:x="6699" fg:w="42"/><text x="53.9623%" y="111.50"></text></g><g><title>try_to_wake_up (37 samples, 0.30%)</title><rect x="53.7524%" y="85" width="0.2967%" height="15" fill="rgb(254,121,25)" fg:x="6704" fg:w="37"/><text x="54.0024%" y="95.50"></text></g><g><title>sock_def_readable (56 samples, 0.45%)</title><rect x="53.6482%" y="165" width="0.4490%" height="15" fill="rgb(215,161,49)" fg:x="6691" fg:w="56"/><text x="53.8982%" y="175.50"></text></g><g><title>__wake_up_common_lock (52 samples, 0.42%)</title><rect x="53.6802%" y="149" width="0.4169%" height="15" fill="rgb(221,43,13)" fg:x="6695" fg:w="52"/><text x="53.9302%" y="159.50"></text></g><g><title>__wake_up_common (52 samples, 0.42%)</title><rect x="53.6802%" y="133" width="0.4169%" height="15" fill="rgb(249,5,37)" fg:x="6695" fg:w="52"/><text x="53.9302%" y="143.50"></text></g><g><title>ep_poll_callback (49 samples, 0.39%)</title><rect x="53.7043%" y="117" width="0.3929%" height="15" fill="rgb(226,25,44)" fg:x="6698" fg:w="49"/><text x="53.9543%" y="127.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.05%)</title><rect x="54.0491%" y="101" width="0.0481%" height="15" fill="rgb(238,189,16)" fg:x="6741" fg:w="6"/><text x="54.2991%" y="111.50"></text></g><g><title>tcp_event_data_recv (3 samples, 0.02%)</title><rect x="54.0972%" y="165" width="0.0241%" height="15" fill="rgb(251,186,8)" fg:x="6747" fg:w="3"/><text x="54.3472%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (159 samples, 1.27%)</title><rect x="52.8704%" y="213" width="1.2749%" height="15" fill="rgb(254,34,31)" fg:x="6594" fg:w="159"/><text x="53.1204%" y="223.50"></text></g><g><title>tcp_rcv_established (156 samples, 1.25%)</title><rect x="52.8945%" y="197" width="1.2508%" height="15" fill="rgb(225,215,27)" fg:x="6597" fg:w="156"/><text x="53.1445%" y="207.50"></text></g><g><title>tcp_data_queue (70 samples, 0.56%)</title><rect x="53.5840%" y="181" width="0.5613%" height="15" fill="rgb(221,192,48)" fg:x="6683" fg:w="70"/><text x="53.8340%" y="191.50"></text></g><g><title>tcp_queue_rcv (3 samples, 0.02%)</title><rect x="54.1212%" y="165" width="0.0241%" height="15" fill="rgb(219,137,20)" fg:x="6750" fg:w="3"/><text x="54.3712%" y="175.50"></text></g><g><title>tcp_v4_fill_cb (3 samples, 0.02%)</title><rect x="54.1453%" y="213" width="0.0241%" height="15" fill="rgb(219,84,11)" fg:x="6753" fg:w="3"/><text x="54.3953%" y="223.50"></text></g><g><title>ip_local_deliver_finish (208 samples, 1.67%)</title><rect x="52.5096%" y="245" width="1.6677%" height="15" fill="rgb(224,10,23)" fg:x="6549" fg:w="208"/><text x="52.7596%" y="255.50"></text></g><g><title>tcp_v4_rcv (200 samples, 1.60%)</title><rect x="52.5738%" y="229" width="1.6036%" height="15" fill="rgb(248,22,39)" fg:x="6557" fg:w="200"/><text x="52.8238%" y="239.50"></text></g><g><title>ip_local_deliver (221 samples, 1.77%)</title><rect x="52.4936%" y="261" width="1.7720%" height="15" fill="rgb(212,154,20)" fg:x="6547" fg:w="221"/><text x="52.7436%" y="271.50">i..</text></g><g><title>nf_hook_slow (11 samples, 0.09%)</title><rect x="54.1774%" y="245" width="0.0882%" height="15" fill="rgb(236,199,50)" fg:x="6757" fg:w="11"/><text x="54.4274%" y="255.50"></text></g><g><title>nft_do_chain_ipv4 (6 samples, 0.05%)</title><rect x="54.2174%" y="229" width="0.0481%" height="15" fill="rgb(211,9,17)" fg:x="6762" fg:w="6"/><text x="54.4674%" y="239.50"></text></g><g><title>nft_do_chain (3 samples, 0.02%)</title><rect x="54.2415%" y="213" width="0.0241%" height="15" fill="rgb(243,216,36)" fg:x="6765" fg:w="3"/><text x="54.4915%" y="223.50"></text></g><g><title>ip_rcv_core.isra.19 (6 samples, 0.05%)</title><rect x="54.2656%" y="261" width="0.0481%" height="15" fill="rgb(250,2,10)" fg:x="6768" fg:w="6"/><text x="54.5156%" y="271.50"></text></g><g><title>ip_rcv_finish (3 samples, 0.02%)</title><rect x="54.3137%" y="261" width="0.0241%" height="15" fill="rgb(226,50,48)" fg:x="6774" fg:w="3"/><text x="54.5637%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (250 samples, 2.00%)</title><rect x="52.3974%" y="293" width="2.0045%" height="15" fill="rgb(243,81,16)" fg:x="6535" fg:w="250"/><text x="52.6474%" y="303.50">_..</text></g><g><title>ip_rcv (242 samples, 1.94%)</title><rect x="52.4615%" y="277" width="1.9403%" height="15" fill="rgb(250,14,2)" fg:x="6543" fg:w="242"/><text x="52.7115%" y="287.50">i..</text></g><g><title>nf_hook_slow (8 samples, 0.06%)</title><rect x="54.3377%" y="261" width="0.0641%" height="15" fill="rgb(233,135,29)" fg:x="6777" fg:w="8"/><text x="54.5877%" y="271.50"></text></g><g><title>nf_nat_ipv4_in (4 samples, 0.03%)</title><rect x="54.3698%" y="245" width="0.0321%" height="15" fill="rgb(224,64,43)" fg:x="6781" fg:w="4"/><text x="54.6198%" y="255.50"></text></g><g><title>nf_nat_ipv4_fn (2 samples, 0.02%)</title><rect x="54.3858%" y="229" width="0.0160%" height="15" fill="rgb(238,84,13)" fg:x="6783" fg:w="2"/><text x="54.6358%" y="239.50"></text></g><g><title>net_rx_action (263 samples, 2.11%)</title><rect x="52.3012%" y="325" width="2.1087%" height="15" fill="rgb(253,48,26)" fg:x="6523" fg:w="263"/><text x="52.5512%" y="335.50">n..</text></g><g><title>process_backlog (255 samples, 2.04%)</title><rect x="52.3653%" y="309" width="2.0446%" height="15" fill="rgb(205,223,31)" fg:x="6531" fg:w="255"/><text x="52.6153%" y="319.50">p..</text></g><g><title>__local_bh_enable_ip (282 samples, 2.26%)</title><rect x="52.1729%" y="389" width="2.2611%" height="15" fill="rgb(221,41,32)" fg:x="6507" fg:w="282"/><text x="52.4229%" y="399.50">_..</text></g><g><title>do_softirq.part.19 (282 samples, 2.26%)</title><rect x="52.1729%" y="373" width="2.2611%" height="15" fill="rgb(213,158,31)" fg:x="6507" fg:w="282"/><text x="52.4229%" y="383.50">d..</text></g><g><title>do_softirq_own_stack (278 samples, 2.23%)</title><rect x="52.2049%" y="357" width="2.2290%" height="15" fill="rgb(245,126,43)" fg:x="6511" fg:w="278"/><text x="52.4549%" y="367.50">d..</text></g><g><title>__softirqentry_text_start (276 samples, 2.21%)</title><rect x="52.2210%" y="341" width="2.2130%" height="15" fill="rgb(227,7,22)" fg:x="6513" fg:w="276"/><text x="52.4710%" y="351.50">_..</text></g><g><title>rcu_bh_qs (3 samples, 0.02%)</title><rect x="54.4099%" y="325" width="0.0241%" height="15" fill="rgb(252,90,44)" fg:x="6786" fg:w="3"/><text x="54.6599%" y="335.50"></text></g><g><title>ip_finish_output2 (339 samples, 2.72%)</title><rect x="51.7319%" y="405" width="2.7181%" height="15" fill="rgb(253,91,0)" fg:x="6452" fg:w="339"/><text x="51.9819%" y="415.50">ip..</text></g><g><title>dev_queue_xmit (2 samples, 0.02%)</title><rect x="54.4339%" y="389" width="0.0160%" height="15" fill="rgb(252,175,49)" fg:x="6789" fg:w="2"/><text x="54.6839%" y="399.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="54.4500%" y="389" width="0.0160%" height="15" fill="rgb(246,150,1)" fg:x="6791" fg:w="2"/><text x="54.7000%" y="399.50"></text></g><g><title>ip_finish_output (3 samples, 0.02%)</title><rect x="54.4500%" y="405" width="0.0241%" height="15" fill="rgb(241,192,25)" fg:x="6791" fg:w="3"/><text x="54.7000%" y="415.50"></text></g><g><title>ipv4_confirm (4 samples, 0.03%)</title><rect x="54.4820%" y="389" width="0.0321%" height="15" fill="rgb(239,187,11)" fg:x="6795" fg:w="4"/><text x="54.7320%" y="399.50"></text></g><g><title>nf_ct_deliver_cached_events (2 samples, 0.02%)</title><rect x="54.4981%" y="373" width="0.0160%" height="15" fill="rgb(218,202,51)" fg:x="6797" fg:w="2"/><text x="54.7481%" y="383.50"></text></g><g><title>__ip_queue_xmit (446 samples, 3.58%)</title><rect x="50.9461%" y="437" width="3.5760%" height="15" fill="rgb(225,176,8)" fg:x="6354" fg:w="446"/><text x="51.1961%" y="447.50">__ip..</text></g><g><title>ip_output (358 samples, 2.87%)</title><rect x="51.6517%" y="421" width="2.8704%" height="15" fill="rgb(219,122,41)" fg:x="6442" fg:w="358"/><text x="51.9017%" y="431.50">ip..</text></g><g><title>nf_hook_slow (6 samples, 0.05%)</title><rect x="54.4740%" y="405" width="0.0481%" height="15" fill="rgb(248,140,20)" fg:x="6794" fg:w="6"/><text x="54.7240%" y="415.50"></text></g><g><title>__skb_clone (7 samples, 0.06%)</title><rect x="54.5221%" y="437" width="0.0561%" height="15" fill="rgb(245,41,37)" fg:x="6800" fg:w="7"/><text x="54.7721%" y="447.50"></text></g><g><title>__copy_skb_header (5 samples, 0.04%)</title><rect x="54.5382%" y="421" width="0.0401%" height="15" fill="rgb(235,82,39)" fg:x="6802" fg:w="5"/><text x="54.7882%" y="431.50"></text></g><g><title>tcp_established_options (2 samples, 0.02%)</title><rect x="54.6183%" y="437" width="0.0160%" height="15" fill="rgb(230,108,42)" fg:x="6812" fg:w="2"/><text x="54.8683%" y="447.50"></text></g><g><title>__tcp_transmit_skb (476 samples, 3.82%)</title><rect x="50.8258%" y="453" width="3.8165%" height="15" fill="rgb(215,150,50)" fg:x="6339" fg:w="476"/><text x="51.0758%" y="463.50">__tc..</text></g><g><title>sched_clock_cpu (3 samples, 0.02%)</title><rect x="54.6424%" y="453" width="0.0241%" height="15" fill="rgb(233,212,5)" fg:x="6815" fg:w="3"/><text x="54.8924%" y="463.50"></text></g><g><title>sched_clock (2 samples, 0.02%)</title><rect x="54.6504%" y="437" width="0.0160%" height="15" fill="rgb(245,80,22)" fg:x="6816" fg:w="2"/><text x="54.9004%" y="447.50"></text></g><g><title>native_sched_clock (2 samples, 0.02%)</title><rect x="54.6504%" y="421" width="0.0160%" height="15" fill="rgb(238,129,16)" fg:x="6816" fg:w="2"/><text x="54.9004%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (8 samples, 0.06%)</title><rect x="54.6665%" y="453" width="0.0641%" height="15" fill="rgb(240,19,0)" fg:x="6818" fg:w="8"/><text x="54.9165%" y="463.50"></text></g><g><title>sk_reset_timer (2 samples, 0.02%)</title><rect x="54.7146%" y="437" width="0.0160%" height="15" fill="rgb(232,42,35)" fg:x="6824" fg:w="2"/><text x="54.9646%" y="447.50"></text></g><g><title>mod_timer (2 samples, 0.02%)</title><rect x="54.7146%" y="421" width="0.0160%" height="15" fill="rgb(223,130,24)" fg:x="6824" fg:w="2"/><text x="54.9646%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (514 samples, 4.12%)</title><rect x="50.6414%" y="485" width="4.1212%" height="15" fill="rgb(237,16,22)" fg:x="6316" fg:w="514"/><text x="50.8914%" y="495.50">__tc..</text></g><g><title>tcp_write_xmit (514 samples, 4.12%)</title><rect x="50.6414%" y="469" width="4.1212%" height="15" fill="rgb(248,192,20)" fg:x="6316" fg:w="514"/><text x="50.8914%" y="479.50">tcp_..</text></g><g><title>tcp_schedule_loss_probe (4 samples, 0.03%)</title><rect x="54.7306%" y="453" width="0.0321%" height="15" fill="rgb(233,167,2)" fg:x="6826" fg:w="4"/><text x="54.9806%" y="463.50"></text></g><g><title>_copy_from_iter_full (9 samples, 0.07%)</title><rect x="54.7627%" y="485" width="0.0722%" height="15" fill="rgb(252,71,44)" fg:x="6830" fg:w="9"/><text x="55.0127%" y="495.50"></text></g><g><title>copyin (9 samples, 0.07%)</title><rect x="54.7627%" y="469" width="0.0722%" height="15" fill="rgb(238,37,47)" fg:x="6830" fg:w="9"/><text x="55.0127%" y="479.50"></text></g><g><title>copy_user_generic_string (8 samples, 0.06%)</title><rect x="54.7707%" y="453" width="0.0641%" height="15" fill="rgb(214,202,54)" fg:x="6831" fg:w="8"/><text x="55.0207%" y="463.50"></text></g><g><title>__kmalloc_reserve.isra.49 (12 samples, 0.10%)</title><rect x="54.9070%" y="453" width="0.0962%" height="15" fill="rgb(254,165,40)" fg:x="6848" fg:w="12"/><text x="55.1570%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (11 samples, 0.09%)</title><rect x="54.9150%" y="437" width="0.0882%" height="15" fill="rgb(246,173,38)" fg:x="6849" fg:w="11"/><text x="55.1650%" y="447.50"></text></g><g><title>kmalloc_slab (4 samples, 0.03%)</title><rect x="54.9711%" y="421" width="0.0321%" height="15" fill="rgb(215,3,27)" fg:x="6856" fg:w="4"/><text x="55.2211%" y="431.50"></text></g><g><title>kmem_cache_alloc_node (11 samples, 0.09%)</title><rect x="55.0032%" y="453" width="0.0882%" height="15" fill="rgb(239,169,51)" fg:x="6860" fg:w="11"/><text x="55.2532%" y="463.50"></text></g><g><title>__alloc_skb (35 samples, 0.28%)</title><rect x="54.8669%" y="469" width="0.2806%" height="15" fill="rgb(212,5,25)" fg:x="6843" fg:w="35"/><text x="55.1169%" y="479.50"></text></g><g><title>ksize (7 samples, 0.06%)</title><rect x="55.0914%" y="453" width="0.0561%" height="15" fill="rgb(243,45,17)" fg:x="6871" fg:w="7"/><text x="55.3414%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (39 samples, 0.31%)</title><rect x="54.8428%" y="485" width="0.3127%" height="15" fill="rgb(242,97,9)" fg:x="6840" fg:w="39"/><text x="55.0928%" y="495.50"></text></g><g><title>tcp_push (2 samples, 0.02%)</title><rect x="55.1796%" y="485" width="0.0160%" height="15" fill="rgb(228,71,31)" fg:x="6882" fg:w="2"/><text x="55.4296%" y="495.50"></text></g><g><title>tcp_rate_check_app_limited (6 samples, 0.05%)</title><rect x="55.1956%" y="485" width="0.0481%" height="15" fill="rgb(252,184,16)" fg:x="6884" fg:w="6"/><text x="55.4456%" y="495.50"></text></g><g><title>ipv4_mtu (6 samples, 0.05%)</title><rect x="55.2919%" y="453" width="0.0481%" height="15" fill="rgb(236,169,46)" fg:x="6896" fg:w="6"/><text x="55.5419%" y="463.50"></text></g><g><title>tcp_send_mss (14 samples, 0.11%)</title><rect x="55.2437%" y="485" width="0.1123%" height="15" fill="rgb(207,17,47)" fg:x="6890" fg:w="14"/><text x="55.4937%" y="495.50"></text></g><g><title>tcp_current_mss (12 samples, 0.10%)</title><rect x="55.2598%" y="469" width="0.0962%" height="15" fill="rgb(206,201,28)" fg:x="6892" fg:w="12"/><text x="55.5098%" y="479.50"></text></g><g><title>tcp_established_options (2 samples, 0.02%)</title><rect x="55.3400%" y="453" width="0.0160%" height="15" fill="rgb(224,184,23)" fg:x="6902" fg:w="2"/><text x="55.5900%" y="463.50"></text></g><g><title>tcp_stream_memory_free (4 samples, 0.03%)</title><rect x="55.3560%" y="485" width="0.0321%" height="15" fill="rgb(208,139,48)" fg:x="6904" fg:w="4"/><text x="55.6060%" y="495.50"></text></g><g><title>do_iter_readv_writev (685 samples, 5.49%)</title><rect x="49.9038%" y="565" width="5.4923%" height="15" fill="rgb(208,130,10)" fg:x="6224" fg:w="685"/><text x="50.1538%" y="575.50">do_iter..</text></g><g><title>sock_write_iter (678 samples, 5.44%)</title><rect x="49.9599%" y="549" width="5.4362%" height="15" fill="rgb(211,213,45)" fg:x="6231" fg:w="678"/><text x="50.2099%" y="559.50">sock_wr..</text></g><g><title>sock_sendmsg (676 samples, 5.42%)</title><rect x="49.9759%" y="533" width="5.4201%" height="15" fill="rgb(235,100,30)" fg:x="6233" fg:w="676"/><text x="50.2259%" y="543.50">sock_se..</text></g><g><title>tcp_sendmsg (665 samples, 5.33%)</title><rect x="50.0641%" y="517" width="5.3319%" height="15" fill="rgb(206,144,31)" fg:x="6244" fg:w="665"/><text x="50.3141%" y="527.50">tcp_sen..</text></g><g><title>tcp_sendmsg_locked (607 samples, 4.87%)</title><rect x="50.5292%" y="501" width="4.8669%" height="15" fill="rgb(224,200,26)" fg:x="6302" fg:w="607"/><text x="50.7792%" y="511.50">tcp_se..</text></g><g><title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="55.4121%" y="549" width="0.0160%" height="15" fill="rgb(247,104,53)" fg:x="6911" fg:w="2"/><text x="55.6621%" y="559.50"></text></g><g><title>do_iter_write (703 samples, 5.64%)</title><rect x="49.8236%" y="581" width="5.6366%" height="15" fill="rgb(220,14,17)" fg:x="6214" fg:w="703"/><text x="50.0736%" y="591.50">do_iter..</text></g><g><title>security_file_permission (7 samples, 0.06%)</title><rect x="55.4041%" y="565" width="0.0561%" height="15" fill="rgb(230,140,40)" fg:x="6910" fg:w="7"/><text x="55.6541%" y="575.50"></text></g><g><title>common_file_perm (4 samples, 0.03%)</title><rect x="55.4282%" y="549" width="0.0321%" height="15" fill="rgb(229,2,41)" fg:x="6913" fg:w="4"/><text x="55.6782%" y="559.50"></text></g><g><title>import_iovec (6 samples, 0.05%)</title><rect x="55.4602%" y="581" width="0.0481%" height="15" fill="rgb(232,89,16)" fg:x="6917" fg:w="6"/><text x="55.7102%" y="591.50"></text></g><g><title>rw_copy_check_uvector (4 samples, 0.03%)</title><rect x="55.4763%" y="565" width="0.0321%" height="15" fill="rgb(247,59,52)" fg:x="6919" fg:w="4"/><text x="55.7263%" y="575.50"></text></g><g><title>_copy_from_user (3 samples, 0.02%)</title><rect x="55.4843%" y="549" width="0.0241%" height="15" fill="rgb(226,110,21)" fg:x="6920" fg:w="3"/><text x="55.7343%" y="559.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.02%)</title><rect x="55.4843%" y="533" width="0.0241%" height="15" fill="rgb(224,176,43)" fg:x="6920" fg:w="3"/><text x="55.7343%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (740 samples, 5.93%)</title><rect x="49.5831%" y="645" width="5.9333%" height="15" fill="rgb(221,73,6)" fg:x="6184" fg:w="740"/><text x="49.8331%" y="655.50">entry_SY..</text></g><g><title>do_syscall_64 (739 samples, 5.93%)</title><rect x="49.5911%" y="629" width="5.9253%" height="15" fill="rgb(232,78,19)" fg:x="6185" fg:w="739"/><text x="49.8411%" y="639.50">do_sysca..</text></g><g><title>do_writev (738 samples, 5.92%)</title><rect x="49.5991%" y="613" width="5.9173%" height="15" fill="rgb(233,112,48)" fg:x="6186" fg:w="738"/><text x="49.8491%" y="623.50">do_writev</text></g><g><title>vfs_writev (712 samples, 5.71%)</title><rect x="49.8076%" y="597" width="5.7088%" height="15" fill="rgb(243,131,47)" fg:x="6212" fg:w="712"/><text x="50.0576%" y="607.50">vfs_wri..</text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (797 samples, 6.39%)</title><rect x="49.1501%" y="917" width="6.3903%" height="15" fill="rgb(226,51,1)" fg:x="6130" fg:w="797"/><text x="49.4001%" y="927.50">&lt;tokio_u..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (797 samples, 6.39%)</title><rect x="49.1501%" y="901" width="6.3903%" height="15" fill="rgb(247,58,7)" fg:x="6130" fg:w="797"/><text x="49.4001%" y="911.50">&lt;tokio_u..</text></g><g><title>tokio_util::util::poll_write_buf (792 samples, 6.35%)</title><rect x="49.1902%" y="885" width="6.3502%" height="15" fill="rgb(209,7,32)" fg:x="6135" fg:w="792"/><text x="49.4402%" y="895.50">tokio_ut..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (773 samples, 6.20%)</title><rect x="49.3425%" y="869" width="6.1979%" height="15" fill="rgb(209,39,41)" fg:x="6154" fg:w="773"/><text x="49.5925%" y="879.50">&lt;tokio::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (769 samples, 6.17%)</title><rect x="49.3746%" y="853" width="6.1658%" height="15" fill="rgb(226,182,46)" fg:x="6158" fg:w="769"/><text x="49.6246%" y="863.50">tokio::n..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (769 samples, 6.17%)</title><rect x="49.3746%" y="837" width="6.1658%" height="15" fill="rgb(230,219,10)" fg:x="6158" fg:w="769"/><text x="49.6246%" y="847.50">tokio::i..</text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (769 samples, 6.17%)</title><rect x="49.3746%" y="821" width="6.1658%" height="15" fill="rgb(227,175,30)" fg:x="6158" fg:w="769"/><text x="49.6246%" y="831.50">tokio::i..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (767 samples, 6.15%)</title><rect x="49.3906%" y="805" width="6.1498%" height="15" fill="rgb(217,2,50)" fg:x="6160" fg:w="767"/><text x="49.6406%" y="815.50">tokio::i..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (755 samples, 6.05%)</title><rect x="49.4869%" y="789" width="6.0536%" height="15" fill="rgb(229,160,0)" fg:x="6172" fg:w="755"/><text x="49.7369%" y="799.50">tokio::i..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (755 samples, 6.05%)</title><rect x="49.4869%" y="773" width="6.0536%" height="15" fill="rgb(207,78,37)" fg:x="6172" fg:w="755"/><text x="49.7369%" y="783.50">&lt;&amp;mio::n..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (754 samples, 6.05%)</title><rect x="49.4949%" y="757" width="6.0455%" height="15" fill="rgb(225,57,0)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="767.50">mio::io_..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (754 samples, 6.05%)</title><rect x="49.4949%" y="741" width="6.0455%" height="15" fill="rgb(232,154,2)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="751.50">mio::sys..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (754 samples, 6.05%)</title><rect x="49.4949%" y="725" width="6.0455%" height="15" fill="rgb(241,212,25)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="735.50">&lt;&amp;mio::n..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (754 samples, 6.05%)</title><rect x="49.4949%" y="709" width="6.0455%" height="15" fill="rgb(226,69,20)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="719.50">&lt;&amp;std::f..</text></g><g><title>std::sys::unix::fs::File::write_vectored (754 samples, 6.05%)</title><rect x="49.4949%" y="693" width="6.0455%" height="15" fill="rgb(247,184,54)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="703.50">std::sys..</text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (754 samples, 6.05%)</title><rect x="49.4949%" y="677" width="6.0455%" height="15" fill="rgb(210,145,0)" fg:x="6173" fg:w="754"/><text x="49.7449%" y="687.50">std::sys..</text></g><g><title>writev (751 samples, 6.02%)</title><rect x="49.5189%" y="661" width="6.0215%" height="15" fill="rgb(253,82,12)" fg:x="6176" fg:w="751"/><text x="49.7689%" y="671.50">writev</text></g><g><title>syscall_return_via_sysret (3 samples, 0.02%)</title><rect x="55.5164%" y="645" width="0.0241%" height="15" fill="rgb(245,42,11)" fg:x="6924" fg:w="3"/><text x="55.7664%" y="655.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="55.5404%" y="917" width="0.0241%" height="15" fill="rgb(219,147,32)" fg:x="6927" fg:w="3"/><text x="55.7904%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;tokio_util::codec::framed::Framed&lt;tokio::net::tcp::stream::TcpStream,fred::protocol::codec::RedisCodec&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="55.5645%" y="917" width="0.0321%" height="15" fill="rgb(246,12,7)" fg:x="6930" fg:w="4"/><text x="55.8145%" y="927.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="55.5645%" y="901" width="0.0321%" height="15" fill="rgb(243,50,9)" fg:x="6930" fg:w="4"/><text x="55.8145%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (4 samples, 0.03%)</title><rect x="55.5645%" y="885" width="0.0321%" height="15" fill="rgb(219,149,6)" fg:x="6930" fg:w="4"/><text x="55.8145%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.02%)</title><rect x="55.5725%" y="869" width="0.0241%" height="15" fill="rgb(241,51,42)" fg:x="6931" fg:w="3"/><text x="55.8225%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.02%)</title><rect x="55.5725%" y="853" width="0.0241%" height="15" fill="rgb(226,128,27)" fg:x="6931" fg:w="3"/><text x="55.8225%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (2 samples, 0.02%)</title><rect x="55.5805%" y="837" width="0.0160%" height="15" fill="rgb(244,144,4)" fg:x="6932" fg:w="2"/><text x="55.8305%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.02%)</title><rect x="55.5805%" y="821" width="0.0160%" height="15" fill="rgb(221,4,13)" fg:x="6932" fg:w="2"/><text x="55.8305%" y="831.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (2 samples, 0.02%)</title><rect x="55.5965%" y="917" width="0.0160%" height="15" fill="rgb(208,170,28)" fg:x="6934" fg:w="2"/><text x="55.8465%" y="927.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="55.6446%" y="837" width="0.0321%" height="15" fill="rgb(226,131,13)" fg:x="6940" fg:w="4"/><text x="55.8946%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::SizeStats&gt;&gt; (4 samples, 0.03%)</title><rect x="55.6767%" y="837" width="0.0321%" height="15" fill="rgb(215,72,41)" fg:x="6944" fg:w="4"/><text x="55.9267%" y="847.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="55.6767%" y="821" width="0.0321%" height="15" fill="rgb(243,108,20)" fg:x="6944" fg:w="4"/><text x="55.9267%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (4 samples, 0.03%)</title><rect x="55.6767%" y="805" width="0.0321%" height="15" fill="rgb(230,189,17)" fg:x="6944" fg:w="4"/><text x="55.9267%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (6 samples, 0.05%)</title><rect x="55.7088%" y="837" width="0.0481%" height="15" fill="rgb(220,50,17)" fg:x="6948" fg:w="6"/><text x="55.9588%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;redis_protocol::types::Frame&gt;&gt; (6 samples, 0.05%)</title><rect x="55.7088%" y="821" width="0.0481%" height="15" fill="rgb(248,152,48)" fg:x="6948" fg:w="6"/><text x="55.9588%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="55.7088%" y="805" width="0.0481%" height="15" fill="rgb(244,91,11)" fg:x="6948" fg:w="6"/><text x="55.9588%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[redis_protocol::types::Frame]&gt; (6 samples, 0.05%)</title><rect x="55.7088%" y="789" width="0.0481%" height="15" fill="rgb(220,157,5)" fg:x="6948" fg:w="6"/><text x="55.9588%" y="799.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="55.7168%" y="773" width="0.0401%" height="15" fill="rgb(253,137,8)" fg:x="6949" fg:w="5"/><text x="55.9668%" y="783.50"></text></g><g><title>fred::metrics::SizeStats::sample (2 samples, 0.02%)</title><rect x="55.7569%" y="837" width="0.0160%" height="15" fill="rgb(217,137,51)" fg:x="6954" fg:w="2"/><text x="56.0069%" y="847.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3 samples, 0.02%)</title><rect x="55.7729%" y="837" width="0.0241%" height="15" fill="rgb(218,209,53)" fg:x="6956" fg:w="3"/><text x="56.0229%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3 samples, 0.02%)</title><rect x="55.7729%" y="821" width="0.0241%" height="15" fill="rgb(249,137,25)" fg:x="6956" fg:w="3"/><text x="56.0229%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="55.9333%" y="549" width="0.0160%" height="15" fill="rgb(239,155,26)" fg:x="6976" fg:w="2"/><text x="56.1833%" y="559.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="55.9573%" y="533" width="0.0321%" height="15" fill="rgb(227,85,46)" fg:x="6979" fg:w="4"/><text x="56.2073%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.05%)</title><rect x="55.9493%" y="549" width="0.0481%" height="15" fill="rgb(251,107,43)" fg:x="6978" fg:w="6"/><text x="56.1993%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.07%)</title><rect x="55.9333%" y="613" width="0.0722%" height="15" fill="rgb(234,170,33)" fg:x="6976" fg:w="9"/><text x="56.1833%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.07%)</title><rect x="55.9333%" y="597" width="0.0722%" height="15" fill="rgb(206,29,35)" fg:x="6976" fg:w="9"/><text x="56.1833%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (9 samples, 0.07%)</title><rect x="55.9333%" y="581" width="0.0722%" height="15" fill="rgb(227,138,25)" fg:x="6976" fg:w="9"/><text x="56.1833%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.07%)</title><rect x="55.9333%" y="565" width="0.0722%" height="15" fill="rgb(249,131,35)" fg:x="6976" fg:w="9"/><text x="56.1833%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.08%)</title><rect x="55.9333%" y="709" width="0.0802%" height="15" fill="rgb(239,6,40)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.08%)</title><rect x="55.9333%" y="693" width="0.0802%" height="15" fill="rgb(246,136,47)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="703.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.08%)</title><rect x="55.9333%" y="677" width="0.0802%" height="15" fill="rgb(253,58,26)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.08%)</title><rect x="55.9333%" y="661" width="0.0802%" height="15" fill="rgb(237,141,10)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.08%)</title><rect x="55.9333%" y="645" width="0.0802%" height="15" fill="rgb(234,156,12)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.08%)</title><rect x="55.9333%" y="629" width="0.0802%" height="15" fill="rgb(243,224,36)" fg:x="6976" fg:w="10"/><text x="56.1833%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (28 samples, 0.22%)</title><rect x="55.8371%" y="773" width="0.2245%" height="15" fill="rgb(205,229,51)" fg:x="6964" fg:w="28"/><text x="56.0871%" y="783.50"></text></g><g><title>core::fmt::write (27 samples, 0.22%)</title><rect x="55.8451%" y="757" width="0.2165%" height="15" fill="rgb(223,189,4)" fg:x="6965" fg:w="27"/><text x="56.0951%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (18 samples, 0.14%)</title><rect x="55.9173%" y="741" width="0.1443%" height="15" fill="rgb(249,167,54)" fg:x="6974" fg:w="18"/><text x="56.1673%" y="751.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (17 samples, 0.14%)</title><rect x="55.9253%" y="725" width="0.1363%" height="15" fill="rgb(218,34,28)" fg:x="6975" fg:w="17"/><text x="56.1753%" y="735.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6 samples, 0.05%)</title><rect x="56.0135%" y="709" width="0.0481%" height="15" fill="rgb(232,109,42)" fg:x="6986" fg:w="6"/><text x="56.2635%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.02%)</title><rect x="56.0455%" y="693" width="0.0160%" height="15" fill="rgb(248,214,46)" fg:x="6990" fg:w="2"/><text x="56.2955%" y="703.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (30 samples, 0.24%)</title><rect x="55.8291%" y="789" width="0.2405%" height="15" fill="rgb(244,216,40)" fg:x="6963" fg:w="30"/><text x="56.0791%" y="799.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="56.0696%" y="693" width="0.0241%" height="15" fill="rgb(231,226,31)" fg:x="6993" fg:w="3"/><text x="56.3196%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.05%)</title><rect x="56.0696%" y="789" width="0.0481%" height="15" fill="rgb(238,38,43)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.05%)</title><rect x="56.0696%" y="773" width="0.0481%" height="15" fill="rgb(208,88,43)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.05%)</title><rect x="56.0696%" y="757" width="0.0481%" height="15" fill="rgb(205,136,37)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="56.0696%" y="741" width="0.0481%" height="15" fill="rgb(237,34,14)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.05%)</title><rect x="56.0696%" y="725" width="0.0481%" height="15" fill="rgb(236,193,44)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.05%)</title><rect x="56.0696%" y="709" width="0.0481%" height="15" fill="rgb(231,48,10)" fg:x="6993" fg:w="6"/><text x="56.3196%" y="719.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="56.1017%" y="693" width="0.0160%" height="15" fill="rgb(213,141,34)" fg:x="6997" fg:w="2"/><text x="56.3517%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="56.2620%" y="725" width="0.0321%" height="15" fill="rgb(249,130,34)" fg:x="7017" fg:w="4"/><text x="56.5120%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="56.2700%" y="709" width="0.0241%" height="15" fill="rgb(219,42,41)" fg:x="7018" fg:w="3"/><text x="56.5200%" y="719.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="56.2700%" y="693" width="0.0241%" height="15" fill="rgb(224,100,54)" fg:x="7018" fg:w="3"/><text x="56.5200%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="56.2700%" y="677" width="0.0241%" height="15" fill="rgb(229,200,27)" fg:x="7018" fg:w="3"/><text x="56.5200%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="56.2700%" y="661" width="0.0241%" height="15" fill="rgb(217,118,10)" fg:x="7018" fg:w="3"/><text x="56.5200%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="56.2700%" y="645" width="0.0241%" height="15" fill="rgb(206,22,3)" fg:x="7018" fg:w="3"/><text x="56.5200%" y="655.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (2 samples, 0.02%)</title><rect x="56.2941%" y="709" width="0.0160%" height="15" fill="rgb(232,163,46)" fg:x="7021" fg:w="2"/><text x="56.5441%" y="719.50"></text></g><g><title>__libc_malloc (9 samples, 0.07%)</title><rect x="56.4144%" y="517" width="0.0722%" height="15" fill="rgb(206,95,13)" fg:x="7036" fg:w="9"/><text x="56.6644%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.13%)</title><rect x="56.3663%" y="549" width="0.1283%" height="15" fill="rgb(253,154,18)" fg:x="7030" fg:w="16"/><text x="56.6163%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.10%)</title><rect x="56.3903%" y="533" width="0.1042%" height="15" fill="rgb(219,32,23)" fg:x="7033" fg:w="13"/><text x="56.6403%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.16%)</title><rect x="56.3422%" y="597" width="0.1604%" height="15" fill="rgb(230,191,45)" fg:x="7027" fg:w="20"/><text x="56.5922%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.14%)</title><rect x="56.3663%" y="581" width="0.1363%" height="15" fill="rgb(229,64,36)" fg:x="7030" fg:w="17"/><text x="56.6163%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (17 samples, 0.14%)</title><rect x="56.3663%" y="565" width="0.1363%" height="15" fill="rgb(205,129,25)" fg:x="7030" fg:w="17"/><text x="56.6163%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.18%)</title><rect x="56.3262%" y="693" width="0.1844%" height="15" fill="rgb(254,112,7)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.18%)</title><rect x="56.3262%" y="677" width="0.1844%" height="15" fill="rgb(226,53,48)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="687.50"></text></g><g><title>alloc::string::String::push_str (23 samples, 0.18%)</title><rect x="56.3262%" y="661" width="0.1844%" height="15" fill="rgb(214,153,38)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.18%)</title><rect x="56.3262%" y="645" width="0.1844%" height="15" fill="rgb(243,101,7)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.18%)</title><rect x="56.3262%" y="629" width="0.1844%" height="15" fill="rgb(240,140,22)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.18%)</title><rect x="56.3262%" y="613" width="0.1844%" height="15" fill="rgb(235,114,2)" fg:x="7025" fg:w="23"/><text x="56.5762%" y="623.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (53 samples, 0.42%)</title><rect x="56.1418%" y="773" width="0.4250%" height="15" fill="rgb(242,59,12)" fg:x="7002" fg:w="53"/><text x="56.3918%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (52 samples, 0.42%)</title><rect x="56.1498%" y="757" width="0.4169%" height="15" fill="rgb(252,134,9)" fg:x="7003" fg:w="52"/><text x="56.3998%" y="767.50"></text></g><g><title>core::fmt::write (51 samples, 0.41%)</title><rect x="56.1578%" y="741" width="0.4089%" height="15" fill="rgb(236,4,44)" fg:x="7004" fg:w="51"/><text x="56.4078%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (34 samples, 0.27%)</title><rect x="56.2941%" y="725" width="0.2726%" height="15" fill="rgb(254,172,41)" fg:x="7021" fg:w="34"/><text x="56.5441%" y="735.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (32 samples, 0.26%)</title><rect x="56.3101%" y="709" width="0.2566%" height="15" fill="rgb(244,63,20)" fg:x="7023" fg:w="32"/><text x="56.5601%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.06%)</title><rect x="56.5106%" y="693" width="0.0561%" height="15" fill="rgb(250,73,31)" fg:x="7048" fg:w="7"/><text x="56.7606%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.02%)</title><rect x="56.5507%" y="677" width="0.0160%" height="15" fill="rgb(241,38,36)" fg:x="7053" fg:w="2"/><text x="56.8007%" y="687.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="56.5667%" y="677" width="0.0722%" height="15" fill="rgb(245,211,2)" fg:x="7055" fg:w="9"/><text x="56.8167%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.10%)</title><rect x="56.5667%" y="773" width="0.0962%" height="15" fill="rgb(206,120,28)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.10%)</title><rect x="56.5667%" y="757" width="0.0962%" height="15" fill="rgb(211,59,34)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.10%)</title><rect x="56.5667%" y="741" width="0.0962%" height="15" fill="rgb(233,168,5)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.10%)</title><rect x="56.5667%" y="725" width="0.0962%" height="15" fill="rgb(234,33,13)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.10%)</title><rect x="56.5667%" y="709" width="0.0962%" height="15" fill="rgb(231,150,26)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.10%)</title><rect x="56.5667%" y="693" width="0.0962%" height="15" fill="rgb(217,191,4)" fg:x="7055" fg:w="12"/><text x="56.8167%" y="703.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="56.6389%" y="677" width="0.0241%" height="15" fill="rgb(246,198,38)" fg:x="7064" fg:w="3"/><text x="56.8889%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (2 samples, 0.02%)</title><rect x="56.6629%" y="773" width="0.0160%" height="15" fill="rgb(245,64,37)" fg:x="7067" fg:w="2"/><text x="56.9129%" y="783.50"></text></g><g><title>core::clone::Clone::clone_from (2 samples, 0.02%)</title><rect x="56.6629%" y="757" width="0.0160%" height="15" fill="rgb(250,30,36)" fg:x="7067" fg:w="2"/><text x="56.9129%" y="767.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="56.6629%" y="741" width="0.0160%" height="15" fill="rgb(217,86,53)" fg:x="7067" fg:w="2"/><text x="56.9129%" y="751.50"></text></g><g><title>__log10_finite (2 samples, 0.02%)</title><rect x="56.6950%" y="693" width="0.0160%" height="15" fill="rgb(228,157,16)" fg:x="7071" fg:w="2"/><text x="56.9450%" y="703.50"></text></g><g><title>[libm-2.28.so] (2 samples, 0.02%)</title><rect x="56.6950%" y="677" width="0.0160%" height="15" fill="rgb(217,59,31)" fg:x="7071" fg:w="2"/><text x="56.9450%" y="687.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (75 samples, 0.60%)</title><rect x="56.1177%" y="789" width="0.6013%" height="15" fill="rgb(237,138,41)" fg:x="6999" fg:w="75"/><text x="56.3677%" y="799.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (5 samples, 0.04%)</title><rect x="56.6790%" y="773" width="0.0401%" height="15" fill="rgb(227,91,49)" fg:x="7069" fg:w="5"/><text x="56.9290%" y="783.50"></text></g><g><title>redis_protocol::utils::digits_in_number (5 samples, 0.04%)</title><rect x="56.6790%" y="757" width="0.0401%" height="15" fill="rgb(247,21,44)" fg:x="7069" fg:w="5"/><text x="56.9290%" y="767.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (3 samples, 0.02%)</title><rect x="56.6950%" y="741" width="0.0241%" height="15" fill="rgb(219,210,51)" fg:x="7071" fg:w="3"/><text x="56.9450%" y="751.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (3 samples, 0.02%)</title><rect x="56.6950%" y="725" width="0.0241%" height="15" fill="rgb(209,140,6)" fg:x="7071" fg:w="3"/><text x="56.9450%" y="735.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (3 samples, 0.02%)</title><rect x="56.6950%" y="709" width="0.0241%" height="15" fill="rgb(221,188,24)" fg:x="7071" fg:w="3"/><text x="56.9450%" y="719.50"></text></g><g><title>__log10_finite (11 samples, 0.09%)</title><rect x="56.7752%" y="613" width="0.0882%" height="15" fill="rgb(232,154,20)" fg:x="7081" fg:w="11"/><text x="57.0252%" y="623.50"></text></g><g><title>[libm-2.28.so] (10 samples, 0.08%)</title><rect x="56.7832%" y="597" width="0.0802%" height="15" fill="rgb(244,137,50)" fg:x="7082" fg:w="10"/><text x="57.0332%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.15%)</title><rect x="56.7191%" y="773" width="0.1523%" height="15" fill="rgb(225,185,43)" fg:x="7074" fg:w="19"/><text x="56.9691%" y="783.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (19 samples, 0.15%)</title><rect x="56.7191%" y="757" width="0.1523%" height="15" fill="rgb(213,205,38)" fg:x="7074" fg:w="19"/><text x="56.9691%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (19 samples, 0.15%)</title><rect x="56.7191%" y="741" width="0.1523%" height="15" fill="rgb(236,73,12)" fg:x="7074" fg:w="19"/><text x="56.9691%" y="751.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (19 samples, 0.15%)</title><rect x="56.7191%" y="725" width="0.1523%" height="15" fill="rgb(235,219,13)" fg:x="7074" fg:w="19"/><text x="56.9691%" y="735.50"></text></g><g><title>redis_protocol::utils::encode_len (19 samples, 0.15%)</title><rect x="56.7191%" y="709" width="0.1523%" height="15" fill="rgb(218,59,36)" fg:x="7074" fg:w="19"/><text x="56.9691%" y="719.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (16 samples, 0.13%)</title><rect x="56.7431%" y="693" width="0.1283%" height="15" fill="rgb(205,110,39)" fg:x="7077" fg:w="16"/><text x="56.9931%" y="703.50"></text></g><g><title>redis_protocol::utils::digits_in_number (15 samples, 0.12%)</title><rect x="56.7511%" y="677" width="0.1203%" height="15" fill="rgb(218,206,42)" fg:x="7078" fg:w="15"/><text x="57.0011%" y="687.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (12 samples, 0.10%)</title><rect x="56.7752%" y="661" width="0.0962%" height="15" fill="rgb(248,125,24)" fg:x="7081" fg:w="12"/><text x="57.0252%" y="671.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (12 samples, 0.10%)</title><rect x="56.7752%" y="645" width="0.0962%" height="15" fill="rgb(242,28,27)" fg:x="7081" fg:w="12"/><text x="57.0252%" y="655.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (12 samples, 0.10%)</title><rect x="56.7752%" y="629" width="0.0962%" height="15" fill="rgb(216,228,15)" fg:x="7081" fg:w="12"/><text x="57.0252%" y="639.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (137 samples, 1.10%)</title><rect x="55.8130%" y="821" width="1.0985%" height="15" fill="rgb(235,116,46)" fg:x="6961" fg:w="137"/><text x="56.0630%" y="831.50"></text></g><g><title>redis_protocol::encode::gen_array (136 samples, 1.09%)</title><rect x="55.8210%" y="805" width="1.0904%" height="15" fill="rgb(224,18,32)" fg:x="6962" fg:w="136"/><text x="56.0710%" y="815.50"></text></g><g><title>redis_protocol::utils::array_encode_len (24 samples, 0.19%)</title><rect x="56.7191%" y="789" width="0.1924%" height="15" fill="rgb(252,5,12)" fg:x="7074" fg:w="24"/><text x="56.9691%" y="799.50"></text></g><g><title>redis_protocol::utils::digits_in_number (5 samples, 0.04%)</title><rect x="56.8714%" y="773" width="0.0401%" height="15" fill="rgb(251,36,5)" fg:x="7093" fg:w="5"/><text x="57.1214%" y="783.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (2 samples, 0.02%)</title><rect x="56.8954%" y="757" width="0.0160%" height="15" fill="rgb(217,53,14)" fg:x="7096" fg:w="2"/><text x="57.1454%" y="767.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (2 samples, 0.02%)</title><rect x="56.8954%" y="741" width="0.0160%" height="15" fill="rgb(215,86,45)" fg:x="7096" fg:w="2"/><text x="57.1454%" y="751.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (2 samples, 0.02%)</title><rect x="56.8954%" y="725" width="0.0160%" height="15" fill="rgb(242,169,11)" fg:x="7096" fg:w="2"/><text x="57.1454%" y="735.50"></text></g><g><title>__log10_finite (2 samples, 0.02%)</title><rect x="56.8954%" y="709" width="0.0160%" height="15" fill="rgb(211,213,45)" fg:x="7096" fg:w="2"/><text x="57.1454%" y="719.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (161 samples, 1.29%)</title><rect x="55.6286%" y="901" width="1.2909%" height="15" fill="rgb(205,88,11)" fg:x="6938" fg:w="161"/><text x="55.8786%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (161 samples, 1.29%)</title><rect x="55.6286%" y="885" width="1.2909%" height="15" fill="rgb(252,69,26)" fg:x="6938" fg:w="161"/><text x="55.8786%" y="895.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (161 samples, 1.29%)</title><rect x="55.6286%" y="869" width="1.2909%" height="15" fill="rgb(246,123,37)" fg:x="6938" fg:w="161"/><text x="55.8786%" y="879.50"></text></g><g><title>fred::protocol::codec::encode_frame (161 samples, 1.29%)</title><rect x="55.6286%" y="853" width="1.2909%" height="15" fill="rgb(212,205,5)" fg:x="6938" fg:w="161"/><text x="55.8786%" y="863.50"></text></g><g><title>redis_protocol::encode::encode_bytes (140 samples, 1.12%)</title><rect x="55.7970%" y="837" width="1.1225%" height="15" fill="rgb(253,148,0)" fg:x="6959" fg:w="140"/><text x="56.0470%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (973 samples, 7.80%)</title><rect x="49.1421%" y="933" width="7.8015%" height="15" fill="rgb(239,22,4)" fg:x="6129" fg:w="973"/><text x="49.3921%" y="943.50">&lt;futures_ut..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (165 samples, 1.32%)</title><rect x="55.6206%" y="917" width="1.3230%" height="15" fill="rgb(226,26,53)" fg:x="6937" fg:w="165"/><text x="55.8706%" y="927.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="56.9195%" y="901" width="0.0241%" height="15" fill="rgb(225,229,45)" fg:x="7099" fg:w="3"/><text x="57.1695%" y="911.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1,063 samples, 8.52%)</title><rect x="48.4445%" y="949" width="8.5231%" height="15" fill="rgb(220,60,37)" fg:x="6042" fg:w="1063"/><text x="48.6945%" y="959.50">&lt;futures_uti..</text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="56.9436%" y="933" width="0.0241%" height="15" fill="rgb(217,180,35)" fg:x="7102" fg:w="3"/><text x="57.1936%" y="943.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="56.9676%" y="949" width="0.0641%" height="15" fill="rgb(229,7,53)" fg:x="7105" fg:w="8"/><text x="57.2176%" y="959.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (3 samples, 0.02%)</title><rect x="57.0318%" y="949" width="0.0241%" height="15" fill="rgb(254,137,3)" fg:x="7113" fg:w="3"/><text x="57.2818%" y="959.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.02%)</title><rect x="57.0398%" y="933" width="0.0160%" height="15" fill="rgb(215,140,41)" fg:x="7114" fg:w="2"/><text x="57.2898%" y="943.50"></text></g><g><title>fred::multiplexer::Counters::should_send (13 samples, 0.10%)</title><rect x="57.0558%" y="949" width="0.1042%" height="15" fill="rgb(250,80,15)" fg:x="7116" fg:w="13"/><text x="57.3058%" y="959.50"></text></g><g><title>fred::utils::read_atomic (11 samples, 0.09%)</title><rect x="57.0718%" y="933" width="0.0882%" height="15" fill="rgb(252,191,6)" fg:x="7118" fg:w="11"/><text x="57.3218%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.09%)</title><rect x="57.0718%" y="917" width="0.0882%" height="15" fill="rgb(246,217,18)" fg:x="7118" fg:w="11"/><text x="57.3218%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.09%)</title><rect x="57.0718%" y="901" width="0.0882%" height="15" fill="rgb(223,93,7)" fg:x="7118" fg:w="11"/><text x="57.3218%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="57.3765%" y="917" width="0.0401%" height="15" fill="rgb(225,55,52)" fg:x="7156" fg:w="5"/><text x="57.6265%" y="927.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.04%)</title><rect x="57.3765%" y="901" width="0.0401%" height="15" fill="rgb(240,31,24)" fg:x="7156" fg:w="5"/><text x="57.6265%" y="911.50"></text></g><g><title>__libc_malloc (98 samples, 0.79%)</title><rect x="57.4166%" y="757" width="0.7858%" height="15" fill="rgb(205,56,52)" fg:x="7161" fg:w="98"/><text x="57.6666%" y="767.50"></text></g><g><title>[libc-2.28.so] (81 samples, 0.65%)</title><rect x="57.5529%" y="741" width="0.6495%" height="15" fill="rgb(246,146,12)" fg:x="7178" fg:w="81"/><text x="57.8029%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.09%)</title><rect x="58.1142%" y="725" width="0.0882%" height="15" fill="rgb(239,84,36)" fg:x="7248" fg:w="11"/><text x="58.3642%" y="735.50"></text></g><g><title>do_syscall_64 (11 samples, 0.09%)</title><rect x="58.1142%" y="709" width="0.0882%" height="15" fill="rgb(207,41,40)" fg:x="7248" fg:w="11"/><text x="58.3642%" y="719.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.09%)</title><rect x="58.1142%" y="693" width="0.0882%" height="15" fill="rgb(241,179,25)" fg:x="7248" fg:w="11"/><text x="58.3642%" y="703.50"></text></g><g><title>do_futex (10 samples, 0.08%)</title><rect x="58.1222%" y="677" width="0.0802%" height="15" fill="rgb(210,0,34)" fg:x="7249" fg:w="10"/><text x="58.3722%" y="687.50"></text></g><g><title>futex_wake (10 samples, 0.08%)</title><rect x="58.1222%" y="661" width="0.0802%" height="15" fill="rgb(225,217,29)" fg:x="7249" fg:w="10"/><text x="58.3722%" y="671.50"></text></g><g><title>wake_up_q (8 samples, 0.06%)</title><rect x="58.1382%" y="645" width="0.0641%" height="15" fill="rgb(216,191,38)" fg:x="7251" fg:w="8"/><text x="58.3882%" y="655.50"></text></g><g><title>try_to_wake_up (8 samples, 0.06%)</title><rect x="58.1382%" y="629" width="0.0641%" height="15" fill="rgb(232,140,52)" fg:x="7251" fg:w="8"/><text x="58.3882%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (99 samples, 0.79%)</title><rect x="57.4166%" y="853" width="0.7938%" height="15" fill="rgb(223,158,51)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (99 samples, 0.79%)</title><rect x="57.4166%" y="837" width="0.7938%" height="15" fill="rgb(235,29,51)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (99 samples, 0.79%)</title><rect x="57.4166%" y="821" width="0.7938%" height="15" fill="rgb(215,181,18)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (99 samples, 0.79%)</title><rect x="57.4166%" y="805" width="0.7938%" height="15" fill="rgb(227,125,34)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99 samples, 0.79%)</title><rect x="57.4166%" y="789" width="0.7938%" height="15" fill="rgb(230,197,49)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="799.50"></text></g><g><title>alloc::alloc::alloc (99 samples, 0.79%)</title><rect x="57.4166%" y="773" width="0.7938%" height="15" fill="rgb(239,141,16)" fg:x="7161" fg:w="99"/><text x="57.6666%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (101 samples, 0.81%)</title><rect x="57.4166%" y="917" width="0.8098%" height="15" fill="rgb(225,105,43)" fg:x="7161" fg:w="101"/><text x="57.6666%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.81%)</title><rect x="57.4166%" y="901" width="0.8098%" height="15" fill="rgb(214,131,14)" fg:x="7161" fg:w="101"/><text x="57.6666%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.81%)</title><rect x="57.4166%" y="885" width="0.8098%" height="15" fill="rgb(229,177,11)" fg:x="7161" fg:w="101"/><text x="57.6666%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.81%)</title><rect x="57.4166%" y="869" width="0.8098%" height="15" fill="rgb(231,180,14)" fg:x="7161" fg:w="101"/><text x="57.6666%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="58.2104%" y="853" width="0.0160%" height="15" fill="rgb(232,88,2)" fg:x="7260" fg:w="2"/><text x="58.4604%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="58.2104%" y="837" width="0.0160%" height="15" fill="rgb(205,220,8)" fg:x="7260" fg:w="2"/><text x="58.4604%" y="847.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="58.2104%" y="821" width="0.0160%" height="15" fill="rgb(225,23,53)" fg:x="7260" fg:w="2"/><text x="58.4604%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.06%)</title><rect x="58.2264%" y="917" width="0.0641%" height="15" fill="rgb(213,62,29)" fg:x="7262" fg:w="8"/><text x="58.4764%" y="927.50"></text></g><g><title>core::ptr::write (7 samples, 0.06%)</title><rect x="58.2344%" y="901" width="0.0561%" height="15" fill="rgb(227,75,7)" fg:x="7263" fg:w="7"/><text x="58.4844%" y="911.50"></text></g><g><title>__libc_malloc (13 samples, 0.10%)</title><rect x="58.2906%" y="805" width="0.1042%" height="15" fill="rgb(207,105,14)" fg:x="7270" fg:w="13"/><text x="58.5406%" y="815.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="58.3788%" y="789" width="0.0160%" height="15" fill="rgb(245,62,29)" fg:x="7281" fg:w="2"/><text x="58.6288%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.11%)</title><rect x="58.2906%" y="917" width="0.1123%" height="15" fill="rgb(236,202,4)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.11%)</title><rect x="58.2906%" y="901" width="0.1123%" height="15" fill="rgb(250,67,1)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.11%)</title><rect x="58.2906%" y="885" width="0.1123%" height="15" fill="rgb(253,115,44)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.11%)</title><rect x="58.2906%" y="869" width="0.1123%" height="15" fill="rgb(251,139,18)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.11%)</title><rect x="58.2906%" y="853" width="0.1123%" height="15" fill="rgb(218,22,32)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.11%)</title><rect x="58.2906%" y="837" width="0.1123%" height="15" fill="rgb(243,53,5)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="847.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.11%)</title><rect x="58.2906%" y="821" width="0.1123%" height="15" fill="rgb(227,56,16)" fg:x="7270" fg:w="14"/><text x="58.5406%" y="831.50"></text></g><g><title>[libc-2.28.so] (17 samples, 0.14%)</title><rect x="58.5151%" y="901" width="0.1363%" height="15" fill="rgb(245,53,0)" fg:x="7298" fg:w="17"/><text x="58.7651%" y="911.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="58.6514%" y="901" width="0.0241%" height="15" fill="rgb(216,170,35)" fg:x="7315" fg:w="3"/><text x="58.9014%" y="911.50"></text></g><g><title>fred::protocol::types::RedisCommand::to_frame (190 samples, 1.52%)</title><rect x="57.1600%" y="949" width="1.5234%" height="15" fill="rgb(211,200,8)" fg:x="7129" fg:w="190"/><text x="57.4100%" y="959.50"></text></g><g><title>fred::protocol::utils::command_to_frame (190 samples, 1.52%)</title><rect x="57.1600%" y="933" width="1.5234%" height="15" fill="rgb(228,204,44)" fg:x="7129" fg:w="190"/><text x="57.4100%" y="943.50"></text></g><g><title>fred::protocol::utils::value_to_outgoing_frame (34 samples, 0.27%)</title><rect x="58.4108%" y="917" width="0.2726%" height="15" fill="rgb(214,121,17)" fg:x="7285" fg:w="34"/><text x="58.6608%" y="927.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="58.7155%" y="933" width="0.0401%" height="15" fill="rgb(233,64,38)" fg:x="7323" fg:w="5"/><text x="58.9655%" y="943.50"></text></g><g><title>tracing_core::field::FieldSet::callsite (4 samples, 0.03%)</title><rect x="58.7235%" y="917" width="0.0321%" height="15" fill="rgb(253,54,19)" fg:x="7324" fg:w="4"/><text x="58.9735%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="58.7556%" y="933" width="0.0160%" height="15" fill="rgb(253,94,18)" fg:x="7328" fg:w="2"/><text x="59.0056%" y="943.50"></text></g><g><title>tracing::span::Inner::new (3 samples, 0.02%)</title><rect x="58.8759%" y="821" width="0.0241%" height="15" fill="rgb(227,57,52)" fg:x="7343" fg:w="3"/><text x="59.1259%" y="831.50"></text></g><g><title>&lt;tracing_core::dispatcher::Dispatch as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="58.8759%" y="805" width="0.0241%" height="15" fill="rgb(230,228,50)" fg:x="7343" fg:w="3"/><text x="59.1259%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="58.8759%" y="789" width="0.0241%" height="15" fill="rgb(217,205,27)" fg:x="7343" fg:w="3"/><text x="59.1259%" y="799.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="58.9561%" y="517" width="0.0241%" height="15" fill="rgb(252,71,50)" fg:x="7353" fg:w="3"/><text x="59.2061%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="58.9561%" y="613" width="0.0401%" height="15" fill="rgb(209,86,4)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="58.9561%" y="597" width="0.0401%" height="15" fill="rgb(229,94,0)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.04%)</title><rect x="58.9561%" y="581" width="0.0401%" height="15" fill="rgb(252,223,21)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.04%)</title><rect x="58.9561%" y="565" width="0.0401%" height="15" fill="rgb(230,210,4)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.04%)</title><rect x="58.9561%" y="549" width="0.0401%" height="15" fill="rgb(240,149,38)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="559.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.04%)</title><rect x="58.9561%" y="533" width="0.0401%" height="15" fill="rgb(254,105,20)" fg:x="7353" fg:w="5"/><text x="59.2061%" y="543.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (6 samples, 0.05%)</title><rect x="58.9561%" y="741" width="0.0481%" height="15" fill="rgb(253,87,46)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.05%)</title><rect x="58.9561%" y="725" width="0.0481%" height="15" fill="rgb(253,116,33)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.05%)</title><rect x="58.9561%" y="709" width="0.0481%" height="15" fill="rgb(229,198,5)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.05%)</title><rect x="58.9561%" y="693" width="0.0481%" height="15" fill="rgb(242,38,37)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.05%)</title><rect x="58.9561%" y="677" width="0.0481%" height="15" fill="rgb(242,69,53)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.05%)</title><rect x="58.9561%" y="661" width="0.0481%" height="15" fill="rgb(249,80,16)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.05%)</title><rect x="58.9561%" y="645" width="0.0481%" height="15" fill="rgb(206,128,11)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.05%)</title><rect x="58.9561%" y="629" width="0.0481%" height="15" fill="rgb(212,35,20)" fg:x="7353" fg:w="6"/><text x="59.2061%" y="639.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::span_builder (11 samples, 0.09%)</title><rect x="58.9320%" y="757" width="0.0882%" height="15" fill="rgb(236,79,13)" fg:x="7350" fg:w="11"/><text x="59.1820%" y="767.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::from_name (2 samples, 0.02%)</title><rect x="59.0042%" y="741" width="0.0160%" height="15" fill="rgb(233,123,3)" fg:x="7359" fg:w="2"/><text x="59.2542%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (4 samples, 0.03%)</title><rect x="59.0362%" y="709" width="0.0321%" height="15" fill="rgb(214,93,52)" fg:x="7363" fg:w="4"/><text x="59.2862%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (4 samples, 0.03%)</title><rect x="59.0362%" y="693" width="0.0321%" height="15" fill="rgb(251,37,40)" fg:x="7363" fg:w="4"/><text x="59.2862%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="59.0362%" y="677" width="0.0321%" height="15" fill="rgb(227,80,54)" fg:x="7363" fg:w="4"/><text x="59.2862%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.08%)</title><rect x="59.0362%" y="741" width="0.0802%" height="15" fill="rgb(254,48,11)" fg:x="7363" fg:w="10"/><text x="59.2862%" y="751.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id::_{{closure}} (10 samples, 0.08%)</title><rect x="59.0362%" y="725" width="0.0802%" height="15" fill="rgb(235,193,26)" fg:x="7363" fg:w="10"/><text x="59.2862%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.05%)</title><rect x="59.0683%" y="709" width="0.0481%" height="15" fill="rgb(229,99,21)" fg:x="7367" fg:w="6"/><text x="59.3183%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.05%)</title><rect x="59.0683%" y="693" width="0.0481%" height="15" fill="rgb(211,140,41)" fg:x="7367" fg:w="6"/><text x="59.3183%" y="703.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::id_generator::IdGenerator&gt;::new_span_id::_{{closure}} (5 samples, 0.04%)</title><rect x="59.0763%" y="677" width="0.0401%" height="15" fill="rgb(240,227,30)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="687.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.04%)</title><rect x="59.0763%" y="661" width="0.0401%" height="15" fill="rgb(215,224,45)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="671.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.04%)</title><rect x="59.0763%" y="645" width="0.0401%" height="15" fill="rgb(206,123,31)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="655.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="59.0763%" y="629" width="0.0401%" height="15" fill="rgb(210,138,16)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="59.0763%" y="613" width="0.0401%" height="15" fill="rgb(228,57,28)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="623.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (5 samples, 0.04%)</title><rect x="59.0763%" y="597" width="0.0401%" height="15" fill="rgb(242,170,10)" fg:x="7368" fg:w="5"/><text x="59.3263%" y="607.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.02%)</title><rect x="59.1004%" y="581" width="0.0160%" height="15" fill="rgb(228,214,39)" fg:x="7371" fg:w="2"/><text x="59.3504%" y="591.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.02%)</title><rect x="59.1004%" y="565" width="0.0160%" height="15" fill="rgb(218,179,33)" fg:x="7371" fg:w="2"/><text x="59.3504%" y="575.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.02%)</title><rect x="59.1004%" y="549" width="0.0160%" height="15" fill="rgb(235,193,39)" fg:x="7371" fg:w="2"/><text x="59.3504%" y="559.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.02%)</title><rect x="59.1004%" y="533" width="0.0160%" height="15" fill="rgb(219,221,36)" fg:x="7371" fg:w="2"/><text x="59.3504%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide (2 samples, 0.02%)</title><rect x="59.1004%" y="517" width="0.0160%" height="15" fill="rgb(248,218,19)" fg:x="7371" fg:w="2"/><text x="59.3504%" y="527.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id (24 samples, 0.19%)</title><rect x="59.0202%" y="757" width="0.1924%" height="15" fill="rgb(205,50,9)" fg:x="7361" fg:w="24"/><text x="59.2702%" y="767.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (12 samples, 0.10%)</title><rect x="59.1164%" y="741" width="0.0962%" height="15" fill="rgb(238,81,28)" fg:x="7373" fg:w="12"/><text x="59.3664%" y="751.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (12 samples, 0.10%)</title><rect x="59.1164%" y="725" width="0.0962%" height="15" fill="rgb(235,110,19)" fg:x="7373" fg:w="12"/><text x="59.3664%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.08%)</title><rect x="59.1325%" y="709" width="0.0802%" height="15" fill="rgb(214,7,14)" fg:x="7375" fg:w="10"/><text x="59.3825%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.08%)</title><rect x="59.1325%" y="693" width="0.0802%" height="15" fill="rgb(211,77,3)" fg:x="7375" fg:w="10"/><text x="59.3825%" y="703.50"></text></g><g><title>[libc-2.28.so] (18 samples, 0.14%)</title><rect x="59.2126%" y="757" width="0.1443%" height="15" fill="rgb(229,5,9)" fg:x="7385" fg:w="18"/><text x="59.4626%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (5 samples, 0.04%)</title><rect x="59.3650%" y="757" width="0.0401%" height="15" fill="rgb(225,90,11)" fg:x="7404" fg:w="5"/><text x="59.6150%" y="767.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span::_{{closure}} (5 samples, 0.04%)</title><rect x="59.3650%" y="741" width="0.0401%" height="15" fill="rgb(242,56,8)" fg:x="7404" fg:w="5"/><text x="59.6150%" y="751.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::has_active_span (4 samples, 0.03%)</title><rect x="59.3730%" y="725" width="0.0321%" height="15" fill="rgb(249,212,39)" fg:x="7405" fg:w="4"/><text x="59.6230%" y="735.50"></text></g><g><title>opentelemetry::context::Context::get (3 samples, 0.02%)</title><rect x="59.3810%" y="709" width="0.0241%" height="15" fill="rgb(236,90,9)" fg:x="7406" fg:w="3"/><text x="59.6310%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.02%)</title><rect x="59.3810%" y="693" width="0.0241%" height="15" fill="rgb(206,88,35)" fg:x="7406" fg:w="3"/><text x="59.6310%" y="703.50"></text></g><g><title>opentelemetry::context::Context::get::_{{closure}} (3 samples, 0.02%)</title><rect x="59.3810%" y="677" width="0.0241%" height="15" fill="rgb(205,126,30)" fg:x="7406" fg:w="3"/><text x="59.6310%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="59.3810%" y="661" width="0.0241%" height="15" fill="rgb(230,176,12)" fg:x="7406" fg:w="3"/><text x="59.6310%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (12 samples, 0.10%)</title><rect x="59.4131%" y="757" width="0.0962%" height="15" fill="rgb(243,19,9)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (12 samples, 0.10%)</title><rect x="59.4131%" y="741" width="0.0962%" height="15" fill="rgb(245,171,17)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="751.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.10%)</title><rect x="59.4131%" y="725" width="0.0962%" height="15" fill="rgb(227,52,21)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="735.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (12 samples, 0.10%)</title><rect x="59.4131%" y="709" width="0.0962%" height="15" fill="rgb(238,69,14)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="719.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (12 samples, 0.10%)</title><rect x="59.4131%" y="693" width="0.0962%" height="15" fill="rgb(241,156,39)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="703.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (12 samples, 0.10%)</title><rect x="59.4131%" y="677" width="0.0962%" height="15" fill="rgb(212,227,28)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="687.50"></text></g><g><title>__GI___pthread_rwlock_unlock (12 samples, 0.10%)</title><rect x="59.4131%" y="661" width="0.0962%" height="15" fill="rgb(209,118,27)" fg:x="7410" fg:w="12"/><text x="59.6631%" y="671.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::with_span_id (6 samples, 0.05%)</title><rect x="59.5093%" y="757" width="0.0481%" height="15" fill="rgb(226,102,5)" fg:x="7422" fg:w="6"/><text x="59.7593%" y="767.50"></text></g><g><title>opentelemetry::trace::tracer::SpanBuilder::with_start_time (3 samples, 0.02%)</title><rect x="59.5574%" y="757" width="0.0241%" height="15" fill="rgb(223,34,3)" fg:x="7428" fg:w="3"/><text x="59.8074%" y="767.50"></text></g><g><title>std::time::SystemTime::now (19 samples, 0.15%)</title><rect x="59.5815%" y="757" width="0.1523%" height="15" fill="rgb(221,81,38)" fg:x="7431" fg:w="19"/><text x="59.8315%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (18 samples, 0.14%)</title><rect x="59.5895%" y="741" width="0.1443%" height="15" fill="rgb(236,219,28)" fg:x="7432" fg:w="18"/><text x="59.8395%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.14%)</title><rect x="59.5895%" y="725" width="0.1443%" height="15" fill="rgb(213,200,14)" fg:x="7432" fg:w="18"/><text x="59.8395%" y="735.50"></text></g><g><title>__clock_gettime (16 samples, 0.13%)</title><rect x="59.6055%" y="709" width="0.1283%" height="15" fill="rgb(240,33,19)" fg:x="7434" fg:w="16"/><text x="59.8555%" y="719.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.10%)</title><rect x="59.6296%" y="693" width="0.1042%" height="15" fill="rgb(233,113,27)" fg:x="7437" fg:w="13"/><text x="59.8796%" y="703.50"></text></g><g><title>[[vdso]] (4 samples, 0.03%)</title><rect x="59.7017%" y="677" width="0.0321%" height="15" fill="rgb(220,221,18)" fg:x="7446" fg:w="4"/><text x="59.9517%" y="687.50"></text></g><g><title>&lt;bool as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="59.7739%" y="709" width="0.0160%" height="15" fill="rgb(238,92,8)" fg:x="7455" fg:w="2"/><text x="60.0239%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.21%)</title><rect x="59.7979%" y="693" width="0.2085%" height="15" fill="rgb(222,164,16)" fg:x="7458" fg:w="26"/><text x="60.0479%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.21%)</title><rect x="59.7979%" y="677" width="0.2085%" height="15" fill="rgb(241,119,3)" fg:x="7458" fg:w="26"/><text x="60.0479%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.21%)</title><rect x="59.7979%" y="661" width="0.2085%" height="15" fill="rgb(241,44,8)" fg:x="7458" fg:w="26"/><text x="60.0479%" y="671.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.21%)</title><rect x="59.7979%" y="645" width="0.2085%" height="15" fill="rgb(230,36,40)" fg:x="7458" fg:w="26"/><text x="60.0479%" y="655.50"></text></g><g><title>__libc_malloc (26 samples, 0.21%)</title><rect x="59.7979%" y="629" width="0.2085%" height="15" fill="rgb(243,16,36)" fg:x="7458" fg:w="26"/><text x="60.0479%" y="639.50"></text></g><g><title>[libc-2.28.so] (19 samples, 0.15%)</title><rect x="59.8541%" y="613" width="0.1523%" height="15" fill="rgb(231,4,26)" fg:x="7465" fg:w="19"/><text x="60.1041%" y="623.50"></text></g><g><title>&lt;opentelemetry::core::Value as core::convert::From&lt;bool&gt;&gt;::from (3 samples, 0.02%)</title><rect x="60.0225%" y="661" width="0.0241%" height="15" fill="rgb(240,9,31)" fg:x="7486" fg:w="3"/><text x="60.2725%" y="671.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (35 samples, 0.28%)</title><rect x="59.7739%" y="725" width="0.2806%" height="15" fill="rgb(207,173,15)" fg:x="7455" fg:w="35"/><text x="60.0239%" y="735.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_bool (33 samples, 0.26%)</title><rect x="59.7899%" y="709" width="0.2646%" height="15" fill="rgb(224,192,53)" fg:x="7457" fg:w="33"/><text x="60.0399%" y="719.50"></text></g><g><title>opentelemetry::core::KeyValue::new (6 samples, 0.05%)</title><rect x="60.0064%" y="693" width="0.0481%" height="15" fill="rgb(223,67,28)" fg:x="7484" fg:w="6"/><text x="60.2564%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.03%)</title><rect x="60.0225%" y="677" width="0.0321%" height="15" fill="rgb(211,20,47)" fg:x="7486" fg:w="4"/><text x="60.2725%" y="687.50"></text></g><g><title>tracing_core::span::Attributes::record (39 samples, 0.31%)</title><rect x="59.7498%" y="757" width="0.3127%" height="15" fill="rgb(240,228,2)" fg:x="7452" fg:w="39"/><text x="59.9998%" y="767.50"></text></g><g><title>tracing_core::field::ValueSet::record (37 samples, 0.30%)</title><rect x="59.7659%" y="741" width="0.2967%" height="15" fill="rgb(248,151,12)" fg:x="7454" fg:w="37"/><text x="60.0159%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="60.0625%" y="741" width="0.0160%" height="15" fill="rgb(244,8,39)" fg:x="7491" fg:w="2"/><text x="60.3125%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="60.4073%" y="677" width="0.0401%" height="15" fill="rgb(222,26,8)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.04%)</title><rect x="60.4073%" y="661" width="0.0401%" height="15" fill="rgb(213,106,44)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.04%)</title><rect x="60.4073%" y="645" width="0.0401%" height="15" fill="rgb(214,129,20)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.04%)</title><rect x="60.4073%" y="629" width="0.0401%" height="15" fill="rgb(212,32,13)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="639.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.04%)</title><rect x="60.4073%" y="613" width="0.0401%" height="15" fill="rgb(208,168,33)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="623.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="60.4073%" y="597" width="0.0401%" height="15" fill="rgb(231,207,8)" fg:x="7534" fg:w="5"/><text x="60.6573%" y="607.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="60.4314%" y="581" width="0.0160%" height="15" fill="rgb(235,219,23)" fg:x="7537" fg:w="2"/><text x="60.6814%" y="591.50"></text></g><g><title>&lt;opentelemetry::context::Context as core::clone::Clone&gt;::clone (17 samples, 0.14%)</title><rect x="60.4474%" y="661" width="0.1363%" height="15" fill="rgb(226,216,26)" fg:x="7539" fg:w="17"/><text x="60.6974%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.14%)</title><rect x="60.4474%" y="645" width="0.1363%" height="15" fill="rgb(239,137,16)" fg:x="7539" fg:w="17"/><text x="60.6974%" y="655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.14%)</title><rect x="60.4474%" y="629" width="0.1363%" height="15" fill="rgb(207,12,36)" fg:x="7539" fg:w="17"/><text x="60.6974%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (17 samples, 0.14%)</title><rect x="60.5837%" y="661" width="0.1363%" height="15" fill="rgb(210,214,24)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.14%)</title><rect x="60.5837%" y="645" width="0.1363%" height="15" fill="rgb(206,56,30)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.14%)</title><rect x="60.5837%" y="629" width="0.1363%" height="15" fill="rgb(228,143,26)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.14%)</title><rect x="60.5837%" y="613" width="0.1363%" height="15" fill="rgb(216,218,46)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="623.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.14%)</title><rect x="60.5837%" y="597" width="0.1363%" height="15" fill="rgb(206,6,19)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="607.50"></text></g><g><title>__libc_malloc (17 samples, 0.14%)</title><rect x="60.5837%" y="581" width="0.1363%" height="15" fill="rgb(239,177,51)" fg:x="7556" fg:w="17"/><text x="60.8337%" y="591.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.10%)</title><rect x="60.6238%" y="565" width="0.0962%" height="15" fill="rgb(216,55,25)" fg:x="7561" fg:w="12"/><text x="60.8738%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find_insert_slot (3 samples, 0.02%)</title><rect x="60.7280%" y="613" width="0.0241%" height="15" fill="rgb(231,163,29)" fg:x="7574" fg:w="3"/><text x="60.9780%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.02%)</title><rect x="60.7360%" y="597" width="0.0160%" height="15" fill="rgb(232,149,50)" fg:x="7575" fg:w="2"/><text x="60.9860%" y="607.50"></text></g><g><title>core::mem::swap (21 samples, 0.17%)</title><rect x="60.7842%" y="565" width="0.1684%" height="15" fill="rgb(223,142,48)" fg:x="7581" fg:w="21"/><text x="61.0342%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (21 samples, 0.17%)</title><rect x="60.7842%" y="549" width="0.1684%" height="15" fill="rgb(245,83,23)" fg:x="7581" fg:w="21"/><text x="61.0342%" y="559.50"></text></g><g><title>core::ptr::swap_nonoverlapping (21 samples, 0.17%)</title><rect x="60.7842%" y="533" width="0.1684%" height="15" fill="rgb(224,63,2)" fg:x="7581" fg:w="21"/><text x="61.0342%" y="543.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (21 samples, 0.17%)</title><rect x="60.7842%" y="517" width="0.1684%" height="15" fill="rgb(218,65,53)" fg:x="7581" fg:w="21"/><text x="61.0342%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.17%)</title><rect x="60.7842%" y="501" width="0.1684%" height="15" fill="rgb(221,84,29)" fg:x="7581" fg:w="21"/><text x="61.0342%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.02%)</title><rect x="60.9525%" y="549" width="0.0241%" height="15" fill="rgb(234,0,32)" fg:x="7602" fg:w="3"/><text x="61.2025%" y="559.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.02%)</title><rect x="60.9525%" y="533" width="0.0241%" height="15" fill="rgb(206,20,16)" fg:x="7602" fg:w="3"/><text x="61.2025%" y="543.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="60.9606%" y="517" width="0.0160%" height="15" fill="rgb(244,172,18)" fg:x="7603" fg:w="2"/><text x="61.2106%" y="527.50"></text></g><g><title>__libc_malloc (18 samples, 0.14%)</title><rect x="60.9766%" y="517" width="0.1443%" height="15" fill="rgb(254,133,1)" fg:x="7605" fg:w="18"/><text x="61.2266%" y="527.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="61.0728%" y="501" width="0.0481%" height="15" fill="rgb(222,206,41)" fg:x="7617" fg:w="6"/><text x="61.3228%" y="511.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.16%)</title><rect x="60.9766%" y="533" width="0.1604%" height="15" fill="rgb(212,3,42)" fg:x="7605" fg:w="20"/><text x="61.2266%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="61.1209%" y="517" width="0.0160%" height="15" fill="rgb(241,11,4)" fg:x="7623" fg:w="2"/><text x="61.3709%" y="527.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::with_span (95 samples, 0.76%)</title><rect x="60.3913%" y="693" width="0.7617%" height="15" fill="rgb(205,19,26)" fg:x="7532" fg:w="95"/><text x="60.6413%" y="703.50"></text></g><g><title>opentelemetry::context::Context::with_value (88 samples, 0.71%)</title><rect x="60.4474%" y="677" width="0.7056%" height="15" fill="rgb(210,179,32)" fg:x="7539" fg:w="88"/><text x="60.6974%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (54 samples, 0.43%)</title><rect x="60.7200%" y="661" width="0.4330%" height="15" fill="rgb(227,116,49)" fg:x="7573" fg:w="54"/><text x="60.9700%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (54 samples, 0.43%)</title><rect x="60.7200%" y="645" width="0.4330%" height="15" fill="rgb(211,146,6)" fg:x="7573" fg:w="54"/><text x="60.9700%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (54 samples, 0.43%)</title><rect x="60.7200%" y="629" width="0.4330%" height="15" fill="rgb(219,44,39)" fg:x="7573" fg:w="54"/><text x="60.9700%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (50 samples, 0.40%)</title><rect x="60.7521%" y="613" width="0.4009%" height="15" fill="rgb(234,128,11)" fg:x="7577" fg:w="50"/><text x="61.0021%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (50 samples, 0.40%)</title><rect x="60.7521%" y="597" width="0.4009%" height="15" fill="rgb(220,183,53)" fg:x="7577" fg:w="50"/><text x="61.0021%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::resize (47 samples, 0.38%)</title><rect x="60.7761%" y="581" width="0.3768%" height="15" fill="rgb(213,219,32)" fg:x="7580" fg:w="47"/><text x="61.0261%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (25 samples, 0.20%)</title><rect x="60.9525%" y="565" width="0.2004%" height="15" fill="rgb(232,156,16)" fg:x="7602" fg:w="25"/><text x="61.2025%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (22 samples, 0.18%)</title><rect x="60.9766%" y="549" width="0.1764%" height="15" fill="rgb(246,135,34)" fg:x="7605" fg:w="22"/><text x="61.2266%" y="559.50"></text></g><g><title>hashbrown::raw::calculate_layout (2 samples, 0.02%)</title><rect x="61.1369%" y="533" width="0.0160%" height="15" fill="rgb(241,99,0)" fg:x="7625" fg:w="2"/><text x="61.3869%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::extend (2 samples, 0.02%)</title><rect x="61.1369%" y="517" width="0.0160%" height="15" fill="rgb(222,103,45)" fg:x="7625" fg:w="2"/><text x="61.3869%" y="527.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::span (3 samples, 0.02%)</title><rect x="61.2091%" y="677" width="0.0241%" height="15" fill="rgb(212,57,4)" fg:x="7634" fg:w="3"/><text x="61.4591%" y="687.50"></text></g><g><title>&lt;opentelemetry::trace::noop::NoopSpan as opentelemetry::trace::span::Span&gt;::span_context (2 samples, 0.02%)</title><rect x="61.2332%" y="677" width="0.0160%" height="15" fill="rgb(215,68,47)" fg:x="7637" fg:w="2"/><text x="61.4832%" y="687.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::sampler::Sampler as opentelemetry::sdk::trace::sampler::ShouldSample&gt;::should_sample (14 samples, 0.11%)</title><rect x="61.1530%" y="693" width="0.1123%" height="15" fill="rgb(230,84,2)" fg:x="7627" fg:w="14"/><text x="61.4030%" y="703.50"></text></g><g><title>&lt;opentelemetry::trace::span_context::TraceState as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="61.2492%" y="677" width="0.0160%" height="15" fill="rgb(220,102,14)" fg:x="7639" fg:w="2"/><text x="61.4992%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (5 samples, 0.04%)</title><rect x="61.2813%" y="693" width="0.0401%" height="15" fill="rgb(240,10,32)" fg:x="7643" fg:w="5"/><text x="61.5313%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt;&gt; (5 samples, 0.04%)</title><rect x="61.3214%" y="693" width="0.0401%" height="15" fill="rgb(215,47,27)" fg:x="7648" fg:w="5"/><text x="61.5714%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (5 samples, 0.04%)</title><rect x="61.3214%" y="677" width="0.0401%" height="15" fill="rgb(233,188,43)" fg:x="7648" fg:w="5"/><text x="61.5714%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (5 samples, 0.04%)</title><rect x="61.3214%" y="661" width="0.0401%" height="15" fill="rgb(253,190,1)" fg:x="7648" fg:w="5"/><text x="61.5714%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="61.3214%" y="645" width="0.0401%" height="15" fill="rgb(206,114,52)" fg:x="7648" fg:w="5"/><text x="61.5714%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;opentelemetry::sdk::trace::provider::TracerProvider&gt; (2 samples, 0.02%)</title><rect x="61.3614%" y="693" width="0.0160%" height="15" fill="rgb(233,120,37)" fg:x="7653" fg:w="2"/><text x="61.6114%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;opentelemetry::sdk::trace::provider::TracerProviderInner&gt;&gt; (2 samples, 0.02%)</title><rect x="61.3614%" y="677" width="0.0160%" height="15" fill="rgb(214,52,39)" fg:x="7653" fg:w="2"/><text x="61.6114%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="61.3614%" y="661" width="0.0160%" height="15" fill="rgb(223,80,29)" fg:x="7653" fg:w="2"/><text x="61.6114%" y="671.50"></text></g><g><title>opentelemetry::sdk::trace::tracer::Tracer::provider (4 samples, 0.03%)</title><rect x="61.3775%" y="693" width="0.0321%" height="15" fill="rgb(230,101,40)" fg:x="7655" fg:w="4"/><text x="61.6275%" y="703.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (4 samples, 0.03%)</title><rect x="61.3775%" y="677" width="0.0321%" height="15" fill="rgb(219,211,8)" fg:x="7655" fg:w="4"/><text x="61.6275%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="61.3855%" y="661" width="0.0241%" height="15" fill="rgb(252,126,28)" fg:x="7656" fg:w="3"/><text x="61.6355%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="61.3855%" y="645" width="0.0241%" height="15" fill="rgb(215,56,38)" fg:x="7656" fg:w="3"/><text x="61.6355%" y="655.50"></text></g><g><title>opentelemetry::trace::span_context::SpanContext::new (3 samples, 0.02%)</title><rect x="61.4096%" y="693" width="0.0241%" height="15" fill="rgb(249,55,44)" fg:x="7659" fg:w="3"/><text x="61.6596%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.12%)</title><rect x="61.4496%" y="677" width="0.1203%" height="15" fill="rgb(220,221,32)" fg:x="7664" fg:w="15"/><text x="61.6996%" y="687.50"></text></g><g><title>&lt;opentelemetry::context::Context as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="61.5779%" y="645" width="0.0321%" height="15" fill="rgb(212,216,41)" fg:x="7680" fg:w="4"/><text x="61.8279%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="61.5779%" y="629" width="0.0321%" height="15" fill="rgb(228,213,43)" fg:x="7680" fg:w="4"/><text x="61.8279%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="61.5779%" y="613" width="0.0321%" height="15" fill="rgb(211,31,26)" fg:x="7680" fg:w="4"/><text x="61.8279%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="61.5779%" y="597" width="0.0321%" height="15" fill="rgb(229,202,19)" fg:x="7680" fg:w="4"/><text x="61.8279%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="61.5940%" y="581" width="0.0160%" height="15" fill="rgb(229,105,46)" fg:x="7682" fg:w="2"/><text x="61.8440%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (2 samples, 0.02%)</title><rect x="61.5940%" y="565" width="0.0160%" height="15" fill="rgb(235,108,1)" fg:x="7682" fg:w="2"/><text x="61.8440%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.07%)</title><rect x="61.5699%" y="677" width="0.0722%" height="15" fill="rgb(245,111,35)" fg:x="7679" fg:w="9"/><text x="61.8199%" y="687.50"></text></g><g><title>tracing_opentelemetry::tracer::build_parent_context::_{{closure}} (8 samples, 0.06%)</title><rect x="61.5779%" y="661" width="0.0641%" height="15" fill="rgb(219,185,31)" fg:x="7680" fg:w="8"/><text x="61.8279%" y="671.50"></text></g><g><title>&lt;opentelemetry::context::Context as opentelemetry::trace::context::TraceContextExt&gt;::remote_span_context (4 samples, 0.03%)</title><rect x="61.6100%" y="645" width="0.0321%" height="15" fill="rgb(214,4,43)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="655.50"></text></g><g><title>opentelemetry::context::Context::get (4 samples, 0.03%)</title><rect x="61.6100%" y="629" width="0.0321%" height="15" fill="rgb(235,227,40)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="61.6100%" y="613" width="0.0321%" height="15" fill="rgb(230,88,30)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="61.6100%" y="597" width="0.0321%" height="15" fill="rgb(216,217,1)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.03%)</title><rect x="61.6100%" y="581" width="0.0321%" height="15" fill="rgb(248,139,50)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (4 samples, 0.03%)</title><rect x="61.6100%" y="565" width="0.0321%" height="15" fill="rgb(233,1,21)" fg:x="7684" fg:w="4"/><text x="61.8600%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="61.6260%" y="549" width="0.0160%" height="15" fill="rgb(215,183,12)" fg:x="7686" fg:w="2"/><text x="61.8760%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="61.6260%" y="533" width="0.0160%" height="15" fill="rgb(229,104,42)" fg:x="7686" fg:w="2"/><text x="61.8760%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="61.6260%" y="517" width="0.0160%" height="15" fill="rgb(243,34,48)" fg:x="7686" fg:w="2"/><text x="61.8760%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="61.6260%" y="501" width="0.0160%" height="15" fill="rgb(239,11,44)" fg:x="7686" fg:w="2"/><text x="61.8760%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="61.6260%" y="485" width="0.0160%" height="15" fill="rgb(231,98,35)" fg:x="7686" fg:w="2"/><text x="61.8760%" y="495.50"></text></g><g><title>tracing_opentelemetry::tracer::build_parent_context (28 samples, 0.22%)</title><rect x="61.4336%" y="693" width="0.2245%" height="15" fill="rgb(233,28,25)" fg:x="7662" fg:w="28"/><text x="61.6836%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (2 samples, 0.02%)</title><rect x="61.6421%" y="677" width="0.0160%" height="15" fill="rgb(234,123,11)" fg:x="7688" fg:w="2"/><text x="61.8921%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (199 samples, 1.60%)</title><rect x="60.0786%" y="741" width="1.5956%" height="15" fill="rgb(220,69,3)" fg:x="7493" fg:w="199"/><text x="60.3286%" y="751.50"></text></g><g><title>tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt;::parent_context::_{{closure}} (185 samples, 1.48%)</title><rect x="60.1908%" y="725" width="1.4833%" height="15" fill="rgb(214,64,36)" fg:x="7507" fg:w="185"/><text x="60.4408%" y="735.50"></text></g><g><title>&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::sampled_context (185 samples, 1.48%)</title><rect x="60.1908%" y="709" width="1.4833%" height="15" fill="rgb(211,138,32)" fg:x="7507" fg:w="185"/><text x="60.4408%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (5 samples, 0.04%)</title><rect x="61.6742%" y="741" width="0.0401%" height="15" fill="rgb(213,118,47)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (5 samples, 0.04%)</title><rect x="61.6742%" y="725" width="0.0401%" height="15" fill="rgb(243,124,49)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (5 samples, 0.04%)</title><rect x="61.6742%" y="709" width="0.0401%" height="15" fill="rgb(221,30,28)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="719.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="61.6742%" y="693" width="0.0401%" height="15" fill="rgb(246,37,13)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="703.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="61.6742%" y="677" width="0.0401%" height="15" fill="rgb(249,66,14)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="687.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="61.6742%" y="661" width="0.0401%" height="15" fill="rgb(213,166,5)" fg:x="7692" fg:w="5"/><text x="61.9242%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (7 samples, 0.06%)</title><rect x="61.7142%" y="741" width="0.0561%" height="15" fill="rgb(221,66,24)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (7 samples, 0.06%)</title><rect x="61.7142%" y="725" width="0.0561%" height="15" fill="rgb(210,132,17)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="735.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.06%)</title><rect x="61.7142%" y="709" width="0.0561%" height="15" fill="rgb(243,202,5)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="719.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (7 samples, 0.06%)</title><rect x="61.7142%" y="693" width="0.0561%" height="15" fill="rgb(233,70,48)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="703.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (7 samples, 0.06%)</title><rect x="61.7142%" y="677" width="0.0561%" height="15" fill="rgb(238,41,26)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="687.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (7 samples, 0.06%)</title><rect x="61.7142%" y="661" width="0.0561%" height="15" fill="rgb(241,19,31)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="671.50"></text></g><g><title>__GI___pthread_rwlock_unlock (7 samples, 0.06%)</title><rect x="61.7142%" y="645" width="0.0561%" height="15" fill="rgb(214,76,10)" fg:x="7697" fg:w="7"/><text x="61.9642%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="61.7704%" y="709" width="0.0160%" height="15" fill="rgb(254,202,22)" fg:x="7704" fg:w="2"/><text x="62.0204%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="61.8105%" y="693" width="0.0321%" height="15" fill="rgb(214,72,24)" fg:x="7709" fg:w="4"/><text x="62.0605%" y="703.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="61.8425%" y="677" width="0.0321%" height="15" fill="rgb(221,92,46)" fg:x="7713" fg:w="4"/><text x="62.0925%" y="687.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="61.8505%" y="661" width="0.0241%" height="15" fill="rgb(246,13,50)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="671.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="61.8505%" y="645" width="0.0241%" height="15" fill="rgb(240,165,38)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="655.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="61.8505%" y="629" width="0.0241%" height="15" fill="rgb(241,24,51)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="639.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="61.8505%" y="613" width="0.0241%" height="15" fill="rgb(227,51,44)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="623.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (3 samples, 0.02%)</title><rect x="61.8505%" y="597" width="0.0241%" height="15" fill="rgb(231,121,3)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="607.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (3 samples, 0.02%)</title><rect x="61.8505%" y="581" width="0.0241%" height="15" fill="rgb(245,3,41)" fg:x="7714" fg:w="3"/><text x="62.1005%" y="591.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (14 samples, 0.11%)</title><rect x="61.7704%" y="741" width="0.1123%" height="15" fill="rgb(214,13,26)" fg:x="7704" fg:w="14"/><text x="62.0204%" y="751.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (14 samples, 0.11%)</title><rect x="61.7704%" y="725" width="0.1123%" height="15" fill="rgb(252,75,11)" fg:x="7704" fg:w="14"/><text x="62.0204%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (12 samples, 0.10%)</title><rect x="61.7864%" y="709" width="0.0962%" height="15" fill="rgb(218,226,17)" fg:x="7706" fg:w="12"/><text x="62.0364%" y="719.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (5 samples, 0.04%)</title><rect x="61.8425%" y="693" width="0.0401%" height="15" fill="rgb(248,89,38)" fg:x="7713" fg:w="5"/><text x="62.0925%" y="703.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (16 samples, 0.13%)</title><rect x="61.8826%" y="741" width="0.1283%" height="15" fill="rgb(237,73,46)" fg:x="7718" fg:w="16"/><text x="62.1326%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (16 samples, 0.13%)</title><rect x="61.8826%" y="725" width="0.1283%" height="15" fill="rgb(242,78,33)" fg:x="7718" fg:w="16"/><text x="62.1326%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (15 samples, 0.12%)</title><rect x="61.8906%" y="709" width="0.1203%" height="15" fill="rgb(235,60,3)" fg:x="7719" fg:w="15"/><text x="62.1406%" y="719.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (15 samples, 0.12%)</title><rect x="61.8906%" y="693" width="0.1203%" height="15" fill="rgb(216,172,19)" fg:x="7719" fg:w="15"/><text x="62.1406%" y="703.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (15 samples, 0.12%)</title><rect x="61.8906%" y="677" width="0.1203%" height="15" fill="rgb(227,6,42)" fg:x="7719" fg:w="15"/><text x="62.1406%" y="687.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (14 samples, 0.11%)</title><rect x="61.8987%" y="661" width="0.1123%" height="15" fill="rgb(223,207,42)" fg:x="7720" fg:w="14"/><text x="62.1487%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="62.0109%" y="709" width="0.0160%" height="15" fill="rgb(246,138,30)" fg:x="7734" fg:w="2"/><text x="62.2609%" y="719.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut::_{{closure}} (2 samples, 0.02%)</title><rect x="62.0109%" y="693" width="0.0160%" height="15" fill="rgb(251,199,47)" fg:x="7734" fg:w="2"/><text x="62.2609%" y="703.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut (2 samples, 0.02%)</title><rect x="62.0109%" y="677" width="0.0160%" height="15" fill="rgb(228,218,44)" fg:x="7734" fg:w="2"/><text x="62.2609%" y="687.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="62.0109%" y="661" width="0.0160%" height="15" fill="rgb(220,68,6)" fg:x="7734" fg:w="2"/><text x="62.2609%" y="671.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="62.0109%" y="645" width="0.0160%" height="15" fill="rgb(240,60,26)" fg:x="7734" fg:w="2"/><text x="62.2609%" y="655.50"></text></g><g><title>tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt;::parent_context (251 samples, 2.01%)</title><rect x="60.0625%" y="757" width="2.0125%" height="15" fill="rgb(211,200,19)" fg:x="7491" fg:w="251"/><text x="60.3125%" y="767.50">t..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (8 samples, 0.06%)</title><rect x="62.0109%" y="741" width="0.0641%" height="15" fill="rgb(242,145,30)" fg:x="7734" fg:w="8"/><text x="62.2609%" y="751.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (8 samples, 0.06%)</title><rect x="62.0109%" y="725" width="0.0641%" height="15" fill="rgb(225,64,13)" fg:x="7734" fg:w="8"/><text x="62.2609%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.05%)</title><rect x="62.0269%" y="709" width="0.0481%" height="15" fill="rgb(218,103,35)" fg:x="7736" fg:w="6"/><text x="62.2769%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.05%)</title><rect x="62.0269%" y="693" width="0.0481%" height="15" fill="rgb(216,93,46)" fg:x="7736" fg:w="6"/><text x="62.2769%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (6 samples, 0.05%)</title><rect x="62.0269%" y="677" width="0.0481%" height="15" fill="rgb(225,159,27)" fg:x="7736" fg:w="6"/><text x="62.2769%" y="687.50"></text></g><g><title>tracing_opentelemetry::layer::Timings::new (20 samples, 0.16%)</title><rect x="62.0750%" y="757" width="0.1604%" height="15" fill="rgb(225,204,11)" fg:x="7742" fg:w="20"/><text x="62.3250%" y="767.50"></text></g><g><title>std::time::Instant::now (19 samples, 0.15%)</title><rect x="62.0831%" y="741" width="0.1523%" height="15" fill="rgb(205,56,4)" fg:x="7743" fg:w="19"/><text x="62.3331%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (18 samples, 0.14%)</title><rect x="62.0911%" y="725" width="0.1443%" height="15" fill="rgb(206,6,35)" fg:x="7744" fg:w="18"/><text x="62.3411%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.14%)</title><rect x="62.0911%" y="709" width="0.1443%" height="15" fill="rgb(247,73,52)" fg:x="7744" fg:w="18"/><text x="62.3411%" y="719.50"></text></g><g><title>__clock_gettime (18 samples, 0.14%)</title><rect x="62.0911%" y="693" width="0.1443%" height="15" fill="rgb(246,97,4)" fg:x="7744" fg:w="18"/><text x="62.3411%" y="703.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.14%)</title><rect x="62.0991%" y="677" width="0.1363%" height="15" fill="rgb(212,37,15)" fg:x="7745" fg:w="17"/><text x="62.3491%" y="687.50"></text></g><g><title>[[vdso]] (13 samples, 0.10%)</title><rect x="62.1312%" y="661" width="0.1042%" height="15" fill="rgb(208,130,40)" fg:x="7749" fg:w="13"/><text x="62.3812%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.06%)</title><rect x="62.2595%" y="709" width="0.0561%" height="15" fill="rgb(236,55,29)" fg:x="7765" fg:w="7"/><text x="62.5095%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.02%)</title><rect x="62.2915%" y="693" width="0.0241%" height="15" fill="rgb(209,156,45)" fg:x="7769" fg:w="3"/><text x="62.5415%" y="703.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (5 samples, 0.04%)</title><rect x="62.3156%" y="693" width="0.0401%" height="15" fill="rgb(249,107,4)" fg:x="7772" fg:w="5"/><text x="62.5656%" y="703.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (4 samples, 0.03%)</title><rect x="62.3236%" y="677" width="0.0321%" height="15" fill="rgb(227,7,13)" fg:x="7773" fg:w="4"/><text x="62.5736%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="62.3316%" y="661" width="0.0241%" height="15" fill="rgb(250,129,14)" fg:x="7774" fg:w="3"/><text x="62.5816%" y="671.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="62.3316%" y="645" width="0.0241%" height="15" fill="rgb(229,92,13)" fg:x="7774" fg:w="3"/><text x="62.5816%" y="655.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="62.3316%" y="629" width="0.0241%" height="15" fill="rgb(245,98,39)" fg:x="7774" fg:w="3"/><text x="62.5816%" y="639.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (3 samples, 0.02%)</title><rect x="62.3316%" y="613" width="0.0241%" height="15" fill="rgb(234,135,48)" fg:x="7774" fg:w="3"/><text x="62.5816%" y="623.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (3 samples, 0.02%)</title><rect x="62.3316%" y="597" width="0.0241%" height="15" fill="rgb(230,98,28)" fg:x="7774" fg:w="3"/><text x="62.5816%" y="607.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (17 samples, 0.14%)</title><rect x="62.2354%" y="757" width="0.1363%" height="15" fill="rgb(223,121,0)" fg:x="7762" fg:w="17"/><text x="62.4854%" y="767.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (17 samples, 0.14%)</title><rect x="62.2354%" y="741" width="0.1363%" height="15" fill="rgb(234,173,33)" fg:x="7762" fg:w="17"/><text x="62.4854%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (15 samples, 0.12%)</title><rect x="62.2514%" y="725" width="0.1203%" height="15" fill="rgb(245,47,8)" fg:x="7764" fg:w="15"/><text x="62.5014%" y="735.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (7 samples, 0.06%)</title><rect x="62.3156%" y="709" width="0.0561%" height="15" fill="rgb(205,17,20)" fg:x="7772" fg:w="7"/><text x="62.5656%" y="719.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (2 samples, 0.02%)</title><rect x="62.3557%" y="693" width="0.0160%" height="15" fill="rgb(232,151,16)" fg:x="7777" fg:w="2"/><text x="62.6057%" y="703.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (24 samples, 0.19%)</title><rect x="62.3717%" y="757" width="0.1924%" height="15" fill="rgb(208,30,32)" fg:x="7779" fg:w="24"/><text x="62.6217%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (24 samples, 0.19%)</title><rect x="62.3717%" y="741" width="0.1924%" height="15" fill="rgb(254,26,3)" fg:x="7779" fg:w="24"/><text x="62.6217%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (23 samples, 0.18%)</title><rect x="62.3797%" y="725" width="0.1844%" height="15" fill="rgb(240,177,30)" fg:x="7780" fg:w="23"/><text x="62.6297%" y="735.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (23 samples, 0.18%)</title><rect x="62.3797%" y="709" width="0.1844%" height="15" fill="rgb(248,76,44)" fg:x="7780" fg:w="23"/><text x="62.6297%" y="719.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (23 samples, 0.18%)</title><rect x="62.3797%" y="693" width="0.1844%" height="15" fill="rgb(241,186,54)" fg:x="7780" fg:w="23"/><text x="62.6297%" y="703.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (21 samples, 0.17%)</title><rect x="62.3958%" y="677" width="0.1684%" height="15" fill="rgb(249,171,29)" fg:x="7782" fg:w="21"/><text x="62.6458%" y="687.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (5 samples, 0.04%)</title><rect x="62.5641%" y="757" width="0.0401%" height="15" fill="rgb(237,151,44)" fg:x="7803" fg:w="5"/><text x="62.8141%" y="767.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (5 samples, 0.04%)</title><rect x="62.5641%" y="741" width="0.0401%" height="15" fill="rgb(228,174,30)" fg:x="7803" fg:w="5"/><text x="62.8141%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.04%)</title><rect x="62.5641%" y="725" width="0.0401%" height="15" fill="rgb(252,14,37)" fg:x="7803" fg:w="5"/><text x="62.8141%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.04%)</title><rect x="62.5641%" y="709" width="0.0401%" height="15" fill="rgb(207,111,40)" fg:x="7803" fg:w="5"/><text x="62.8141%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (5 samples, 0.04%)</title><rect x="62.5641%" y="693" width="0.0401%" height="15" fill="rgb(248,171,54)" fg:x="7803" fg:w="5"/><text x="62.8141%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (3 samples, 0.02%)</title><rect x="62.5802%" y="677" width="0.0241%" height="15" fill="rgb(211,127,2)" fg:x="7805" fg:w="3"/><text x="62.8302%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="62.5802%" y="661" width="0.0241%" height="15" fill="rgb(236,87,47)" fg:x="7805" fg:w="3"/><text x="62.8302%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="62.5802%" y="645" width="0.0241%" height="15" fill="rgb(223,190,45)" fg:x="7805" fg:w="3"/><text x="62.8302%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="62.5802%" y="629" width="0.0241%" height="15" fill="rgb(215,5,16)" fg:x="7805" fg:w="3"/><text x="62.8302%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="62.5802%" y="613" width="0.0241%" height="15" fill="rgb(252,82,33)" fg:x="7805" fg:w="3"/><text x="62.8302%" y="623.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="62.7165%" y="709" width="0.0321%" height="15" fill="rgb(247,213,44)" fg:x="7822" fg:w="4"/><text x="62.9665%" y="719.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="62.7486%" y="693" width="0.0321%" height="15" fill="rgb(205,196,44)" fg:x="7826" fg:w="4"/><text x="62.9986%" y="703.50"></text></g><g><title>__libc_malloc (47 samples, 0.38%)</title><rect x="62.7806%" y="629" width="0.3768%" height="15" fill="rgb(237,96,54)" fg:x="7830" fg:w="47"/><text x="63.0306%" y="639.50"></text></g><g><title>[libc-2.28.so] (26 samples, 0.21%)</title><rect x="62.9490%" y="613" width="0.2085%" height="15" fill="rgb(230,113,34)" fg:x="7851" fg:w="26"/><text x="63.1990%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (52 samples, 0.42%)</title><rect x="62.7486%" y="709" width="0.4169%" height="15" fill="rgb(221,224,12)" fg:x="7826" fg:w="52"/><text x="62.9986%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (48 samples, 0.38%)</title><rect x="62.7806%" y="693" width="0.3849%" height="15" fill="rgb(219,112,44)" fg:x="7830" fg:w="48"/><text x="63.0306%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.38%)</title><rect x="62.7806%" y="677" width="0.3849%" height="15" fill="rgb(210,31,13)" fg:x="7830" fg:w="48"/><text x="63.0306%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.38%)</title><rect x="62.7806%" y="661" width="0.3849%" height="15" fill="rgb(230,25,16)" fg:x="7830" fg:w="48"/><text x="63.0306%" y="671.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.38%)</title><rect x="62.7806%" y="645" width="0.3849%" height="15" fill="rgb(246,108,53)" fg:x="7830" fg:w="48"/><text x="63.0306%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.02%)</title><rect x="63.1976%" y="677" width="0.0160%" height="15" fill="rgb(241,172,50)" fg:x="7882" fg:w="2"/><text x="63.4476%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="63.1976%" y="661" width="0.0160%" height="15" fill="rgb(235,141,10)" fg:x="7882" fg:w="2"/><text x="63.4476%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.14%)</title><rect x="63.2697%" y="661" width="0.1363%" height="15" fill="rgb(220,174,43)" fg:x="7891" fg:w="17"/><text x="63.5197%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.14%)</title><rect x="63.2697%" y="645" width="0.1363%" height="15" fill="rgb(215,181,40)" fg:x="7891" fg:w="17"/><text x="63.5197%" y="655.50"></text></g><g><title>core::ptr::write (17 samples, 0.14%)</title><rect x="63.2697%" y="629" width="0.1363%" height="15" fill="rgb(230,97,2)" fg:x="7891" fg:w="17"/><text x="63.5197%" y="639.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (563 samples, 4.51%)</title><rect x="58.9080%" y="773" width="4.5141%" height="15" fill="rgb(211,25,27)" fg:x="7347" fg:w="563"/><text x="59.1580%" y="783.50">&lt;trac..</text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::insert (102 samples, 0.82%)</title><rect x="62.6042%" y="757" width="0.8178%" height="15" fill="rgb(230,87,26)" fg:x="7808" fg:w="102"/><text x="62.8542%" y="767.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::replace (101 samples, 0.81%)</title><rect x="62.6123%" y="741" width="0.8098%" height="15" fill="rgb(227,160,17)" fg:x="7809" fg:w="101"/><text x="62.8623%" y="751.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::insert (101 samples, 0.81%)</title><rect x="62.6123%" y="725" width="0.8098%" height="15" fill="rgb(244,85,34)" fg:x="7809" fg:w="101"/><text x="62.8623%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (32 samples, 0.26%)</title><rect x="63.1655%" y="709" width="0.2566%" height="15" fill="rgb(207,70,0)" fg:x="7878" fg:w="32"/><text x="63.4155%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (30 samples, 0.24%)</title><rect x="63.1815%" y="693" width="0.2405%" height="15" fill="rgb(223,129,7)" fg:x="7880" fg:w="30"/><text x="63.4315%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (26 samples, 0.21%)</title><rect x="63.2136%" y="677" width="0.2085%" height="15" fill="rgb(246,105,7)" fg:x="7884" fg:w="26"/><text x="63.4636%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.02%)</title><rect x="63.4702%" y="741" width="0.0160%" height="15" fill="rgb(215,154,42)" fg:x="7916" fg:w="2"/><text x="63.7202%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (3 samples, 0.02%)</title><rect x="63.4862%" y="741" width="0.0241%" height="15" fill="rgb(220,215,30)" fg:x="7918" fg:w="3"/><text x="63.7362%" y="751.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="63.4862%" y="725" width="0.0241%" height="15" fill="rgb(228,81,51)" fg:x="7918" fg:w="3"/><text x="63.7362%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="63.4862%" y="709" width="0.0241%" height="15" fill="rgb(247,71,54)" fg:x="7918" fg:w="3"/><text x="63.7362%" y="719.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (3 samples, 0.02%)</title><rect x="63.4862%" y="693" width="0.0241%" height="15" fill="rgb(234,176,34)" fg:x="7918" fg:w="3"/><text x="63.7362%" y="703.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (5 samples, 0.04%)</title><rect x="63.5263%" y="709" width="0.0401%" height="15" fill="rgb(241,103,54)" fg:x="7923" fg:w="5"/><text x="63.7763%" y="719.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (5 samples, 0.04%)</title><rect x="63.5263%" y="693" width="0.0401%" height="15" fill="rgb(228,22,34)" fg:x="7923" fg:w="5"/><text x="63.7763%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (5 samples, 0.04%)</title><rect x="63.5263%" y="677" width="0.0401%" height="15" fill="rgb(241,179,48)" fg:x="7923" fg:w="5"/><text x="63.7763%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.04%)</title><rect x="63.5263%" y="661" width="0.0401%" height="15" fill="rgb(235,167,37)" fg:x="7923" fg:w="5"/><text x="63.7763%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (10 samples, 0.08%)</title><rect x="63.5985%" y="645" width="0.0802%" height="15" fill="rgb(213,109,30)" fg:x="7932" fg:w="10"/><text x="63.8485%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (38 samples, 0.30%)</title><rect x="63.5103%" y="725" width="0.3047%" height="15" fill="rgb(222,172,16)" fg:x="7921" fg:w="38"/><text x="63.7603%" y="735.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (31 samples, 0.25%)</title><rect x="63.5664%" y="709" width="0.2486%" height="15" fill="rgb(233,192,5)" fg:x="7928" fg:w="31"/><text x="63.8164%" y="719.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (27 samples, 0.22%)</title><rect x="63.5985%" y="693" width="0.2165%" height="15" fill="rgb(247,189,41)" fg:x="7932" fg:w="27"/><text x="63.8485%" y="703.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (27 samples, 0.22%)</title><rect x="63.5985%" y="677" width="0.2165%" height="15" fill="rgb(218,134,47)" fg:x="7932" fg:w="27"/><text x="63.8485%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (27 samples, 0.22%)</title><rect x="63.5985%" y="661" width="0.2165%" height="15" fill="rgb(216,29,3)" fg:x="7932" fg:w="27"/><text x="63.8485%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (17 samples, 0.14%)</title><rect x="63.6786%" y="645" width="0.1363%" height="15" fill="rgb(246,140,12)" fg:x="7942" fg:w="17"/><text x="63.9286%" y="655.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (17 samples, 0.14%)</title><rect x="63.6786%" y="629" width="0.1363%" height="15" fill="rgb(230,136,11)" fg:x="7942" fg:w="17"/><text x="63.9286%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.13%)</title><rect x="63.6867%" y="613" width="0.1283%" height="15" fill="rgb(247,22,47)" fg:x="7943" fg:w="16"/><text x="63.9367%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.13%)</title><rect x="63.6867%" y="597" width="0.1283%" height="15" fill="rgb(218,84,22)" fg:x="7943" fg:w="16"/><text x="63.9367%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (50 samples, 0.40%)</title><rect x="63.4221%" y="757" width="0.4009%" height="15" fill="rgb(216,87,39)" fg:x="7910" fg:w="50"/><text x="63.6721%" y="767.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (39 samples, 0.31%)</title><rect x="63.5103%" y="741" width="0.3127%" height="15" fill="rgb(221,178,8)" fg:x="7921" fg:w="39"/><text x="63.7603%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="63.8470%" y="741" width="0.0401%" height="15" fill="rgb(230,42,11)" fg:x="7963" fg:w="5"/><text x="64.0970%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.04%)</title><rect x="63.8470%" y="725" width="0.0401%" height="15" fill="rgb(237,229,4)" fg:x="7963" fg:w="5"/><text x="64.0970%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::RefMut&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="63.8871%" y="741" width="0.0160%" height="15" fill="rgb(222,31,33)" fg:x="7968" fg:w="2"/><text x="64.1371%" y="751.50"></text></g><g><title>&lt;sharded_slab::pool::RefMut&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="63.8871%" y="725" width="0.0160%" height="15" fill="rgb(210,17,39)" fg:x="7968" fg:w="2"/><text x="64.1371%" y="735.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="63.8871%" y="709" width="0.0160%" height="15" fill="rgb(244,93,20)" fg:x="7968" fg:w="2"/><text x="64.1371%" y="719.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release2 (2 samples, 0.02%)</title><rect x="63.8871%" y="693" width="0.0160%" height="15" fill="rgb(210,40,47)" fg:x="7968" fg:w="2"/><text x="64.1371%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (12 samples, 0.10%)</title><rect x="63.9031%" y="725" width="0.0962%" height="15" fill="rgb(239,211,47)" fg:x="7970" fg:w="12"/><text x="64.1531%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.03%)</title><rect x="63.9673%" y="709" width="0.0321%" height="15" fill="rgb(251,223,49)" fg:x="7978" fg:w="4"/><text x="64.2173%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="64.0715%" y="693" width="0.0241%" height="15" fill="rgb(221,149,5)" fg:x="7991" fg:w="3"/><text x="64.3215%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.02%)</title><rect x="64.0715%" y="677" width="0.0241%" height="15" fill="rgb(219,224,51)" fg:x="7991" fg:w="3"/><text x="64.3215%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::pop (2 samples, 0.02%)</title><rect x="64.0956%" y="693" width="0.0160%" height="15" fill="rgb(223,7,8)" fg:x="7994" fg:w="2"/><text x="64.3456%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="64.1116%" y="661" width="0.0241%" height="15" fill="rgb(241,217,22)" fg:x="7996" fg:w="3"/><text x="64.3616%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.02%)</title><rect x="64.1116%" y="645" width="0.0241%" height="15" fill="rgb(248,209,0)" fg:x="7996" fg:w="3"/><text x="64.3616%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (43 samples, 0.34%)</title><rect x="63.8230%" y="757" width="0.3448%" height="15" fill="rgb(217,205,4)" fg:x="7960" fg:w="43"/><text x="64.0730%" y="767.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (33 samples, 0.26%)</title><rect x="63.9031%" y="741" width="0.2646%" height="15" fill="rgb(228,124,39)" fg:x="7970" fg:w="33"/><text x="64.1531%" y="751.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::init_with (20 samples, 0.16%)</title><rect x="64.0074%" y="725" width="0.1604%" height="15" fill="rgb(250,116,42)" fg:x="7983" fg:w="20"/><text x="64.2574%" y="735.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::init_with (15 samples, 0.12%)</title><rect x="64.0475%" y="709" width="0.1203%" height="15" fill="rgb(223,202,9)" fg:x="7988" fg:w="15"/><text x="64.2975%" y="719.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (7 samples, 0.06%)</title><rect x="64.1116%" y="693" width="0.0561%" height="15" fill="rgb(242,222,40)" fg:x="7996" fg:w="7"/><text x="64.3616%" y="703.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::init_with::_{{closure}} (7 samples, 0.06%)</title><rect x="64.1116%" y="677" width="0.0561%" height="15" fill="rgb(229,99,46)" fg:x="7996" fg:w="7"/><text x="64.3616%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.03%)</title><rect x="64.1357%" y="661" width="0.0321%" height="15" fill="rgb(225,56,46)" fg:x="7999" fg:w="4"/><text x="64.3857%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create::_{{closure}} (4 samples, 0.03%)</title><rect x="64.1357%" y="645" width="0.0321%" height="15" fill="rgb(227,94,5)" fg:x="7999" fg:w="4"/><text x="64.3857%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="64.1357%" y="629" width="0.0321%" height="15" fill="rgb(205,112,38)" fg:x="7999" fg:w="4"/><text x="64.3857%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.03%)</title><rect x="64.1357%" y="613" width="0.0321%" height="15" fill="rgb(231,133,46)" fg:x="7999" fg:w="4"/><text x="64.3857%" y="623.50"></text></g><g><title>tracing::span::Span::make_with (663 samples, 5.32%)</title><rect x="58.8598%" y="837" width="5.3159%" height="15" fill="rgb(217,16,9)" fg:x="7341" fg:w="663"/><text x="59.1098%" y="847.50">tracing..</text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (658 samples, 5.28%)</title><rect x="58.8999%" y="821" width="5.2758%" height="15" fill="rgb(249,173,9)" fg:x="7346" fg:w="658"/><text x="59.1499%" y="831.50">tracin..</text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (658 samples, 5.28%)</title><rect x="58.8999%" y="805" width="5.2758%" height="15" fill="rgb(205,163,53)" fg:x="7346" fg:w="658"/><text x="59.1499%" y="815.50">&lt;alloc..</text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (658 samples, 5.28%)</title><rect x="58.8999%" y="789" width="5.2758%" height="15" fill="rgb(217,54,41)" fg:x="7346" fg:w="658"/><text x="59.1499%" y="799.50">&lt;traci..</text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (94 samples, 0.75%)</title><rect x="63.4221%" y="773" width="0.7537%" height="15" fill="rgb(228,216,12)" fg:x="7910" fg:w="94"/><text x="63.6721%" y="783.50"></text></g><g><title>tracing::span::Span::child_of::_{{closure}} (669 samples, 5.36%)</title><rect x="58.8278%" y="869" width="5.3640%" height="15" fill="rgb(244,228,15)" fg:x="7337" fg:w="669"/><text x="59.0778%" y="879.50">tracing..</text></g><g><title>tracing::span::Span::child_of_with (669 samples, 5.36%)</title><rect x="58.8278%" y="853" width="5.3640%" height="15" fill="rgb(221,176,53)" fg:x="7337" fg:w="669"/><text x="59.0778%" y="863.50">tracing..</text></g><g><title>tracing_core::span::Attributes::child_of (2 samples, 0.02%)</title><rect x="64.1758%" y="837" width="0.0160%" height="15" fill="rgb(205,94,34)" fg:x="8004" fg:w="2"/><text x="64.4258%" y="847.50"></text></g><g><title>tracing::span::Span::child_of (682 samples, 5.47%)</title><rect x="58.7797%" y="933" width="5.4682%" height="15" fill="rgb(213,110,48)" fg:x="7331" fg:w="682"/><text x="59.0297%" y="943.50">tracing..</text></g><g><title>tracing_core::dispatcher::get_default (682 samples, 5.47%)</title><rect x="58.7797%" y="917" width="5.4682%" height="15" fill="rgb(236,142,28)" fg:x="7331" fg:w="682"/><text x="59.0297%" y="927.50">tracing..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (680 samples, 5.45%)</title><rect x="58.7957%" y="901" width="5.4522%" height="15" fill="rgb(225,135,29)" fg:x="7333" fg:w="680"/><text x="59.0457%" y="911.50">std::th..</text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (676 samples, 5.42%)</title><rect x="58.8278%" y="885" width="5.4201%" height="15" fill="rgb(252,45,31)" fg:x="7337" fg:w="676"/><text x="59.0778%" y="895.50">tracing..</text></g><g><title>tracing_core::dispatcher::Entered::current (7 samples, 0.06%)</title><rect x="64.1918%" y="869" width="0.0561%" height="15" fill="rgb(211,187,50)" fg:x="8006" fg:w="7"/><text x="64.4418%" y="879.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (5 samples, 0.04%)</title><rect x="64.2078%" y="853" width="0.0401%" height="15" fill="rgb(229,109,7)" fg:x="8008" fg:w="5"/><text x="64.4578%" y="863.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (4 samples, 0.03%)</title><rect x="64.2158%" y="837" width="0.0321%" height="15" fill="rgb(251,131,51)" fg:x="8009" fg:w="4"/><text x="64.4658%" y="847.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (4 samples, 0.03%)</title><rect x="64.2158%" y="821" width="0.0321%" height="15" fill="rgb(251,180,35)" fg:x="8009" fg:w="4"/><text x="64.4658%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (4 samples, 0.03%)</title><rect x="64.2158%" y="805" width="0.0321%" height="15" fill="rgb(211,46,32)" fg:x="8009" fg:w="4"/><text x="64.4658%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="64.2559%" y="821" width="0.0160%" height="15" fill="rgb(248,123,17)" fg:x="8014" fg:w="2"/><text x="64.5059%" y="831.50"></text></g><g><title>std::time::Instant::duration_since (2 samples, 0.02%)</title><rect x="64.2559%" y="805" width="0.0160%" height="15" fill="rgb(227,141,18)" fg:x="8014" fg:w="2"/><text x="64.5059%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (2 samples, 0.02%)</title><rect x="64.2559%" y="789" width="0.0160%" height="15" fill="rgb(216,102,9)" fg:x="8014" fg:w="2"/><text x="64.5059%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (4 samples, 0.03%)</title><rect x="64.2720%" y="821" width="0.0321%" height="15" fill="rgb(253,47,13)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (4 samples, 0.03%)</title><rect x="64.2720%" y="805" width="0.0321%" height="15" fill="rgb(226,93,23)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (4 samples, 0.03%)</title><rect x="64.2720%" y="789" width="0.0321%" height="15" fill="rgb(247,104,17)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="799.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="64.2720%" y="773" width="0.0321%" height="15" fill="rgb(233,203,26)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="64.2720%" y="757" width="0.0321%" height="15" fill="rgb(244,98,49)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="64.2720%" y="741" width="0.0321%" height="15" fill="rgb(235,134,22)" fg:x="8016" fg:w="4"/><text x="64.5220%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (5 samples, 0.04%)</title><rect x="64.3040%" y="821" width="0.0401%" height="15" fill="rgb(221,70,32)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (5 samples, 0.04%)</title><rect x="64.3040%" y="805" width="0.0401%" height="15" fill="rgb(238,15,50)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="815.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="64.3040%" y="789" width="0.0401%" height="15" fill="rgb(215,221,48)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="799.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (5 samples, 0.04%)</title><rect x="64.3040%" y="773" width="0.0401%" height="15" fill="rgb(236,73,3)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="783.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (5 samples, 0.04%)</title><rect x="64.3040%" y="757" width="0.0401%" height="15" fill="rgb(250,107,11)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="767.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (5 samples, 0.04%)</title><rect x="64.3040%" y="741" width="0.0401%" height="15" fill="rgb(242,39,14)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="751.50"></text></g><g><title>__GI___pthread_rwlock_unlock (5 samples, 0.04%)</title><rect x="64.3040%" y="725" width="0.0401%" height="15" fill="rgb(248,164,37)" fg:x="8020" fg:w="5"/><text x="64.5540%" y="735.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.09%)</title><rect x="64.3441%" y="821" width="0.0882%" height="15" fill="rgb(217,60,12)" fg:x="8025" fg:w="11"/><text x="64.5941%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.07%)</title><rect x="64.3602%" y="805" width="0.0722%" height="15" fill="rgb(240,125,29)" fg:x="8027" fg:w="9"/><text x="64.6102%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (9 samples, 0.07%)</title><rect x="64.3602%" y="789" width="0.0722%" height="15" fill="rgb(208,207,28)" fg:x="8027" fg:w="9"/><text x="64.6102%" y="799.50"></text></g><g><title>__clock_gettime (8 samples, 0.06%)</title><rect x="64.3682%" y="773" width="0.0641%" height="15" fill="rgb(209,159,27)" fg:x="8028" fg:w="8"/><text x="64.6182%" y="783.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.06%)</title><rect x="64.3762%" y="757" width="0.0561%" height="15" fill="rgb(251,176,53)" fg:x="8029" fg:w="7"/><text x="64.6262%" y="767.50"></text></g><g><title>[[vdso]] (6 samples, 0.05%)</title><rect x="64.3842%" y="741" width="0.0481%" height="15" fill="rgb(211,85,7)" fg:x="8030" fg:w="6"/><text x="64.6342%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="64.4323%" y="789" width="0.0160%" height="15" fill="rgb(216,64,54)" fg:x="8036" fg:w="2"/><text x="64.6823%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="64.4804%" y="773" width="0.0321%" height="15" fill="rgb(217,54,24)" fg:x="8042" fg:w="4"/><text x="64.7304%" y="783.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="64.5125%" y="757" width="0.0160%" height="15" fill="rgb(208,206,53)" fg:x="8046" fg:w="2"/><text x="64.7625%" y="767.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="64.5125%" y="741" width="0.0160%" height="15" fill="rgb(251,74,39)" fg:x="8046" fg:w="2"/><text x="64.7625%" y="751.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="64.5125%" y="725" width="0.0160%" height="15" fill="rgb(226,47,5)" fg:x="8046" fg:w="2"/><text x="64.7625%" y="735.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="64.5125%" y="709" width="0.0160%" height="15" fill="rgb(234,111,33)" fg:x="8046" fg:w="2"/><text x="64.7625%" y="719.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="64.5125%" y="693" width="0.0160%" height="15" fill="rgb(251,14,10)" fg:x="8046" fg:w="2"/><text x="64.7625%" y="703.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (13 samples, 0.10%)</title><rect x="64.4323%" y="821" width="0.1042%" height="15" fill="rgb(232,43,0)" fg:x="8036" fg:w="13"/><text x="64.6823%" y="831.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (13 samples, 0.10%)</title><rect x="64.4323%" y="805" width="0.1042%" height="15" fill="rgb(222,68,43)" fg:x="8036" fg:w="13"/><text x="64.6823%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (11 samples, 0.09%)</title><rect x="64.4484%" y="789" width="0.0882%" height="15" fill="rgb(217,24,23)" fg:x="8038" fg:w="11"/><text x="64.6984%" y="799.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (3 samples, 0.02%)</title><rect x="64.5125%" y="773" width="0.0241%" height="15" fill="rgb(229,209,14)" fg:x="8046" fg:w="3"/><text x="64.7625%" y="783.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (38 samples, 0.30%)</title><rect x="64.2479%" y="837" width="0.3047%" height="15" fill="rgb(250,149,48)" fg:x="8013" fg:w="38"/><text x="64.4979%" y="847.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="64.5526%" y="805" width="0.0160%" height="15" fill="rgb(210,120,37)" fg:x="8051" fg:w="2"/><text x="64.8026%" y="815.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.02%)</title><rect x="64.6729%" y="661" width="0.0241%" height="15" fill="rgb(210,21,8)" fg:x="8066" fg:w="3"/><text x="64.9229%" y="671.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="64.6729%" y="645" width="0.0241%" height="15" fill="rgb(243,145,7)" fg:x="8066" fg:w="3"/><text x="64.9229%" y="655.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="64.6809%" y="629" width="0.0160%" height="15" fill="rgb(238,178,32)" fg:x="8067" fg:w="2"/><text x="64.9309%" y="639.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="64.6809%" y="613" width="0.0160%" height="15" fill="rgb(222,4,10)" fg:x="8067" fg:w="2"/><text x="64.9309%" y="623.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="64.6809%" y="597" width="0.0160%" height="15" fill="rgb(239,7,37)" fg:x="8067" fg:w="2"/><text x="64.9309%" y="607.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="64.6809%" y="581" width="0.0160%" height="15" fill="rgb(215,31,37)" fg:x="8067" fg:w="2"/><text x="64.9309%" y="591.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="64.6809%" y="565" width="0.0160%" height="15" fill="rgb(224,83,33)" fg:x="8067" fg:w="2"/><text x="64.9309%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (14 samples, 0.11%)</title><rect x="64.6007%" y="693" width="0.1123%" height="15" fill="rgb(239,55,3)" fg:x="8057" fg:w="14"/><text x="64.8507%" y="703.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (5 samples, 0.04%)</title><rect x="64.6729%" y="677" width="0.0401%" height="15" fill="rgb(247,92,11)" fg:x="8066" fg:w="5"/><text x="64.9229%" y="687.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (2 samples, 0.02%)</title><rect x="64.6969%" y="661" width="0.0160%" height="15" fill="rgb(239,200,7)" fg:x="8069" fg:w="2"/><text x="64.9469%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="64.7130%" y="693" width="0.0160%" height="15" fill="rgb(227,115,8)" fg:x="8071" fg:w="2"/><text x="64.9630%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (2 samples, 0.02%)</title><rect x="64.7130%" y="677" width="0.0160%" height="15" fill="rgb(215,189,27)" fg:x="8071" fg:w="2"/><text x="64.9630%" y="687.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="64.7130%" y="661" width="0.0160%" height="15" fill="rgb(251,216,39)" fg:x="8071" fg:w="2"/><text x="64.9630%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (19 samples, 0.15%)</title><rect x="64.5847%" y="757" width="0.1523%" height="15" fill="rgb(207,29,47)" fg:x="8055" fg:w="19"/><text x="64.8347%" y="767.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (19 samples, 0.15%)</title><rect x="64.5847%" y="741" width="0.1523%" height="15" fill="rgb(210,71,34)" fg:x="8055" fg:w="19"/><text x="64.8347%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (19 samples, 0.15%)</title><rect x="64.5847%" y="725" width="0.1523%" height="15" fill="rgb(253,217,51)" fg:x="8055" fg:w="19"/><text x="64.8347%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (18 samples, 0.14%)</title><rect x="64.5927%" y="709" width="0.1443%" height="15" fill="rgb(222,117,46)" fg:x="8056" fg:w="18"/><text x="64.8427%" y="719.50"></text></g><g><title>tracing_core::dispatcher::get_default (23 samples, 0.18%)</title><rect x="64.5686%" y="805" width="0.1844%" height="15" fill="rgb(226,132,6)" fg:x="8053" fg:w="23"/><text x="64.8186%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.18%)</title><rect x="64.5686%" y="789" width="0.1844%" height="15" fill="rgb(254,145,51)" fg:x="8053" fg:w="23"/><text x="64.8186%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default::_{{closure}} (22 samples, 0.18%)</title><rect x="64.5767%" y="773" width="0.1764%" height="15" fill="rgb(231,199,27)" fg:x="8054" fg:w="22"/><text x="64.8267%" y="783.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (2 samples, 0.02%)</title><rect x="64.7370%" y="757" width="0.0160%" height="15" fill="rgb(245,158,14)" fg:x="8074" fg:w="2"/><text x="64.9870%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (66 samples, 0.53%)</title><rect x="64.2479%" y="917" width="0.5292%" height="15" fill="rgb(240,113,14)" fg:x="8013" fg:w="66"/><text x="64.4979%" y="927.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (66 samples, 0.53%)</title><rect x="64.2479%" y="901" width="0.5292%" height="15" fill="rgb(210,20,13)" fg:x="8013" fg:w="66"/><text x="64.4979%" y="911.50"></text></g><g><title>tracing::span::Span::do_exit (66 samples, 0.53%)</title><rect x="64.2479%" y="885" width="0.5292%" height="15" fill="rgb(241,144,13)" fg:x="8013" fg:w="66"/><text x="64.4979%" y="895.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (66 samples, 0.53%)</title><rect x="64.2479%" y="869" width="0.5292%" height="15" fill="rgb(235,43,34)" fg:x="8013" fg:w="66"/><text x="64.4979%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (66 samples, 0.53%)</title><rect x="64.2479%" y="853" width="0.5292%" height="15" fill="rgb(208,36,20)" fg:x="8013" fg:w="66"/><text x="64.4979%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (28 samples, 0.22%)</title><rect x="64.5526%" y="837" width="0.2245%" height="15" fill="rgb(239,204,10)" fg:x="8051" fg:w="28"/><text x="64.8026%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (28 samples, 0.22%)</title><rect x="64.5526%" y="821" width="0.2245%" height="15" fill="rgb(217,84,43)" fg:x="8051" fg:w="28"/><text x="64.8026%" y="831.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::pop (3 samples, 0.02%)</title><rect x="64.7530%" y="805" width="0.0241%" height="15" fill="rgb(241,170,50)" fg:x="8076" fg:w="3"/><text x="65.0030%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (3 samples, 0.02%)</title><rect x="64.7530%" y="789" width="0.0241%" height="15" fill="rgb(226,205,29)" fg:x="8076" fg:w="3"/><text x="65.0030%" y="799.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.02%)</title><rect x="64.7611%" y="773" width="0.0160%" height="15" fill="rgb(233,113,1)" fg:x="8077" fg:w="2"/><text x="65.0111%" y="783.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="64.7611%" y="757" width="0.0160%" height="15" fill="rgb(253,98,13)" fg:x="8077" fg:w="2"/><text x="65.0111%" y="767.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.03%)</title><rect x="64.7851%" y="837" width="0.0321%" height="15" fill="rgb(211,115,12)" fg:x="8080" fg:w="4"/><text x="65.0351%" y="847.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.03%)</title><rect x="64.7851%" y="821" width="0.0321%" height="15" fill="rgb(208,12,16)" fg:x="8080" fg:w="4"/><text x="65.0351%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.03%)</title><rect x="64.7851%" y="805" width="0.0321%" height="15" fill="rgb(237,193,54)" fg:x="8080" fg:w="4"/><text x="65.0351%" y="815.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.02%)</title><rect x="64.7931%" y="789" width="0.0241%" height="15" fill="rgb(243,22,42)" fg:x="8081" fg:w="3"/><text x="65.0431%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (4 samples, 0.03%)</title><rect x="64.8172%" y="837" width="0.0321%" height="15" fill="rgb(233,151,36)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (4 samples, 0.03%)</title><rect x="64.8172%" y="821" width="0.0321%" height="15" fill="rgb(237,57,45)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (4 samples, 0.03%)</title><rect x="64.8172%" y="805" width="0.0321%" height="15" fill="rgb(221,88,17)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="815.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="64.8172%" y="789" width="0.0321%" height="15" fill="rgb(230,79,15)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="64.8172%" y="773" width="0.0321%" height="15" fill="rgb(213,57,13)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (4 samples, 0.03%)</title><rect x="64.8172%" y="757" width="0.0321%" height="15" fill="rgb(222,116,39)" fg:x="8084" fg:w="4"/><text x="65.0672%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (4 samples, 0.03%)</title><rect x="64.8493%" y="837" width="0.0321%" height="15" fill="rgb(245,107,2)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (4 samples, 0.03%)</title><rect x="64.8493%" y="821" width="0.0321%" height="15" fill="rgb(238,1,10)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="831.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="64.8493%" y="805" width="0.0321%" height="15" fill="rgb(249,4,48)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="815.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (4 samples, 0.03%)</title><rect x="64.8493%" y="789" width="0.0321%" height="15" fill="rgb(223,151,18)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="799.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (4 samples, 0.03%)</title><rect x="64.8493%" y="773" width="0.0321%" height="15" fill="rgb(227,65,43)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="783.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (4 samples, 0.03%)</title><rect x="64.8493%" y="757" width="0.0321%" height="15" fill="rgb(218,40,45)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="767.50"></text></g><g><title>__GI___pthread_rwlock_unlock (4 samples, 0.03%)</title><rect x="64.8493%" y="741" width="0.0321%" height="15" fill="rgb(252,121,31)" fg:x="8088" fg:w="4"/><text x="65.0993%" y="751.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.06%)</title><rect x="64.8813%" y="837" width="0.0641%" height="15" fill="rgb(219,158,43)" fg:x="8092" fg:w="8"/><text x="65.1313%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.06%)</title><rect x="64.8813%" y="821" width="0.0641%" height="15" fill="rgb(231,162,42)" fg:x="8092" fg:w="8"/><text x="65.1313%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.06%)</title><rect x="64.8813%" y="805" width="0.0641%" height="15" fill="rgb(217,179,25)" fg:x="8092" fg:w="8"/><text x="65.1313%" y="815.50"></text></g><g><title>__clock_gettime (8 samples, 0.06%)</title><rect x="64.8813%" y="789" width="0.0641%" height="15" fill="rgb(206,212,31)" fg:x="8092" fg:w="8"/><text x="65.1313%" y="799.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.06%)</title><rect x="64.8813%" y="773" width="0.0641%" height="15" fill="rgb(235,144,12)" fg:x="8092" fg:w="8"/><text x="65.1313%" y="783.50"></text></g><g><title>[[vdso]] (6 samples, 0.05%)</title><rect x="64.8974%" y="757" width="0.0481%" height="15" fill="rgb(213,51,10)" fg:x="8094" fg:w="6"/><text x="65.1474%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="64.9455%" y="805" width="0.0160%" height="15" fill="rgb(231,145,14)" fg:x="8100" fg:w="2"/><text x="65.1955%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="64.9615%" y="789" width="0.0321%" height="15" fill="rgb(235,15,28)" fg:x="8102" fg:w="4"/><text x="65.2115%" y="799.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::span (10 samples, 0.08%)</title><rect x="64.9455%" y="837" width="0.0802%" height="15" fill="rgb(237,206,10)" fg:x="8100" fg:w="10"/><text x="65.1955%" y="847.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (10 samples, 0.08%)</title><rect x="64.9455%" y="821" width="0.0802%" height="15" fill="rgb(236,227,27)" fg:x="8100" fg:w="10"/><text x="65.1955%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (8 samples, 0.06%)</title><rect x="64.9615%" y="805" width="0.0641%" height="15" fill="rgb(246,83,35)" fg:x="8102" fg:w="8"/><text x="65.2115%" y="815.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (4 samples, 0.03%)</title><rect x="64.9936%" y="789" width="0.0321%" height="15" fill="rgb(220,136,24)" fg:x="8106" fg:w="4"/><text x="65.2436%" y="799.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.03%)</title><rect x="64.9936%" y="773" width="0.0321%" height="15" fill="rgb(217,3,25)" fg:x="8106" fg:w="4"/><text x="65.2436%" y="783.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="65.0016%" y="757" width="0.0241%" height="15" fill="rgb(239,24,14)" fg:x="8107" fg:w="3"/><text x="65.2516%" y="767.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (3 samples, 0.02%)</title><rect x="65.0016%" y="741" width="0.0241%" height="15" fill="rgb(244,16,53)" fg:x="8107" fg:w="3"/><text x="65.2516%" y="751.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="65.0016%" y="725" width="0.0241%" height="15" fill="rgb(208,175,44)" fg:x="8107" fg:w="3"/><text x="65.2516%" y="735.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (3 samples, 0.02%)</title><rect x="65.0016%" y="709" width="0.0241%" height="15" fill="rgb(252,18,48)" fg:x="8107" fg:w="3"/><text x="65.2516%" y="719.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="65.0096%" y="693" width="0.0160%" height="15" fill="rgb(234,199,32)" fg:x="8108" fg:w="2"/><text x="65.2596%" y="703.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="65.0096%" y="677" width="0.0160%" height="15" fill="rgb(225,77,54)" fg:x="8108" fg:w="2"/><text x="65.2596%" y="687.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (4 samples, 0.03%)</title><rect x="65.0257%" y="837" width="0.0321%" height="15" fill="rgb(225,42,25)" fg:x="8110" fg:w="4"/><text x="65.2757%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (3 samples, 0.02%)</title><rect x="65.0337%" y="821" width="0.0241%" height="15" fill="rgb(242,227,46)" fg:x="8111" fg:w="3"/><text x="65.2837%" y="831.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="65.0337%" y="805" width="0.0241%" height="15" fill="rgb(246,197,35)" fg:x="8111" fg:w="3"/><text x="65.2837%" y="815.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="65.0337%" y="789" width="0.0241%" height="15" fill="rgb(215,159,26)" fg:x="8111" fg:w="3"/><text x="65.2837%" y="799.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.02%)</title><rect x="65.0337%" y="773" width="0.0241%" height="15" fill="rgb(212,194,50)" fg:x="8111" fg:w="3"/><text x="65.2837%" y="783.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="65.0337%" y="757" width="0.0241%" height="15" fill="rgb(246,132,1)" fg:x="8111" fg:w="3"/><text x="65.2837%" y="767.50"></text></g><g><title>&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (36 samples, 0.29%)</title><rect x="64.7771%" y="853" width="0.2886%" height="15" fill="rgb(217,71,7)" fg:x="8079" fg:w="36"/><text x="65.0271%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (13 samples, 0.10%)</title><rect x="65.1299%" y="821" width="0.1042%" height="15" fill="rgb(252,59,32)" fg:x="8123" fg:w="13"/><text x="65.3799%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (5 samples, 0.04%)</title><rect x="65.2341%" y="821" width="0.0401%" height="15" fill="rgb(253,204,25)" fg:x="8136" fg:w="5"/><text x="65.4841%" y="831.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="65.2341%" y="805" width="0.0401%" height="15" fill="rgb(232,21,16)" fg:x="8136" fg:w="5"/><text x="65.4841%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="65.2341%" y="789" width="0.0401%" height="15" fill="rgb(248,90,29)" fg:x="8136" fg:w="5"/><text x="65.4841%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (5 samples, 0.04%)</title><rect x="65.2341%" y="773" width="0.0401%" height="15" fill="rgb(249,223,7)" fg:x="8136" fg:w="5"/><text x="65.4841%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (24 samples, 0.19%)</title><rect x="65.0978%" y="837" width="0.1924%" height="15" fill="rgb(231,119,42)" fg:x="8119" fg:w="24"/><text x="65.3478%" y="847.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (2 samples, 0.02%)</title><rect x="65.2742%" y="821" width="0.0160%" height="15" fill="rgb(215,41,35)" fg:x="8141" fg:w="2"/><text x="65.5242%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="65.2903%" y="821" width="0.0160%" height="15" fill="rgb(220,44,45)" fg:x="8143" fg:w="2"/><text x="65.5403%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="65.2903%" y="805" width="0.0160%" height="15" fill="rgb(253,197,36)" fg:x="8143" fg:w="2"/><text x="65.5403%" y="815.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="65.2903%" y="789" width="0.0160%" height="15" fill="rgb(245,225,54)" fg:x="8143" fg:w="2"/><text x="65.5403%" y="799.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (5 samples, 0.04%)</title><rect x="65.3063%" y="773" width="0.0401%" height="15" fill="rgb(239,94,37)" fg:x="8145" fg:w="5"/><text x="65.5563%" y="783.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (7 samples, 0.06%)</title><rect x="65.3063%" y="821" width="0.0561%" height="15" fill="rgb(242,217,10)" fg:x="8145" fg:w="7"/><text x="65.5563%" y="831.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (7 samples, 0.06%)</title><rect x="65.3063%" y="805" width="0.0561%" height="15" fill="rgb(250,193,7)" fg:x="8145" fg:w="7"/><text x="65.5563%" y="815.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (7 samples, 0.06%)</title><rect x="65.3063%" y="789" width="0.0561%" height="15" fill="rgb(230,104,19)" fg:x="8145" fg:w="7"/><text x="65.5563%" y="799.50"></text></g><g><title>thread_local::thread_id::get (2 samples, 0.02%)</title><rect x="65.3464%" y="773" width="0.0160%" height="15" fill="rgb(230,181,4)" fg:x="8150" fg:w="2"/><text x="65.5964%" y="783.50"></text></g><g><title>tracing::span::Span::in_scope (143 samples, 1.15%)</title><rect x="64.2479%" y="933" width="1.1466%" height="15" fill="rgb(216,219,49)" fg:x="8013" fg:w="143"/><text x="64.4979%" y="943.50"></text></g><g><title>tracing::span::Span::enter (77 samples, 0.62%)</title><rect x="64.7771%" y="917" width="0.6174%" height="15" fill="rgb(254,144,0)" fg:x="8079" fg:w="77"/><text x="65.0271%" y="927.50"></text></g><g><title>tracing::span::Span::do_enter (77 samples, 0.62%)</title><rect x="64.7771%" y="901" width="0.6174%" height="15" fill="rgb(205,209,38)" fg:x="8079" fg:w="77"/><text x="65.0271%" y="911.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (77 samples, 0.62%)</title><rect x="64.7771%" y="885" width="0.6174%" height="15" fill="rgb(240,21,42)" fg:x="8079" fg:w="77"/><text x="65.0271%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (77 samples, 0.62%)</title><rect x="64.7771%" y="869" width="0.6174%" height="15" fill="rgb(241,132,3)" fg:x="8079" fg:w="77"/><text x="65.0271%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (41 samples, 0.33%)</title><rect x="65.0657%" y="853" width="0.3287%" height="15" fill="rgb(225,14,2)" fg:x="8115" fg:w="41"/><text x="65.3157%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (13 samples, 0.10%)</title><rect x="65.2903%" y="837" width="0.1042%" height="15" fill="rgb(210,141,35)" fg:x="8143" fg:w="13"/><text x="65.5403%" y="847.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::push (4 samples, 0.03%)</title><rect x="65.3624%" y="821" width="0.0321%" height="15" fill="rgb(251,14,44)" fg:x="8152" fg:w="4"/><text x="65.6124%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.03%)</title><rect x="65.3624%" y="805" width="0.0321%" height="15" fill="rgb(247,48,18)" fg:x="8152" fg:w="4"/><text x="65.6124%" y="815.50"></text></g><g><title>core::ptr::write (4 samples, 0.03%)</title><rect x="65.3624%" y="789" width="0.0321%" height="15" fill="rgb(225,0,40)" fg:x="8152" fg:w="4"/><text x="65.6124%" y="799.50"></text></g><g><title>fred::trace::enabled::set_network_span (841 samples, 6.74%)</title><rect x="58.6835%" y="949" width="6.7431%" height="15" fill="rgb(221,31,33)" fg:x="7319" fg:w="841"/><text x="58.9335%" y="959.50">fred::tra..</text></g><g><title>tracing_core::field::FieldSet::iter (4 samples, 0.03%)</title><rect x="65.3945%" y="933" width="0.0321%" height="15" fill="rgb(237,42,40)" fg:x="8156" fg:w="4"/><text x="65.6445%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="65.4266%" y="933" width="0.0321%" height="15" fill="rgb(233,51,29)" fg:x="8160" fg:w="4"/><text x="65.6766%" y="943.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="65.4266%" y="917" width="0.0321%" height="15" fill="rgb(226,58,20)" fg:x="8160" fg:w="4"/><text x="65.6766%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.03%)</title><rect x="65.4266%" y="901" width="0.0321%" height="15" fill="rgb(208,98,7)" fg:x="8160" fg:w="4"/><text x="65.6766%" y="911.50"></text></g><g><title>fred::utils::is_locked_some (16 samples, 0.13%)</title><rect x="65.4266%" y="949" width="0.1283%" height="15" fill="rgb(228,143,44)" fg:x="8160" fg:w="16"/><text x="65.6766%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (12 samples, 0.10%)</title><rect x="65.4586%" y="933" width="0.0962%" height="15" fill="rgb(246,55,38)" fg:x="8164" fg:w="12"/><text x="65.7086%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (12 samples, 0.10%)</title><rect x="65.4586%" y="917" width="0.0962%" height="15" fill="rgb(247,87,16)" fg:x="8164" fg:w="12"/><text x="65.7086%" y="927.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (10 samples, 0.08%)</title><rect x="65.4747%" y="901" width="0.0802%" height="15" fill="rgb(234,129,42)" fg:x="8166" fg:w="10"/><text x="65.7247%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,572 samples, 20.62%)</title><rect x="44.9808%" y="981" width="20.6222%" height="15" fill="rgb(220,82,16)" fg:x="5610" fg:w="2572"/><text x="45.2308%" y="991.50">&lt;core::future::from_generator::G..</text></g><g><title>fred::protocol::connection::write_command::_{{closure}} (2,565 samples, 20.57%)</title><rect x="45.0369%" y="965" width="20.5661%" height="15" fill="rgb(211,88,4)" fg:x="5617" fg:w="2565"/><text x="45.2869%" y="975.50">fred::protocol::connection::writ..</text></g><g><title>std::time::Instant::now (6 samples, 0.05%)</title><rect x="65.5548%" y="949" width="0.0481%" height="15" fill="rgb(248,151,21)" fg:x="8176" fg:w="6"/><text x="65.8048%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.04%)</title><rect x="65.5629%" y="933" width="0.0401%" height="15" fill="rgb(238,163,6)" fg:x="8177" fg:w="5"/><text x="65.8129%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.04%)</title><rect x="65.5629%" y="917" width="0.0401%" height="15" fill="rgb(209,183,11)" fg:x="8177" fg:w="5"/><text x="65.8129%" y="927.50"></text></g><g><title>__clock_gettime (5 samples, 0.04%)</title><rect x="65.5629%" y="901" width="0.0401%" height="15" fill="rgb(219,37,20)" fg:x="8177" fg:w="5"/><text x="65.8129%" y="911.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.04%)</title><rect x="65.5629%" y="885" width="0.0401%" height="15" fill="rgb(210,158,4)" fg:x="8177" fg:w="5"/><text x="65.8129%" y="895.50"></text></g><g><title>[[vdso]] (4 samples, 0.03%)</title><rect x="65.5709%" y="869" width="0.0321%" height="15" fill="rgb(221,167,53)" fg:x="8178" fg:w="4"/><text x="65.8209%" y="879.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.06%)</title><rect x="65.6030%" y="981" width="0.0641%" height="15" fill="rgb(237,151,45)" fg:x="8182" fg:w="8"/><text x="65.8530%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_back (4 samples, 0.03%)</title><rect x="65.6751%" y="981" width="0.0321%" height="15" fill="rgb(231,39,3)" fg:x="8191" fg:w="4"/><text x="65.9251%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (4 samples, 0.03%)</title><rect x="65.6751%" y="965" width="0.0321%" height="15" fill="rgb(212,167,28)" fg:x="8191" fg:w="4"/><text x="65.9251%" y="975.50"></text></g><g><title>core::ptr::write (4 samples, 0.03%)</title><rect x="65.6751%" y="949" width="0.0321%" height="15" fill="rgb(232,178,8)" fg:x="8191" fg:w="4"/><text x="65.9251%" y="959.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="65.6751%" y="933" width="0.0321%" height="15" fill="rgb(225,151,20)" fg:x="8191" fg:w="4"/><text x="65.9251%" y="943.50"></text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1157" width="20.8066%" height="15" fill="rgb(238,3,37)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1167.50">fred::multiplexer::commands::hand..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1141" width="20.8066%" height="15" fill="rgb(251,147,42)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1151.50">&lt;core::future::from_generator::Ge..</text></g><g><title>fred::multiplexer::commands::write_command_t::_{{closure}} (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1125" width="20.8066%" height="15" fill="rgb(208,173,10)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1135.50">fred::multiplexer::commands::writ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1109" width="20.8066%" height="15" fill="rgb(246,225,4)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1119.50">&lt;core::future::from_generator::Ge..</text></g><g><title>fred::multiplexer::commands::write_command::_{{closure}} (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1093" width="20.8066%" height="15" fill="rgb(248,102,6)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1103.50">fred::multiplexer::commands::writ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1077" width="20.8066%" height="15" fill="rgb(232,6,21)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1087.50">&lt;core::future::from_generator::Ge..</text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1061" width="20.8066%" height="15" fill="rgb(221,179,22)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1071.50">fred::multiplexer::Multiplexer::w..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1045" width="20.8066%" height="15" fill="rgb(252,50,20)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1055.50">&lt;core::future::from_generator::Ge..</text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1029" width="20.8066%" height="15" fill="rgb(222,56,38)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1039.50">fred::multiplexer::utils::write_c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,595 samples, 20.81%)</title><rect x="44.9086%" y="1013" width="20.8066%" height="15" fill="rgb(206,193,29)" fg:x="5601" fg:w="2595"/><text x="45.1586%" y="1023.50">&lt;core::future::from_generator::Ge..</text></g><g><title>fred::multiplexer::utils::write_command::_{{closure}} (2,588 samples, 20.75%)</title><rect x="44.9647%" y="997" width="20.7505%" height="15" fill="rgb(239,192,45)" fg:x="5608" fg:w="2588"/><text x="45.2147%" y="1007.50">fred::multiplexer::utils::write_c..</text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="65.7393%" y="869" width="0.0160%" height="15" fill="rgb(254,18,36)" fg:x="8199" fg:w="2"/><text x="65.9893%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="65.8435%" y="853" width="0.0241%" height="15" fill="rgb(221,127,11)" fg:x="8212" fg:w="3"/><text x="66.0935%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.03%)</title><rect x="65.8675%" y="853" width="0.0321%" height="15" fill="rgb(234,146,35)" fg:x="8215" fg:w="4"/><text x="66.1175%" y="863.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="65.8836%" y="837" width="0.0160%" height="15" fill="rgb(254,201,37)" fg:x="8217" fg:w="2"/><text x="66.1336%" y="847.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="65.8996%" y="853" width="0.0481%" height="15" fill="rgb(211,202,23)" fg:x="8219" fg:w="6"/><text x="66.1496%" y="863.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (36 samples, 0.29%)</title><rect x="65.7152%" y="901" width="0.2886%" height="15" fill="rgb(237,91,2)" fg:x="8196" fg:w="36"/><text x="65.9652%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.29%)</title><rect x="65.7152%" y="885" width="0.2886%" height="15" fill="rgb(226,228,36)" fg:x="8196" fg:w="36"/><text x="65.9652%" y="895.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (31 samples, 0.25%)</title><rect x="65.7553%" y="869" width="0.2486%" height="15" fill="rgb(213,63,50)" fg:x="8201" fg:w="31"/><text x="66.0053%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::responses::process_centralized_frame::{{closure}}&gt;&gt; (7 samples, 0.06%)</title><rect x="65.9477%" y="853" width="0.0561%" height="15" fill="rgb(235,194,19)" fg:x="8225" fg:w="7"/><text x="66.1977%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::responses::process_centralized_frame::{{closure}}&gt; (5 samples, 0.04%)</title><rect x="65.9638%" y="837" width="0.0401%" height="15" fill="rgb(207,204,18)" fg:x="8227" fg:w="5"/><text x="66.2138%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.04%)</title><rect x="66.0119%" y="837" width="0.0401%" height="15" fill="rgb(248,8,7)" fg:x="8233" fg:w="5"/><text x="66.2619%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.03%)</title><rect x="66.0680%" y="805" width="0.0321%" height="15" fill="rgb(223,145,47)" fg:x="8240" fg:w="4"/><text x="66.3180%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (2 samples, 0.02%)</title><rect x="66.0840%" y="789" width="0.0160%" height="15" fill="rgb(228,84,11)" fg:x="8242" fg:w="2"/><text x="66.3340%" y="799.50"></text></g><g><title>bytes::bytes_mut::increment_shared (2 samples, 0.02%)</title><rect x="66.0840%" y="773" width="0.0160%" height="15" fill="rgb(218,76,45)" fg:x="8242" fg:w="2"/><text x="66.3340%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (2 samples, 0.02%)</title><rect x="66.1001%" y="773" width="0.0160%" height="15" fill="rgb(223,80,15)" fg:x="8244" fg:w="2"/><text x="66.3501%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (5 samples, 0.04%)</title><rect x="66.1001%" y="805" width="0.0401%" height="15" fill="rgb(219,218,33)" fg:x="8244" fg:w="5"/><text x="66.3501%" y="815.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="66.1001%" y="789" width="0.0401%" height="15" fill="rgb(208,51,11)" fg:x="8244" fg:w="5"/><text x="66.3501%" y="799.50"></text></g><g><title>bytes::bytes_mut::release_shared (3 samples, 0.02%)</title><rect x="66.1161%" y="773" width="0.0241%" height="15" fill="rgb(229,165,39)" fg:x="8246" fg:w="3"/><text x="66.3661%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::SizeStats&gt;&gt; (10 samples, 0.08%)</title><rect x="66.1402%" y="805" width="0.0802%" height="15" fill="rgb(241,100,24)" fg:x="8249" fg:w="10"/><text x="66.3902%" y="815.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.08%)</title><rect x="66.1402%" y="789" width="0.0802%" height="15" fill="rgb(228,14,23)" fg:x="8249" fg:w="10"/><text x="66.3902%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (10 samples, 0.08%)</title><rect x="66.1402%" y="773" width="0.0802%" height="15" fill="rgb(247,116,52)" fg:x="8249" fg:w="10"/><text x="66.3902%" y="783.50"></text></g><g><title>fred::metrics::SizeStats::sample (8 samples, 0.06%)</title><rect x="66.2203%" y="805" width="0.0641%" height="15" fill="rgb(216,149,33)" fg:x="8259" fg:w="8"/><text x="66.4703%" y="815.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (6 samples, 0.05%)</title><rect x="66.2845%" y="805" width="0.0481%" height="15" fill="rgb(238,142,29)" fg:x="8267" fg:w="6"/><text x="66.5345%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (6 samples, 0.05%)</title><rect x="66.2845%" y="789" width="0.0481%" height="15" fill="rgb(224,83,40)" fg:x="8267" fg:w="6"/><text x="66.5345%" y="799.50"></text></g><g><title>redis_protocol::decode::frame_type (9 samples, 0.07%)</title><rect x="66.4529%" y="757" width="0.0722%" height="15" fill="rgb(234,165,11)" fg:x="8288" fg:w="9"/><text x="66.7029%" y="767.50"></text></g><g><title>core::str::converts::from_utf8 (10 samples, 0.08%)</title><rect x="66.5571%" y="725" width="0.0802%" height="15" fill="rgb(215,96,23)" fg:x="8301" fg:w="10"/><text x="66.8071%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (4 samples, 0.03%)</title><rect x="66.6052%" y="709" width="0.0321%" height="15" fill="rgb(233,179,26)" fg:x="8307" fg:w="4"/><text x="66.8552%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.03%)</title><rect x="66.6854%" y="693" width="0.0321%" height="15" fill="rgb(225,129,33)" fg:x="8317" fg:w="4"/><text x="66.9354%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.03%)</title><rect x="66.6854%" y="677" width="0.0321%" height="15" fill="rgb(237,49,13)" fg:x="8317" fg:w="4"/><text x="66.9354%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.03%)</title><rect x="66.6854%" y="661" width="0.0321%" height="15" fill="rgb(211,3,31)" fg:x="8317" fg:w="4"/><text x="66.9354%" y="671.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.02%)</title><rect x="66.6934%" y="645" width="0.0241%" height="15" fill="rgb(216,152,19)" fg:x="8318" fg:w="3"/><text x="66.9434%" y="655.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::FindSubstring&lt;&amp;[u8]&gt;&gt;::find_substring (9 samples, 0.07%)</title><rect x="66.6693%" y="709" width="0.0722%" height="15" fill="rgb(251,121,35)" fg:x="8315" fg:w="9"/><text x="66.9193%" y="719.50"></text></g><g><title>memchr::memchr::memchr (3 samples, 0.02%)</title><rect x="66.7174%" y="693" width="0.0241%" height="15" fill="rgb(210,217,47)" fg:x="8321" fg:w="3"/><text x="66.9674%" y="703.50"></text></g><g><title>memchr::memchr::memchr::imp (3 samples, 0.02%)</title><rect x="66.7174%" y="677" width="0.0241%" height="15" fill="rgb(244,116,22)" fg:x="8321" fg:w="3"/><text x="66.9674%" y="687.50"></text></g><g><title>memchr::memchr::x86::memchr (3 samples, 0.02%)</title><rect x="66.7174%" y="661" width="0.0241%" height="15" fill="rgb(228,17,21)" fg:x="8321" fg:w="3"/><text x="66.9674%" y="671.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (2 samples, 0.02%)</title><rect x="66.7255%" y="645" width="0.0160%" height="15" fill="rgb(240,149,34)" fg:x="8322" fg:w="2"/><text x="66.9755%" y="655.50"></text></g><g><title>redis_protocol::decode::read_to_crlf_s (28 samples, 0.22%)</title><rect x="66.5250%" y="741" width="0.2245%" height="15" fill="rgb(208,125,47)" fg:x="8297" fg:w="28"/><text x="66.7750%" y="751.50"></text></g><g><title>redis_protocol::decode::read_to_crlf (14 samples, 0.11%)</title><rect x="66.6373%" y="725" width="0.1123%" height="15" fill="rgb(249,186,39)" fg:x="8311" fg:w="14"/><text x="66.8873%" y="735.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::decoder::Decoder&gt;::decode (93 samples, 0.75%)</title><rect x="66.0520%" y="837" width="0.7457%" height="15" fill="rgb(240,220,33)" fg:x="8238" fg:w="93"/><text x="66.3020%" y="847.50"></text></g><g><title>fred::protocol::codec::decode_frame (92 samples, 0.74%)</title><rect x="66.0600%" y="821" width="0.7377%" height="15" fill="rgb(243,110,23)" fg:x="8239" fg:w="92"/><text x="66.3100%" y="831.50"></text></g><g><title>redis_protocol::decode::decode_bytes (58 samples, 0.47%)</title><rect x="66.3326%" y="805" width="0.4650%" height="15" fill="rgb(219,163,46)" fg:x="8273" fg:w="58"/><text x="66.5826%" y="815.50"></text></g><g><title>redis_protocol::decode::decode (53 samples, 0.42%)</title><rect x="66.3727%" y="789" width="0.4250%" height="15" fill="rgb(216,126,30)" fg:x="8278" fg:w="53"/><text x="66.6227%" y="799.50"></text></g><g><title>redis_protocol::decode::parse_frame (50 samples, 0.40%)</title><rect x="66.3967%" y="773" width="0.4009%" height="15" fill="rgb(208,139,11)" fg:x="8281" fg:w="50"/><text x="66.6467%" y="783.50"></text></g><g><title>redis_protocol::decode::parse_integer (34 samples, 0.27%)</title><rect x="66.5250%" y="757" width="0.2726%" height="15" fill="rgb(213,118,36)" fg:x="8297" fg:w="34"/><text x="66.7750%" y="767.50"></text></g><g><title>redis_protocol::decode::to_i64 (6 samples, 0.05%)</title><rect x="66.7495%" y="741" width="0.0481%" height="15" fill="rgb(226,43,17)" fg:x="8325" fg:w="6"/><text x="66.9995%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.05%)</title><rect x="66.7495%" y="725" width="0.0481%" height="15" fill="rgb(254,217,4)" fg:x="8325" fg:w="6"/><text x="66.9995%" y="735.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for i64&gt;::from_str (6 samples, 0.05%)</title><rect x="66.7495%" y="709" width="0.0481%" height="15" fill="rgb(210,134,47)" fg:x="8325" fg:w="6"/><text x="66.9995%" y="719.50"></text></g><g><title>core::num::from_str_radix (6 samples, 0.05%)</title><rect x="66.7495%" y="693" width="0.0481%" height="15" fill="rgb(237,24,49)" fg:x="8325" fg:w="6"/><text x="66.9995%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (2 samples, 0.02%)</title><rect x="66.7816%" y="677" width="0.0160%" height="15" fill="rgb(251,39,46)" fg:x="8329" fg:w="2"/><text x="67.0316%" y="687.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::RWFrames as core::borrow::BorrowMut&lt;tokio_util::codec::framed_impl::ReadFrame&gt;&gt;::borrow_mut (4 samples, 0.03%)</title><rect x="66.8056%" y="837" width="0.0321%" height="15" fill="rgb(251,220,3)" fg:x="8332" fg:w="4"/><text x="67.0556%" y="847.50"></text></g><g><title>tokio::io::driver::Handle::inner (2 samples, 0.02%)</title><rect x="66.8858%" y="725" width="0.0160%" height="15" fill="rgb(228,105,12)" fg:x="8342" fg:w="2"/><text x="67.1358%" y="735.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (2 samples, 0.02%)</title><rect x="66.8858%" y="709" width="0.0160%" height="15" fill="rgb(215,196,1)" fg:x="8342" fg:w="2"/><text x="67.1358%" y="719.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (4 samples, 0.03%)</title><rect x="66.8778%" y="741" width="0.0321%" height="15" fill="rgb(214,33,39)" fg:x="8341" fg:w="4"/><text x="67.1278%" y="751.50"></text></g><g><title>skb_release_all (2 samples, 0.02%)</title><rect x="67.0141%" y="469" width="0.0160%" height="15" fill="rgb(220,19,52)" fg:x="8358" fg:w="2"/><text x="67.2641%" y="479.50"></text></g><g><title>skb_release_head_state (2 samples, 0.02%)</title><rect x="67.0141%" y="453" width="0.0160%" height="15" fill="rgb(221,78,38)" fg:x="8358" fg:w="2"/><text x="67.2641%" y="463.50"></text></g><g><title>__kfree_skb (4 samples, 0.03%)</title><rect x="67.0141%" y="485" width="0.0321%" height="15" fill="rgb(253,30,16)" fg:x="8358" fg:w="4"/><text x="67.2641%" y="495.50"></text></g><g><title>skb_release_data (2 samples, 0.02%)</title><rect x="67.0301%" y="469" width="0.0160%" height="15" fill="rgb(242,65,0)" fg:x="8360" fg:w="2"/><text x="67.2801%" y="479.50"></text></g><g><title>kmem_cache_free (3 samples, 0.02%)</title><rect x="67.0542%" y="485" width="0.0241%" height="15" fill="rgb(235,201,12)" fg:x="8363" fg:w="3"/><text x="67.3042%" y="495.50"></text></g><g><title>__slab_free (3 samples, 0.02%)</title><rect x="67.0542%" y="469" width="0.0241%" height="15" fill="rgb(233,161,9)" fg:x="8363" fg:w="3"/><text x="67.3042%" y="479.50"></text></g><g><title>lock_sock_nested (3 samples, 0.02%)</title><rect x="67.0783%" y="485" width="0.0241%" height="15" fill="rgb(241,207,41)" fg:x="8366" fg:w="3"/><text x="67.3283%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="67.0783%" y="469" width="0.0241%" height="15" fill="rgb(212,69,46)" fg:x="8366" fg:w="3"/><text x="67.3283%" y="479.50"></text></g><g><title>native_queued_spin_lock_slowpath (3 samples, 0.02%)</title><rect x="67.0783%" y="453" width="0.0241%" height="15" fill="rgb(239,69,45)" fg:x="8366" fg:w="3"/><text x="67.3283%" y="463.50"></text></g><g><title>__release_sock (2 samples, 0.02%)</title><rect x="67.1023%" y="469" width="0.0160%" height="15" fill="rgb(242,117,48)" fg:x="8369" fg:w="2"/><text x="67.3523%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="67.1023%" y="453" width="0.0160%" height="15" fill="rgb(228,41,36)" fg:x="8369" fg:w="2"/><text x="67.3523%" y="463.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="67.1023%" y="437" width="0.0160%" height="15" fill="rgb(212,3,32)" fg:x="8369" fg:w="2"/><text x="67.3523%" y="447.50"></text></g><g><title>release_sock (3 samples, 0.02%)</title><rect x="67.1023%" y="485" width="0.0241%" height="15" fill="rgb(233,41,49)" fg:x="8369" fg:w="3"/><text x="67.3523%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (9 samples, 0.07%)</title><rect x="67.1264%" y="485" width="0.0722%" height="15" fill="rgb(252,170,49)" fg:x="8372" fg:w="9"/><text x="67.3764%" y="495.50"></text></g><g><title>_copy_to_iter (5 samples, 0.04%)</title><rect x="67.1584%" y="469" width="0.0401%" height="15" fill="rgb(229,53,26)" fg:x="8376" fg:w="5"/><text x="67.4084%" y="479.50"></text></g><g><title>copyout (4 samples, 0.03%)</title><rect x="67.1665%" y="453" width="0.0321%" height="15" fill="rgb(217,157,12)" fg:x="8377" fg:w="4"/><text x="67.4165%" y="463.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.02%)</title><rect x="67.1745%" y="437" width="0.0241%" height="15" fill="rgb(227,17,9)" fg:x="8378" fg:w="3"/><text x="67.4245%" y="447.50"></text></g><g><title>tcp_cleanup_rbuf (3 samples, 0.02%)</title><rect x="67.1985%" y="485" width="0.0241%" height="15" fill="rgb(218,84,12)" fg:x="8381" fg:w="3"/><text x="67.4485%" y="495.50"></text></g><g><title>inet_recvmsg (33 samples, 0.26%)</title><rect x="66.9660%" y="517" width="0.2646%" height="15" fill="rgb(212,79,24)" fg:x="8352" fg:w="33"/><text x="67.2160%" y="527.50"></text></g><g><title>tcp_recvmsg (33 samples, 0.26%)</title><rect x="66.9660%" y="501" width="0.2646%" height="15" fill="rgb(217,222,37)" fg:x="8352" fg:w="33"/><text x="67.2160%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.36%)</title><rect x="66.9259%" y="581" width="0.3608%" height="15" fill="rgb(246,208,8)" fg:x="8347" fg:w="45"/><text x="67.1759%" y="591.50"></text></g><g><title>do_syscall_64 (44 samples, 0.35%)</title><rect x="66.9339%" y="565" width="0.3528%" height="15" fill="rgb(244,133,10)" fg:x="8348" fg:w="44"/><text x="67.1839%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (44 samples, 0.35%)</title><rect x="66.9339%" y="549" width="0.3528%" height="15" fill="rgb(209,219,41)" fg:x="8348" fg:w="44"/><text x="67.1839%" y="559.50"></text></g><g><title>__sys_recvfrom (41 samples, 0.33%)</title><rect x="66.9580%" y="533" width="0.3287%" height="15" fill="rgb(253,175,45)" fg:x="8351" fg:w="41"/><text x="67.2080%" y="543.50"></text></g><g><title>sockfd_lookup_light (6 samples, 0.05%)</title><rect x="67.2386%" y="517" width="0.0481%" height="15" fill="rgb(235,100,37)" fg:x="8386" fg:w="6"/><text x="67.4886%" y="527.50"></text></g><g><title>__fget_light (6 samples, 0.05%)</title><rect x="67.2386%" y="501" width="0.0481%" height="15" fill="rgb(225,87,19)" fg:x="8386" fg:w="6"/><text x="67.4886%" y="511.50"></text></g><g><title>__fget (6 samples, 0.05%)</title><rect x="67.2386%" y="485" width="0.0481%" height="15" fill="rgb(217,152,17)" fg:x="8386" fg:w="6"/><text x="67.4886%" y="495.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (53 samples, 0.42%)</title><rect x="66.8698%" y="821" width="0.4250%" height="15" fill="rgb(235,72,13)" fg:x="8340" fg:w="53"/><text x="67.1198%" y="831.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (53 samples, 0.42%)</title><rect x="66.8698%" y="805" width="0.4250%" height="15" fill="rgb(233,140,18)" fg:x="8340" fg:w="53"/><text x="67.1198%" y="815.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (53 samples, 0.42%)</title><rect x="66.8698%" y="789" width="0.4250%" height="15" fill="rgb(207,212,28)" fg:x="8340" fg:w="53"/><text x="67.1198%" y="799.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (53 samples, 0.42%)</title><rect x="66.8698%" y="773" width="0.4250%" height="15" fill="rgb(220,130,25)" fg:x="8340" fg:w="53"/><text x="67.1198%" y="783.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (53 samples, 0.42%)</title><rect x="66.8698%" y="757" width="0.4250%" height="15" fill="rgb(205,55,34)" fg:x="8340" fg:w="53"/><text x="67.1198%" y="767.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::_{{closure}} (48 samples, 0.38%)</title><rect x="66.9099%" y="741" width="0.3849%" height="15" fill="rgb(237,54,35)" fg:x="8345" fg:w="48"/><text x="67.1599%" y="751.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (48 samples, 0.38%)</title><rect x="66.9099%" y="725" width="0.3849%" height="15" fill="rgb(208,67,23)" fg:x="8345" fg:w="48"/><text x="67.1599%" y="735.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (47 samples, 0.38%)</title><rect x="66.9179%" y="709" width="0.3768%" height="15" fill="rgb(206,207,50)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="719.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (47 samples, 0.38%)</title><rect x="66.9179%" y="693" width="0.3768%" height="15" fill="rgb(213,211,42)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="703.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (47 samples, 0.38%)</title><rect x="66.9179%" y="677" width="0.3768%" height="15" fill="rgb(252,197,50)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="687.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (47 samples, 0.38%)</title><rect x="66.9179%" y="661" width="0.3768%" height="15" fill="rgb(251,211,41)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (47 samples, 0.38%)</title><rect x="66.9179%" y="645" width="0.3768%" height="15" fill="rgb(229,211,5)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (47 samples, 0.38%)</title><rect x="66.9179%" y="629" width="0.3768%" height="15" fill="rgb(239,36,31)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (47 samples, 0.38%)</title><rect x="66.9179%" y="613" width="0.3768%" height="15" fill="rgb(248,67,31)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="623.50"></text></g><g><title>__libc_recv (47 samples, 0.38%)</title><rect x="66.9179%" y="597" width="0.3768%" height="15" fill="rgb(249,55,44)" fg:x="8346" fg:w="47"/><text x="67.1679%" y="607.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (198 samples, 1.59%)</title><rect x="65.7152%" y="1157" width="1.5876%" height="15" fill="rgb(216,82,12)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1167.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (198 samples, 1.59%)</title><rect x="65.7152%" y="1141" width="1.5876%" height="15" fill="rgb(242,174,1)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1125" width="1.5876%" height="15" fill="rgb(208,120,29)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1109" width="1.5876%" height="15" fill="rgb(221,105,43)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1093" width="1.5876%" height="15" fill="rgb(234,124,22)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1103.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1077" width="1.5876%" height="15" fill="rgb(212,23,30)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1087.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1061" width="1.5876%" height="15" fill="rgb(219,122,53)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1071.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1045" width="1.5876%" height="15" fill="rgb(248,84,24)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1055.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1029" width="1.5876%" height="15" fill="rgb(245,115,18)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1039.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (198 samples, 1.59%)</title><rect x="65.7152%" y="1013" width="1.5876%" height="15" fill="rgb(227,176,51)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1023.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="997" width="1.5876%" height="15" fill="rgb(229,63,42)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="981" width="1.5876%" height="15" fill="rgb(247,202,24)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="991.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="965" width="1.5876%" height="15" fill="rgb(244,173,20)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="949" width="1.5876%" height="15" fill="rgb(242,81,47)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="959.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (198 samples, 1.59%)</title><rect x="65.7152%" y="933" width="1.5876%" height="15" fill="rgb(231,185,54)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="943.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (198 samples, 1.59%)</title><rect x="65.7152%" y="917" width="1.5876%" height="15" fill="rgb(243,55,32)" fg:x="8196" fg:w="198"/><text x="65.9652%" y="927.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (162 samples, 1.30%)</title><rect x="66.0038%" y="901" width="1.2989%" height="15" fill="rgb(208,167,19)" fg:x="8232" fg:w="162"/><text x="66.2538%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (162 samples, 1.30%)</title><rect x="66.0038%" y="885" width="1.2989%" height="15" fill="rgb(231,72,35)" fg:x="8232" fg:w="162"/><text x="66.2538%" y="895.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (162 samples, 1.30%)</title><rect x="66.0038%" y="869" width="1.2989%" height="15" fill="rgb(250,173,51)" fg:x="8232" fg:w="162"/><text x="66.2538%" y="879.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (162 samples, 1.30%)</title><rect x="66.0038%" y="853" width="1.2989%" height="15" fill="rgb(209,5,22)" fg:x="8232" fg:w="162"/><text x="66.2538%" y="863.50"></text></g><g><title>tokio_util::util::poll_read_buf (58 samples, 0.47%)</title><rect x="66.8377%" y="837" width="0.4650%" height="15" fill="rgb(250,174,19)" fg:x="8336" fg:w="58"/><text x="67.0877%" y="847.50"></text></g><g><title>do_sched_yield (2 samples, 0.02%)</title><rect x="67.3749%" y="997" width="0.0160%" height="15" fill="rgb(217,3,49)" fg:x="8403" fg:w="2"/><text x="67.6249%" y="1007.50"></text></g><g><title>__sched_yield (5 samples, 0.04%)</title><rect x="67.3749%" y="1061" width="0.0401%" height="15" fill="rgb(218,225,5)" fg:x="8403" fg:w="5"/><text x="67.6249%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="67.3749%" y="1045" width="0.0401%" height="15" fill="rgb(236,89,11)" fg:x="8403" fg:w="5"/><text x="67.6249%" y="1055.50"></text></g><g><title>do_syscall_64 (5 samples, 0.04%)</title><rect x="67.3749%" y="1029" width="0.0401%" height="15" fill="rgb(206,33,28)" fg:x="8403" fg:w="5"/><text x="67.6249%" y="1039.50"></text></g><g><title>__x64_sys_sched_yield (5 samples, 0.04%)</title><rect x="67.3749%" y="1013" width="0.0401%" height="15" fill="rgb(241,56,42)" fg:x="8403" fg:w="5"/><text x="67.6249%" y="1023.50"></text></g><g><title>schedule (3 samples, 0.02%)</title><rect x="67.3910%" y="997" width="0.0241%" height="15" fill="rgb(222,44,11)" fg:x="8405" fg:w="3"/><text x="67.6410%" y="1007.50"></text></g><g><title>__schedule (3 samples, 0.02%)</title><rect x="67.3910%" y="981" width="0.0241%" height="15" fill="rgb(234,111,20)" fg:x="8405" fg:w="3"/><text x="67.6410%" y="991.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.02%)</title><rect x="67.3910%" y="965" width="0.0241%" height="15" fill="rgb(237,77,6)" fg:x="8405" fg:w="3"/><text x="67.6410%" y="975.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="67.3990%" y="949" width="0.0160%" height="15" fill="rgb(235,111,23)" fg:x="8406" fg:w="2"/><text x="67.6490%" y="959.50"></text></g><g><title>cpuacct_charge (2 samples, 0.02%)</title><rect x="67.3990%" y="933" width="0.0160%" height="15" fill="rgb(251,135,29)" fg:x="8406" fg:w="2"/><text x="67.6490%" y="943.50"></text></g><g><title>fred::utils::send_command (16 samples, 0.13%)</title><rect x="67.3028%" y="1157" width="0.1283%" height="15" fill="rgb(217,57,1)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (16 samples, 0.13%)</title><rect x="67.3028%" y="1141" width="0.1283%" height="15" fill="rgb(249,119,31)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (16 samples, 0.13%)</title><rect x="67.3028%" y="1125" width="0.1283%" height="15" fill="rgb(233,164,33)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (16 samples, 0.13%)</title><rect x="67.3028%" y="1109" width="0.1283%" height="15" fill="rgb(250,217,43)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (16 samples, 0.13%)</title><rect x="67.3028%" y="1093" width="0.1283%" height="15" fill="rgb(232,154,50)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (16 samples, 0.13%)</title><rect x="67.3028%" y="1077" width="0.1283%" height="15" fill="rgb(227,190,8)" fg:x="8394" fg:w="16"/><text x="67.5528%" y="1087.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="67.4310%" y="1157" width="0.0241%" height="15" fill="rgb(209,217,32)" fg:x="8410" fg:w="3"/><text x="67.6810%" y="1167.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.02%)</title><rect x="67.4310%" y="1141" width="0.0241%" height="15" fill="rgb(243,203,50)" fg:x="8410" fg:w="3"/><text x="67.6810%" y="1151.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="67.6395%" y="885" width="0.0481%" height="15" fill="rgb(232,152,27)" fg:x="8436" fg:w="6"/><text x="67.8895%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.14%)</title><rect x="67.5513%" y="981" width="0.1443%" height="15" fill="rgb(240,34,29)" fg:x="8425" fg:w="18"/><text x="67.8013%" y="991.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (11 samples, 0.09%)</title><rect x="67.6074%" y="965" width="0.0882%" height="15" fill="rgb(215,185,52)" fg:x="8432" fg:w="11"/><text x="67.8574%" y="975.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.09%)</title><rect x="67.6074%" y="949" width="0.0882%" height="15" fill="rgb(240,89,49)" fg:x="8432" fg:w="11"/><text x="67.8574%" y="959.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (11 samples, 0.09%)</title><rect x="67.6074%" y="933" width="0.0882%" height="15" fill="rgb(225,12,52)" fg:x="8432" fg:w="11"/><text x="67.8574%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.09%)</title><rect x="67.6074%" y="917" width="0.0882%" height="15" fill="rgb(239,128,45)" fg:x="8432" fg:w="11"/><text x="67.8574%" y="927.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (11 samples, 0.09%)</title><rect x="67.6074%" y="901" width="0.0882%" height="15" fill="rgb(211,78,47)" fg:x="8432" fg:w="11"/><text x="67.8574%" y="911.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 0.39%)</title><rect x="67.4551%" y="1061" width="0.3929%" height="15" fill="rgb(232,31,21)" fg:x="8413" fg:w="49"/><text x="67.7051%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (49 samples, 0.39%)</title><rect x="67.4551%" y="1045" width="0.3929%" height="15" fill="rgb(222,168,14)" fg:x="8413" fg:w="49"/><text x="67.7051%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (49 samples, 0.39%)</title><rect x="67.4551%" y="1029" width="0.3929%" height="15" fill="rgb(209,128,24)" fg:x="8413" fg:w="49"/><text x="67.7051%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (47 samples, 0.38%)</title><rect x="67.4711%" y="1013" width="0.3768%" height="15" fill="rgb(249,35,13)" fg:x="8415" fg:w="47"/><text x="67.7211%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (43 samples, 0.34%)</title><rect x="67.5032%" y="997" width="0.3448%" height="15" fill="rgb(218,7,2)" fg:x="8419" fg:w="43"/><text x="67.7532%" y="1007.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.15%)</title><rect x="67.6956%" y="981" width="0.1523%" height="15" fill="rgb(238,107,27)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="965" width="0.1523%" height="15" fill="rgb(217,88,38)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (19 samples, 0.15%)</title><rect x="67.6956%" y="949" width="0.1523%" height="15" fill="rgb(230,207,0)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="959.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (19 samples, 0.15%)</title><rect x="67.6956%" y="933" width="0.1523%" height="15" fill="rgb(249,64,54)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="917" width="0.1523%" height="15" fill="rgb(231,7,11)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (19 samples, 0.15%)</title><rect x="67.6956%" y="901" width="0.1523%" height="15" fill="rgb(205,149,21)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (19 samples, 0.15%)</title><rect x="67.6956%" y="885" width="0.1523%" height="15" fill="rgb(215,126,34)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="895.50"></text></g><g><title>tokio::coop::budget (19 samples, 0.15%)</title><rect x="67.6956%" y="869" width="0.1523%" height="15" fill="rgb(241,132,45)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="879.50"></text></g><g><title>tokio::coop::with_budget (19 samples, 0.15%)</title><rect x="67.6956%" y="853" width="0.1523%" height="15" fill="rgb(252,69,32)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.15%)</title><rect x="67.6956%" y="837" width="0.1523%" height="15" fill="rgb(232,204,19)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.15%)</title><rect x="67.6956%" y="821" width="0.1523%" height="15" fill="rgb(249,15,47)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="831.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="805" width="0.1523%" height="15" fill="rgb(209,227,23)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="789" width="0.1523%" height="15" fill="rgb(248,92,24)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="799.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (19 samples, 0.15%)</title><rect x="67.6956%" y="773" width="0.1523%" height="15" fill="rgb(247,59,2)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="783.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (19 samples, 0.15%)</title><rect x="67.6956%" y="757" width="0.1523%" height="15" fill="rgb(221,30,5)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19 samples, 0.15%)</title><rect x="67.6956%" y="741" width="0.1523%" height="15" fill="rgb(208,108,53)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (19 samples, 0.15%)</title><rect x="67.6956%" y="725" width="0.1523%" height="15" fill="rgb(211,183,26)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (19 samples, 0.15%)</title><rect x="67.6956%" y="709" width="0.1523%" height="15" fill="rgb(232,132,4)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="719.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.15%)</title><rect x="67.6956%" y="693" width="0.1523%" height="15" fill="rgb(253,128,37)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="703.50"></text></g><g><title>std::panicking::try (19 samples, 0.15%)</title><rect x="67.6956%" y="677" width="0.1523%" height="15" fill="rgb(221,58,24)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="687.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.15%)</title><rect x="67.6956%" y="661" width="0.1523%" height="15" fill="rgb(230,54,45)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="671.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.15%)</title><rect x="67.6956%" y="645" width="0.1523%" height="15" fill="rgb(254,21,18)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="629" width="0.1523%" height="15" fill="rgb(221,108,0)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="639.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (19 samples, 0.15%)</title><rect x="67.6956%" y="613" width="0.1523%" height="15" fill="rgb(206,95,1)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="623.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (19 samples, 0.15%)</title><rect x="67.6956%" y="597" width="0.1523%" height="15" fill="rgb(237,52,5)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="607.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (19 samples, 0.15%)</title><rect x="67.6956%" y="581" width="0.1523%" height="15" fill="rgb(218,150,34)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.15%)</title><rect x="67.6956%" y="565" width="0.1523%" height="15" fill="rgb(235,194,28)" fg:x="8443" fg:w="19"/><text x="67.9456%" y="575.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (15 samples, 0.12%)</title><rect x="67.7277%" y="549" width="0.1203%" height="15" fill="rgb(245,92,18)" fg:x="8447" fg:w="15"/><text x="67.9777%" y="559.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="67.8159%" y="533" width="0.0321%" height="15" fill="rgb(253,203,53)" fg:x="8458" fg:w="4"/><text x="68.0659%" y="543.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.45%)</title><rect x="67.4551%" y="1109" width="0.4490%" height="15" fill="rgb(249,185,47)" fg:x="8413" fg:w="56"/><text x="67.7051%" y="1119.50"></text></g><g><title>std::panicking::try (56 samples, 0.45%)</title><rect x="67.4551%" y="1093" width="0.4490%" height="15" fill="rgb(252,194,52)" fg:x="8413" fg:w="56"/><text x="67.7051%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.45%)</title><rect x="67.4551%" y="1077" width="0.4490%" height="15" fill="rgb(210,53,36)" fg:x="8413" fg:w="56"/><text x="67.7051%" y="1087.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (7 samples, 0.06%)</title><rect x="67.8480%" y="1061" width="0.0561%" height="15" fill="rgb(237,37,25)" fg:x="8462" fg:w="7"/><text x="68.0980%" y="1071.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.06%)</title><rect x="67.8480%" y="1045" width="0.0561%" height="15" fill="rgb(242,116,27)" fg:x="8462" fg:w="7"/><text x="68.0980%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.02%)</title><rect x="67.9121%" y="1109" width="0.0160%" height="15" fill="rgb(213,185,26)" fg:x="8470" fg:w="2"/><text x="68.1621%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (61 samples, 0.49%)</title><rect x="67.4551%" y="1157" width="0.4891%" height="15" fill="rgb(225,204,8)" fg:x="8413" fg:w="61"/><text x="67.7051%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (61 samples, 0.49%)</title><rect x="67.4551%" y="1141" width="0.4891%" height="15" fill="rgb(254,111,37)" fg:x="8413" fg:w="61"/><text x="67.7051%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (61 samples, 0.49%)</title><rect x="67.4551%" y="1125" width="0.4891%" height="15" fill="rgb(242,35,9)" fg:x="8413" fg:w="61"/><text x="67.7051%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (2 samples, 0.02%)</title><rect x="67.9282%" y="1109" width="0.0160%" height="15" fill="rgb(232,138,49)" fg:x="8472" fg:w="2"/><text x="68.1782%" y="1119.50"></text></g><g><title>__rust_probestack (7 samples, 0.06%)</title><rect x="67.9442%" y="997" width="0.0561%" height="15" fill="rgb(247,56,4)" fg:x="8474" fg:w="7"/><text x="68.1942%" y="1007.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (20 samples, 0.16%)</title><rect x="68.0003%" y="997" width="0.1604%" height="15" fill="rgb(226,179,17)" fg:x="8481" fg:w="20"/><text x="68.2503%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.12%)</title><rect x="68.0404%" y="981" width="0.1203%" height="15" fill="rgb(216,163,45)" fg:x="8486" fg:w="15"/><text x="68.2904%" y="991.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (15 samples, 0.12%)</title><rect x="68.0404%" y="965" width="0.1203%" height="15" fill="rgb(211,157,3)" fg:x="8486" fg:w="15"/><text x="68.2904%" y="975.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="68.0885%" y="949" width="0.0722%" height="15" fill="rgb(234,44,20)" fg:x="8492" fg:w="9"/><text x="68.3385%" y="959.50"></text></g><g><title>__rust_probestack (4 samples, 0.03%)</title><rect x="68.1286%" y="933" width="0.0321%" height="15" fill="rgb(254,138,23)" fg:x="8497" fg:w="4"/><text x="68.3786%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.04%)</title><rect x="68.1607%" y="917" width="0.0401%" height="15" fill="rgb(206,119,39)" fg:x="8501" fg:w="5"/><text x="68.4107%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.04%)</title><rect x="68.1607%" y="901" width="0.0401%" height="15" fill="rgb(231,105,52)" fg:x="8501" fg:w="5"/><text x="68.4107%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.04%)</title><rect x="68.1607%" y="885" width="0.0401%" height="15" fill="rgb(250,20,5)" fg:x="8501" fg:w="5"/><text x="68.4107%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.02%)</title><rect x="68.1847%" y="869" width="0.0160%" height="15" fill="rgb(215,198,30)" fg:x="8504" fg:w="2"/><text x="68.4347%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="68.1847%" y="853" width="0.0160%" height="15" fill="rgb(246,142,8)" fg:x="8504" fg:w="2"/><text x="68.4347%" y="863.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.03%)</title><rect x="68.2008%" y="917" width="0.0321%" height="15" fill="rgb(243,26,38)" fg:x="8506" fg:w="4"/><text x="68.4508%" y="927.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.02%)</title><rect x="68.2890%" y="789" width="0.0160%" height="15" fill="rgb(205,133,28)" fg:x="8517" fg:w="2"/><text x="68.5390%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.2890%" y="773" width="0.0160%" height="15" fill="rgb(212,34,0)" fg:x="8517" fg:w="2"/><text x="68.5390%" y="783.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.2890%" y="757" width="0.0160%" height="15" fill="rgb(251,226,22)" fg:x="8517" fg:w="2"/><text x="68.5390%" y="767.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.2890%" y="741" width="0.0160%" height="15" fill="rgb(252,119,9)" fg:x="8517" fg:w="2"/><text x="68.5390%" y="751.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="68.2409%" y="853" width="0.0722%" height="15" fill="rgb(213,150,50)" fg:x="8511" fg:w="9"/><text x="68.4909%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="68.2409%" y="837" width="0.0722%" height="15" fill="rgb(212,24,39)" fg:x="8511" fg:w="9"/><text x="68.4909%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="68.2409%" y="821" width="0.0722%" height="15" fill="rgb(213,46,39)" fg:x="8511" fg:w="9"/><text x="68.4909%" y="831.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="68.2409%" y="805" width="0.0722%" height="15" fill="rgb(239,106,12)" fg:x="8511" fg:w="9"/><text x="68.4909%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (50 samples, 0.40%)</title><rect x="67.9442%" y="1157" width="0.4009%" height="15" fill="rgb(249,229,21)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.40%)</title><rect x="67.9442%" y="1141" width="0.4009%" height="15" fill="rgb(212,158,3)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1151.50"></text></g><g><title>std::panicking::try (50 samples, 0.40%)</title><rect x="67.9442%" y="1125" width="0.4009%" height="15" fill="rgb(253,26,48)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.40%)</title><rect x="67.9442%" y="1109" width="0.4009%" height="15" fill="rgb(238,178,20)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.40%)</title><rect x="67.9442%" y="1093" width="0.4009%" height="15" fill="rgb(208,86,15)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (50 samples, 0.40%)</title><rect x="67.9442%" y="1077" width="0.4009%" height="15" fill="rgb(239,42,53)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (50 samples, 0.40%)</title><rect x="67.9442%" y="1061" width="0.4009%" height="15" fill="rgb(245,226,8)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (50 samples, 0.40%)</title><rect x="67.9442%" y="1045" width="0.4009%" height="15" fill="rgb(216,176,32)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (50 samples, 0.40%)</title><rect x="67.9442%" y="1029" width="0.4009%" height="15" fill="rgb(231,186,21)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.40%)</title><rect x="67.9442%" y="1013" width="0.4009%" height="15" fill="rgb(205,95,49)" fg:x="8474" fg:w="50"/><text x="68.1942%" y="1023.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (23 samples, 0.18%)</title><rect x="68.1607%" y="997" width="0.1844%" height="15" fill="rgb(217,145,8)" fg:x="8501" fg:w="23"/><text x="68.4107%" y="1007.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (23 samples, 0.18%)</title><rect x="68.1607%" y="981" width="0.1844%" height="15" fill="rgb(239,144,48)" fg:x="8501" fg:w="23"/><text x="68.4107%" y="991.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (23 samples, 0.18%)</title><rect x="68.1607%" y="965" width="0.1844%" height="15" fill="rgb(214,189,23)" fg:x="8501" fg:w="23"/><text x="68.4107%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.18%)</title><rect x="68.1607%" y="949" width="0.1844%" height="15" fill="rgb(229,157,17)" fg:x="8501" fg:w="23"/><text x="68.4107%" y="959.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (23 samples, 0.18%)</title><rect x="68.1607%" y="933" width="0.1844%" height="15" fill="rgb(230,5,48)" fg:x="8501" fg:w="23"/><text x="68.4107%" y="943.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (14 samples, 0.11%)</title><rect x="68.2328%" y="917" width="0.1123%" height="15" fill="rgb(224,156,48)" fg:x="8510" fg:w="14"/><text x="68.4828%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="68.2328%" y="901" width="0.1123%" height="15" fill="rgb(223,14,29)" fg:x="8510" fg:w="14"/><text x="68.4828%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="68.2328%" y="885" width="0.1123%" height="15" fill="rgb(229,96,36)" fg:x="8510" fg:w="14"/><text x="68.4828%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="68.2328%" y="869" width="0.1123%" height="15" fill="rgb(231,102,53)" fg:x="8510" fg:w="14"/><text x="68.4828%" y="879.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="853" width="0.0321%" height="15" fill="rgb(210,77,38)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="837" width="0.0321%" height="15" fill="rgb(235,131,6)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="821" width="0.0321%" height="15" fill="rgb(252,55,38)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="831.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.03%)</title><rect x="68.3130%" y="805" width="0.0321%" height="15" fill="rgb(246,38,14)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="815.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="789" width="0.0321%" height="15" fill="rgb(242,27,5)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="773" width="0.0321%" height="15" fill="rgb(228,65,35)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="783.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="68.3130%" y="757" width="0.0321%" height="15" fill="rgb(245,93,11)" fg:x="8520" fg:w="4"/><text x="68.5630%" y="767.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.3291%" y="741" width="0.0160%" height="15" fill="rgb(213,1,31)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="751.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.02%)</title><rect x="68.3291%" y="725" width="0.0160%" height="15" fill="rgb(237,205,14)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="735.50"></text></g><g><title>&lt;futures_util::future::try_future::ErrInto&lt;Fut,E&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.3291%" y="709" width="0.0160%" height="15" fill="rgb(232,118,45)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="719.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.3291%" y="693" width="0.0160%" height="15" fill="rgb(218,5,6)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="703.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.3291%" y="677" width="0.0160%" height="15" fill="rgb(251,87,51)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="687.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="68.3291%" y="661" width="0.0160%" height="15" fill="rgb(207,225,20)" fg:x="8522" fg:w="2"/><text x="68.5791%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.04%)</title><rect x="68.3611%" y="757" width="0.0401%" height="15" fill="rgb(222,78,54)" fg:x="8526" fg:w="5"/><text x="68.6111%" y="767.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.02%)</title><rect x="68.3772%" y="741" width="0.0241%" height="15" fill="rgb(232,85,16)" fg:x="8528" fg:w="3"/><text x="68.6272%" y="751.50"></text></g><g><title>[unknown] (8,365 samples, 67.07%)</title><rect x="1.3711%" y="1173" width="67.0702%" height="15" fill="rgb(244,25,33)" fg:x="171" fg:w="8365"/><text x="1.6211%" y="1183.50">[unknown]</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (12 samples, 0.10%)</title><rect x="68.3451%" y="1157" width="0.0962%" height="15" fill="rgb(233,24,36)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (12 samples, 0.10%)</title><rect x="68.3451%" y="1141" width="0.0962%" height="15" fill="rgb(253,49,54)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1151.50"></text></g><g><title>tokio::coop::budget (12 samples, 0.10%)</title><rect x="68.3451%" y="1125" width="0.0962%" height="15" fill="rgb(245,12,22)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1135.50"></text></g><g><title>tokio::coop::with_budget (12 samples, 0.10%)</title><rect x="68.3451%" y="1109" width="0.0962%" height="15" fill="rgb(253,141,28)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.10%)</title><rect x="68.3451%" y="1093" width="0.0962%" height="15" fill="rgb(225,207,27)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.10%)</title><rect x="68.3451%" y="1077" width="0.0962%" height="15" fill="rgb(220,84,2)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1087.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="1061" width="0.0962%" height="15" fill="rgb(224,37,37)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="1045" width="0.0962%" height="15" fill="rgb(220,143,18)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1055.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (12 samples, 0.10%)</title><rect x="68.3451%" y="1029" width="0.0962%" height="15" fill="rgb(210,88,33)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (12 samples, 0.10%)</title><rect x="68.3451%" y="1013" width="0.0962%" height="15" fill="rgb(219,87,51)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.10%)</title><rect x="68.3451%" y="997" width="0.0962%" height="15" fill="rgb(211,7,35)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (12 samples, 0.10%)</title><rect x="68.3451%" y="981" width="0.0962%" height="15" fill="rgb(232,77,2)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (12 samples, 0.10%)</title><rect x="68.3451%" y="965" width="0.0962%" height="15" fill="rgb(249,94,25)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="975.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.10%)</title><rect x="68.3451%" y="949" width="0.0962%" height="15" fill="rgb(215,112,2)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="959.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="68.3451%" y="933" width="0.0962%" height="15" fill="rgb(226,115,48)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="943.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.10%)</title><rect x="68.3451%" y="917" width="0.0962%" height="15" fill="rgb(249,196,10)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="927.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.10%)</title><rect x="68.3451%" y="901" width="0.0962%" height="15" fill="rgb(237,109,14)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="885" width="0.0962%" height="15" fill="rgb(217,103,53)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="895.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (12 samples, 0.10%)</title><rect x="68.3451%" y="869" width="0.0962%" height="15" fill="rgb(244,137,9)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.10%)</title><rect x="68.3451%" y="853" width="0.0962%" height="15" fill="rgb(227,201,3)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="863.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="837" width="0.0962%" height="15" fill="rgb(243,94,6)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="68.3451%" y="821" width="0.0962%" height="15" fill="rgb(235,118,5)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="831.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="805" width="0.0962%" height="15" fill="rgb(247,10,30)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="815.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.10%)</title><rect x="68.3451%" y="789" width="0.0962%" height="15" fill="rgb(205,26,28)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="799.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (12 samples, 0.10%)</title><rect x="68.3451%" y="773" width="0.0962%" height="15" fill="rgb(206,99,35)" fg:x="8524" fg:w="12"/><text x="68.5951%" y="783.50"></text></g><g><title>futures_util::async_await::random::shuffle (5 samples, 0.04%)</title><rect x="68.4012%" y="757" width="0.0401%" height="15" fill="rgb(238,130,40)" fg:x="8531" fg:w="5"/><text x="68.6512%" y="767.50"></text></g><g><title>futures_util::async_await::random::gen_index (4 samples, 0.03%)</title><rect x="68.4092%" y="741" width="0.0321%" height="15" fill="rgb(224,126,31)" fg:x="8532" fg:w="4"/><text x="68.6592%" y="751.50"></text></g><g><title>__libc_thread_freeres (6 samples, 0.05%)</title><rect x="68.4493%" y="1141" width="0.0481%" height="15" fill="rgb(254,105,17)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1151.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.05%)</title><rect x="68.4493%" y="1125" width="0.0481%" height="15" fill="rgb(216,87,36)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1135.50"></text></g><g><title>page_fault (6 samples, 0.05%)</title><rect x="68.4493%" y="1109" width="0.0481%" height="15" fill="rgb(240,21,12)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1119.50"></text></g><g><title>__do_page_fault (6 samples, 0.05%)</title><rect x="68.4493%" y="1093" width="0.0481%" height="15" fill="rgb(245,192,34)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1103.50"></text></g><g><title>down_read (6 samples, 0.05%)</title><rect x="68.4493%" y="1077" width="0.0481%" height="15" fill="rgb(226,100,49)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1087.50"></text></g><g><title>call_rwsem_down_read_failed (6 samples, 0.05%)</title><rect x="68.4493%" y="1061" width="0.0481%" height="15" fill="rgb(245,188,27)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1071.50"></text></g><g><title>rwsem_down_read_failed (6 samples, 0.05%)</title><rect x="68.4493%" y="1045" width="0.0481%" height="15" fill="rgb(212,170,8)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1055.50"></text></g><g><title>schedule (6 samples, 0.05%)</title><rect x="68.4493%" y="1029" width="0.0481%" height="15" fill="rgb(217,113,29)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1039.50"></text></g><g><title>__schedule (6 samples, 0.05%)</title><rect x="68.4493%" y="1013" width="0.0481%" height="15" fill="rgb(237,30,3)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1023.50"></text></g><g><title>finish_task_switch (6 samples, 0.05%)</title><rect x="68.4493%" y="997" width="0.0481%" height="15" fill="rgb(227,19,28)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="1007.50"></text></g><g><title>call_function_interrupt (6 samples, 0.05%)</title><rect x="68.4493%" y="981" width="0.0481%" height="15" fill="rgb(239,172,45)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="991.50"></text></g><g><title>smp_call_function_interrupt (6 samples, 0.05%)</title><rect x="68.4493%" y="965" width="0.0481%" height="15" fill="rgb(254,55,39)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="975.50"></text></g><g><title>irq_enter (6 samples, 0.05%)</title><rect x="68.4493%" y="949" width="0.0481%" height="15" fill="rgb(249,208,12)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="959.50"></text></g><g><title>rcu_nmi_enter (6 samples, 0.05%)</title><rect x="68.4493%" y="933" width="0.0481%" height="15" fill="rgb(240,52,13)" fg:x="8537" fg:w="6"/><text x="68.6993%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="68.4974%" y="1141" width="0.0401%" height="15" fill="rgb(252,149,13)" fg:x="8543" fg:w="5"/><text x="68.7474%" y="1151.50"></text></g><g><title>do_syscall_64 (5 samples, 0.04%)</title><rect x="68.4974%" y="1125" width="0.0401%" height="15" fill="rgb(232,81,48)" fg:x="8543" fg:w="5"/><text x="68.7474%" y="1135.50"></text></g><g><title>__x64_sys_set_robust_list (5 samples, 0.04%)</title><rect x="68.4974%" y="1109" width="0.0401%" height="15" fill="rgb(222,144,2)" fg:x="8543" fg:w="5"/><text x="68.7474%" y="1119.50"></text></g><g><title>madvise (4 samples, 0.03%)</title><rect x="68.5375%" y="1141" width="0.0321%" height="15" fill="rgb(216,81,32)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="68.5375%" y="1125" width="0.0321%" height="15" fill="rgb(244,78,51)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1135.50"></text></g><g><title>do_syscall_64 (4 samples, 0.03%)</title><rect x="68.5375%" y="1109" width="0.0321%" height="15" fill="rgb(217,66,21)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1119.50"></text></g><g><title>__x64_sys_madvise (4 samples, 0.03%)</title><rect x="68.5375%" y="1093" width="0.0321%" height="15" fill="rgb(247,101,42)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1103.50"></text></g><g><title>zap_page_range (4 samples, 0.03%)</title><rect x="68.5375%" y="1077" width="0.0321%" height="15" fill="rgb(227,81,39)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1087.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.03%)</title><rect x="68.5375%" y="1061" width="0.0321%" height="15" fill="rgb(220,223,44)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1071.50"></text></g><g><title>arch_tlb_finish_mmu (4 samples, 0.03%)</title><rect x="68.5375%" y="1045" width="0.0321%" height="15" fill="rgb(205,218,2)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1055.50"></text></g><g><title>flush_tlb_mm_range (4 samples, 0.03%)</title><rect x="68.5375%" y="1029" width="0.0321%" height="15" fill="rgb(212,207,28)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1039.50"></text></g><g><title>smp_call_function_many (4 samples, 0.03%)</title><rect x="68.5375%" y="1013" width="0.0321%" height="15" fill="rgb(224,12,41)" fg:x="8548" fg:w="4"/><text x="68.7875%" y="1023.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2 samples, 0.02%)</title><rect x="68.6097%" y="837" width="0.0160%" height="15" fill="rgb(216,118,12)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="847.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="68.6097%" y="821" width="0.0160%" height="15" fill="rgb(252,97,46)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="68.6097%" y="805" width="0.0160%" height="15" fill="rgb(244,206,19)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="815.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="68.6097%" y="789" width="0.0160%" height="15" fill="rgb(231,84,31)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="799.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="68.6097%" y="773" width="0.0160%" height="15" fill="rgb(244,133,0)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="783.50"></text></g><g><title>do_futex (2 samples, 0.02%)</title><rect x="68.6097%" y="757" width="0.0160%" height="15" fill="rgb(223,15,50)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="767.50"></text></g><g><title>futex_wake (2 samples, 0.02%)</title><rect x="68.6097%" y="741" width="0.0160%" height="15" fill="rgb(250,118,49)" fg:x="8557" fg:w="2"/><text x="68.8597%" y="751.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="68.6097%" y="933" width="0.0241%" height="15" fill="rgb(248,25,38)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (3 samples, 0.02%)</title><rect x="68.6097%" y="917" width="0.0241%" height="15" fill="rgb(215,70,14)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="927.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="68.6097%" y="901" width="0.0241%" height="15" fill="rgb(215,28,15)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.02%)</title><rect x="68.6097%" y="885" width="0.0241%" height="15" fill="rgb(243,6,28)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="895.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (3 samples, 0.02%)</title><rect x="68.6097%" y="869" width="0.0241%" height="15" fill="rgb(222,130,1)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (3 samples, 0.02%)</title><rect x="68.6097%" y="853" width="0.0241%" height="15" fill="rgb(236,166,44)" fg:x="8557" fg:w="3"/><text x="68.8597%" y="863.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (6 samples, 0.05%)</title><rect x="68.6337%" y="933" width="0.0481%" height="15" fill="rgb(221,108,14)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="943.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (6 samples, 0.05%)</title><rect x="68.6337%" y="917" width="0.0481%" height="15" fill="rgb(252,3,45)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="927.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.05%)</title><rect x="68.6337%" y="901" width="0.0481%" height="15" fill="rgb(237,68,30)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.05%)</title><rect x="68.6337%" y="885" width="0.0481%" height="15" fill="rgb(211,79,22)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.05%)</title><rect x="68.6337%" y="869" width="0.0481%" height="15" fill="rgb(252,185,21)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (6 samples, 0.05%)</title><rect x="68.6337%" y="853" width="0.0481%" height="15" fill="rgb(225,189,26)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="863.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (6 samples, 0.05%)</title><rect x="68.6337%" y="837" width="0.0481%" height="15" fill="rgb(241,30,40)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (6 samples, 0.05%)</title><rect x="68.6337%" y="821" width="0.0481%" height="15" fill="rgb(235,215,44)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.05%)</title><rect x="68.6337%" y="805" width="0.0481%" height="15" fill="rgb(205,8,29)" fg:x="8560" fg:w="6"/><text x="68.8837%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.04%)</title><rect x="68.6818%" y="773" width="0.0401%" height="15" fill="rgb(241,137,42)" fg:x="8566" fg:w="5"/><text x="68.9318%" y="783.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (11 samples, 0.09%)</title><rect x="68.6818%" y="821" width="0.0882%" height="15" fill="rgb(237,155,2)" fg:x="8566" fg:w="11"/><text x="68.9318%" y="831.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (11 samples, 0.09%)</title><rect x="68.6818%" y="805" width="0.0882%" height="15" fill="rgb(245,29,42)" fg:x="8566" fg:w="11"/><text x="68.9318%" y="815.50"></text></g><g><title>syscall (11 samples, 0.09%)</title><rect x="68.6818%" y="789" width="0.0882%" height="15" fill="rgb(234,101,35)" fg:x="8566" fg:w="11"/><text x="68.9318%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.05%)</title><rect x="68.7219%" y="773" width="0.0481%" height="15" fill="rgb(228,64,37)" fg:x="8571" fg:w="6"/><text x="68.9719%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (10 samples, 0.08%)</title><rect x="68.7700%" y="821" width="0.0802%" height="15" fill="rgb(217,214,36)" fg:x="8577" fg:w="10"/><text x="69.0200%" y="831.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (10 samples, 0.08%)</title><rect x="68.7700%" y="805" width="0.0802%" height="15" fill="rgb(243,70,3)" fg:x="8577" fg:w="10"/><text x="69.0200%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (5 samples, 0.04%)</title><rect x="68.8101%" y="789" width="0.0401%" height="15" fill="rgb(253,158,52)" fg:x="8582" fg:w="5"/><text x="69.0601%" y="799.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (5 samples, 0.04%)</title><rect x="68.8101%" y="773" width="0.0401%" height="15" fill="rgb(234,111,54)" fg:x="8582" fg:w="5"/><text x="69.0601%" y="783.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (5 samples, 0.04%)</title><rect x="68.8101%" y="757" width="0.0401%" height="15" fill="rgb(217,70,32)" fg:x="8582" fg:w="5"/><text x="69.0601%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.04%)</title><rect x="68.8101%" y="741" width="0.0401%" height="15" fill="rgb(234,18,33)" fg:x="8582" fg:w="5"/><text x="69.0601%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.18%)</title><rect x="68.6818%" y="933" width="0.1764%" height="15" fill="rgb(234,12,49)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.18%)</title><rect x="68.6818%" y="917" width="0.1764%" height="15" fill="rgb(236,10,21)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.18%)</title><rect x="68.6818%" y="901" width="0.1764%" height="15" fill="rgb(248,182,45)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="911.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (22 samples, 0.18%)</title><rect x="68.6818%" y="885" width="0.1764%" height="15" fill="rgb(217,95,36)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::park (22 samples, 0.18%)</title><rect x="68.6818%" y="869" width="0.1764%" height="15" fill="rgb(212,110,31)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (22 samples, 0.18%)</title><rect x="68.6818%" y="853" width="0.1764%" height="15" fill="rgb(206,32,53)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (22 samples, 0.18%)</title><rect x="68.6818%" y="837" width="0.1764%" height="15" fill="rgb(246,141,37)" fg:x="8566" fg:w="22"/><text x="68.9318%" y="847.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (4 samples, 0.03%)</title><rect x="68.9545%" y="597" width="0.0321%" height="15" fill="rgb(219,16,7)" fg:x="8600" fg:w="4"/><text x="69.2045%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (5 samples, 0.04%)</title><rect x="68.9545%" y="613" width="0.0401%" height="15" fill="rgb(230,205,45)" fg:x="8600" fg:w="5"/><text x="69.2045%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (7 samples, 0.06%)</title><rect x="68.9545%" y="629" width="0.0561%" height="15" fill="rgb(231,43,49)" fg:x="8600" fg:w="7"/><text x="69.2045%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (2 samples, 0.02%)</title><rect x="68.9945%" y="613" width="0.0160%" height="15" fill="rgb(212,106,34)" fg:x="8605" fg:w="2"/><text x="69.2445%" y="623.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (2 samples, 0.02%)</title><rect x="68.9945%" y="597" width="0.0160%" height="15" fill="rgb(206,83,17)" fg:x="8605" fg:w="2"/><text x="69.2445%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="68.9945%" y="581" width="0.0160%" height="15" fill="rgb(244,154,49)" fg:x="8605" fg:w="2"/><text x="69.2445%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="68.9945%" y="565" width="0.0160%" height="15" fill="rgb(244,149,49)" fg:x="8605" fg:w="2"/><text x="69.2445%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="68.9945%" y="549" width="0.0160%" height="15" fill="rgb(227,134,18)" fg:x="8605" fg:w="2"/><text x="69.2445%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.18%)</title><rect x="69.5157%" y="549" width="0.1844%" height="15" fill="rgb(237,116,36)" fg:x="8670" fg:w="23"/><text x="69.7657%" y="559.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.06%)</title><rect x="70.0208%" y="485" width="0.0561%" height="15" fill="rgb(205,129,40)" fg:x="8733" fg:w="7"/><text x="70.2708%" y="495.50"></text></g><g><title>do_sched_yield (50 samples, 0.40%)</title><rect x="69.9006%" y="501" width="0.4009%" height="15" fill="rgb(236,178,4)" fg:x="8718" fg:w="50"/><text x="70.1506%" y="511.50"></text></g><g><title>yield_task_fair (28 samples, 0.22%)</title><rect x="70.0770%" y="485" width="0.2245%" height="15" fill="rgb(251,76,53)" fg:x="8740" fg:w="28"/><text x="70.3270%" y="495.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="70.7024%" y="469" width="0.0321%" height="15" fill="rgb(242,92,40)" fg:x="8818" fg:w="4"/><text x="70.9524%" y="479.50"></text></g><g><title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="70.7344%" y="469" width="0.0160%" height="15" fill="rgb(209,45,30)" fg:x="8822" fg:w="2"/><text x="70.9844%" y="479.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="70.7344%" y="453" width="0.0160%" height="15" fill="rgb(218,157,36)" fg:x="8822" fg:w="2"/><text x="70.9844%" y="463.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="70.7344%" y="437" width="0.0160%" height="15" fill="rgb(222,186,16)" fg:x="8822" fg:w="2"/><text x="70.9844%" y="447.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="70.7344%" y="421" width="0.0160%" height="15" fill="rgb(254,72,35)" fg:x="8822" fg:w="2"/><text x="70.9844%" y="431.50"></text></g><g><title>__list_add_valid (5 samples, 0.04%)</title><rect x="71.3198%" y="453" width="0.0401%" height="15" fill="rgb(224,25,35)" fg:x="8895" fg:w="5"/><text x="71.5698%" y="463.50"></text></g><g><title>__list_del_entry_valid (2 samples, 0.02%)</title><rect x="71.3598%" y="453" width="0.0160%" height="15" fill="rgb(206,135,52)" fg:x="8900" fg:w="2"/><text x="71.6098%" y="463.50"></text></g><g><title>pick_next_entity (14 samples, 0.11%)</title><rect x="71.3759%" y="453" width="0.1123%" height="15" fill="rgb(229,174,47)" fg:x="8902" fg:w="14"/><text x="71.6259%" y="463.50"></text></g><g><title>clear_buddies (4 samples, 0.03%)</title><rect x="71.4561%" y="437" width="0.0321%" height="15" fill="rgb(242,184,21)" fg:x="8912" fg:w="4"/><text x="71.7061%" y="447.50"></text></g><g><title>__calc_delta (20 samples, 0.16%)</title><rect x="71.5763%" y="437" width="0.1604%" height="15" fill="rgb(213,22,45)" fg:x="8927" fg:w="20"/><text x="71.8263%" y="447.50"></text></g><g><title>__cgroup_account_cputime (3 samples, 0.02%)</title><rect x="71.7367%" y="437" width="0.0241%" height="15" fill="rgb(237,81,54)" fg:x="8947" fg:w="3"/><text x="71.9867%" y="447.50"></text></g><g><title>cpuacct_charge (56 samples, 0.45%)</title><rect x="71.7607%" y="437" width="0.4490%" height="15" fill="rgb(248,177,18)" fg:x="8950" fg:w="56"/><text x="72.0107%" y="447.50"></text></g><g><title>pick_next_task_fair (203 samples, 1.63%)</title><rect x="70.7505%" y="469" width="1.6276%" height="15" fill="rgb(254,31,16)" fg:x="8824" fg:w="203"/><text x="71.0005%" y="479.50"></text></g><g><title>update_curr (111 samples, 0.89%)</title><rect x="71.4881%" y="453" width="0.8900%" height="15" fill="rgb(235,20,31)" fg:x="8916" fg:w="111"/><text x="71.7381%" y="463.50"></text></g><g><title>update_min_vruntime (21 samples, 0.17%)</title><rect x="72.2097%" y="437" width="0.1684%" height="15" fill="rgb(240,56,43)" fg:x="9006" fg:w="21"/><text x="72.4597%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (364 samples, 2.92%)</title><rect x="69.7001%" y="549" width="2.9185%" height="15" fill="rgb(237,197,51)" fg:x="8693" fg:w="364"/><text x="69.9501%" y="559.50">en..</text></g><g><title>do_syscall_64 (356 samples, 2.85%)</title><rect x="69.7643%" y="533" width="2.8544%" height="15" fill="rgb(241,162,44)" fg:x="8701" fg:w="356"/><text x="70.0143%" y="543.50">do..</text></g><g><title>__x64_sys_sched_yield (347 samples, 2.78%)</title><rect x="69.8364%" y="517" width="2.7822%" height="15" fill="rgb(224,23,20)" fg:x="8710" fg:w="347"/><text x="70.0864%" y="527.50">__..</text></g><g><title>schedule (289 samples, 2.32%)</title><rect x="70.3015%" y="501" width="2.3172%" height="15" fill="rgb(250,109,34)" fg:x="8768" fg:w="289"/><text x="70.5515%" y="511.50">s..</text></g><g><title>__schedule (280 samples, 2.25%)</title><rect x="70.3736%" y="485" width="2.2450%" height="15" fill="rgb(214,175,50)" fg:x="8777" fg:w="280"/><text x="70.6236%" y="495.50">_..</text></g><g><title>update_rq_clock (29 samples, 0.23%)</title><rect x="72.3861%" y="469" width="0.2325%" height="15" fill="rgb(213,182,5)" fg:x="9028" fg:w="29"/><text x="72.6361%" y="479.50"></text></g><g><title>sched_clock_cpu (27 samples, 0.22%)</title><rect x="72.4022%" y="453" width="0.2165%" height="15" fill="rgb(209,199,19)" fg:x="9030" fg:w="27"/><text x="72.6522%" y="463.50"></text></g><g><title>sched_clock (24 samples, 0.19%)</title><rect x="72.4262%" y="437" width="0.1924%" height="15" fill="rgb(236,224,42)" fg:x="9033" fg:w="24"/><text x="72.6762%" y="447.50"></text></g><g><title>native_sched_clock (24 samples, 0.19%)</title><rect x="72.4262%" y="421" width="0.1924%" height="15" fill="rgb(246,226,29)" fg:x="9033" fg:w="24"/><text x="72.6762%" y="431.50"></text></g><g><title>__sched_yield (410 samples, 3.29%)</title><rect x="69.4275%" y="565" width="3.2874%" height="15" fill="rgb(227,223,11)" fg:x="8659" fg:w="410"/><text x="69.6775%" y="575.50">__s..</text></g><g><title>syscall_return_via_sysret (12 samples, 0.10%)</title><rect x="72.6187%" y="549" width="0.0962%" height="15" fill="rgb(219,7,51)" fg:x="9057" fg:w="12"/><text x="72.8687%" y="559.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.04%)</title><rect x="72.7229%" y="565" width="0.0401%" height="15" fill="rgb(245,167,10)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.04%)</title><rect x="72.7229%" y="549" width="0.0401%" height="15" fill="rgb(237,224,16)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.04%)</title><rect x="72.7229%" y="533" width="0.0401%" height="15" fill="rgb(226,132,13)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (5 samples, 0.04%)</title><rect x="72.7229%" y="517" width="0.0401%" height="15" fill="rgb(214,140,3)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="527.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.04%)</title><rect x="72.7229%" y="501" width="0.0401%" height="15" fill="rgb(221,177,4)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="511.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.04%)</title><rect x="72.7229%" y="485" width="0.0401%" height="15" fill="rgb(238,139,3)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="495.50"></text></g><g><title>syscall (5 samples, 0.04%)</title><rect x="72.7229%" y="469" width="0.0401%" height="15" fill="rgb(216,17,39)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.04%)</title><rect x="72.7229%" y="453" width="0.0401%" height="15" fill="rgb(238,120,9)" fg:x="9070" fg:w="5"/><text x="72.9729%" y="463.50"></text></g><g><title>std::thread::yield_now (3 samples, 0.02%)</title><rect x="72.7630%" y="565" width="0.0241%" height="15" fill="rgb(244,92,53)" fg:x="9075" fg:w="3"/><text x="73.0130%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (3 samples, 0.02%)</title><rect x="72.7630%" y="549" width="0.0241%" height="15" fill="rgb(224,148,33)" fg:x="9075" fg:w="3"/><text x="73.0130%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (10 samples, 0.08%)</title><rect x="72.8031%" y="549" width="0.0802%" height="15" fill="rgb(243,6,36)" fg:x="9080" fg:w="10"/><text x="73.0531%" y="559.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.08%)</title><rect x="72.8031%" y="533" width="0.0802%" height="15" fill="rgb(230,102,11)" fg:x="9080" fg:w="10"/><text x="73.0531%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.14%)</title><rect x="72.8833%" y="549" width="0.1363%" height="15" fill="rgb(234,148,36)" fg:x="9090" fg:w="17"/><text x="73.1333%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.14%)</title><rect x="72.8833%" y="533" width="0.1363%" height="15" fill="rgb(251,153,25)" fg:x="9090" fg:w="17"/><text x="73.1333%" y="543.50"></text></g><g><title>__sched_yield (12 samples, 0.10%)</title><rect x="73.0196%" y="517" width="0.0962%" height="15" fill="rgb(215,129,8)" fg:x="9107" fg:w="12"/><text x="73.2696%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.10%)</title><rect x="73.0196%" y="501" width="0.0962%" height="15" fill="rgb(224,128,35)" fg:x="9107" fg:w="12"/><text x="73.2696%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.14%)</title><rect x="73.1158%" y="501" width="0.1363%" height="15" fill="rgb(237,56,52)" fg:x="9119" fg:w="17"/><text x="73.3658%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (195 samples, 1.56%)</title><rect x="75.3528%" y="437" width="1.5635%" height="15" fill="rgb(234,213,19)" fg:x="9398" fg:w="195"/><text x="75.6028%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (195 samples, 1.56%)</title><rect x="75.3528%" y="421" width="1.5635%" height="15" fill="rgb(252,82,23)" fg:x="9398" fg:w="195"/><text x="75.6028%" y="431.50"></text></g><g><title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="78.0228%" y="405" width="0.0160%" height="15" fill="rgb(254,201,21)" fg:x="9731" fg:w="2"/><text x="78.2728%" y="415.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="79.6023%" y="261" width="0.0321%" height="15" fill="rgb(250,186,11)" fg:x="9928" fg:w="4"/><text x="79.8523%" y="271.50"></text></g><g><title>__const_udelay (19 samples, 0.15%)</title><rect x="79.7547%" y="213" width="0.1523%" height="15" fill="rgb(211,174,5)" fg:x="9947" fg:w="19"/><text x="80.0047%" y="223.50"></text></g><g><title>amd_pmu_addr_offset (5 samples, 0.04%)</title><rect x="79.9070%" y="213" width="0.0401%" height="15" fill="rgb(214,121,10)" fg:x="9966" fg:w="5"/><text x="80.1570%" y="223.50"></text></g><g><title>delay_mwaitx (155 samples, 1.24%)</title><rect x="79.9471%" y="213" width="1.2428%" height="15" fill="rgb(241,66,2)" fg:x="9971" fg:w="155"/><text x="80.1971%" y="223.50"></text></g><g><title>amd_pmu_wait_on_overflow (231 samples, 1.85%)</title><rect x="79.6825%" y="229" width="1.8521%" height="15" fill="rgb(220,167,19)" fg:x="9938" fg:w="231"/><text x="79.9325%" y="239.50">a..</text></g><g><title>native_read_msr (43 samples, 0.34%)</title><rect x="81.1899%" y="213" width="0.3448%" height="15" fill="rgb(231,54,50)" fg:x="10126" fg:w="43"/><text x="81.4399%" y="223.50"></text></g><g><title>__x86_indirect_thunk_rdx (2 samples, 0.02%)</title><rect x="81.6629%" y="213" width="0.0160%" height="15" fill="rgb(239,217,53)" fg:x="10185" fg:w="2"/><text x="81.9129%" y="223.50"></text></g><g><title>amd_pmu_addr_offset (20 samples, 0.16%)</title><rect x="81.6790%" y="213" width="0.1604%" height="15" fill="rgb(248,8,0)" fg:x="10187" fg:w="20"/><text x="81.9290%" y="223.50"></text></g><g><title>native_read_msr (75 samples, 0.60%)</title><rect x="81.8393%" y="213" width="0.6013%" height="15" fill="rgb(229,118,37)" fg:x="10207" fg:w="75"/><text x="82.0893%" y="223.50"></text></g><g><title>amd_pmu_disable_all (460 samples, 3.69%)</title><rect x="79.6584%" y="245" width="3.6883%" height="15" fill="rgb(253,223,43)" fg:x="9935" fg:w="460"/><text x="79.9084%" y="255.50">amd_..</text></g><g><title>x86_pmu_disable_all (226 samples, 1.81%)</title><rect x="81.5346%" y="229" width="1.8121%" height="15" fill="rgb(211,77,36)" fg:x="10169" fg:w="226"/><text x="81.7846%" y="239.50">x..</text></g><g><title>native_write_msr (113 samples, 0.91%)</title><rect x="82.4407%" y="213" width="0.9060%" height="15" fill="rgb(219,3,53)" fg:x="10282" fg:w="113"/><text x="82.6907%" y="223.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.06%)</title><rect x="83.3467%" y="245" width="0.0641%" height="15" fill="rgb(244,45,42)" fg:x="10395" fg:w="8"/><text x="83.5967%" y="255.50"></text></g><g><title>sched_clock (8 samples, 0.06%)</title><rect x="83.3467%" y="229" width="0.0641%" height="15" fill="rgb(225,95,27)" fg:x="10395" fg:w="8"/><text x="83.5967%" y="239.50"></text></g><g><title>native_sched_clock (8 samples, 0.06%)</title><rect x="83.3467%" y="213" width="0.0641%" height="15" fill="rgb(207,74,8)" fg:x="10395" fg:w="8"/><text x="83.5967%" y="223.50"></text></g><g><title>__perf_event_task_sched_out (492 samples, 3.94%)</title><rect x="79.4981%" y="277" width="3.9448%" height="15" fill="rgb(243,63,36)" fg:x="9915" fg:w="492"/><text x="79.7481%" y="287.50">__pe..</text></g><g><title>ctx_sched_out (475 samples, 3.81%)</title><rect x="79.6344%" y="261" width="3.8085%" height="15" fill="rgb(211,180,12)" fg:x="9932" fg:w="475"/><text x="79.8844%" y="271.50">ctx_..</text></g><g><title>x86_pmu_disable (4 samples, 0.03%)</title><rect x="83.4108%" y="245" width="0.0321%" height="15" fill="rgb(254,166,49)" fg:x="10403" fg:w="4"/><text x="83.6608%" y="255.50"></text></g><g><title>deactivate_task (7 samples, 0.06%)</title><rect x="83.4509%" y="277" width="0.0561%" height="15" fill="rgb(205,19,0)" fg:x="10408" fg:w="7"/><text x="83.7009%" y="287.50"></text></g><g><title>account_entity_dequeue (3 samples, 0.02%)</title><rect x="83.6674%" y="245" width="0.0241%" height="15" fill="rgb(224,172,32)" fg:x="10435" fg:w="3"/><text x="83.9174%" y="255.50"></text></g><g><title>reweight_entity (9 samples, 0.07%)</title><rect x="83.6995%" y="245" width="0.0722%" height="15" fill="rgb(254,136,30)" fg:x="10439" fg:w="9"/><text x="83.9495%" y="255.50"></text></g><g><title>update_cfs_group (16 samples, 0.13%)</title><rect x="83.7716%" y="245" width="0.1283%" height="15" fill="rgb(246,19,35)" fg:x="10448" fg:w="16"/><text x="84.0216%" y="255.50"></text></g><g><title>cpuacct_charge (2 samples, 0.02%)</title><rect x="83.9160%" y="229" width="0.0160%" height="15" fill="rgb(219,24,36)" fg:x="10466" fg:w="2"/><text x="84.1660%" y="239.50"></text></g><g><title>update_curr (7 samples, 0.06%)</title><rect x="83.8999%" y="245" width="0.0561%" height="15" fill="rgb(251,55,1)" fg:x="10464" fg:w="7"/><text x="84.1499%" y="255.50"></text></g><g><title>update_min_vruntime (3 samples, 0.02%)</title><rect x="83.9320%" y="229" width="0.0241%" height="15" fill="rgb(218,117,39)" fg:x="10468" fg:w="3"/><text x="84.1820%" y="239.50"></text></g><g><title>__update_load_avg_cfs_rq (12 samples, 0.10%)</title><rect x="84.1084%" y="229" width="0.0962%" height="15" fill="rgb(248,169,11)" fg:x="10490" fg:w="12"/><text x="84.3584%" y="239.50"></text></g><g><title>__update_load_avg_se (7 samples, 0.06%)</title><rect x="84.2046%" y="229" width="0.0561%" height="15" fill="rgb(244,40,44)" fg:x="10502" fg:w="7"/><text x="84.4546%" y="239.50"></text></g><g><title>dequeue_entity (83 samples, 0.67%)</title><rect x="83.6033%" y="261" width="0.6655%" height="15" fill="rgb(234,62,37)" fg:x="10427" fg:w="83"/><text x="83.8533%" y="271.50"></text></g><g><title>update_load_avg (39 samples, 0.31%)</title><rect x="83.9561%" y="245" width="0.3127%" height="15" fill="rgb(207,117,42)" fg:x="10471" fg:w="39"/><text x="84.2061%" y="255.50"></text></g><g><title>dequeue_task_fair (98 samples, 0.79%)</title><rect x="83.5071%" y="277" width="0.7858%" height="15" fill="rgb(213,43,2)" fg:x="10415" fg:w="98"/><text x="83.7571%" y="287.50"></text></g><g><title>update_min_vruntime (3 samples, 0.02%)</title><rect x="84.2688%" y="261" width="0.0241%" height="15" fill="rgb(244,202,51)" fg:x="10510" fg:w="3"/><text x="84.5188%" y="271.50"></text></g><g><title>__mmdrop (6 samples, 0.05%)</title><rect x="84.2928%" y="261" width="0.0481%" height="15" fill="rgb(253,174,46)" fg:x="10513" fg:w="6"/><text x="84.5428%" y="271.50"></text></g><g><title>__free_pages_ok (6 samples, 0.05%)</title><rect x="84.2928%" y="245" width="0.0481%" height="15" fill="rgb(251,23,1)" fg:x="10513" fg:w="6"/><text x="84.5428%" y="255.50"></text></g><g><title>memcg_kmem_uncharge (6 samples, 0.05%)</title><rect x="84.2928%" y="229" width="0.0481%" height="15" fill="rgb(253,26,1)" fg:x="10513" fg:w="6"/><text x="84.5428%" y="239.50"></text></g><g><title>page_counter_uncharge (6 samples, 0.05%)</title><rect x="84.2928%" y="213" width="0.0481%" height="15" fill="rgb(216,89,31)" fg:x="10513" fg:w="6"/><text x="84.5428%" y="223.50"></text></g><g><title>page_counter_cancel (6 samples, 0.05%)</title><rect x="84.2928%" y="197" width="0.0481%" height="15" fill="rgb(209,109,5)" fg:x="10513" fg:w="6"/><text x="84.5428%" y="207.50"></text></g><g><title>finish_task_switch (12 samples, 0.10%)</title><rect x="84.2928%" y="277" width="0.0962%" height="15" fill="rgb(229,63,13)" fg:x="10513" fg:w="12"/><text x="84.5428%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.05%)</title><rect x="84.3409%" y="261" width="0.0481%" height="15" fill="rgb(238,137,54)" fg:x="10519" fg:w="6"/><text x="84.5909%" y="271.50"></text></g><g><title>x86_pmu_enable_all (6 samples, 0.05%)</title><rect x="84.3409%" y="245" width="0.0481%" height="15" fill="rgb(228,1,9)" fg:x="10519" fg:w="6"/><text x="84.5909%" y="255.50"></text></g><g><title>native_write_msr (6 samples, 0.05%)</title><rect x="84.3409%" y="229" width="0.0481%" height="15" fill="rgb(249,120,48)" fg:x="10519" fg:w="6"/><text x="84.5909%" y="239.50"></text></g><g><title>load_balance (6 samples, 0.05%)</title><rect x="84.5253%" y="261" width="0.0481%" height="15" fill="rgb(209,72,36)" fg:x="10542" fg:w="6"/><text x="84.7753%" y="271.50"></text></g><g><title>find_busiest_group (5 samples, 0.04%)</title><rect x="84.5334%" y="245" width="0.0401%" height="15" fill="rgb(247,98,49)" fg:x="10543" fg:w="5"/><text x="84.7834%" y="255.50"></text></g><g><title>update_nohz_stats (2 samples, 0.02%)</title><rect x="84.5574%" y="229" width="0.0160%" height="15" fill="rgb(233,75,36)" fg:x="10546" fg:w="2"/><text x="84.8074%" y="239.50"></text></g><g><title>pick_next_task_fair (24 samples, 0.19%)</title><rect x="84.3970%" y="277" width="0.1924%" height="15" fill="rgb(225,14,24)" fg:x="10526" fg:w="24"/><text x="84.6470%" y="287.50"></text></g><g><title>update_blocked_averages (2 samples, 0.02%)</title><rect x="84.5734%" y="261" width="0.0160%" height="15" fill="rgb(237,193,20)" fg:x="10548" fg:w="2"/><text x="84.8234%" y="271.50"></text></g><g><title>__update_idle_core (6 samples, 0.05%)</title><rect x="84.6616%" y="261" width="0.0481%" height="15" fill="rgb(239,122,19)" fg:x="10559" fg:w="6"/><text x="84.9116%" y="271.50"></text></g><g><title>pick_next_task_idle (28 samples, 0.22%)</title><rect x="84.5895%" y="277" width="0.2245%" height="15" fill="rgb(231,220,10)" fg:x="10550" fg:w="28"/><text x="84.8395%" y="287.50"></text></g><g><title>put_prev_task_fair (13 samples, 0.10%)</title><rect x="84.7097%" y="261" width="0.1042%" height="15" fill="rgb(220,66,15)" fg:x="10565" fg:w="13"/><text x="84.9597%" y="271.50"></text></g><g><title>put_prev_entity (9 samples, 0.07%)</title><rect x="84.7418%" y="245" width="0.0722%" height="15" fill="rgb(215,171,52)" fg:x="10569" fg:w="9"/><text x="84.9918%" y="255.50"></text></g><g><title>futex_wait_queue_me (698 samples, 5.60%)</title><rect x="79.2976%" y="325" width="5.5965%" height="15" fill="rgb(241,169,50)" fg:x="9890" fg:w="698"/><text x="79.5476%" y="335.50">futex_w..</text></g><g><title>schedule (684 samples, 5.48%)</title><rect x="79.4099%" y="309" width="5.4843%" height="15" fill="rgb(236,189,0)" fg:x="9904" fg:w="684"/><text x="79.6599%" y="319.50">schedule</text></g><g><title>__schedule (684 samples, 5.48%)</title><rect x="79.4099%" y="293" width="5.4843%" height="15" fill="rgb(217,147,20)" fg:x="9904" fg:w="684"/><text x="79.6599%" y="303.50">__sched..</text></g><g><title>update_rq_clock (9 samples, 0.07%)</title><rect x="84.8220%" y="277" width="0.0722%" height="15" fill="rgb(206,188,39)" fg:x="10579" fg:w="9"/><text x="85.0720%" y="287.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.06%)</title><rect x="84.8300%" y="261" width="0.0641%" height="15" fill="rgb(227,118,25)" fg:x="10580" fg:w="8"/><text x="85.0800%" y="271.50"></text></g><g><title>sched_clock (8 samples, 0.06%)</title><rect x="84.8300%" y="245" width="0.0641%" height="15" fill="rgb(248,171,40)" fg:x="10580" fg:w="8"/><text x="85.0800%" y="255.50"></text></g><g><title>native_sched_clock (8 samples, 0.06%)</title><rect x="84.8300%" y="229" width="0.0641%" height="15" fill="rgb(251,90,54)" fg:x="10580" fg:w="8"/><text x="85.0800%" y="239.50"></text></g><g><title>get_futex_key (12 samples, 0.10%)</title><rect x="85.1668%" y="309" width="0.0962%" height="15" fill="rgb(234,11,46)" fg:x="10622" fg:w="12"/><text x="85.4168%" y="319.50"></text></g><g><title>get_futex_key_refs.isra.12 (3 samples, 0.02%)</title><rect x="85.2389%" y="293" width="0.0241%" height="15" fill="rgb(229,134,13)" fg:x="10631" fg:w="3"/><text x="85.4889%" y="303.50"></text></g><g><title>get_futex_value_locked (9 samples, 0.07%)</title><rect x="85.2630%" y="309" width="0.0722%" height="15" fill="rgb(223,129,3)" fg:x="10634" fg:w="9"/><text x="85.5130%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (915 samples, 7.34%)</title><rect x="78.0388%" y="405" width="7.3364%" height="15" fill="rgb(221,124,13)" fg:x="9733" fg:w="915"/><text x="78.2888%" y="415.50">entry_SYSC..</text></g><g><title>do_syscall_64 (850 samples, 6.82%)</title><rect x="78.5600%" y="389" width="6.8153%" height="15" fill="rgb(234,3,18)" fg:x="9798" fg:w="850"/><text x="78.8100%" y="399.50">do_syscal..</text></g><g><title>__x64_sys_futex (808 samples, 6.48%)</title><rect x="78.8967%" y="373" width="6.4785%" height="15" fill="rgb(249,199,20)" fg:x="9840" fg:w="808"/><text x="79.1467%" y="383.50">__x64_sy..</text></g><g><title>do_futex (793 samples, 6.36%)</title><rect x="79.0170%" y="357" width="6.3582%" height="15" fill="rgb(224,134,6)" fg:x="9855" fg:w="793"/><text x="79.2670%" y="367.50">do_futex</text></g><g><title>futex_wait (768 samples, 6.16%)</title><rect x="79.2174%" y="341" width="6.1578%" height="15" fill="rgb(254,83,26)" fg:x="9880" fg:w="768"/><text x="79.4674%" y="351.50">futex_wa..</text></g><g><title>futex_wait_setup (60 samples, 0.48%)</title><rect x="84.8942%" y="325" width="0.4811%" height="15" fill="rgb(217,88,9)" fg:x="10588" fg:w="60"/><text x="85.1442%" y="335.50"></text></g><g><title>hash_futex (5 samples, 0.04%)</title><rect x="85.3352%" y="309" width="0.0401%" height="15" fill="rgb(225,73,2)" fg:x="10643" fg:w="5"/><text x="85.5852%" y="319.50"></text></g><g><title>irq_work_interrupt (4 samples, 0.03%)</title><rect x="85.3752%" y="405" width="0.0321%" height="15" fill="rgb(226,44,39)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="415.50"></text></g><g><title>smp_irq_work_interrupt (4 samples, 0.03%)</title><rect x="85.3752%" y="389" width="0.0321%" height="15" fill="rgb(228,53,17)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="399.50"></text></g><g><title>irq_work_run (4 samples, 0.03%)</title><rect x="85.3752%" y="373" width="0.0321%" height="15" fill="rgb(212,27,27)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="383.50"></text></g><g><title>irq_work_run_list (4 samples, 0.03%)</title><rect x="85.3752%" y="357" width="0.0321%" height="15" fill="rgb(241,50,6)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="367.50"></text></g><g><title>perf_pending_event (4 samples, 0.03%)</title><rect x="85.3752%" y="341" width="0.0321%" height="15" fill="rgb(225,28,51)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="351.50"></text></g><g><title>perf_event_wakeup (4 samples, 0.03%)</title><rect x="85.3752%" y="325" width="0.0321%" height="15" fill="rgb(215,33,16)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="335.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.03%)</title><rect x="85.3752%" y="309" width="0.0321%" height="15" fill="rgb(243,40,39)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="319.50"></text></g><g><title>__wake_up_common (4 samples, 0.03%)</title><rect x="85.3752%" y="293" width="0.0321%" height="15" fill="rgb(225,11,42)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="303.50"></text></g><g><title>pollwake (4 samples, 0.03%)</title><rect x="85.3752%" y="277" width="0.0321%" height="15" fill="rgb(241,220,38)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="287.50"></text></g><g><title>try_to_wake_up (4 samples, 0.03%)</title><rect x="85.3752%" y="261" width="0.0321%" height="15" fill="rgb(244,52,35)" fg:x="10648" fg:w="4"/><text x="85.6252%" y="271.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,077 samples, 8.64%)</title><rect x="76.9163%" y="437" width="8.6353%" height="15" fill="rgb(246,42,46)" fg:x="9593" fg:w="1077"/><text x="77.1663%" y="447.50">parking_lot_..</text></g><g><title>syscall (1,077 samples, 8.64%)</title><rect x="76.9163%" y="421" width="8.6353%" height="15" fill="rgb(205,184,13)" fg:x="9593" fg:w="1077"/><text x="77.1663%" y="431.50">syscall</text></g><g><title>syscall_return_via_sysret (17 samples, 0.14%)</title><rect x="85.4153%" y="405" width="0.1363%" height="15" fill="rgb(209,48,36)" fg:x="10653" fg:w="17"/><text x="85.6653%" y="415.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,519 samples, 12.18%)</title><rect x="73.3804%" y="453" width="12.1793%" height="15" fill="rgb(244,34,51)" fg:x="9152" fg:w="1519"/><text x="73.6304%" y="463.50">&lt;parking_lot_core:..</text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.05%)</title><rect x="85.5597%" y="453" width="0.0481%" height="15" fill="rgb(221,107,33)" fg:x="10671" fg:w="6"/><text x="85.8097%" y="463.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (6 samples, 0.05%)</title><rect x="85.5597%" y="437" width="0.0481%" height="15" fill="rgb(224,203,12)" fg:x="10671" fg:w="6"/><text x="85.8097%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.05%)</title><rect x="85.5597%" y="421" width="0.0481%" height="15" fill="rgb(230,215,18)" fg:x="10671" fg:w="6"/><text x="85.8097%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (12 samples, 0.10%)</title><rect x="85.6078%" y="453" width="0.0962%" height="15" fill="rgb(206,185,35)" fg:x="10677" fg:w="12"/><text x="85.8578%" y="463.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (12 samples, 0.10%)</title><rect x="85.6078%" y="437" width="0.0962%" height="15" fill="rgb(228,140,34)" fg:x="10677" fg:w="12"/><text x="85.8578%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1,566 samples, 12.56%)</title><rect x="73.2521%" y="469" width="12.5561%" height="15" fill="rgb(208,93,13)" fg:x="9136" fg:w="1566"/><text x="73.5021%" y="479.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (13 samples, 0.10%)</title><rect x="85.7040%" y="453" width="0.1042%" height="15" fill="rgb(221,193,39)" fg:x="10689" fg:w="13"/><text x="85.9540%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.10%)</title><rect x="85.7040%" y="437" width="0.1042%" height="15" fill="rgb(241,132,34)" fg:x="10689" fg:w="13"/><text x="85.9540%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.10%)</title><rect x="85.7040%" y="421" width="0.1042%" height="15" fill="rgb(221,141,10)" fg:x="10689" fg:w="13"/><text x="85.9540%" y="431.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (1,628 samples, 13.05%)</title><rect x="72.7870%" y="565" width="13.0532%" height="15" fill="rgb(226,90,31)" fg:x="9078" fg:w="1628"/><text x="73.0370%" y="575.50">tokio::runtime::park..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,599 samples, 12.82%)</title><rect x="73.0196%" y="549" width="12.8207%" height="15" fill="rgb(243,75,5)" fg:x="9107" fg:w="1599"/><text x="73.2696%" y="559.50">tokio::loom::std::p..</text></g><g><title>parking_lot::condvar::Condvar::wait (1,599 samples, 12.82%)</title><rect x="73.0196%" y="533" width="12.8207%" height="15" fill="rgb(227,156,21)" fg:x="9107" fg:w="1599"/><text x="73.2696%" y="543.50">parking_lot::condva..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,587 samples, 12.72%)</title><rect x="73.1158%" y="517" width="12.7245%" height="15" fill="rgb(250,195,8)" fg:x="9119" fg:w="1587"/><text x="73.3658%" y="527.50">parking_lot::condva..</text></g><g><title>parking_lot_core::parking_lot::park (1,570 samples, 12.59%)</title><rect x="73.2521%" y="501" width="12.5882%" height="15" fill="rgb(220,134,5)" fg:x="9136" fg:w="1570"/><text x="73.5021%" y="511.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,570 samples, 12.59%)</title><rect x="73.2521%" y="485" width="12.5882%" height="15" fill="rgb(246,106,34)" fg:x="9136" fg:w="1570"/><text x="73.5021%" y="495.50">parking_lot_core::p..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.03%)</title><rect x="85.8082%" y="469" width="0.0321%" height="15" fill="rgb(205,1,4)" fg:x="10702" fg:w="4"/><text x="86.0582%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (4 samples, 0.03%)</title><rect x="85.8082%" y="453" width="0.0321%" height="15" fill="rgb(224,151,29)" fg:x="10702" fg:w="4"/><text x="86.0582%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="85.8242%" y="437" width="0.0160%" height="15" fill="rgb(251,196,0)" fg:x="10704" fg:w="2"/><text x="86.0742%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="85.8242%" y="421" width="0.0160%" height="15" fill="rgb(212,127,0)" fg:x="10704" fg:w="2"/><text x="86.0742%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="85.8242%" y="405" width="0.0160%" height="15" fill="rgb(236,71,53)" fg:x="10704" fg:w="2"/><text x="86.0742%" y="415.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="86.0327%" y="405" width="0.0401%" height="15" fill="rgb(227,99,0)" fg:x="10730" fg:w="5"/><text x="86.2827%" y="415.50"></text></g><g><title>mio::event::events::Events::iter (3 samples, 0.02%)</title><rect x="86.0888%" y="405" width="0.0241%" height="15" fill="rgb(239,89,21)" fg:x="10737" fg:w="3"/><text x="86.3388%" y="415.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.02%)</title><rect x="86.1931%" y="357" width="0.0160%" height="15" fill="rgb(243,122,19)" fg:x="10750" fg:w="2"/><text x="86.4431%" y="367.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="86.3294%" y="293" width="0.0241%" height="15" fill="rgb(229,192,45)" fg:x="10767" fg:w="3"/><text x="86.5794%" y="303.50"></text></g><g><title>__fget (3 samples, 0.02%)</title><rect x="86.3294%" y="277" width="0.0241%" height="15" fill="rgb(235,165,35)" fg:x="10767" fg:w="3"/><text x="86.5794%" y="287.50"></text></g><g><title>__list_del_entry_valid (6 samples, 0.05%)</title><rect x="86.6742%" y="245" width="0.0481%" height="15" fill="rgb(253,202,0)" fg:x="10810" fg:w="6"/><text x="86.9242%" y="255.50"></text></g><g><title>eventfd_poll (12 samples, 0.10%)</title><rect x="87.1873%" y="229" width="0.0962%" height="15" fill="rgb(235,51,20)" fg:x="10874" fg:w="12"/><text x="87.4373%" y="239.50"></text></g><g><title>ep_send_events_proc (199 samples, 1.60%)</title><rect x="86.3695%" y="261" width="1.5956%" height="15" fill="rgb(218,95,46)" fg:x="10772" fg:w="199"/><text x="86.6195%" y="271.50"></text></g><g><title>ep_item_poll.isra.18 (155 samples, 1.24%)</title><rect x="86.7223%" y="245" width="1.2428%" height="15" fill="rgb(212,81,10)" fg:x="10816" fg:w="155"/><text x="86.9723%" y="255.50"></text></g><g><title>sock_poll (84 samples, 0.67%)</title><rect x="87.2915%" y="229" width="0.6735%" height="15" fill="rgb(240,59,0)" fg:x="10887" fg:w="84"/><text x="87.5415%" y="239.50"></text></g><g><title>tcp_poll (40 samples, 0.32%)</title><rect x="87.6443%" y="213" width="0.3207%" height="15" fill="rgb(212,191,42)" fg:x="10931" fg:w="40"/><text x="87.8943%" y="223.50"></text></g><g><title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="87.9490%" y="197" width="0.0160%" height="15" fill="rgb(233,140,3)" fg:x="10969" fg:w="2"/><text x="88.1990%" y="207.50"></text></g><g><title>mutex_lock (18 samples, 0.14%)</title><rect x="87.9650%" y="261" width="0.1443%" height="15" fill="rgb(215,69,23)" fg:x="10971" fg:w="18"/><text x="88.2150%" y="271.50"></text></g><g><title>_cond_resched (6 samples, 0.05%)</title><rect x="88.0613%" y="245" width="0.0481%" height="15" fill="rgb(240,202,20)" fg:x="10983" fg:w="6"/><text x="88.3113%" y="255.50"></text></g><g><title>rcu_all_qs (6 samples, 0.05%)</title><rect x="88.0613%" y="229" width="0.0481%" height="15" fill="rgb(209,146,50)" fg:x="10983" fg:w="6"/><text x="88.3113%" y="239.50"></text></g><g><title>ep_scan_ready_list.constprop.22 (218 samples, 1.75%)</title><rect x="86.3695%" y="277" width="1.7479%" height="15" fill="rgb(253,102,54)" fg:x="10772" fg:w="218"/><text x="86.6195%" y="287.50"></text></g><g><title>__const_udelay (4 samples, 0.03%)</title><rect x="88.2216%" y="165" width="0.0321%" height="15" fill="rgb(250,173,47)" fg:x="11003" fg:w="4"/><text x="88.4716%" y="175.50"></text></g><g><title>amd_pmu_addr_offset (3 samples, 0.02%)</title><rect x="88.2537%" y="165" width="0.0241%" height="15" fill="rgb(232,142,7)" fg:x="11007" fg:w="3"/><text x="88.5037%" y="175.50"></text></g><g><title>delay_mwaitx (42 samples, 0.34%)</title><rect x="88.2777%" y="165" width="0.3368%" height="15" fill="rgb(230,157,47)" fg:x="11010" fg:w="42"/><text x="88.5277%" y="175.50"></text></g><g><title>amd_pmu_wait_on_overflow (64 samples, 0.51%)</title><rect x="88.2056%" y="181" width="0.5131%" height="15" fill="rgb(214,177,35)" fg:x="11001" fg:w="64"/><text x="88.4556%" y="191.50"></text></g><g><title>native_read_msr (13 samples, 0.10%)</title><rect x="88.6145%" y="165" width="0.1042%" height="15" fill="rgb(234,119,46)" fg:x="11052" fg:w="13"/><text x="88.8645%" y="175.50"></text></g><g><title>amd_pmu_addr_offset (5 samples, 0.04%)</title><rect x="88.7668%" y="165" width="0.0401%" height="15" fill="rgb(241,180,50)" fg:x="11071" fg:w="5"/><text x="89.0168%" y="175.50"></text></g><g><title>native_read_msr (17 samples, 0.14%)</title><rect x="88.8069%" y="165" width="0.1363%" height="15" fill="rgb(221,54,25)" fg:x="11076" fg:w="17"/><text x="89.0569%" y="175.50"></text></g><g><title>amd_pmu_disable_all (135 samples, 1.08%)</title><rect x="88.1735%" y="197" width="1.0824%" height="15" fill="rgb(209,157,44)" fg:x="10997" fg:w="135"/><text x="88.4235%" y="207.50"></text></g><g><title>x86_pmu_disable_all (67 samples, 0.54%)</title><rect x="88.7187%" y="181" width="0.5372%" height="15" fill="rgb(246,115,41)" fg:x="11065" fg:w="67"/><text x="88.9687%" y="191.50"></text></g><g><title>native_write_msr (39 samples, 0.31%)</title><rect x="88.9432%" y="165" width="0.3127%" height="15" fill="rgb(229,86,1)" fg:x="11093" fg:w="39"/><text x="89.1932%" y="175.50"></text></g><g><title>__perf_event_task_sched_out (139 samples, 1.11%)</title><rect x="88.1495%" y="229" width="1.1145%" height="15" fill="rgb(240,108,53)" fg:x="10994" fg:w="139"/><text x="88.3995%" y="239.50"></text></g><g><title>ctx_sched_out (136 samples, 1.09%)</title><rect x="88.1735%" y="213" width="1.0904%" height="15" fill="rgb(227,134,2)" fg:x="10997" fg:w="136"/><text x="88.4235%" y="223.50"></text></g><g><title>update_cfs_group (4 samples, 0.03%)</title><rect x="89.3040%" y="197" width="0.0321%" height="15" fill="rgb(213,129,25)" fg:x="11138" fg:w="4"/><text x="89.5540%" y="207.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="89.3361%" y="197" width="0.0160%" height="15" fill="rgb(226,35,21)" fg:x="11142" fg:w="2"/><text x="89.5861%" y="207.50"></text></g><g><title>dequeue_task_fair (16 samples, 0.13%)</title><rect x="89.2640%" y="229" width="0.1283%" height="15" fill="rgb(208,129,26)" fg:x="11133" fg:w="16"/><text x="89.5140%" y="239.50"></text></g><g><title>dequeue_entity (15 samples, 0.12%)</title><rect x="89.2720%" y="213" width="0.1203%" height="15" fill="rgb(224,83,6)" fg:x="11134" fg:w="15"/><text x="89.5220%" y="223.50"></text></g><g><title>update_load_avg (5 samples, 0.04%)</title><rect x="89.3521%" y="197" width="0.0401%" height="15" fill="rgb(227,52,39)" fg:x="11144" fg:w="5"/><text x="89.6021%" y="207.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="89.4003%" y="229" width="0.0160%" height="15" fill="rgb(241,30,17)" fg:x="11150" fg:w="2"/><text x="89.6503%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (401 samples, 3.22%)</title><rect x="86.2091%" y="357" width="3.2152%" height="15" fill="rgb(246,186,42)" fg:x="10752" fg:w="401"/><text x="86.4591%" y="367.50">ent..</text></g><g><title>do_syscall_64 (399 samples, 3.20%)</title><rect x="86.2251%" y="341" width="3.1992%" height="15" fill="rgb(221,169,15)" fg:x="10754" fg:w="399"/><text x="86.4751%" y="351.50">do_..</text></g><g><title>__x64_sys_epoll_wait (390 samples, 3.13%)</title><rect x="86.2973%" y="325" width="3.1270%" height="15" fill="rgb(235,108,21)" fg:x="10763" fg:w="390"/><text x="86.5473%" y="335.50">__x..</text></g><g><title>do_epoll_wait (389 samples, 3.12%)</title><rect x="86.3053%" y="309" width="3.1190%" height="15" fill="rgb(219,148,30)" fg:x="10764" fg:w="389"/><text x="86.5553%" y="319.50">do_..</text></g><g><title>ep_poll (383 samples, 3.07%)</title><rect x="86.3534%" y="293" width="3.0709%" height="15" fill="rgb(220,109,5)" fg:x="10770" fg:w="383"/><text x="86.6034%" y="303.50">ep_..</text></g><g><title>schedule_hrtimeout_range_clock (163 samples, 1.31%)</title><rect x="88.1174%" y="277" width="1.3069%" height="15" fill="rgb(213,203,48)" fg:x="10990" fg:w="163"/><text x="88.3674%" y="287.50"></text></g><g><title>schedule (163 samples, 1.31%)</title><rect x="88.1174%" y="261" width="1.3069%" height="15" fill="rgb(244,71,33)" fg:x="10990" fg:w="163"/><text x="88.3674%" y="271.50"></text></g><g><title>__schedule (162 samples, 1.30%)</title><rect x="88.1254%" y="245" width="1.2989%" height="15" fill="rgb(209,23,2)" fg:x="10991" fg:w="162"/><text x="88.3754%" y="255.50"></text></g><g><title>mio::poll::Poll::poll (415 samples, 3.33%)</title><rect x="86.1129%" y="405" width="3.3275%" height="15" fill="rgb(219,97,7)" fg:x="10740" fg:w="415"/><text x="86.3629%" y="415.50">mio..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (415 samples, 3.33%)</title><rect x="86.1129%" y="389" width="3.3275%" height="15" fill="rgb(216,161,23)" fg:x="10740" fg:w="415"/><text x="86.3629%" y="399.50">mio..</text></g><g><title>epoll_wait (414 samples, 3.32%)</title><rect x="86.1209%" y="373" width="3.3194%" height="15" fill="rgb(207,45,42)" fg:x="10741" fg:w="414"/><text x="86.3709%" y="383.50">epo..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="89.4243%" y="357" width="0.0160%" height="15" fill="rgb(241,61,4)" fg:x="11153" fg:w="2"/><text x="89.6743%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.02%)</title><rect x="89.4403%" y="389" width="0.0160%" height="15" fill="rgb(236,170,1)" fg:x="11155" fg:w="2"/><text x="89.6903%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="89.5125%" y="373" width="0.0241%" height="15" fill="rgb(239,72,5)" fg:x="11164" fg:w="3"/><text x="89.7625%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="89.5125%" y="357" width="0.0241%" height="15" fill="rgb(214,13,50)" fg:x="11164" fg:w="3"/><text x="89.7625%" y="367.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (12 samples, 0.10%)</title><rect x="89.4564%" y="389" width="0.0962%" height="15" fill="rgb(224,88,9)" fg:x="11157" fg:w="12"/><text x="89.7064%" y="399.50"></text></g><g><title>tokio::util::bit::Pack::unpack (2 samples, 0.02%)</title><rect x="89.5366%" y="373" width="0.0160%" height="15" fill="rgb(238,192,34)" fg:x="11167" fg:w="2"/><text x="89.7866%" y="383.50"></text></g><g><title>tokio::util::bit::unpack (2 samples, 0.02%)</title><rect x="89.5366%" y="357" width="0.0160%" height="15" fill="rgb(217,203,50)" fg:x="11167" fg:w="2"/><text x="89.7866%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (5 samples, 0.04%)</title><rect x="89.5847%" y="357" width="0.0401%" height="15" fill="rgb(241,123,32)" fg:x="11173" fg:w="5"/><text x="89.8347%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.04%)</title><rect x="89.5847%" y="341" width="0.0401%" height="15" fill="rgb(248,151,39)" fg:x="11173" fg:w="5"/><text x="89.8347%" y="351.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake (12 samples, 0.10%)</title><rect x="89.5526%" y="389" width="0.0962%" height="15" fill="rgb(208,89,6)" fg:x="11169" fg:w="12"/><text x="89.8026%" y="399.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake0 (12 samples, 0.10%)</title><rect x="89.5526%" y="373" width="0.0962%" height="15" fill="rgb(254,43,26)" fg:x="11169" fg:w="12"/><text x="89.8026%" y="383.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="89.6248%" y="357" width="0.0241%" height="15" fill="rgb(216,158,13)" fg:x="11178" fg:w="3"/><text x="89.8748%" y="367.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="89.6248%" y="341" width="0.0241%" height="15" fill="rgb(212,47,37)" fg:x="11178" fg:w="3"/><text x="89.8748%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="89.6248%" y="325" width="0.0241%" height="15" fill="rgb(254,16,10)" fg:x="11178" fg:w="3"/><text x="89.8748%" y="335.50"></text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (466 samples, 3.74%)</title><rect x="85.9285%" y="437" width="3.7364%" height="15" fill="rgb(223,228,16)" fg:x="10717" fg:w="466"/><text x="86.1785%" y="447.50">&lt;tok..</text></g><g><title>tokio::io::driver::Driver::turn (466 samples, 3.74%)</title><rect x="85.9285%" y="421" width="3.7364%" height="15" fill="rgb(249,108,50)" fg:x="10717" fg:w="466"/><text x="86.1785%" y="431.50">toki..</text></g><g><title>tokio::io::driver::Driver::dispatch (28 samples, 0.22%)</title><rect x="89.4403%" y="405" width="0.2245%" height="15" fill="rgb(208,220,5)" fg:x="11155" fg:w="28"/><text x="89.6903%" y="415.50"></text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="89.6488%" y="389" width="0.0160%" height="15" fill="rgb(217,89,48)" fg:x="11181" fg:w="2"/><text x="89.8988%" y="399.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="89.7130%" y="389" width="0.0160%" height="15" fill="rgb(212,113,41)" fg:x="11189" fg:w="2"/><text x="89.9630%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="89.7130%" y="373" width="0.0160%" height="15" fill="rgb(231,127,5)" fg:x="11189" fg:w="2"/><text x="89.9630%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="89.7130%" y="357" width="0.0160%" height="15" fill="rgb(217,141,17)" fg:x="11189" fg:w="2"/><text x="89.9630%" y="367.50"></text></g><g><title>&lt;tokio::signal::unix::driver::Driver as tokio::park::Park&gt;::park (481 samples, 3.86%)</title><rect x="85.9205%" y="453" width="3.8566%" height="15" fill="rgb(245,125,54)" fg:x="10716" fg:w="481"/><text x="86.1705%" y="463.50">&lt;tok..</text></g><g><title>tokio::signal::unix::driver::Driver::process (14 samples, 0.11%)</title><rect x="89.6648%" y="437" width="0.1123%" height="15" fill="rgb(248,125,3)" fg:x="11183" fg:w="14"/><text x="89.9148%" y="447.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (12 samples, 0.10%)</title><rect x="89.6809%" y="421" width="0.0962%" height="15" fill="rgb(236,119,51)" fg:x="11185" fg:w="12"/><text x="89.9309%" y="431.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (12 samples, 0.10%)</title><rect x="89.6809%" y="405" width="0.0962%" height="15" fill="rgb(239,99,8)" fg:x="11185" fg:w="12"/><text x="89.9309%" y="415.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.05%)</title><rect x="89.7290%" y="389" width="0.0481%" height="15" fill="rgb(224,228,4)" fg:x="11191" fg:w="6"/><text x="89.9790%" y="399.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="89.7530%" y="373" width="0.0241%" height="15" fill="rgb(220,131,45)" fg:x="11194" fg:w="3"/><text x="90.0030%" y="383.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="89.7530%" y="357" width="0.0241%" height="15" fill="rgb(215,62,5)" fg:x="11194" fg:w="3"/><text x="90.0030%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="89.7530%" y="341" width="0.0241%" height="15" fill="rgb(253,12,24)" fg:x="11194" fg:w="3"/><text x="90.0030%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.02%)</title><rect x="89.7530%" y="325" width="0.0241%" height="15" fill="rgb(248,120,50)" fg:x="11194" fg:w="3"/><text x="90.0030%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="89.7530%" y="309" width="0.0241%" height="15" fill="rgb(245,194,10)" fg:x="11194" fg:w="3"/><text x="90.0030%" y="319.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="89.7771%" y="437" width="0.0241%" height="15" fill="rgb(241,149,38)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="447.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (3 samples, 0.02%)</title><rect x="89.7771%" y="421" width="0.0241%" height="15" fill="rgb(219,215,7)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="431.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3 samples, 0.02%)</title><rect x="89.7771%" y="405" width="0.0241%" height="15" fill="rgb(208,120,31)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="415.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3 samples, 0.02%)</title><rect x="89.7771%" y="389" width="0.0241%" height="15" fill="rgb(244,30,8)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="399.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="89.7771%" y="373" width="0.0241%" height="15" fill="rgb(238,35,44)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="383.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (3 samples, 0.02%)</title><rect x="89.7771%" y="357" width="0.0241%" height="15" fill="rgb(243,218,37)" fg:x="11197" fg:w="3"/><text x="90.0271%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="89.8012%" y="421" width="0.0160%" height="15" fill="rgb(218,169,10)" fg:x="11200" fg:w="2"/><text x="90.0512%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="89.8012%" y="405" width="0.0160%" height="15" fill="rgb(221,144,10)" fg:x="11200" fg:w="2"/><text x="90.0512%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="89.8012%" y="389" width="0.0160%" height="15" fill="rgb(226,41,38)" fg:x="11200" fg:w="2"/><text x="90.0512%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="89.8172%" y="421" width="0.0160%" height="15" fill="rgb(228,3,1)" fg:x="11202" fg:w="2"/><text x="90.0672%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="89.8172%" y="405" width="0.0160%" height="15" fill="rgb(209,129,12)" fg:x="11202" fg:w="2"/><text x="90.0672%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="89.8172%" y="389" width="0.0160%" height="15" fill="rgb(213,136,33)" fg:x="11202" fg:w="2"/><text x="90.0672%" y="399.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (497 samples, 3.98%)</title><rect x="85.9205%" y="485" width="3.9849%" height="15" fill="rgb(209,181,29)" fg:x="10716" fg:w="497"/><text x="86.1705%" y="495.50">&lt;tok..</text></g><g><title>&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (497 samples, 3.98%)</title><rect x="85.9205%" y="469" width="3.9849%" height="15" fill="rgb(234,173,18)" fg:x="10716" fg:w="497"/><text x="86.1705%" y="479.50">&lt;tok..</text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (16 samples, 0.13%)</title><rect x="89.7771%" y="453" width="0.1283%" height="15" fill="rgb(227,73,47)" fg:x="11197" fg:w="16"/><text x="90.0271%" y="463.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (13 samples, 0.10%)</title><rect x="89.8012%" y="437" width="0.1042%" height="15" fill="rgb(234,9,34)" fg:x="11200" fg:w="13"/><text x="90.0512%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (9 samples, 0.07%)</title><rect x="89.8332%" y="421" width="0.0722%" height="15" fill="rgb(235,172,15)" fg:x="11204" fg:w="9"/><text x="90.0832%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (9 samples, 0.07%)</title><rect x="89.8332%" y="405" width="0.0722%" height="15" fill="rgb(245,61,2)" fg:x="11204" fg:w="9"/><text x="90.0832%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (9 samples, 0.07%)</title><rect x="89.8332%" y="389" width="0.0722%" height="15" fill="rgb(238,39,47)" fg:x="11204" fg:w="9"/><text x="90.0832%" y="399.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.05%)</title><rect x="89.9134%" y="485" width="0.0481%" height="15" fill="rgb(234,37,24)" fg:x="11214" fg:w="6"/><text x="90.1634%" y="495.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.05%)</title><rect x="89.9134%" y="469" width="0.0481%" height="15" fill="rgb(248,223,24)" fg:x="11214" fg:w="6"/><text x="90.1634%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.05%)</title><rect x="89.9134%" y="453" width="0.0481%" height="15" fill="rgb(223,12,15)" fg:x="11214" fg:w="6"/><text x="90.1634%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (8 samples, 0.06%)</title><rect x="89.9695%" y="453" width="0.0641%" height="15" fill="rgb(249,6,3)" fg:x="11221" fg:w="8"/><text x="90.2195%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (8 samples, 0.06%)</title><rect x="89.9695%" y="437" width="0.0641%" height="15" fill="rgb(237,105,33)" fg:x="11221" fg:w="8"/><text x="90.2195%" y="447.50"></text></g><g><title>tokio::time::driver::Inner::lock (12 samples, 0.10%)</title><rect x="90.0337%" y="453" width="0.0962%" height="15" fill="rgb(252,208,35)" fg:x="11229" fg:w="12"/><text x="90.2837%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.10%)</title><rect x="90.0337%" y="437" width="0.0962%" height="15" fill="rgb(215,181,35)" fg:x="11229" fg:w="12"/><text x="90.2837%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.10%)</title><rect x="90.0337%" y="421" width="0.0962%" height="15" fill="rgb(246,212,3)" fg:x="11229" fg:w="12"/><text x="90.2837%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.10%)</title><rect x="90.0337%" y="405" width="0.0962%" height="15" fill="rgb(247,156,24)" fg:x="11229" fg:w="12"/><text x="90.2837%" y="415.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll (3 samples, 0.02%)</title><rect x="90.1299%" y="453" width="0.0241%" height="15" fill="rgb(248,9,31)" fg:x="11241" fg:w="3"/><text x="90.3799%" y="463.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (3 samples, 0.02%)</title><rect x="90.1299%" y="437" width="0.0241%" height="15" fill="rgb(234,26,45)" fg:x="11241" fg:w="3"/><text x="90.3799%" y="447.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="90.1379%" y="421" width="0.0160%" height="15" fill="rgb(249,11,32)" fg:x="11242" fg:w="2"/><text x="90.3879%" y="431.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (2 samples, 0.02%)</title><rect x="90.1379%" y="405" width="0.0160%" height="15" fill="rgb(249,162,33)" fg:x="11242" fg:w="2"/><text x="90.3879%" y="415.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (27 samples, 0.22%)</title><rect x="89.9615%" y="469" width="0.2165%" height="15" fill="rgb(232,4,32)" fg:x="11220" fg:w="27"/><text x="90.2115%" y="479.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll_at (3 samples, 0.02%)</title><rect x="90.1539%" y="453" width="0.0241%" height="15" fill="rgb(212,5,45)" fg:x="11244" fg:w="3"/><text x="90.4039%" y="463.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (3 samples, 0.02%)</title><rect x="90.1539%" y="437" width="0.0241%" height="15" fill="rgb(227,95,13)" fg:x="11244" fg:w="3"/><text x="90.4039%" y="447.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (32 samples, 0.26%)</title><rect x="89.9615%" y="485" width="0.2566%" height="15" fill="rgb(223,205,10)" fg:x="11220" fg:w="32"/><text x="90.2115%" y="495.50"></text></g><g><title>tokio::time::driver::ClockTime::now (5 samples, 0.04%)</title><rect x="90.1780%" y="469" width="0.0401%" height="15" fill="rgb(222,178,8)" fg:x="11247" fg:w="5"/><text x="90.4280%" y="479.50"></text></g><g><title>tokio::time::clock::Clock::now (5 samples, 0.04%)</title><rect x="90.1780%" y="453" width="0.0401%" height="15" fill="rgb(216,13,22)" fg:x="11247" fg:w="5"/><text x="90.4280%" y="463.50"></text></g><g><title>tokio::time::clock::now (5 samples, 0.04%)</title><rect x="90.1780%" y="437" width="0.0401%" height="15" fill="rgb(240,167,12)" fg:x="11247" fg:w="5"/><text x="90.4280%" y="447.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.04%)</title><rect x="90.1780%" y="421" width="0.0401%" height="15" fill="rgb(235,68,35)" fg:x="11247" fg:w="5"/><text x="90.4280%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.03%)</title><rect x="90.1860%" y="405" width="0.0321%" height="15" fill="rgb(253,40,27)" fg:x="11248" fg:w="4"/><text x="90.4360%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.03%)</title><rect x="90.1860%" y="389" width="0.0321%" height="15" fill="rgb(214,19,28)" fg:x="11248" fg:w="4"/><text x="90.4360%" y="399.50"></text></g><g><title>__clock_gettime (4 samples, 0.03%)</title><rect x="90.1860%" y="373" width="0.0321%" height="15" fill="rgb(210,167,45)" fg:x="11248" fg:w="4"/><text x="90.4360%" y="383.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.03%)</title><rect x="90.1860%" y="357" width="0.0321%" height="15" fill="rgb(232,97,40)" fg:x="11248" fg:w="4"/><text x="90.4360%" y="367.50"></text></g><g><title>[[vdso]] (4 samples, 0.03%)</title><rect x="90.1860%" y="341" width="0.0321%" height="15" fill="rgb(250,35,23)" fg:x="11248" fg:w="4"/><text x="90.4360%" y="351.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (539 samples, 4.32%)</title><rect x="85.9044%" y="517" width="4.3217%" height="15" fill="rgb(248,47,53)" fg:x="10714" fg:w="539"/><text x="86.1544%" y="527.50">&lt;toki..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (539 samples, 4.32%)</title><rect x="85.9044%" y="501" width="4.3217%" height="15" fill="rgb(226,58,50)" fg:x="10714" fg:w="539"/><text x="86.1544%" y="511.50">tokio..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (541 samples, 4.34%)</title><rect x="85.8964%" y="533" width="4.3377%" height="15" fill="rgb(217,105,26)" fg:x="10713" fg:w="541"/><text x="86.1464%" y="543.50">&lt;toki..</text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (545 samples, 4.37%)</title><rect x="85.8964%" y="549" width="4.3698%" height="15" fill="rgb(208,64,1)" fg:x="10713" fg:w="545"/><text x="86.1464%" y="559.50">&lt;toki..</text></g><g><title>__sched_yield (4 samples, 0.03%)</title><rect x="90.2341%" y="533" width="0.0321%" height="15" fill="rgb(214,80,1)" fg:x="11254" fg:w="4"/><text x="90.4841%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.03%)</title><rect x="90.2341%" y="517" width="0.0321%" height="15" fill="rgb(206,175,26)" fg:x="11254" fg:w="4"/><text x="90.4841%" y="527.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (553 samples, 4.43%)</title><rect x="85.8403%" y="565" width="4.4339%" height="15" fill="rgb(235,156,37)" fg:x="10706" fg:w="553"/><text x="86.0903%" y="575.50">tokio..</text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (2,678 samples, 21.47%)</title><rect x="69.0427%" y="597" width="21.4721%" height="15" fill="rgb(213,100,9)" fg:x="8611" fg:w="2678"/><text x="69.2927%" y="607.50">&lt;tokio::runtime::park::Parker as t..</text></g><g><title>tokio::runtime::park::Inner::park (2,661 samples, 21.34%)</title><rect x="69.1790%" y="581" width="21.3358%" height="15" fill="rgb(241,15,13)" fg:x="8628" fg:w="2661"/><text x="69.4290%" y="591.50">tokio::runtime::park::Inner::park</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (30 samples, 0.24%)</title><rect x="90.2742%" y="565" width="0.2405%" height="15" fill="rgb(205,97,43)" fg:x="11259" fg:w="30"/><text x="90.5242%" y="575.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (31 samples, 0.25%)</title><rect x="90.5148%" y="597" width="0.2486%" height="15" fill="rgb(216,106,32)" fg:x="11289" fg:w="31"/><text x="90.7648%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (31 samples, 0.25%)</title><rect x="90.5148%" y="581" width="0.2486%" height="15" fill="rgb(226,200,8)" fg:x="11289" fg:w="31"/><text x="90.7648%" y="591.50"></text></g><g><title>core::cell::BorrowRefMut::new (31 samples, 0.25%)</title><rect x="90.5148%" y="565" width="0.2486%" height="15" fill="rgb(244,54,29)" fg:x="11289" fg:w="31"/><text x="90.7648%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (21 samples, 0.17%)</title><rect x="90.5949%" y="549" width="0.1684%" height="15" fill="rgb(252,169,12)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (21 samples, 0.17%)</title><rect x="90.5949%" y="533" width="0.1684%" height="15" fill="rgb(231,199,11)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="543.50"></text></g><g><title>core::mem::replace (21 samples, 0.17%)</title><rect x="90.5949%" y="517" width="0.1684%" height="15" fill="rgb(233,191,18)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="527.50"></text></g><g><title>core::mem::swap (21 samples, 0.17%)</title><rect x="90.5949%" y="501" width="0.1684%" height="15" fill="rgb(215,83,47)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="511.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (21 samples, 0.17%)</title><rect x="90.5949%" y="485" width="0.1684%" height="15" fill="rgb(251,67,19)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.17%)</title><rect x="90.5949%" y="469" width="0.1684%" height="15" fill="rgb(240,7,20)" fg:x="11299" fg:w="21"/><text x="90.8449%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (18 samples, 0.14%)</title><rect x="90.7713%" y="597" width="0.1443%" height="15" fill="rgb(210,150,26)" fg:x="11321" fg:w="18"/><text x="91.0213%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (16 samples, 0.13%)</title><rect x="90.9157%" y="597" width="0.1283%" height="15" fill="rgb(228,75,42)" fg:x="11339" fg:w="16"/><text x="91.1657%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (2,762 samples, 22.15%)</title><rect x="69.0186%" y="613" width="22.1456%" height="15" fill="rgb(237,134,48)" fg:x="8608" fg:w="2762"/><text x="69.2686%" y="623.50">tokio::runtime::thread_pool::worker..</text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (15 samples, 0.12%)</title><rect x="91.0439%" y="597" width="0.1203%" height="15" fill="rgb(205,80,50)" fg:x="11355" fg:w="15"/><text x="91.2939%" y="607.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (15 samples, 0.12%)</title><rect x="91.0439%" y="581" width="0.1203%" height="15" fill="rgb(217,74,48)" fg:x="11355" fg:w="15"/><text x="91.2939%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (15 samples, 0.12%)</title><rect x="91.0439%" y="565" width="0.1203%" height="15" fill="rgb(205,82,50)" fg:x="11355" fg:w="15"/><text x="91.2939%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.12%)</title><rect x="91.0439%" y="549" width="0.1203%" height="15" fill="rgb(228,1,33)" fg:x="11355" fg:w="15"/><text x="91.2939%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::task::inject::Pointers&gt;&gt; (15 samples, 0.12%)</title><rect x="91.1802%" y="581" width="0.1203%" height="15" fill="rgb(214,50,23)" fg:x="11372" fg:w="15"/><text x="91.4302%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.12%)</title><rect x="91.1802%" y="565" width="0.1203%" height="15" fill="rgb(210,62,9)" fg:x="11372" fg:w="15"/><text x="91.4302%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.12%)</title><rect x="91.1802%" y="549" width="0.1203%" height="15" fill="rgb(210,104,37)" fg:x="11372" fg:w="15"/><text x="91.4302%" y="559.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (57 samples, 0.46%)</title><rect x="91.1802%" y="597" width="0.4570%" height="15" fill="rgb(232,104,43)" fg:x="11372" fg:w="57"/><text x="91.4302%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (42 samples, 0.34%)</title><rect x="91.3005%" y="581" width="0.3368%" height="15" fill="rgb(244,52,6)" fg:x="11387" fg:w="42"/><text x="91.5505%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (42 samples, 0.34%)</title><rect x="91.3005%" y="565" width="0.3368%" height="15" fill="rgb(211,174,52)" fg:x="11387" fg:w="42"/><text x="91.5505%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (42 samples, 0.34%)</title><rect x="91.3005%" y="549" width="0.3368%" height="15" fill="rgb(229,48,4)" fg:x="11387" fg:w="42"/><text x="91.5505%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (70 samples, 0.56%)</title><rect x="91.1642%" y="613" width="0.5613%" height="15" fill="rgb(205,155,16)" fg:x="11370" fg:w="70"/><text x="91.4142%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::inject (11 samples, 0.09%)</title><rect x="91.6373%" y="597" width="0.0882%" height="15" fill="rgb(211,141,53)" fg:x="11429" fg:w="11"/><text x="91.8873%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="91.7896%" y="581" width="0.0321%" height="15" fill="rgb(240,148,11)" fg:x="11448" fg:w="4"/><text x="92.0396%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="91.7896%" y="565" width="0.0321%" height="15" fill="rgb(214,45,23)" fg:x="11448" fg:w="4"/><text x="92.0396%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.03%)</title><rect x="91.7896%" y="549" width="0.0321%" height="15" fill="rgb(248,74,26)" fg:x="11448" fg:w="4"/><text x="92.0396%" y="559.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (5 samples, 0.04%)</title><rect x="91.8217%" y="533" width="0.0401%" height="15" fill="rgb(218,121,16)" fg:x="11452" fg:w="5"/><text x="92.0717%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.04%)</title><rect x="91.8217%" y="517" width="0.0401%" height="15" fill="rgb(218,10,47)" fg:x="11452" fg:w="5"/><text x="92.0717%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (21 samples, 0.17%)</title><rect x="91.8217%" y="581" width="0.1684%" height="15" fill="rgb(227,99,14)" fg:x="11452" fg:w="21"/><text x="92.0717%" y="591.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (21 samples, 0.17%)</title><rect x="91.8217%" y="565" width="0.1684%" height="15" fill="rgb(229,83,46)" fg:x="11452" fg:w="21"/><text x="92.0717%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (21 samples, 0.17%)</title><rect x="91.8217%" y="549" width="0.1684%" height="15" fill="rgb(228,25,1)" fg:x="11452" fg:w="21"/><text x="92.0717%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.13%)</title><rect x="91.8618%" y="533" width="0.1283%" height="15" fill="rgb(252,190,15)" fg:x="11457" fg:w="16"/><text x="92.1118%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (49 samples, 0.39%)</title><rect x="91.7255%" y="613" width="0.3929%" height="15" fill="rgb(213,103,51)" fg:x="11440" fg:w="49"/><text x="91.9755%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (42 samples, 0.34%)</title><rect x="91.7816%" y="597" width="0.3368%" height="15" fill="rgb(220,38,44)" fg:x="11447" fg:w="42"/><text x="92.0316%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.13%)</title><rect x="91.9901%" y="581" width="0.1283%" height="15" fill="rgb(210,45,26)" fg:x="11473" fg:w="16"/><text x="92.2401%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.13%)</title><rect x="91.9901%" y="565" width="0.1283%" height="15" fill="rgb(205,95,48)" fg:x="11473" fg:w="16"/><text x="92.2401%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.13%)</title><rect x="91.9901%" y="549" width="0.1283%" height="15" fill="rgb(225,179,37)" fg:x="11473" fg:w="16"/><text x="92.2401%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (20 samples, 0.16%)</title><rect x="92.1344%" y="581" width="0.1604%" height="15" fill="rgb(230,209,3)" fg:x="11491" fg:w="20"/><text x="92.3844%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.16%)</title><rect x="92.1344%" y="565" width="0.1604%" height="15" fill="rgb(248,12,46)" fg:x="11491" fg:w="20"/><text x="92.3844%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.16%)</title><rect x="92.1344%" y="549" width="0.1604%" height="15" fill="rgb(234,18,0)" fg:x="11491" fg:w="20"/><text x="92.3844%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (27 samples, 0.22%)</title><rect x="92.1264%" y="597" width="0.2165%" height="15" fill="rgb(238,197,14)" fg:x="11490" fg:w="27"/><text x="92.3764%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.05%)</title><rect x="92.2947%" y="581" width="0.0481%" height="15" fill="rgb(251,162,48)" fg:x="11511" fg:w="6"/><text x="92.5447%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.05%)</title><rect x="92.2947%" y="565" width="0.0481%" height="15" fill="rgb(237,73,42)" fg:x="11511" fg:w="6"/><text x="92.5447%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.05%)</title><rect x="92.2947%" y="549" width="0.0481%" height="15" fill="rgb(211,108,8)" fg:x="11511" fg:w="6"/><text x="92.5447%" y="559.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="92.3268%" y="533" width="0.0160%" height="15" fill="rgb(213,45,22)" fg:x="11515" fg:w="2"/><text x="92.5768%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (2,919 samples, 23.40%)</title><rect x="69.0106%" y="629" width="23.4044%" height="15" fill="rgb(252,154,5)" fg:x="8607" fg:w="2919"/><text x="69.2606%" y="639.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (37 samples, 0.30%)</title><rect x="92.1183%" y="613" width="0.2967%" height="15" fill="rgb(221,79,52)" fg:x="11489" fg:w="37"/><text x="92.3683%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (9 samples, 0.07%)</title><rect x="92.3428%" y="597" width="0.0722%" height="15" fill="rgb(229,220,36)" fg:x="11517" fg:w="9"/><text x="92.5928%" y="607.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (5 samples, 0.04%)</title><rect x="92.3749%" y="581" width="0.0401%" height="15" fill="rgb(211,17,16)" fg:x="11521" fg:w="5"/><text x="92.6249%" y="591.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (5 samples, 0.04%)</title><rect x="92.3749%" y="565" width="0.0401%" height="15" fill="rgb(222,55,31)" fg:x="11521" fg:w="5"/><text x="92.6249%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (4 samples, 0.03%)</title><rect x="92.3829%" y="549" width="0.0321%" height="15" fill="rgb(221,221,31)" fg:x="11522" fg:w="4"/><text x="92.6329%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="92.3829%" y="533" width="0.0321%" height="15" fill="rgb(227,168,26)" fg:x="11522" fg:w="4"/><text x="92.6329%" y="543.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.03%)</title><rect x="92.4391%" y="581" width="0.0321%" height="15" fill="rgb(224,139,9)" fg:x="11529" fg:w="4"/><text x="92.6891%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (4 samples, 0.03%)</title><rect x="92.4391%" y="565" width="0.0321%" height="15" fill="rgb(254,172,0)" fg:x="11529" fg:w="4"/><text x="92.6891%" y="575.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (4 samples, 0.03%)</title><rect x="92.4391%" y="549" width="0.0321%" height="15" fill="rgb(235,203,1)" fg:x="11529" fg:w="4"/><text x="92.6891%" y="559.50"></text></g><g><title>syscall (4 samples, 0.03%)</title><rect x="92.4391%" y="533" width="0.0321%" height="15" fill="rgb(216,205,24)" fg:x="11529" fg:w="4"/><text x="92.6891%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.03%)</title><rect x="92.4391%" y="517" width="0.0321%" height="15" fill="rgb(233,24,6)" fg:x="11529" fg:w="4"/><text x="92.6891%" y="527.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.02%)</title><rect x="92.5192%" y="549" width="0.0160%" height="15" fill="rgb(244,110,9)" fg:x="11539" fg:w="2"/><text x="92.7692%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (20 samples, 0.16%)</title><rect x="92.5513%" y="517" width="0.1604%" height="15" fill="rgb(239,222,42)" fg:x="11543" fg:w="20"/><text x="92.8013%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (20 samples, 0.16%)</title><rect x="92.5513%" y="501" width="0.1604%" height="15" fill="rgb(218,145,13)" fg:x="11543" fg:w="20"/><text x="92.8013%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (20 samples, 0.16%)</title><rect x="92.5513%" y="485" width="0.1604%" height="15" fill="rgb(207,69,11)" fg:x="11543" fg:w="20"/><text x="92.8013%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.04%)</title><rect x="92.6716%" y="469" width="0.0401%" height="15" fill="rgb(220,223,22)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.04%)</title><rect x="92.6716%" y="453" width="0.0401%" height="15" fill="rgb(245,102,5)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="463.50"></text></g><g><title>core::mem::replace (5 samples, 0.04%)</title><rect x="92.6716%" y="437" width="0.0401%" height="15" fill="rgb(211,148,2)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="447.50"></text></g><g><title>core::mem::swap (5 samples, 0.04%)</title><rect x="92.6716%" y="421" width="0.0401%" height="15" fill="rgb(241,13,44)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="431.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.04%)</title><rect x="92.6716%" y="405" width="0.0401%" height="15" fill="rgb(219,137,21)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="92.6716%" y="389" width="0.0401%" height="15" fill="rgb(242,206,5)" fg:x="11558" fg:w="5"/><text x="92.9216%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.14%)</title><rect x="92.7117%" y="437" width="0.1443%" height="15" fill="rgb(217,114,22)" fg:x="11563" fg:w="18"/><text x="92.9617%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.15%)</title><rect x="92.7117%" y="517" width="0.1523%" height="15" fill="rgb(253,206,42)" fg:x="11563" fg:w="19"/><text x="92.9617%" y="527.50"></text></g><g><title>core::mem::take (19 samples, 0.15%)</title><rect x="92.7117%" y="501" width="0.1523%" height="15" fill="rgb(236,102,18)" fg:x="11563" fg:w="19"/><text x="92.9617%" y="511.50"></text></g><g><title>core::mem::replace (19 samples, 0.15%)</title><rect x="92.7117%" y="485" width="0.1523%" height="15" fill="rgb(208,59,49)" fg:x="11563" fg:w="19"/><text x="92.9617%" y="495.50"></text></g><g><title>core::mem::swap (19 samples, 0.15%)</title><rect x="92.7117%" y="469" width="0.1523%" height="15" fill="rgb(215,194,28)" fg:x="11563" fg:w="19"/><text x="92.9617%" y="479.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (19 samples, 0.15%)</title><rect x="92.7117%" y="453" width="0.1523%" height="15" fill="rgb(243,207,11)" fg:x="11563" fg:w="19"/><text x="92.9617%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (7 samples, 0.06%)</title><rect x="93.3130%" y="453" width="0.0561%" height="15" fill="rgb(254,179,35)" fg:x="11638" fg:w="7"/><text x="93.5630%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (5 samples, 0.04%)</title><rect x="93.3291%" y="437" width="0.0401%" height="15" fill="rgb(235,97,3)" fg:x="11640" fg:w="5"/><text x="93.5791%" y="447.50"></text></g><g><title>__rust_probestack (2 samples, 0.02%)</title><rect x="93.5135%" y="437" width="0.0160%" height="15" fill="rgb(215,155,33)" fg:x="11663" fg:w="2"/><text x="93.7635%" y="447.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::is_ready (3 samples, 0.02%)</title><rect x="93.5856%" y="341" width="0.0241%" height="15" fill="rgb(223,128,12)" fg:x="11672" fg:w="3"/><text x="93.8356%" y="351.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.20%)</title><rect x="93.5295%" y="389" width="0.2004%" height="15" fill="rgb(208,157,18)" fg:x="11665" fg:w="25"/><text x="93.7795%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (21 samples, 0.17%)</title><rect x="93.5616%" y="373" width="0.1684%" height="15" fill="rgb(249,70,54)" fg:x="11669" fg:w="21"/><text x="93.8116%" y="383.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (21 samples, 0.17%)</title><rect x="93.5616%" y="357" width="0.1684%" height="15" fill="rgb(244,118,24)" fg:x="11669" fg:w="21"/><text x="93.8116%" y="367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15 samples, 0.12%)</title><rect x="93.6097%" y="341" width="0.1203%" height="15" fill="rgb(211,54,0)" fg:x="11675" fg:w="15"/><text x="93.8597%" y="351.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (15 samples, 0.12%)</title><rect x="93.6097%" y="325" width="0.1203%" height="15" fill="rgb(245,137,45)" fg:x="11675" fg:w="15"/><text x="93.8597%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="93.6578%" y="309" width="0.0722%" height="15" fill="rgb(232,154,31)" fg:x="11681" fg:w="9"/><text x="93.9078%" y="319.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.32%)</title><rect x="93.5295%" y="437" width="0.3207%" height="15" fill="rgb(253,6,39)" fg:x="11665" fg:w="40"/><text x="93.7795%" y="447.50"></text></g><g><title>std::panicking::try (40 samples, 0.32%)</title><rect x="93.5295%" y="421" width="0.3207%" height="15" fill="rgb(234,183,24)" fg:x="11665" fg:w="40"/><text x="93.7795%" y="431.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.32%)</title><rect x="93.5295%" y="405" width="0.3207%" height="15" fill="rgb(252,84,40)" fg:x="11665" fg:w="40"/><text x="93.7795%" y="415.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (15 samples, 0.12%)</title><rect x="93.7300%" y="389" width="0.1203%" height="15" fill="rgb(224,65,2)" fg:x="11690" fg:w="15"/><text x="93.9800%" y="399.50"></text></g><g><title>[libc-2.28.so] (9 samples, 0.07%)</title><rect x="93.7781%" y="373" width="0.0722%" height="15" fill="rgb(229,38,24)" fg:x="11696" fg:w="9"/><text x="94.0281%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (4 samples, 0.03%)</title><rect x="93.8582%" y="437" width="0.0321%" height="15" fill="rgb(218,131,50)" fg:x="11706" fg:w="4"/><text x="94.1082%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (2 samples, 0.02%)</title><rect x="93.8743%" y="421" width="0.0160%" height="15" fill="rgb(233,106,18)" fg:x="11708" fg:w="2"/><text x="94.1243%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::load (2 samples, 0.02%)</title><rect x="93.8743%" y="405" width="0.0160%" height="15" fill="rgb(220,216,11)" fg:x="11708" fg:w="2"/><text x="94.1243%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="93.8743%" y="389" width="0.0160%" height="15" fill="rgb(251,100,45)" fg:x="11708" fg:w="2"/><text x="94.1243%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="93.8743%" y="373" width="0.0160%" height="15" fill="rgb(235,143,32)" fg:x="11708" fg:w="2"/><text x="94.1243%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (99 samples, 0.79%)</title><rect x="93.1046%" y="485" width="0.7938%" height="15" fill="rgb(248,124,34)" fg:x="11612" fg:w="99"/><text x="93.3546%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (75 samples, 0.60%)</title><rect x="93.2970%" y="469" width="0.6013%" height="15" fill="rgb(225,221,4)" fg:x="11636" fg:w="75"/><text x="93.5470%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (66 samples, 0.53%)</title><rect x="93.3691%" y="453" width="0.5292%" height="15" fill="rgb(242,27,43)" fg:x="11645" fg:w="66"/><text x="93.6191%" y="463.50"></text></g><g><title>tokio::coop::budget (190 samples, 1.52%)</title><rect x="92.4391%" y="613" width="1.5234%" height="15" fill="rgb(227,54,8)" fg:x="11529" fg:w="190"/><text x="92.6891%" y="623.50"></text></g><g><title>tokio::coop::with_budget (190 samples, 1.52%)</title><rect x="92.4391%" y="597" width="1.5234%" height="15" fill="rgb(253,139,49)" fg:x="11529" fg:w="190"/><text x="92.6891%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (186 samples, 1.49%)</title><rect x="92.4711%" y="581" width="1.4913%" height="15" fill="rgb(231,26,43)" fg:x="11533" fg:w="186"/><text x="92.7211%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (180 samples, 1.44%)</title><rect x="92.5192%" y="565" width="1.4432%" height="15" fill="rgb(207,121,39)" fg:x="11539" fg:w="180"/><text x="92.7692%" y="575.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (178 samples, 1.43%)</title><rect x="92.5353%" y="549" width="1.4272%" height="15" fill="rgb(223,101,35)" fg:x="11541" fg:w="178"/><text x="92.7853%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (178 samples, 1.43%)</title><rect x="92.5353%" y="533" width="1.4272%" height="15" fill="rgb(232,87,23)" fg:x="11541" fg:w="178"/><text x="92.7853%" y="543.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (136 samples, 1.09%)</title><rect x="92.8720%" y="517" width="1.0904%" height="15" fill="rgb(225,180,29)" fg:x="11583" fg:w="136"/><text x="93.1220%" y="527.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (136 samples, 1.09%)</title><rect x="92.8720%" y="501" width="1.0904%" height="15" fill="rgb(225,25,17)" fg:x="11583" fg:w="136"/><text x="93.1220%" y="511.50"></text></g><g><title>tokio::runtime::task::raw::poll (8 samples, 0.06%)</title><rect x="93.8983%" y="485" width="0.0641%" height="15" fill="rgb(223,8,52)" fg:x="11711" fg:w="8"/><text x="94.1483%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (5 samples, 0.04%)</title><rect x="93.9625%" y="581" width="0.0401%" height="15" fill="rgb(246,42,21)" fg:x="11719" fg:w="5"/><text x="94.2125%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (5 samples, 0.04%)</title><rect x="93.9625%" y="565" width="0.0401%" height="15" fill="rgb(205,64,43)" fg:x="11719" fg:w="5"/><text x="94.2125%" y="575.50"></text></g><g><title>default_wake_function (2 samples, 0.02%)</title><rect x="94.0667%" y="325" width="0.0160%" height="15" fill="rgb(221,160,13)" fg:x="11732" fg:w="2"/><text x="94.3167%" y="335.50"></text></g><g><title>select_idle_sibling (2 samples, 0.02%)</title><rect x="94.1549%" y="293" width="0.0160%" height="15" fill="rgb(239,58,35)" fg:x="11743" fg:w="2"/><text x="94.4049%" y="303.50"></text></g><g><title>available_idle_cpu (2 samples, 0.02%)</title><rect x="94.1549%" y="277" width="0.0160%" height="15" fill="rgb(251,26,40)" fg:x="11743" fg:w="2"/><text x="94.4049%" y="287.50"></text></g><g><title>select_task_rq_fair (8 samples, 0.06%)</title><rect x="94.1148%" y="309" width="0.0641%" height="15" fill="rgb(247,0,4)" fg:x="11738" fg:w="8"/><text x="94.3648%" y="319.50"></text></g><g><title>__wake_up_common (15 samples, 0.12%)</title><rect x="94.0667%" y="341" width="0.1203%" height="15" fill="rgb(218,130,10)" fg:x="11732" fg:w="15"/><text x="94.3167%" y="351.50"></text></g><g><title>try_to_wake_up (13 samples, 0.10%)</title><rect x="94.0827%" y="325" width="0.1042%" height="15" fill="rgb(239,32,7)" fg:x="11734" fg:w="13"/><text x="94.3327%" y="335.50"></text></g><g><title>__wake_up_common (18 samples, 0.14%)</title><rect x="94.0587%" y="373" width="0.1443%" height="15" fill="rgb(210,192,24)" fg:x="11731" fg:w="18"/><text x="94.3087%" y="383.50"></text></g><g><title>ep_poll_callback (18 samples, 0.14%)</title><rect x="94.0587%" y="357" width="0.1443%" height="15" fill="rgb(226,212,17)" fg:x="11731" fg:w="18"/><text x="94.3087%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="94.1870%" y="341" width="0.0160%" height="15" fill="rgb(219,201,28)" fg:x="11747" fg:w="2"/><text x="94.4370%" y="351.50"></text></g><g><title>eventfd_write (21 samples, 0.17%)</title><rect x="94.0587%" y="389" width="0.1684%" height="15" fill="rgb(235,207,41)" fg:x="11731" fg:w="21"/><text x="94.3087%" y="399.50"></text></g><g><title>_raw_spin_lock_irq (3 samples, 0.02%)</title><rect x="94.2030%" y="373" width="0.0241%" height="15" fill="rgb(241,95,54)" fg:x="11749" fg:w="3"/><text x="94.4530%" y="383.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (30 samples, 0.24%)</title><rect x="94.0186%" y="533" width="0.2405%" height="15" fill="rgb(248,12,23)" fg:x="11726" fg:w="30"/><text x="94.2686%" y="543.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (29 samples, 0.23%)</title><rect x="94.0266%" y="517" width="0.2325%" height="15" fill="rgb(228,173,4)" fg:x="11727" fg:w="29"/><text x="94.2766%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::write (29 samples, 0.23%)</title><rect x="94.0266%" y="501" width="0.2325%" height="15" fill="rgb(254,99,5)" fg:x="11727" fg:w="29"/><text x="94.2766%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (29 samples, 0.23%)</title><rect x="94.0266%" y="485" width="0.2325%" height="15" fill="rgb(212,184,17)" fg:x="11727" fg:w="29"/><text x="94.2766%" y="495.50"></text></g><g><title>__libc_write (29 samples, 0.23%)</title><rect x="94.0266%" y="469" width="0.2325%" height="15" fill="rgb(252,174,1)" fg:x="11727" fg:w="29"/><text x="94.2766%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.22%)</title><rect x="94.0346%" y="453" width="0.2245%" height="15" fill="rgb(241,118,51)" fg:x="11728" fg:w="28"/><text x="94.2846%" y="463.50"></text></g><g><title>do_syscall_64 (28 samples, 0.22%)</title><rect x="94.0346%" y="437" width="0.2245%" height="15" fill="rgb(227,94,47)" fg:x="11728" fg:w="28"/><text x="94.2846%" y="447.50"></text></g><g><title>ksys_write (28 samples, 0.22%)</title><rect x="94.0346%" y="421" width="0.2245%" height="15" fill="rgb(229,104,2)" fg:x="11728" fg:w="28"/><text x="94.2846%" y="431.50"></text></g><g><title>vfs_write (27 samples, 0.22%)</title><rect x="94.0427%" y="405" width="0.2165%" height="15" fill="rgb(219,28,31)" fg:x="11729" fg:w="27"/><text x="94.2927%" y="415.50"></text></g><g><title>security_file_permission (3 samples, 0.02%)</title><rect x="94.2351%" y="389" width="0.0241%" height="15" fill="rgb(233,109,36)" fg:x="11753" fg:w="3"/><text x="94.4851%" y="399.50"></text></g><g><title>common_file_perm (3 samples, 0.02%)</title><rect x="94.2351%" y="373" width="0.0241%" height="15" fill="rgb(246,88,11)" fg:x="11753" fg:w="3"/><text x="94.4851%" y="383.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (33 samples, 0.26%)</title><rect x="94.0186%" y="565" width="0.2646%" height="15" fill="rgb(209,212,17)" fg:x="11726" fg:w="33"/><text x="94.2686%" y="575.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (33 samples, 0.26%)</title><rect x="94.0186%" y="549" width="0.2646%" height="15" fill="rgb(243,59,29)" fg:x="11726" fg:w="33"/><text x="94.2686%" y="559.50"></text></g><g><title>tokio::io::driver::Handle::inner (3 samples, 0.02%)</title><rect x="94.2591%" y="533" width="0.0241%" height="15" fill="rgb(244,205,48)" fg:x="11756" fg:w="3"/><text x="94.5091%" y="543.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.02%)</title><rect x="94.2591%" y="517" width="0.0241%" height="15" fill="rgb(227,30,6)" fg:x="11756" fg:w="3"/><text x="94.5091%" y="527.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (5 samples, 0.04%)</title><rect x="94.5077%" y="533" width="0.0401%" height="15" fill="rgb(220,205,48)" fg:x="11787" fg:w="5"/><text x="94.7577%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.04%)</title><rect x="94.5077%" y="517" width="0.0401%" height="15" fill="rgb(250,94,14)" fg:x="11787" fg:w="5"/><text x="94.7577%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.04%)</title><rect x="94.5077%" y="501" width="0.0401%" height="15" fill="rgb(216,119,42)" fg:x="11787" fg:w="5"/><text x="94.7577%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.04%)</title><rect x="94.5077%" y="485" width="0.0401%" height="15" fill="rgb(232,155,0)" fg:x="11787" fg:w="5"/><text x="94.7577%" y="495.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (33 samples, 0.26%)</title><rect x="94.2912%" y="565" width="0.2646%" height="15" fill="rgb(212,24,32)" fg:x="11760" fg:w="33"/><text x="94.5412%" y="575.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (31 samples, 0.25%)</title><rect x="94.3072%" y="549" width="0.2486%" height="15" fill="rgb(216,69,20)" fg:x="11762" fg:w="31"/><text x="94.5572%" y="559.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.03%)</title><rect x="94.7162%" y="517" width="0.0321%" height="15" fill="rgb(229,73,31)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.03%)</title><rect x="94.7162%" y="501" width="0.0321%" height="15" fill="rgb(224,219,20)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.03%)</title><rect x="94.7162%" y="485" width="0.0321%" height="15" fill="rgb(215,146,41)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="495.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.03%)</title><rect x="94.7162%" y="469" width="0.0321%" height="15" fill="rgb(244,71,31)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.03%)</title><rect x="94.7162%" y="453" width="0.0321%" height="15" fill="rgb(224,24,11)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.03%)</title><rect x="94.7162%" y="437" width="0.0321%" height="15" fill="rgb(229,76,15)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (4 samples, 0.03%)</title><rect x="94.7162%" y="421" width="0.0321%" height="15" fill="rgb(209,93,2)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="431.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.03%)</title><rect x="94.7162%" y="405" width="0.0321%" height="15" fill="rgb(216,200,50)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="415.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.03%)</title><rect x="94.7162%" y="389" width="0.0321%" height="15" fill="rgb(211,67,34)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="399.50"></text></g><g><title>syscall (4 samples, 0.03%)</title><rect x="94.7162%" y="373" width="0.0321%" height="15" fill="rgb(225,87,47)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.03%)</title><rect x="94.7162%" y="357" width="0.0321%" height="15" fill="rgb(217,185,16)" fg:x="11813" fg:w="4"/><text x="94.9662%" y="367.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="95.2453%" y="421" width="0.0241%" height="15" fill="rgb(205,0,0)" fg:x="11879" fg:w="3"/><text x="95.4953%" y="431.50"></text></g><g><title>get_futex_key (6 samples, 0.05%)</title><rect x="95.2774%" y="421" width="0.0481%" height="15" fill="rgb(207,116,45)" fg:x="11883" fg:w="6"/><text x="95.5274%" y="431.50"></text></g><g><title>get_futex_key_refs.isra.12 (4 samples, 0.03%)</title><rect x="95.2935%" y="405" width="0.0321%" height="15" fill="rgb(221,156,26)" fg:x="11885" fg:w="4"/><text x="95.5435%" y="415.50"></text></g><g><title>hash_futex (3 samples, 0.02%)</title><rect x="95.3255%" y="421" width="0.0241%" height="15" fill="rgb(213,140,4)" fg:x="11889" fg:w="3"/><text x="95.5755%" y="431.50"></text></g><g><title>__unqueue_futex (7 samples, 0.06%)</title><rect x="95.5180%" y="405" width="0.0561%" height="15" fill="rgb(231,224,15)" fg:x="11913" fg:w="7"/><text x="95.7680%" y="415.50"></text></g><g><title>plist_del (4 samples, 0.03%)</title><rect x="95.5420%" y="389" width="0.0321%" height="15" fill="rgb(244,76,20)" fg:x="11916" fg:w="4"/><text x="95.7920%" y="399.50"></text></g><g><title>mark_wake_futex (42 samples, 0.34%)</title><rect x="95.3496%" y="421" width="0.3368%" height="15" fill="rgb(238,117,7)" fg:x="11892" fg:w="42"/><text x="95.5996%" y="431.50"></text></g><g><title>wake_q_add (14 samples, 0.11%)</title><rect x="95.5741%" y="405" width="0.1123%" height="15" fill="rgb(235,1,10)" fg:x="11920" fg:w="14"/><text x="95.8241%" y="415.50"></text></g><g><title>__raw_spin_unlock (2 samples, 0.02%)</title><rect x="96.0071%" y="389" width="0.0160%" height="15" fill="rgb(216,165,6)" fg:x="11974" fg:w="2"/><text x="96.2571%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="96.0231%" y="389" width="0.0160%" height="15" fill="rgb(246,91,35)" fg:x="11976" fg:w="2"/><text x="96.2731%" y="399.50"></text></g><g><title>default_send_IPI_single_phys (2 samples, 0.02%)</title><rect x="96.0391%" y="389" width="0.0160%" height="15" fill="rgb(228,96,24)" fg:x="11978" fg:w="2"/><text x="96.2891%" y="399.50"></text></g><g><title>llist_add_batch (2 samples, 0.02%)</title><rect x="96.0552%" y="389" width="0.0160%" height="15" fill="rgb(254,217,53)" fg:x="11980" fg:w="2"/><text x="96.3052%" y="399.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.04%)</title><rect x="96.0792%" y="389" width="0.0401%" height="15" fill="rgb(209,60,0)" fg:x="11983" fg:w="5"/><text x="96.3292%" y="399.50"></text></g><g><title>sched_clock (4 samples, 0.03%)</title><rect x="96.0872%" y="373" width="0.0321%" height="15" fill="rgb(250,93,26)" fg:x="11984" fg:w="4"/><text x="96.3372%" y="383.50"></text></g><g><title>native_sched_clock (4 samples, 0.03%)</title><rect x="96.0872%" y="357" width="0.0321%" height="15" fill="rgb(211,9,40)" fg:x="11984" fg:w="4"/><text x="96.3372%" y="367.50"></text></g><g><title>select_idle_sibling (9 samples, 0.07%)</title><rect x="96.4480%" y="373" width="0.0722%" height="15" fill="rgb(242,57,20)" fg:x="12029" fg:w="9"/><text x="96.6980%" y="383.50"></text></g><g><title>available_idle_cpu (8 samples, 0.06%)</title><rect x="96.4561%" y="357" width="0.0641%" height="15" fill="rgb(248,85,48)" fg:x="12030" fg:w="8"/><text x="96.7061%" y="367.50"></text></g><g><title>select_task_rq_fair (58 samples, 0.47%)</title><rect x="96.1193%" y="389" width="0.4650%" height="15" fill="rgb(212,117,2)" fg:x="11988" fg:w="58"/><text x="96.3693%" y="399.50"></text></g><g><title>update_cfs_rq_h_load (8 samples, 0.06%)</title><rect x="96.5202%" y="373" width="0.0641%" height="15" fill="rgb(243,19,3)" fg:x="12038" fg:w="8"/><text x="96.7702%" y="383.50"></text></g><g><title>account_entity_enqueue (3 samples, 0.02%)</title><rect x="96.6164%" y="341" width="0.0241%" height="15" fill="rgb(232,217,24)" fg:x="12050" fg:w="3"/><text x="96.8664%" y="351.50"></text></g><g><title>update_cfs_group (2 samples, 0.02%)</title><rect x="96.6485%" y="341" width="0.0160%" height="15" fill="rgb(224,175,40)" fg:x="12054" fg:w="2"/><text x="96.8985%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.02%)</title><rect x="96.6806%" y="325" width="0.0160%" height="15" fill="rgb(212,162,32)" fg:x="12058" fg:w="2"/><text x="96.9306%" y="335.50"></text></g><g><title>ttwu_do_activate (16 samples, 0.13%)</title><rect x="96.5843%" y="389" width="0.1283%" height="15" fill="rgb(215,9,4)" fg:x="12046" fg:w="16"/><text x="96.8343%" y="399.50"></text></g><g><title>enqueue_task_fair (16 samples, 0.13%)</title><rect x="96.5843%" y="373" width="0.1283%" height="15" fill="rgb(242,42,7)" fg:x="12046" fg:w="16"/><text x="96.8343%" y="383.50"></text></g><g><title>enqueue_entity (12 samples, 0.10%)</title><rect x="96.6164%" y="357" width="0.0962%" height="15" fill="rgb(242,184,45)" fg:x="12050" fg:w="12"/><text x="96.8664%" y="367.50"></text></g><g><title>update_load_avg (6 samples, 0.05%)</title><rect x="96.6645%" y="341" width="0.0481%" height="15" fill="rgb(228,111,51)" fg:x="12056" fg:w="6"/><text x="96.9145%" y="351.50"></text></g><g><title>dbs_update_util_handler (2 samples, 0.02%)</title><rect x="96.6966%" y="325" width="0.0160%" height="15" fill="rgb(236,147,17)" fg:x="12060" fg:w="2"/><text x="96.9466%" y="335.50"></text></g><g><title>ttwu_do_wakeup (8 samples, 0.06%)</title><rect x="96.7126%" y="389" width="0.0641%" height="15" fill="rgb(210,75,22)" fg:x="12062" fg:w="8"/><text x="96.9626%" y="399.50"></text></g><g><title>check_preempt_curr (8 samples, 0.06%)</title><rect x="96.7126%" y="373" width="0.0641%" height="15" fill="rgb(217,159,45)" fg:x="12062" fg:w="8"/><text x="96.9626%" y="383.50"></text></g><g><title>resched_curr (3 samples, 0.02%)</title><rect x="96.7527%" y="357" width="0.0241%" height="15" fill="rgb(245,165,53)" fg:x="12067" fg:w="3"/><text x="97.0027%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (253 samples, 2.03%)</title><rect x="94.7803%" y="501" width="2.0285%" height="15" fill="rgb(251,190,50)" fg:x="11821" fg:w="253"/><text x="95.0303%" y="511.50">e..</text></g><g><title>do_syscall_64 (251 samples, 2.01%)</title><rect x="94.7963%" y="485" width="2.0125%" height="15" fill="rgb(208,203,29)" fg:x="11823" fg:w="251"/><text x="95.0463%" y="495.50">d..</text></g><g><title>__x64_sys_futex (248 samples, 1.99%)</title><rect x="94.8204%" y="469" width="1.9885%" height="15" fill="rgb(207,209,35)" fg:x="11826" fg:w="248"/><text x="95.0704%" y="479.50">_..</text></g><g><title>do_futex (243 samples, 1.95%)</title><rect x="94.8605%" y="453" width="1.9484%" height="15" fill="rgb(230,144,49)" fg:x="11831" fg:w="243"/><text x="95.1105%" y="463.50">d..</text></g><g><title>futex_wake (237 samples, 1.90%)</title><rect x="94.9086%" y="437" width="1.9003%" height="15" fill="rgb(229,31,6)" fg:x="11837" fg:w="237"/><text x="95.1586%" y="447.50">f..</text></g><g><title>wake_up_q (140 samples, 1.12%)</title><rect x="95.6863%" y="421" width="1.1225%" height="15" fill="rgb(251,129,24)" fg:x="11934" fg:w="140"/><text x="95.9363%" y="431.50"></text></g><g><title>try_to_wake_up (140 samples, 1.12%)</title><rect x="95.6863%" y="405" width="1.1225%" height="15" fill="rgb(235,105,15)" fg:x="11934" fg:w="140"/><text x="95.9363%" y="415.50"></text></g><g><title>update_rq_clock (4 samples, 0.03%)</title><rect x="96.7768%" y="389" width="0.0321%" height="15" fill="rgb(216,52,43)" fg:x="12070" fg:w="4"/><text x="97.0268%" y="399.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.03%)</title><rect x="96.7768%" y="373" width="0.0321%" height="15" fill="rgb(238,144,41)" fg:x="12070" fg:w="4"/><text x="97.0268%" y="383.50"></text></g><g><title>sched_clock (3 samples, 0.02%)</title><rect x="96.7848%" y="357" width="0.0241%" height="15" fill="rgb(243,63,9)" fg:x="12071" fg:w="3"/><text x="97.0348%" y="367.50"></text></g><g><title>native_sched_clock (3 samples, 0.02%)</title><rect x="96.7848%" y="341" width="0.0241%" height="15" fill="rgb(246,208,1)" fg:x="12071" fg:w="3"/><text x="97.0348%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (262 samples, 2.10%)</title><rect x="94.7162%" y="533" width="2.1007%" height="15" fill="rgb(233,182,18)" fg:x="11813" fg:w="262"/><text x="94.9662%" y="543.50">&lt;..</text></g><g><title>syscall (258 samples, 2.07%)</title><rect x="94.7482%" y="517" width="2.0686%" height="15" fill="rgb(242,224,8)" fg:x="11817" fg:w="258"/><text x="94.9982%" y="527.50">s..</text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (17 samples, 0.14%)</title><rect x="96.8249%" y="533" width="0.1363%" height="15" fill="rgb(243,54,37)" fg:x="12076" fg:w="17"/><text x="97.0749%" y="543.50"></text></g><g><title>std::time::Instant::now (12 samples, 0.10%)</title><rect x="96.8650%" y="517" width="0.0962%" height="15" fill="rgb(233,192,12)" fg:x="12081" fg:w="12"/><text x="97.1150%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (10 samples, 0.08%)</title><rect x="96.8810%" y="501" width="0.0802%" height="15" fill="rgb(251,192,53)" fg:x="12083" fg:w="10"/><text x="97.1310%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (10 samples, 0.08%)</title><rect x="96.8810%" y="485" width="0.0802%" height="15" fill="rgb(246,141,26)" fg:x="12083" fg:w="10"/><text x="97.1310%" y="495.50"></text></g><g><title>__clock_gettime (10 samples, 0.08%)</title><rect x="96.8810%" y="469" width="0.0802%" height="15" fill="rgb(239,195,19)" fg:x="12083" fg:w="10"/><text x="97.1310%" y="479.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.07%)</title><rect x="96.8890%" y="453" width="0.0722%" height="15" fill="rgb(241,16,39)" fg:x="12084" fg:w="9"/><text x="97.1390%" y="463.50"></text></g><g><title>[[vdso]] (9 samples, 0.07%)</title><rect x="96.8890%" y="437" width="0.0722%" height="15" fill="rgb(223,13,53)" fg:x="12084" fg:w="9"/><text x="97.1390%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (2 samples, 0.02%)</title><rect x="96.9612%" y="517" width="0.0160%" height="15" fill="rgb(214,227,0)" fg:x="12093" fg:w="2"/><text x="97.2112%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.02%)</title><rect x="96.9612%" y="501" width="0.0160%" height="15" fill="rgb(228,103,26)" fg:x="12093" fg:w="2"/><text x="97.2112%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.02%)</title><rect x="96.9612%" y="485" width="0.0160%" height="15" fill="rgb(254,177,53)" fg:x="12093" fg:w="2"/><text x="97.2112%" y="495.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (323 samples, 2.59%)</title><rect x="94.5558%" y="565" width="2.5898%" height="15" fill="rgb(208,201,34)" fg:x="11793" fg:w="323"/><text x="94.8058%" y="575.50">pa..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (320 samples, 2.57%)</title><rect x="94.5799%" y="549" width="2.5657%" height="15" fill="rgb(212,39,5)" fg:x="11796" fg:w="320"/><text x="94.8299%" y="559.50">pa..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (23 samples, 0.18%)</title><rect x="96.9612%" y="533" width="0.1844%" height="15" fill="rgb(246,117,3)" fg:x="12093" fg:w="23"/><text x="97.2112%" y="543.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (20 samples, 0.16%)</title><rect x="96.9852%" y="517" width="0.1604%" height="15" fill="rgb(244,118,39)" fg:x="12096" fg:w="20"/><text x="97.2352%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (610 samples, 4.89%)</title><rect x="92.4150%" y="629" width="4.8910%" height="15" fill="rgb(241,64,10)" fg:x="11526" fg:w="610"/><text x="92.6650%" y="639.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (417 samples, 3.34%)</title><rect x="93.9625%" y="613" width="3.3435%" height="15" fill="rgb(229,39,44)" fg:x="11719" fg:w="417"/><text x="94.2125%" y="623.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (417 samples, 3.34%)</title><rect x="93.9625%" y="597" width="3.3435%" height="15" fill="rgb(230,226,3)" fg:x="11719" fg:w="417"/><text x="94.2125%" y="607.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (412 samples, 3.30%)</title><rect x="94.0026%" y="581" width="3.3034%" height="15" fill="rgb(222,13,42)" fg:x="11724" fg:w="412"/><text x="94.2526%" y="591.50">tok..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (20 samples, 0.16%)</title><rect x="97.1456%" y="565" width="0.1604%" height="15" fill="rgb(247,180,54)" fg:x="12116" fg:w="20"/><text x="97.3956%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (18 samples, 0.14%)</title><rect x="97.1616%" y="549" width="0.1443%" height="15" fill="rgb(205,96,16)" fg:x="12118" fg:w="18"/><text x="97.4116%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.10%)</title><rect x="97.2017%" y="533" width="0.1042%" height="15" fill="rgb(205,100,21)" fg:x="12123" fg:w="13"/><text x="97.4517%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.10%)</title><rect x="97.2017%" y="517" width="0.1042%" height="15" fill="rgb(248,51,4)" fg:x="12123" fg:w="13"/><text x="97.4517%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="97.5706%" y="597" width="0.0160%" height="15" fill="rgb(217,197,30)" fg:x="12169" fg:w="2"/><text x="97.8206%" y="607.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (4 samples, 0.03%)</title><rect x="97.5866%" y="581" width="0.0321%" height="15" fill="rgb(240,179,40)" fg:x="12171" fg:w="4"/><text x="97.8366%" y="591.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (4 samples, 0.03%)</title><rect x="97.5866%" y="565" width="0.0321%" height="15" fill="rgb(212,185,35)" fg:x="12171" fg:w="4"/><text x="97.8366%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (7 samples, 0.06%)</title><rect x="97.5706%" y="613" width="0.0561%" height="15" fill="rgb(251,222,31)" fg:x="12169" fg:w="7"/><text x="97.8206%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::_{{closure}} (5 samples, 0.04%)</title><rect x="97.5866%" y="597" width="0.0401%" height="15" fill="rgb(208,140,36)" fg:x="12171" fg:w="5"/><text x="97.8366%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (47 samples, 0.38%)</title><rect x="97.3060%" y="629" width="0.3768%" height="15" fill="rgb(220,148,1)" fg:x="12136" fg:w="47"/><text x="97.5560%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (6 samples, 0.05%)</title><rect x="97.6347%" y="613" width="0.0481%" height="15" fill="rgb(254,4,28)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.05%)</title><rect x="97.6347%" y="597" width="0.0481%" height="15" fill="rgb(222,185,44)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::_{{closure}} (6 samples, 0.05%)</title><rect x="97.6347%" y="581" width="0.0481%" height="15" fill="rgb(215,74,39)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="591.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (6 samples, 0.05%)</title><rect x="97.6347%" y="565" width="0.0481%" height="15" fill="rgb(247,86,4)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (6 samples, 0.05%)</title><rect x="97.6347%" y="549" width="0.0481%" height="15" fill="rgb(231,105,32)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.05%)</title><rect x="97.6347%" y="533" width="0.0481%" height="15" fill="rgb(222,65,35)" fg:x="12177" fg:w="6"/><text x="97.8847%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.04%)</title><rect x="98.1398%" y="581" width="0.0401%" height="15" fill="rgb(218,145,35)" fg:x="12240" fg:w="5"/><text x="98.3898%" y="591.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (29 samples, 0.23%)</title><rect x="98.1799%" y="581" width="0.2325%" height="15" fill="rgb(208,7,15)" fg:x="12245" fg:w="29"/><text x="98.4299%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.06%)</title><rect x="98.4285%" y="581" width="0.0561%" height="15" fill="rgb(209,83,13)" fg:x="12276" fg:w="7"/><text x="98.6785%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.06%)</title><rect x="98.4285%" y="565" width="0.0561%" height="15" fill="rgb(218,3,10)" fg:x="12276" fg:w="7"/><text x="98.6785%" y="575.50"></text></g><g><title>tokio::runtime::queue::pack (10 samples, 0.08%)</title><rect x="98.4846%" y="581" width="0.0802%" height="15" fill="rgb(211,219,4)" fg:x="12283" fg:w="10"/><text x="98.7346%" y="591.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (217 samples, 1.74%)</title><rect x="97.8752%" y="613" width="1.7399%" height="15" fill="rgb(228,194,12)" fg:x="12207" fg:w="217"/><text x="98.1252%" y="623.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (199 samples, 1.60%)</title><rect x="98.0196%" y="597" width="1.5956%" height="15" fill="rgb(210,175,7)" fg:x="12225" fg:w="199"/><text x="98.2696%" y="607.50"></text></g><g><title>tokio::runtime::queue::unpack (131 samples, 1.05%)</title><rect x="98.5648%" y="581" width="1.0504%" height="15" fill="rgb(243,132,6)" fg:x="12293" fg:w="131"/><text x="98.8148%" y="591.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="99.6151%" y="613" width="0.0160%" height="15" fill="rgb(207,72,18)" fg:x="12424" fg:w="2"/><text x="99.8651%" y="623.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (2 samples, 0.02%)</title><rect x="99.6151%" y="597" width="0.0160%" height="15" fill="rgb(236,1,18)" fg:x="12424" fg:w="2"/><text x="99.8651%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (2 samples, 0.02%)</title><rect x="99.6312%" y="613" width="0.0160%" height="15" fill="rgb(227,0,18)" fg:x="12426" fg:w="2"/><text x="99.8812%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (249 samples, 2.00%)</title><rect x="97.6828%" y="629" width="1.9965%" height="15" fill="rgb(247,37,5)" fg:x="12183" fg:w="249"/><text x="97.9328%" y="639.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (4 samples, 0.03%)</title><rect x="99.6472%" y="613" width="0.0321%" height="15" fill="rgb(237,179,24)" fg:x="12428" fg:w="4"/><text x="99.8972%" y="623.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (4 samples, 0.03%)</title><rect x="99.6472%" y="597" width="0.0321%" height="15" fill="rgb(226,53,20)" fg:x="12428" fg:w="4"/><text x="99.8972%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1125" width="31.1177%" height="15" fill="rgb(247,75,7)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1109" width="31.1177%" height="15" fill="rgb(233,96,12)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1093" width="31.1177%" height="15" fill="rgb(224,125,0)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1103.50">core::ops::function::FnOnce::call_once{{vtable.shi..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1077" width="31.1177%" height="15" fill="rgb(224,92,25)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1087.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>std::panic::catch_unwind (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1061" width="31.1177%" height="15" fill="rgb(224,42,24)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1045" width="31.1177%" height="15" fill="rgb(234,132,49)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1029" width="31.1177%" height="15" fill="rgb(248,100,35)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,881 samples, 31.12%)</title><rect x="68.5696%" y="1013" width="31.1177%" height="15" fill="rgb(239,94,40)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1023.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (3,881 samples, 31.12%)</title><rect x="68.5696%" y="997" width="31.1177%" height="15" fill="rgb(235,139,28)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="1007.50">std::thread::Builder::spawn_unchecked::_{{closure}..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,881 samples, 31.12%)</title><rect x="68.5696%" y="981" width="31.1177%" height="15" fill="rgb(217,144,7)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="991.50">std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (3,881 samples, 31.12%)</title><rect x="68.5696%" y="965" width="31.1177%" height="15" fill="rgb(227,55,4)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="975.50">tokio::runtime::blocking::pool::Spawner::spawn_thr..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3,881 samples, 31.12%)</title><rect x="68.5696%" y="949" width="31.1177%" height="15" fill="rgb(252,82,54)" fg:x="8552" fg:w="3881"/><text x="68.8196%" y="959.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (3,845 samples, 30.83%)</title><rect x="68.8582%" y="933" width="30.8291%" height="15" fill="rgb(245,172,4)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="943.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,845 samples, 30.83%)</title><rect x="68.8582%" y="917" width="30.8291%" height="15" fill="rgb(207,26,27)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="927.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,845 samples, 30.83%)</title><rect x="68.8582%" y="901" width="30.8291%" height="15" fill="rgb(252,98,18)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="911.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,845 samples, 30.83%)</title><rect x="68.8582%" y="885" width="30.8291%" height="15" fill="rgb(244,8,26)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="895.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_..</text></g><g><title>tokio::runtime::task::harness::poll_future (3,845 samples, 30.83%)</title><rect x="68.8582%" y="869" width="30.8291%" height="15" fill="rgb(237,173,45)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="879.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (3,845 samples, 30.83%)</title><rect x="68.8582%" y="853" width="30.8291%" height="15" fill="rgb(208,213,49)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,845 samples, 30.83%)</title><rect x="68.8582%" y="837" width="30.8291%" height="15" fill="rgb(212,122,37)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,845 samples, 30.83%)</title><rect x="68.8582%" y="821" width="30.8291%" height="15" fill="rgb(213,80,17)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="831.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,845 samples, 30.83%)</title><rect x="68.8582%" y="805" width="30.8291%" height="15" fill="rgb(206,210,43)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="815.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (3,845 samples, 30.83%)</title><rect x="68.8582%" y="789" width="30.8291%" height="15" fill="rgb(229,214,3)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="799.50">tokio::runtime::task::harness::poll_future::_{{clo..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,845 samples, 30.83%)</title><rect x="68.8582%" y="773" width="30.8291%" height="15" fill="rgb(235,213,29)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="783.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,845 samples, 30.83%)</title><rect x="68.8582%" y="757" width="30.8291%" height="15" fill="rgb(248,135,26)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="767.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (3,845 samples, 30.83%)</title><rect x="68.8582%" y="741" width="30.8291%" height="15" fill="rgb(242,188,12)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="751.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,845 samples, 30.83%)</title><rect x="68.8582%" y="725" width="30.8291%" height="15" fill="rgb(245,38,12)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="735.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; a..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (3,845 samples, 30.83%)</title><rect x="68.8582%" y="709" width="30.8291%" height="15" fill="rgb(218,42,13)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="719.50">tokio::runtime::thread_pool::worker::Launch::launc..</text></g><g><title>tokio::runtime::thread_pool::worker::run (3,845 samples, 30.83%)</title><rect x="68.8582%" y="693" width="30.8291%" height="15" fill="rgb(238,132,49)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="703.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,845 samples, 30.83%)</title><rect x="68.8582%" y="677" width="30.8291%" height="15" fill="rgb(209,196,19)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="687.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::_{{closure}} (3,845 samples, 30.83%)</title><rect x="68.8582%" y="661" width="30.8291%" height="15" fill="rgb(244,131,22)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="671.50">tokio::runtime::thread_pool::worker::run::_{{closu..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,845 samples, 30.83%)</title><rect x="68.8582%" y="645" width="30.8291%" height="15" fill="rgb(223,18,34)" fg:x="8588" fg:w="3845"/><text x="69.1082%" y="655.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>do_munmap (5 samples, 0.04%)</title><rect x="99.6873%" y="997" width="0.0401%" height="15" fill="rgb(252,124,54)" fg:x="12433" fg:w="5"/><text x="99.9373%" y="1007.50"></text></g><g><title>find_vma (5 samples, 0.04%)</title><rect x="99.6873%" y="981" width="0.0401%" height="15" fill="rgb(229,106,42)" fg:x="12433" fg:w="5"/><text x="99.9373%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (7 samples, 0.06%)</title><rect x="99.6873%" y="1125" width="0.0561%" height="15" fill="rgb(221,129,1)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1135.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (7 samples, 0.06%)</title><rect x="99.6873%" y="1109" width="0.0561%" height="15" fill="rgb(229,74,15)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (7 samples, 0.06%)</title><rect x="99.6873%" y="1093" width="0.0561%" height="15" fill="rgb(210,206,50)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1103.50"></text></g><g><title>__munmap (7 samples, 0.06%)</title><rect x="99.6873%" y="1077" width="0.0561%" height="15" fill="rgb(251,114,31)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.06%)</title><rect x="99.6873%" y="1061" width="0.0561%" height="15" fill="rgb(215,225,28)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1071.50"></text></g><g><title>do_syscall_64 (7 samples, 0.06%)</title><rect x="99.6873%" y="1045" width="0.0561%" height="15" fill="rgb(237,109,14)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1055.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.06%)</title><rect x="99.6873%" y="1029" width="0.0561%" height="15" fill="rgb(230,13,37)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1039.50"></text></g><g><title>vm_munmap (7 samples, 0.06%)</title><rect x="99.6873%" y="1013" width="0.0561%" height="15" fill="rgb(231,40,28)" fg:x="12433" fg:w="7"/><text x="99.9373%" y="1023.50"></text></g><g><title>clone (3,905 samples, 31.31%)</title><rect x="68.4413%" y="1173" width="31.3101%" height="15" fill="rgb(231,202,18)" fg:x="8536" fg:w="3905"/><text x="68.6913%" y="1183.50">clone</text></g><g><title>start_thread (3,905 samples, 31.31%)</title><rect x="68.4413%" y="1157" width="31.3101%" height="15" fill="rgb(225,33,18)" fg:x="8536" fg:w="3905"/><text x="68.6913%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,889 samples, 31.18%)</title><rect x="68.5696%" y="1141" width="31.1818%" height="15" fill="rgb(223,64,47)" fg:x="8552" fg:w="3889"/><text x="68.8196%" y="1151.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>entry_SYSCALL_64 (19 samples, 0.15%)</title><rect x="99.7514%" y="1173" width="0.1523%" height="15" fill="rgb(234,114,13)" fg:x="12441" fg:w="19"/><text x="100.0014%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.07%)</title><rect x="99.9038%" y="1173" width="0.0722%" height="15" fill="rgb(248,56,40)" fg:x="12460" fg:w="9"/><text x="100.1538%" y="1183.50"></text></g><g><title>all (12,472 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(221,194,21)" fg:x="0" fg:w="12472"/><text x="0.2500%" y="1215.50"></text></g><g><title>tokio-runtime-w (12,311 samples, 98.71%)</title><rect x="1.2909%" y="1189" width="98.7091%" height="15" fill="rgb(242,108,46)" fg:x="161" fg:w="12311"/><text x="1.5409%" y="1199.50">tokio-runtime-w</text></g><g><title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="99.9840%" y="1173" width="0.0160%" height="15" fill="rgb(220,106,10)" fg:x="12470" fg:w="2"/><text x="100.2340%" y="1183.50"></text></g></svg></svg>