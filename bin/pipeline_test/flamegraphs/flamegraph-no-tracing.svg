<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1366" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1349.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1349.00"> </text><svg id="frames" x="10" width="1180" total_samples="4969"><g><title>perf_4.19 (6 samples, 0.12%)</title><rect x="0.0000%" y="1301" width="0.1207%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1311.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="0.0000%" y="1285" width="0.1207%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1295.50"></text></g><g><title>do_syscall_64 (6 samples, 0.12%)</title><rect x="0.0000%" y="1269" width="0.1207%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1279.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.12%)</title><rect x="0.0000%" y="1253" width="0.1207%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1263.50"></text></g><g><title>__do_execve_file.isra.36 (6 samples, 0.12%)</title><rect x="0.0000%" y="1237" width="0.1207%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1247.50"></text></g><g><title>search_binary_handler (6 samples, 0.12%)</title><rect x="0.0000%" y="1221" width="0.1207%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1231.50"></text></g><g><title>load_elf_binary (6 samples, 0.12%)</title><rect x="0.0000%" y="1205" width="0.1207%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1215.50"></text></g><g><title>setup_new_exec (6 samples, 0.12%)</title><rect x="0.0000%" y="1189" width="0.1207%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1199.50"></text></g><g><title>strrchr (6 samples, 0.12%)</title><rect x="0.0000%" y="1173" width="0.1207%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1183.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1285" width="0.0201%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1295.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1269" width="0.0201%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1279.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1253" width="0.0201%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1263.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1237" width="0.0201%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1247.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1221" width="0.0201%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1231.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="0.1207%" y="1205" width="0.0201%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1215.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1189" width="0.0201%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1199.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1173" width="0.0201%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1183.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1157" width="0.0201%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1167.50"></text></g><g><title>[ld-2.28.so] (1 samples, 0.02%)</title><rect x="0.1207%" y="1141" width="0.0201%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1207%" y="1125" width="0.0201%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1135.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1207%" y="1109" width="0.0201%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1119.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="0.1207%" y="1093" width="0.0201%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1103.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="0.1207%" y="1077" width="0.0201%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1087.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="0.1207%" y="1061" width="0.0201%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1071.50"></text></g><g><title>__split_vma (1 samples, 0.02%)</title><rect x="0.1207%" y="1045" width="0.0201%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1055.50"></text></g><g><title>__vma_adjust (1 samples, 0.02%)</title><rect x="0.1207%" y="1029" width="0.0201%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1039.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.02%)</title><rect x="0.1207%" y="1013" width="0.0201%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.3707%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1409%" y="1285" width="0.0201%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1295.50"></text></g><g><title>clone (1 samples, 0.02%)</title><rect x="0.1409%" y="1269" width="0.0201%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1279.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1409%" y="1253" width="0.0201%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1263.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1409%" y="1237" width="0.0201%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1247.50"></text></g><g><title>_do_fork (1 samples, 0.02%)</title><rect x="0.1409%" y="1221" width="0.0201%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1231.50"></text></g><g><title>copy_process.part.37 (1 samples, 0.02%)</title><rect x="0.1409%" y="1205" width="0.0201%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1215.50"></text></g><g><title>__vmalloc_node_range (1 samples, 0.02%)</title><rect x="0.1409%" y="1189" width="0.0201%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1199.50"></text></g><g><title>__get_vm_area_node (1 samples, 0.02%)</title><rect x="0.1409%" y="1173" width="0.0201%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1183.50"></text></g><g><title>alloc_vmap_area (1 samples, 0.02%)</title><rect x="0.1409%" y="1157" width="0.0201%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1167.50"></text></g><g><title>__insert_vmap_area (1 samples, 0.02%)</title><rect x="0.1409%" y="1141" width="0.0201%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="0.3909%" y="1151.50"></text></g><g><title>_start (6 samples, 0.12%)</title><rect x="0.1610%" y="1285" width="0.1207%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1295.50"></text></g><g><title>__libc_start_main (6 samples, 0.12%)</title><rect x="0.1610%" y="1269" width="0.1207%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1279.50"></text></g><g><title>main (6 samples, 0.12%)</title><rect x="0.1610%" y="1253" width="0.1207%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1263.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.12%)</title><rect x="0.1610%" y="1237" width="0.1207%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.12%)</title><rect x="0.1610%" y="1221" width="0.1207%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1231.50"></text></g><g><title>std::panicking::try (6 samples, 0.12%)</title><rect x="0.1610%" y="1205" width="0.1207%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.12%)</title><rect x="0.1610%" y="1189" width="0.1207%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.12%)</title><rect x="0.1610%" y="1173" width="0.1207%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1183.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.12%)</title><rect x="0.1610%" y="1157" width="0.1207%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.12%)</title><rect x="0.1610%" y="1141" width="0.1207%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.12%)</title><rect x="0.1610%" y="1125" width="0.1207%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1135.50"></text></g><g><title>pipeline_test::main (6 samples, 0.12%)</title><rect x="0.1610%" y="1109" width="0.1207%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1119.50"></text></g><g><title>tokio::runtime::builder::Builder::build (6 samples, 0.12%)</title><rect x="0.1610%" y="1093" width="0.1207%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1103.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (6 samples, 0.12%)</title><rect x="0.1610%" y="1077" width="0.1207%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (6 samples, 0.12%)</title><rect x="0.1610%" y="1061" width="0.1207%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (6 samples, 0.12%)</title><rect x="0.1610%" y="1045" width="0.1207%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1055.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (6 samples, 0.12%)</title><rect x="0.1610%" y="1029" width="0.1207%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1039.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking_inner (6 samples, 0.12%)</title><rect x="0.1610%" y="1013" width="0.1207%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1023.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (6 samples, 0.12%)</title><rect x="0.1610%" y="997" width="0.1207%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="6"/><text x="0.4110%" y="1007.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (6 samples, 0.12%)</title><rect x="0.1610%" y="981" width="0.1207%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="6"/><text x="0.4110%" y="991.50"></text></g><g><title>std::thread::Builder::spawn (6 samples, 0.12%)</title><rect x="0.1610%" y="965" width="0.1207%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="6"/><text x="0.4110%" y="975.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (6 samples, 0.12%)</title><rect x="0.1610%" y="949" width="0.1207%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="6"/><text x="0.4110%" y="959.50"></text></g><g><title>std::sys::unix::thread::Thread::new (6 samples, 0.12%)</title><rect x="0.1610%" y="933" width="0.1207%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="6"/><text x="0.4110%" y="943.50"></text></g><g><title>__pthread_create_2_1 (6 samples, 0.12%)</title><rect x="0.1610%" y="917" width="0.1207%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="6"/><text x="0.4110%" y="927.50"></text></g><g><title>page_fault (6 samples, 0.12%)</title><rect x="0.1610%" y="901" width="0.1207%" height="15" fill="rgb(221,10,30)" fg:x="8" fg:w="6"/><text x="0.4110%" y="911.50"></text></g><g><title>__do_page_fault (6 samples, 0.12%)</title><rect x="0.1610%" y="885" width="0.1207%" height="15" fill="rgb(210,229,1)" fg:x="8" fg:w="6"/><text x="0.4110%" y="895.50"></text></g><g><title>handle_mm_fault (6 samples, 0.12%)</title><rect x="0.1610%" y="869" width="0.1207%" height="15" fill="rgb(222,148,37)" fg:x="8" fg:w="6"/><text x="0.4110%" y="879.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.12%)</title><rect x="0.1610%" y="853" width="0.1207%" height="15" fill="rgb(234,67,33)" fg:x="8" fg:w="6"/><text x="0.4110%" y="863.50"></text></g><g><title>do_huge_pmd_anonymous_page (6 samples, 0.12%)</title><rect x="0.1610%" y="837" width="0.1207%" height="15" fill="rgb(247,98,35)" fg:x="8" fg:w="6"/><text x="0.4110%" y="847.50"></text></g><g><title>clear_huge_page (1 samples, 0.02%)</title><rect x="0.2616%" y="821" width="0.0201%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="1"/><text x="0.5116%" y="831.50"></text></g><g><title>clear_subpage (1 samples, 0.02%)</title><rect x="0.2616%" y="805" width="0.0201%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="1"/><text x="0.5116%" y="815.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="0.2616%" y="789" width="0.0201%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="1"/><text x="0.5116%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.10%)</title><rect x="2.5760%" y="1269" width="0.1006%" height="15" fill="rgb(230,62,27)" fg:x="128" fg:w="5"/><text x="2.8260%" y="1279.50"></text></g><g><title>__ctype_init (2 samples, 0.04%)</title><rect x="2.6766%" y="1253" width="0.0402%" height="15" fill="rgb(216,154,8)" fg:x="133" fg:w="2"/><text x="2.9266%" y="1263.50"></text></g><g><title>__sigsetjmp (1 samples, 0.02%)</title><rect x="2.7168%" y="1253" width="0.0201%" height="15" fill="rgb(244,35,45)" fg:x="135" fg:w="1"/><text x="2.9668%" y="1263.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="2.7370%" y="1253" width="0.1006%" height="15" fill="rgb(251,115,12)" fg:x="136" fg:w="5"/><text x="2.9870%" y="1263.50"></text></g><g><title>do_syscall_64 (5 samples, 0.10%)</title><rect x="2.7370%" y="1237" width="0.1006%" height="15" fill="rgb(240,54,50)" fg:x="136" fg:w="5"/><text x="2.9870%" y="1247.50"></text></g><g><title>sigaltstack (6 samples, 0.12%)</title><rect x="2.8577%" y="1205" width="0.1207%" height="15" fill="rgb(233,84,52)" fg:x="142" fg:w="6"/><text x="3.1077%" y="1215.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="2.8577%" y="1189" width="0.1207%" height="15" fill="rgb(207,117,47)" fg:x="142" fg:w="6"/><text x="3.1077%" y="1199.50"></text></g><g><title>do_syscall_64 (6 samples, 0.12%)</title><rect x="2.8577%" y="1173" width="0.1207%" height="15" fill="rgb(249,43,39)" fg:x="142" fg:w="6"/><text x="3.1077%" y="1183.50"></text></g><g><title>__x64_sys_sigaltstack (6 samples, 0.12%)</title><rect x="2.8577%" y="1157" width="0.1207%" height="15" fill="rgb(209,38,44)" fg:x="142" fg:w="6"/><text x="3.1077%" y="1167.50"></text></g><g><title>_copy_to_user (1 samples, 0.02%)</title><rect x="2.9583%" y="1141" width="0.0201%" height="15" fill="rgb(236,212,23)" fg:x="147" fg:w="1"/><text x="3.2083%" y="1151.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="2.9583%" y="1125" width="0.0201%" height="15" fill="rgb(242,79,21)" fg:x="147" fg:w="1"/><text x="3.2083%" y="1135.50"></text></g><g><title>get_unmapped_area (3 samples, 0.06%)</title><rect x="2.9986%" y="1077" width="0.0604%" height="15" fill="rgb(211,96,35)" fg:x="149" fg:w="3"/><text x="3.2486%" y="1087.50"></text></g><g><title>arch_get_unmapped_area_topdown (2 samples, 0.04%)</title><rect x="3.0187%" y="1061" width="0.0402%" height="15" fill="rgb(253,215,40)" fg:x="150" fg:w="2"/><text x="3.2687%" y="1071.50"></text></g><g><title>unmapped_area_topdown (2 samples, 0.04%)</title><rect x="3.0187%" y="1045" width="0.0402%" height="15" fill="rgb(211,81,21)" fg:x="150" fg:w="2"/><text x="3.2687%" y="1055.50"></text></g><g><title>do_mmap (5 samples, 0.10%)</title><rect x="2.9785%" y="1093" width="0.1006%" height="15" fill="rgb(208,190,38)" fg:x="148" fg:w="5"/><text x="3.2285%" y="1103.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="3.0590%" y="1077" width="0.0201%" height="15" fill="rgb(235,213,38)" fg:x="152" fg:w="1"/><text x="3.3090%" y="1087.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="3.0590%" y="1061" width="0.0201%" height="15" fill="rgb(237,122,38)" fg:x="152" fg:w="1"/><text x="3.3090%" y="1071.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="3.0590%" y="1045" width="0.0201%" height="15" fill="rgb(244,218,35)" fg:x="152" fg:w="1"/><text x="3.3090%" y="1055.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="3.0590%" y="1029" width="0.0201%" height="15" fill="rgb(240,68,47)" fg:x="152" fg:w="1"/><text x="3.3090%" y="1039.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="3.0791%" y="1013" width="0.0201%" height="15" fill="rgb(210,16,53)" fg:x="153" fg:w="1"/><text x="3.3291%" y="1023.50"></text></g><g><title>ctx_sched_out (1 samples, 0.02%)</title><rect x="3.0791%" y="997" width="0.0201%" height="15" fill="rgb(235,124,12)" fg:x="153" fg:w="1"/><text x="3.3291%" y="1007.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="3.0791%" y="981" width="0.0201%" height="15" fill="rgb(224,169,11)" fg:x="153" fg:w="1"/><text x="3.3291%" y="991.50"></text></g><g><title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="3.0791%" y="965" width="0.0201%" height="15" fill="rgb(250,166,2)" fg:x="153" fg:w="1"/><text x="3.3291%" y="975.50"></text></g><g><title>native_read_msr (1 samples, 0.02%)</title><rect x="3.0791%" y="949" width="0.0201%" height="15" fill="rgb(242,216,29)" fg:x="153" fg:w="1"/><text x="3.3291%" y="959.50"></text></g><g><title>down_write_killable (2 samples, 0.04%)</title><rect x="3.0791%" y="1093" width="0.0402%" height="15" fill="rgb(230,116,27)" fg:x="153" fg:w="2"/><text x="3.3291%" y="1103.50"></text></g><g><title>call_rwsem_down_write_failed_killable (2 samples, 0.04%)</title><rect x="3.0791%" y="1077" width="0.0402%" height="15" fill="rgb(228,99,48)" fg:x="153" fg:w="2"/><text x="3.3291%" y="1087.50"></text></g><g><title>rwsem_down_write_failed_killable (2 samples, 0.04%)</title><rect x="3.0791%" y="1061" width="0.0402%" height="15" fill="rgb(253,11,6)" fg:x="153" fg:w="2"/><text x="3.3291%" y="1071.50"></text></g><g><title>schedule (2 samples, 0.04%)</title><rect x="3.0791%" y="1045" width="0.0402%" height="15" fill="rgb(247,143,39)" fg:x="153" fg:w="2"/><text x="3.3291%" y="1055.50"></text></g><g><title>__schedule (2 samples, 0.04%)</title><rect x="3.0791%" y="1029" width="0.0402%" height="15" fill="rgb(236,97,10)" fg:x="153" fg:w="2"/><text x="3.3291%" y="1039.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="3.0992%" y="1013" width="0.0201%" height="15" fill="rgb(233,208,19)" fg:x="154" fg:w="1"/><text x="3.3492%" y="1023.50"></text></g><g><title>load_balance (1 samples, 0.02%)</title><rect x="3.0992%" y="997" width="0.0201%" height="15" fill="rgb(216,164,2)" fg:x="154" fg:w="1"/><text x="3.3492%" y="1007.50"></text></g><g><title>can_migrate_task (1 samples, 0.02%)</title><rect x="3.0992%" y="981" width="0.0201%" height="15" fill="rgb(220,129,5)" fg:x="154" fg:w="1"/><text x="3.3492%" y="991.50"></text></g><g><title>mmap64 (8 samples, 0.16%)</title><rect x="2.9785%" y="1173" width="0.1610%" height="15" fill="rgb(242,17,10)" fg:x="148" fg:w="8"/><text x="3.2285%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.16%)</title><rect x="2.9785%" y="1157" width="0.1610%" height="15" fill="rgb(242,107,0)" fg:x="148" fg:w="8"/><text x="3.2285%" y="1167.50"></text></g><g><title>do_syscall_64 (8 samples, 0.16%)</title><rect x="2.9785%" y="1141" width="0.1610%" height="15" fill="rgb(251,28,31)" fg:x="148" fg:w="8"/><text x="3.2285%" y="1151.50"></text></g><g><title>ksys_mmap_pgoff (8 samples, 0.16%)</title><rect x="2.9785%" y="1125" width="0.1610%" height="15" fill="rgb(233,223,10)" fg:x="148" fg:w="8"/><text x="3.2285%" y="1135.50"></text></g><g><title>vm_mmap_pgoff (8 samples, 0.16%)</title><rect x="2.9785%" y="1109" width="0.1610%" height="15" fill="rgb(215,21,27)" fg:x="148" fg:w="8"/><text x="3.2285%" y="1119.50"></text></g><g><title>security_mmap_file (1 samples, 0.02%)</title><rect x="3.1193%" y="1093" width="0.0201%" height="15" fill="rgb(232,23,21)" fg:x="155" fg:w="1"/><text x="3.3693%" y="1103.50"></text></g><g><title>pipeline_test (151 samples, 3.04%)</title><rect x="0.1207%" y="1301" width="3.0388%" height="15" fill="rgb(244,5,23)" fg:x="6" fg:w="151"/><text x="0.3707%" y="1311.50">pip..</text></g><g><title>clone (143 samples, 2.88%)</title><rect x="0.2817%" y="1285" width="2.8778%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="143"/><text x="0.5317%" y="1295.50">cl..</text></g><g><title>start_thread (24 samples, 0.48%)</title><rect x="2.6766%" y="1269" width="0.4830%" height="15" fill="rgb(247,70,30)" fg:x="133" fg:w="24"/><text x="2.9266%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.32%)</title><rect x="2.8376%" y="1253" width="0.3220%" height="15" fill="rgb(212,68,19)" fg:x="141" fg:w="16"/><text x="3.0876%" y="1263.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (15 samples, 0.30%)</title><rect x="2.8577%" y="1237" width="0.3019%" height="15" fill="rgb(240,187,13)" fg:x="142" fg:w="15"/><text x="3.1077%" y="1247.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (15 samples, 0.30%)</title><rect x="2.8577%" y="1221" width="0.3019%" height="15" fill="rgb(223,113,26)" fg:x="142" fg:w="15"/><text x="3.1077%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (9 samples, 0.18%)</title><rect x="2.9785%" y="1205" width="0.1811%" height="15" fill="rgb(206,192,2)" fg:x="148" fg:w="9"/><text x="3.2285%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (9 samples, 0.18%)</title><rect x="2.9785%" y="1189" width="0.1811%" height="15" fill="rgb(241,108,4)" fg:x="148" fg:w="9"/><text x="3.2285%" y="1199.50"></text></g><g><title>sigaltstack (1 samples, 0.02%)</title><rect x="3.1395%" y="1173" width="0.0201%" height="15" fill="rgb(247,173,49)" fg:x="156" fg:w="1"/><text x="3.3895%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="3.1395%" y="1157" width="0.0201%" height="15" fill="rgb(224,114,35)" fg:x="156" fg:w="1"/><text x="3.3895%" y="1167.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (2 samples, 0.04%)</title><rect x="3.1596%" y="1269" width="0.0402%" height="15" fill="rgb(245,159,27)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1279.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1253" width="0.0402%" height="15" fill="rgb(245,172,44)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1263.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (2 samples, 0.04%)</title><rect x="3.1596%" y="1237" width="0.0402%" height="15" fill="rgb(236,23,11)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1247.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1221" width="0.0402%" height="15" fill="rgb(205,117,38)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1231.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (2 samples, 0.04%)</title><rect x="3.1596%" y="1205" width="0.0402%" height="15" fill="rgb(237,72,25)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1215.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (2 samples, 0.04%)</title><rect x="3.1596%" y="1189" width="0.0402%" height="15" fill="rgb(244,70,9)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1199.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (2 samples, 0.04%)</title><rect x="3.1596%" y="1173" width="0.0402%" height="15" fill="rgb(217,125,39)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1183.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1157" width="0.0402%" height="15" fill="rgb(235,36,10)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1167.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.04%)</title><rect x="3.1596%" y="1141" width="0.0402%" height="15" fill="rgb(251,123,47)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1151.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2 samples, 0.04%)</title><rect x="3.1596%" y="1125" width="0.0402%" height="15" fill="rgb(221,13,13)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1135.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (2 samples, 0.04%)</title><rect x="3.1596%" y="1109" width="0.0402%" height="15" fill="rgb(238,131,9)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1119.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1093" width="0.0402%" height="15" fill="rgb(211,50,8)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1077" width="0.0402%" height="15" fill="rgb(245,182,24)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1087.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (2 samples, 0.04%)</title><rect x="3.1596%" y="1061" width="0.0402%" height="15" fill="rgb(242,14,37)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1071.50"></text></g><g><title>writev (2 samples, 0.04%)</title><rect x="3.1596%" y="1045" width="0.0402%" height="15" fill="rgb(246,228,12)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="3.1596%" y="1029" width="0.0402%" height="15" fill="rgb(213,55,15)" fg:x="157" fg:w="2"/><text x="3.4096%" y="1039.50"></text></g><g><title>__libc_recv (2 samples, 0.04%)</title><rect x="3.1998%" y="1269" width="0.0402%" height="15" fill="rgb(209,9,3)" fg:x="159" fg:w="2"/><text x="3.4498%" y="1279.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="3.1998%" y="1253" width="0.0402%" height="15" fill="rgb(230,59,30)" fg:x="159" fg:w="2"/><text x="3.4498%" y="1263.50"></text></g><g><title>[anon] (5 samples, 0.10%)</title><rect x="3.1596%" y="1285" width="0.1006%" height="15" fill="rgb(209,121,21)" fg:x="157" fg:w="5"/><text x="3.4096%" y="1295.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.02%)</title><rect x="3.2401%" y="1269" width="0.0201%" height="15" fill="rgb(220,109,13)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1279.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="3.2401%" y="1253" width="0.0201%" height="15" fill="rgb(232,18,1)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1263.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.02%)</title><rect x="3.2401%" y="1237" width="0.0201%" height="15" fill="rgb(215,41,42)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1247.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="3.2401%" y="1221" width="0.0201%" height="15" fill="rgb(224,123,36)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1231.50"></text></g><g><title>__libc_write (1 samples, 0.02%)</title><rect x="3.2401%" y="1205" width="0.0201%" height="15" fill="rgb(240,125,3)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1215.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="3.2401%" y="1189" width="0.0201%" height="15" fill="rgb(205,98,50)" fg:x="161" fg:w="1"/><text x="3.4901%" y="1199.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1253" width="0.0201%" height="15" fill="rgb(205,185,37)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1237" width="0.0201%" height="15" fill="rgb(238,207,15)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1247.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1221" width="0.0201%" height="15" fill="rgb(213,199,42)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1205" width="0.0201%" height="15" fill="rgb(235,201,11)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1215.50"></text></g><g><title>fred::multiplexer::Multiplexer::connect_and_flush::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1189" width="0.0201%" height="15" fill="rgb(207,46,11)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1173" width="0.0201%" height="15" fill="rgb(241,35,35)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1183.50"></text></g><g><title>fred::multiplexer::utils::connect_centralized::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1157" width="0.0201%" height="15" fill="rgb(243,32,47)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1141" width="0.0201%" height="15" fill="rgb(247,202,23)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1151.50"></text></g><g><title>fred::protocol::connection::create_authenticated_connection::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1125" width="0.0201%" height="15" fill="rgb(219,102,11)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1109" width="0.0201%" height="15" fill="rgb(243,110,44)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1119.50"></text></g><g><title>fred::protocol::connection::authenticate::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1093" width="0.0201%" height="15" fill="rgb(222,74,54)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1077" width="0.0201%" height="15" fill="rgb(216,99,12)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1087.50"></text></g><g><title>fred::protocol::connection::request_response::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="1061" width="0.0201%" height="15" fill="rgb(226,22,26)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1071.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.2602%" y="1045" width="0.0201%" height="15" fill="rgb(217,163,10)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1055.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="3.2602%" y="1029" width="0.0201%" height="15" fill="rgb(213,25,53)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1039.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="3.2602%" y="1013" width="0.0201%" height="15" fill="rgb(252,105,26)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1023.50"></text></g><g><title>tokio_util::util::poll_write_buf (1 samples, 0.02%)</title><rect x="3.2602%" y="997" width="0.0201%" height="15" fill="rgb(220,39,43)" fg:x="162" fg:w="1"/><text x="3.5102%" y="1007.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="981" width="0.0201%" height="15" fill="rgb(229,68,48)" fg:x="162" fg:w="1"/><text x="3.5102%" y="991.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1 samples, 0.02%)</title><rect x="3.2602%" y="965" width="0.0201%" height="15" fill="rgb(252,8,32)" fg:x="162" fg:w="1"/><text x="3.5102%" y="975.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="949" width="0.0201%" height="15" fill="rgb(223,20,43)" fg:x="162" fg:w="1"/><text x="3.5102%" y="959.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.02%)</title><rect x="3.2602%" y="933" width="0.0201%" height="15" fill="rgb(229,81,49)" fg:x="162" fg:w="1"/><text x="3.5102%" y="943.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.02%)</title><rect x="3.2602%" y="917" width="0.0201%" height="15" fill="rgb(236,28,36)" fg:x="162" fg:w="1"/><text x="3.5102%" y="927.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="901" width="0.0201%" height="15" fill="rgb(249,185,26)" fg:x="162" fg:w="1"/><text x="3.5102%" y="911.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="885" width="0.0201%" height="15" fill="rgb(249,174,33)" fg:x="162" fg:w="1"/><text x="3.5102%" y="895.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.02%)</title><rect x="3.2602%" y="869" width="0.0201%" height="15" fill="rgb(233,201,37)" fg:x="162" fg:w="1"/><text x="3.5102%" y="879.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.02%)</title><rect x="3.2602%" y="853" width="0.0201%" height="15" fill="rgb(221,78,26)" fg:x="162" fg:w="1"/><text x="3.5102%" y="863.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2602%" y="837" width="0.0201%" height="15" fill="rgb(250,127,30)" fg:x="162" fg:w="1"/><text x="3.5102%" y="847.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="821" width="0.0201%" height="15" fill="rgb(230,49,44)" fg:x="162" fg:w="1"/><text x="3.5102%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="805" width="0.0201%" height="15" fill="rgb(229,67,23)" fg:x="162" fg:w="1"/><text x="3.5102%" y="815.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (1 samples, 0.02%)</title><rect x="3.2602%" y="789" width="0.0201%" height="15" fill="rgb(249,83,47)" fg:x="162" fg:w="1"/><text x="3.5102%" y="799.50"></text></g><g><title>writev (1 samples, 0.02%)</title><rect x="3.2602%" y="773" width="0.0201%" height="15" fill="rgb(215,43,3)" fg:x="162" fg:w="1"/><text x="3.5102%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="3.2602%" y="757" width="0.0201%" height="15" fill="rgb(238,154,13)" fg:x="162" fg:w="1"/><text x="3.5102%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="3.2602%" y="741" width="0.0201%" height="15" fill="rgb(219,56,2)" fg:x="162" fg:w="1"/><text x="3.5102%" y="751.50"></text></g><g><title>do_writev (1 samples, 0.02%)</title><rect x="3.2602%" y="725" width="0.0201%" height="15" fill="rgb(233,0,4)" fg:x="162" fg:w="1"/><text x="3.5102%" y="735.50"></text></g><g><title>vfs_writev (1 samples, 0.02%)</title><rect x="3.2602%" y="709" width="0.0201%" height="15" fill="rgb(235,30,7)" fg:x="162" fg:w="1"/><text x="3.5102%" y="719.50"></text></g><g><title>do_iter_write (1 samples, 0.02%)</title><rect x="3.2602%" y="693" width="0.0201%" height="15" fill="rgb(250,79,13)" fg:x="162" fg:w="1"/><text x="3.5102%" y="703.50"></text></g><g><title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="3.2602%" y="677" width="0.0201%" height="15" fill="rgb(211,146,34)" fg:x="162" fg:w="1"/><text x="3.5102%" y="687.50"></text></g><g><title>sock_write_iter (1 samples, 0.02%)</title><rect x="3.2602%" y="661" width="0.0201%" height="15" fill="rgb(228,22,38)" fg:x="162" fg:w="1"/><text x="3.5102%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.02%)</title><rect x="3.2602%" y="645" width="0.0201%" height="15" fill="rgb(235,168,5)" fg:x="162" fg:w="1"/><text x="3.5102%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="3.2602%" y="629" width="0.0201%" height="15" fill="rgb(221,155,16)" fg:x="162" fg:w="1"/><text x="3.5102%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="3.2602%" y="613" width="0.0201%" height="15" fill="rgb(215,215,53)" fg:x="162" fg:w="1"/><text x="3.5102%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="3.2602%" y="597" width="0.0201%" height="15" fill="rgb(223,4,10)" fg:x="162" fg:w="1"/><text x="3.5102%" y="607.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="3.2602%" y="581" width="0.0201%" height="15" fill="rgb(234,103,6)" fg:x="162" fg:w="1"/><text x="3.5102%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="3.2602%" y="565" width="0.0201%" height="15" fill="rgb(227,97,0)" fg:x="162" fg:w="1"/><text x="3.5102%" y="575.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="3.2602%" y="549" width="0.0201%" height="15" fill="rgb(234,150,53)" fg:x="162" fg:w="1"/><text x="3.5102%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.02%)</title><rect x="3.2602%" y="533" width="0.0201%" height="15" fill="rgb(228,201,54)" fg:x="162" fg:w="1"/><text x="3.5102%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="3.2602%" y="517" width="0.0201%" height="15" fill="rgb(222,22,37)" fg:x="162" fg:w="1"/><text x="3.5102%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="3.2602%" y="501" width="0.0201%" height="15" fill="rgb(237,53,32)" fg:x="162" fg:w="1"/><text x="3.5102%" y="511.50"></text></g><g><title>do_softirq.part.19 (1 samples, 0.02%)</title><rect x="3.2602%" y="485" width="0.0201%" height="15" fill="rgb(233,25,53)" fg:x="162" fg:w="1"/><text x="3.5102%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="3.2602%" y="469" width="0.0201%" height="15" fill="rgb(210,40,34)" fg:x="162" fg:w="1"/><text x="3.5102%" y="479.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="3.2602%" y="453" width="0.0201%" height="15" fill="rgb(241,220,44)" fg:x="162" fg:w="1"/><text x="3.5102%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.02%)</title><rect x="3.2602%" y="437" width="0.0201%" height="15" fill="rgb(235,28,35)" fg:x="162" fg:w="1"/><text x="3.5102%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.02%)</title><rect x="3.2602%" y="421" width="0.0201%" height="15" fill="rgb(210,56,17)" fg:x="162" fg:w="1"/><text x="3.5102%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="3.2602%" y="405" width="0.0201%" height="15" fill="rgb(224,130,29)" fg:x="162" fg:w="1"/><text x="3.5102%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.02%)</title><rect x="3.2602%" y="389" width="0.0201%" height="15" fill="rgb(235,212,8)" fg:x="162" fg:w="1"/><text x="3.5102%" y="399.50"></text></g><g><title>nf_hook_slow (1 samples, 0.02%)</title><rect x="3.2602%" y="373" width="0.0201%" height="15" fill="rgb(223,33,50)" fg:x="162" fg:w="1"/><text x="3.5102%" y="383.50"></text></g><g><title>ipv4_conntrack_in (1 samples, 0.02%)</title><rect x="3.2602%" y="357" width="0.0201%" height="15" fill="rgb(219,149,13)" fg:x="162" fg:w="1"/><text x="3.5102%" y="367.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_ready (1 samples, 0.02%)</title><rect x="3.2803%" y="901" width="0.0201%" height="15" fill="rgb(250,156,29)" fg:x="163" fg:w="1"/><text x="3.5303%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_ready (1 samples, 0.02%)</title><rect x="3.2803%" y="885" width="0.0201%" height="15" fill="rgb(216,193,19)" fg:x="163" fg:w="1"/><text x="3.5303%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.02%)</title><rect x="3.3005%" y="869" width="0.0201%" height="15" fill="rgb(216,135,14)" fg:x="164" fg:w="1"/><text x="3.5505%" y="879.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="3.3005%" y="853" width="0.0201%" height="15" fill="rgb(241,47,5)" fg:x="164" fg:w="1"/><text x="3.5505%" y="863.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.02%)</title><rect x="3.3206%" y="837" width="0.0201%" height="15" fill="rgb(233,42,35)" fg:x="165" fg:w="1"/><text x="3.5706%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="3.3608%" y="789" width="0.0201%" height="15" fill="rgb(231,13,6)" fg:x="167" fg:w="1"/><text x="3.6108%" y="799.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="3.3810%" y="773" width="0.0805%" height="15" fill="rgb(207,181,40)" fg:x="168" fg:w="4"/><text x="3.6310%" y="783.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="3.4615%" y="773" width="0.0402%" height="15" fill="rgb(254,173,49)" fg:x="172" fg:w="2"/><text x="3.7115%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (9 samples, 0.18%)</title><rect x="3.3407%" y="837" width="0.1811%" height="15" fill="rgb(221,1,38)" fg:x="166" fg:w="9"/><text x="3.5907%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;redis_protocol::types::Frame&gt;&gt; (8 samples, 0.16%)</title><rect x="3.3608%" y="821" width="0.1610%" height="15" fill="rgb(206,124,46)" fg:x="167" fg:w="8"/><text x="3.6108%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="3.3608%" y="805" width="0.1610%" height="15" fill="rgb(249,21,11)" fg:x="167" fg:w="8"/><text x="3.6108%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[redis_protocol::types::Frame]&gt; (7 samples, 0.14%)</title><rect x="3.3810%" y="789" width="0.1409%" height="15" fill="rgb(222,201,40)" fg:x="168" fg:w="7"/><text x="3.6310%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (1 samples, 0.02%)</title><rect x="3.5017%" y="773" width="0.0201%" height="15" fill="rgb(235,61,29)" fg:x="174" fg:w="1"/><text x="3.7517%" y="783.50"></text></g><g><title>fred::metrics::SizeStats::sample (4 samples, 0.08%)</title><rect x="3.5218%" y="837" width="0.0805%" height="15" fill="rgb(219,207,3)" fg:x="175" fg:w="4"/><text x="3.7718%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.02%)</title><rect x="3.5822%" y="821" width="0.0201%" height="15" fill="rgb(222,56,46)" fg:x="178" fg:w="1"/><text x="3.8322%" y="831.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2 samples, 0.04%)</title><rect x="3.6023%" y="837" width="0.0402%" height="15" fill="rgb(239,76,54)" fg:x="179" fg:w="2"/><text x="3.8523%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2 samples, 0.04%)</title><rect x="3.6023%" y="821" width="0.0402%" height="15" fill="rgb(231,124,27)" fg:x="179" fg:w="2"/><text x="3.8523%" y="831.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (20 samples, 0.40%)</title><rect x="3.3005%" y="901" width="0.4025%" height="15" fill="rgb(249,195,6)" fg:x="164" fg:w="20"/><text x="3.5505%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (20 samples, 0.40%)</title><rect x="3.3005%" y="885" width="0.4025%" height="15" fill="rgb(237,174,47)" fg:x="164" fg:w="20"/><text x="3.5505%" y="895.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (19 samples, 0.38%)</title><rect x="3.3206%" y="869" width="0.3824%" height="15" fill="rgb(206,201,31)" fg:x="165" fg:w="19"/><text x="3.5706%" y="879.50"></text></g><g><title>fred::protocol::codec::encode_frame (19 samples, 0.38%)</title><rect x="3.3206%" y="853" width="0.3824%" height="15" fill="rgb(231,57,52)" fg:x="165" fg:w="19"/><text x="3.5706%" y="863.50"></text></g><g><title>redis_protocol::encode::encode_bytes (3 samples, 0.06%)</title><rect x="3.6426%" y="837" width="0.0604%" height="15" fill="rgb(248,177,22)" fg:x="181" fg:w="3"/><text x="3.8926%" y="847.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (2 samples, 0.04%)</title><rect x="3.6627%" y="821" width="0.0402%" height="15" fill="rgb(215,211,37)" fg:x="182" fg:w="2"/><text x="3.9127%" y="831.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (26 samples, 0.52%)</title><rect x="3.2803%" y="981" width="0.5232%" height="15" fill="rgb(241,128,51)" fg:x="163" fg:w="26"/><text x="3.5303%" y="991.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (26 samples, 0.52%)</title><rect x="3.2803%" y="965" width="0.5232%" height="15" fill="rgb(227,165,31)" fg:x="163" fg:w="26"/><text x="3.5303%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (26 samples, 0.52%)</title><rect x="3.2803%" y="949" width="0.5232%" height="15" fill="rgb(228,167,24)" fg:x="163" fg:w="26"/><text x="3.5303%" y="959.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (26 samples, 0.52%)</title><rect x="3.2803%" y="933" width="0.5232%" height="15" fill="rgb(228,143,12)" fg:x="163" fg:w="26"/><text x="3.5303%" y="943.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (26 samples, 0.52%)</title><rect x="3.2803%" y="917" width="0.5232%" height="15" fill="rgb(249,149,8)" fg:x="163" fg:w="26"/><text x="3.5303%" y="927.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="3.7030%" y="901" width="0.1006%" height="15" fill="rgb(243,35,44)" fg:x="184" fg:w="5"/><text x="3.9530%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (1 samples, 0.02%)</title><rect x="3.8036%" y="821" width="0.0201%" height="15" fill="rgb(246,89,9)" fg:x="189" fg:w="1"/><text x="4.0536%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;redis_protocol::types::Frame&gt;&gt; (1 samples, 0.02%)</title><rect x="3.8036%" y="805" width="0.0201%" height="15" fill="rgb(233,213,13)" fg:x="189" fg:w="1"/><text x="4.0536%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;redis_protocol::types::Frame&gt;&gt; (1 samples, 0.02%)</title><rect x="3.8036%" y="789" width="0.0201%" height="15" fill="rgb(233,141,41)" fg:x="189" fg:w="1"/><text x="4.0536%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.8036%" y="773" width="0.0201%" height="15" fill="rgb(239,167,4)" fg:x="189" fg:w="1"/><text x="4.0536%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="3.8036%" y="757" width="0.0201%" height="15" fill="rgb(209,217,16)" fg:x="189" fg:w="1"/><text x="4.0536%" y="767.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="3.8036%" y="965" width="0.0402%" height="15" fill="rgb(219,88,35)" fg:x="189" fg:w="2"/><text x="4.0536%" y="975.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (2 samples, 0.04%)</title><rect x="3.8036%" y="949" width="0.0402%" height="15" fill="rgb(220,193,23)" fg:x="189" fg:w="2"/><text x="4.0536%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (2 samples, 0.04%)</title><rect x="3.8036%" y="933" width="0.0402%" height="15" fill="rgb(230,90,52)" fg:x="189" fg:w="2"/><text x="4.0536%" y="943.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (2 samples, 0.04%)</title><rect x="3.8036%" y="917" width="0.0402%" height="15" fill="rgb(252,106,19)" fg:x="189" fg:w="2"/><text x="4.0536%" y="927.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (2 samples, 0.04%)</title><rect x="3.8036%" y="901" width="0.0402%" height="15" fill="rgb(206,74,20)" fg:x="189" fg:w="2"/><text x="4.0536%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (2 samples, 0.04%)</title><rect x="3.8036%" y="885" width="0.0402%" height="15" fill="rgb(230,138,44)" fg:x="189" fg:w="2"/><text x="4.0536%" y="895.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (2 samples, 0.04%)</title><rect x="3.8036%" y="869" width="0.0402%" height="15" fill="rgb(235,182,43)" fg:x="189" fg:w="2"/><text x="4.0536%" y="879.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (2 samples, 0.04%)</title><rect x="3.8036%" y="853" width="0.0402%" height="15" fill="rgb(242,16,51)" fg:x="189" fg:w="2"/><text x="4.0536%" y="863.50"></text></g><g><title>fred::protocol::codec::encode_frame (2 samples, 0.04%)</title><rect x="3.8036%" y="837" width="0.0402%" height="15" fill="rgb(248,9,4)" fg:x="189" fg:w="2"/><text x="4.0536%" y="847.50"></text></g><g><title>fred::metrics::SizeStats::sample (1 samples, 0.02%)</title><rect x="3.8237%" y="821" width="0.0201%" height="15" fill="rgb(210,31,22)" fg:x="190" fg:w="1"/><text x="4.0737%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::is_empty (1 samples, 0.02%)</title><rect x="3.8438%" y="917" width="0.0201%" height="15" fill="rgb(239,54,39)" fg:x="191" fg:w="1"/><text x="4.0938%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (3 samples, 0.06%)</title><rect x="3.9042%" y="901" width="0.0604%" height="15" fill="rgb(230,99,41)" fg:x="194" fg:w="3"/><text x="4.1542%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.02%)</title><rect x="3.9445%" y="885" width="0.0201%" height="15" fill="rgb(253,106,12)" fg:x="196" fg:w="1"/><text x="4.1945%" y="895.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (5 samples, 0.10%)</title><rect x="4.0853%" y="821" width="0.1006%" height="15" fill="rgb(213,46,41)" fg:x="203" fg:w="5"/><text x="4.3353%" y="831.50"></text></g><g><title>tokio::io::driver::Handle::inner (3 samples, 0.06%)</title><rect x="4.1256%" y="805" width="0.0604%" height="15" fill="rgb(215,133,35)" fg:x="205" fg:w="3"/><text x="4.3756%" y="815.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.06%)</title><rect x="4.1256%" y="789" width="0.0604%" height="15" fill="rgb(213,28,5)" fg:x="205" fg:w="3"/><text x="4.3756%" y="799.50"></text></g><g><title>__fdget_pos (9 samples, 0.18%)</title><rect x="4.3268%" y="629" width="0.1811%" height="15" fill="rgb(215,77,49)" fg:x="215" fg:w="9"/><text x="4.5768%" y="639.50"></text></g><g><title>__fget_light (9 samples, 0.18%)</title><rect x="4.3268%" y="613" width="0.1811%" height="15" fill="rgb(248,100,22)" fg:x="215" fg:w="9"/><text x="4.5768%" y="623.50"></text></g><g><title>__fget (8 samples, 0.16%)</title><rect x="4.3470%" y="597" width="0.1610%" height="15" fill="rgb(208,67,9)" fg:x="216" fg:w="8"/><text x="4.5970%" y="607.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="4.6488%" y="597" width="0.0201%" height="15" fill="rgb(219,133,21)" fg:x="231" fg:w="1"/><text x="4.8988%" y="607.50"></text></g><g><title>inet_sendmsg (3 samples, 0.06%)</title><rect x="4.7696%" y="549" width="0.0604%" height="15" fill="rgb(246,46,29)" fg:x="237" fg:w="3"/><text x="5.0196%" y="559.50"></text></g><g><title>security_socket_sendmsg (3 samples, 0.06%)</title><rect x="4.8299%" y="549" width="0.0604%" height="15" fill="rgb(246,185,52)" fg:x="240" fg:w="3"/><text x="5.0799%" y="559.50"></text></g><g><title>aa_sk_perm (1 samples, 0.02%)</title><rect x="4.8702%" y="533" width="0.0201%" height="15" fill="rgb(252,136,11)" fg:x="242" fg:w="1"/><text x="5.1202%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="4.9104%" y="533" width="0.0201%" height="15" fill="rgb(219,138,53)" fg:x="244" fg:w="1"/><text x="5.1604%" y="543.50"></text></g><g><title>lock_sock_nested (3 samples, 0.06%)</title><rect x="4.9306%" y="533" width="0.0604%" height="15" fill="rgb(211,51,23)" fg:x="245" fg:w="3"/><text x="5.1806%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.06%)</title><rect x="4.9306%" y="517" width="0.0604%" height="15" fill="rgb(247,221,28)" fg:x="245" fg:w="3"/><text x="5.1806%" y="527.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="4.9708%" y="501" width="0.0201%" height="15" fill="rgb(251,222,45)" fg:x="247" fg:w="1"/><text x="5.2208%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="5.0513%" y="69" width="0.0201%" height="15" fill="rgb(217,162,53)" fg:x="251" fg:w="1"/><text x="5.3013%" y="79.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.08%)</title><rect x="5.0111%" y="469" width="0.0805%" height="15" fill="rgb(229,93,14)" fg:x="249" fg:w="4"/><text x="5.2611%" y="479.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.08%)</title><rect x="5.0111%" y="453" width="0.0805%" height="15" fill="rgb(209,67,49)" fg:x="249" fg:w="4"/><text x="5.2611%" y="463.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.08%)</title><rect x="5.0111%" y="437" width="0.0805%" height="15" fill="rgb(213,87,29)" fg:x="249" fg:w="4"/><text x="5.2611%" y="447.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.08%)</title><rect x="5.0111%" y="421" width="0.0805%" height="15" fill="rgb(205,151,52)" fg:x="249" fg:w="4"/><text x="5.2611%" y="431.50"></text></g><g><title>ip_output (4 samples, 0.08%)</title><rect x="5.0111%" y="405" width="0.0805%" height="15" fill="rgb(253,215,39)" fg:x="249" fg:w="4"/><text x="5.2611%" y="415.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.08%)</title><rect x="5.0111%" y="389" width="0.0805%" height="15" fill="rgb(221,220,41)" fg:x="249" fg:w="4"/><text x="5.2611%" y="399.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.08%)</title><rect x="5.0111%" y="373" width="0.0805%" height="15" fill="rgb(218,133,21)" fg:x="249" fg:w="4"/><text x="5.2611%" y="383.50"></text></g><g><title>do_softirq.part.19 (4 samples, 0.08%)</title><rect x="5.0111%" y="357" width="0.0805%" height="15" fill="rgb(221,193,43)" fg:x="249" fg:w="4"/><text x="5.2611%" y="367.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.08%)</title><rect x="5.0111%" y="341" width="0.0805%" height="15" fill="rgb(240,128,52)" fg:x="249" fg:w="4"/><text x="5.2611%" y="351.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.08%)</title><rect x="5.0111%" y="325" width="0.0805%" height="15" fill="rgb(253,114,12)" fg:x="249" fg:w="4"/><text x="5.2611%" y="335.50"></text></g><g><title>net_rx_action (4 samples, 0.08%)</title><rect x="5.0111%" y="309" width="0.0805%" height="15" fill="rgb(215,223,47)" fg:x="249" fg:w="4"/><text x="5.2611%" y="319.50"></text></g><g><title>process_backlog (4 samples, 0.08%)</title><rect x="5.0111%" y="293" width="0.0805%" height="15" fill="rgb(248,225,23)" fg:x="249" fg:w="4"/><text x="5.2611%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.08%)</title><rect x="5.0111%" y="277" width="0.0805%" height="15" fill="rgb(250,108,0)" fg:x="249" fg:w="4"/><text x="5.2611%" y="287.50"></text></g><g><title>ip_rcv (4 samples, 0.08%)</title><rect x="5.0111%" y="261" width="0.0805%" height="15" fill="rgb(228,208,7)" fg:x="249" fg:w="4"/><text x="5.2611%" y="271.50"></text></g><g><title>ip_local_deliver (4 samples, 0.08%)</title><rect x="5.0111%" y="245" width="0.0805%" height="15" fill="rgb(244,45,10)" fg:x="249" fg:w="4"/><text x="5.2611%" y="255.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.08%)</title><rect x="5.0111%" y="229" width="0.0805%" height="15" fill="rgb(207,125,25)" fg:x="249" fg:w="4"/><text x="5.2611%" y="239.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.08%)</title><rect x="5.0111%" y="213" width="0.0805%" height="15" fill="rgb(210,195,18)" fg:x="249" fg:w="4"/><text x="5.2611%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.08%)</title><rect x="5.0111%" y="197" width="0.0805%" height="15" fill="rgb(249,80,12)" fg:x="249" fg:w="4"/><text x="5.2611%" y="207.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.08%)</title><rect x="5.0111%" y="181" width="0.0805%" height="15" fill="rgb(221,65,9)" fg:x="249" fg:w="4"/><text x="5.2611%" y="191.50"></text></g><g><title>sock_def_readable (3 samples, 0.06%)</title><rect x="5.0312%" y="165" width="0.0604%" height="15" fill="rgb(235,49,36)" fg:x="250" fg:w="3"/><text x="5.2812%" y="175.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.06%)</title><rect x="5.0312%" y="149" width="0.0604%" height="15" fill="rgb(225,32,20)" fg:x="250" fg:w="3"/><text x="5.2812%" y="159.50"></text></g><g><title>__wake_up_common (3 samples, 0.06%)</title><rect x="5.0312%" y="133" width="0.0604%" height="15" fill="rgb(215,141,46)" fg:x="250" fg:w="3"/><text x="5.2812%" y="143.50"></text></g><g><title>ep_poll_callback (3 samples, 0.06%)</title><rect x="5.0312%" y="117" width="0.0604%" height="15" fill="rgb(250,160,47)" fg:x="250" fg:w="3"/><text x="5.2812%" y="127.50"></text></g><g><title>__wake_up_common (3 samples, 0.06%)</title><rect x="5.0312%" y="101" width="0.0604%" height="15" fill="rgb(216,222,40)" fg:x="250" fg:w="3"/><text x="5.2812%" y="111.50"></text></g><g><title>try_to_wake_up (3 samples, 0.06%)</title><rect x="5.0312%" y="85" width="0.0604%" height="15" fill="rgb(234,217,39)" fg:x="250" fg:w="3"/><text x="5.2812%" y="95.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="5.0714%" y="69" width="0.0201%" height="15" fill="rgb(207,178,40)" fg:x="252" fg:w="1"/><text x="5.3214%" y="79.50"></text></g><g><title>select_idle_sibling (1 samples, 0.02%)</title><rect x="5.0714%" y="53" width="0.0201%" height="15" fill="rgb(221,136,13)" fg:x="252" fg:w="1"/><text x="5.3214%" y="63.50"></text></g><g><title>available_idle_cpu (1 samples, 0.02%)</title><rect x="5.0714%" y="37" width="0.0201%" height="15" fill="rgb(249,199,10)" fg:x="252" fg:w="1"/><text x="5.3214%" y="47.50"></text></g><g><title>sock_def_readable (1 samples, 0.02%)</title><rect x="5.0916%" y="469" width="0.0201%" height="15" fill="rgb(249,222,13)" fg:x="253" fg:w="1"/><text x="5.3416%" y="479.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="5.0916%" y="453" width="0.0201%" height="15" fill="rgb(244,185,38)" fg:x="253" fg:w="1"/><text x="5.3416%" y="463.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="5.0916%" y="437" width="0.0201%" height="15" fill="rgb(236,202,9)" fg:x="253" fg:w="1"/><text x="5.3416%" y="447.50"></text></g><g><title>ep_poll_callback (1 samples, 0.02%)</title><rect x="5.0916%" y="421" width="0.0201%" height="15" fill="rgb(250,229,37)" fg:x="253" fg:w="1"/><text x="5.3416%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="5.0916%" y="405" width="0.0201%" height="15" fill="rgb(206,174,23)" fg:x="253" fg:w="1"/><text x="5.3416%" y="415.50"></text></g><g><title>__release_sock (6 samples, 0.12%)</title><rect x="5.0111%" y="517" width="0.1207%" height="15" fill="rgb(211,33,43)" fg:x="249" fg:w="6"/><text x="5.2611%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.12%)</title><rect x="5.0111%" y="501" width="0.1207%" height="15" fill="rgb(245,58,50)" fg:x="249" fg:w="6"/><text x="5.2611%" y="511.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.12%)</title><rect x="5.0111%" y="485" width="0.1207%" height="15" fill="rgb(244,68,36)" fg:x="249" fg:w="6"/><text x="5.2611%" y="495.50"></text></g><g><title>tcp_ack (1 samples, 0.02%)</title><rect x="5.1117%" y="469" width="0.0201%" height="15" fill="rgb(232,229,15)" fg:x="254" fg:w="1"/><text x="5.3617%" y="479.50"></text></g><g><title>__kfree_skb (1 samples, 0.02%)</title><rect x="5.1117%" y="453" width="0.0201%" height="15" fill="rgb(254,30,23)" fg:x="254" fg:w="1"/><text x="5.3617%" y="463.50"></text></g><g><title>kfree (1 samples, 0.02%)</title><rect x="5.1117%" y="437" width="0.0201%" height="15" fill="rgb(235,160,14)" fg:x="254" fg:w="1"/><text x="5.3617%" y="447.50"></text></g><g><title>release_sock (8 samples, 0.16%)</title><rect x="4.9909%" y="533" width="0.1610%" height="15" fill="rgb(212,155,44)" fg:x="248" fg:w="8"/><text x="5.2409%" y="543.50"></text></g><g><title>tcp_release_cb (1 samples, 0.02%)</title><rect x="5.1318%" y="517" width="0.0201%" height="15" fill="rgb(226,2,50)" fg:x="255" fg:w="1"/><text x="5.3818%" y="527.50"></text></g><g><title>__sk_dst_check (2 samples, 0.04%)</title><rect x="5.6953%" y="453" width="0.0402%" height="15" fill="rgb(234,177,6)" fg:x="283" fg:w="2"/><text x="5.9453%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="5.7154%" y="437" width="0.0201%" height="15" fill="rgb(217,24,9)" fg:x="284" fg:w="1"/><text x="5.9654%" y="447.50"></text></g><g><title>ip_send_check (6 samples, 0.12%)</title><rect x="5.7356%" y="421" width="0.1207%" height="15" fill="rgb(220,13,46)" fg:x="285" fg:w="6"/><text x="5.9856%" y="431.50"></text></g><g><title>__nf_conntrack_find_get (4 samples, 0.08%)</title><rect x="5.9368%" y="389" width="0.0805%" height="15" fill="rgb(239,221,27)" fg:x="295" fg:w="4"/><text x="6.1868%" y="399.50"></text></g><g><title>get_l4proto (3 samples, 0.06%)</title><rect x="6.0173%" y="389" width="0.0604%" height="15" fill="rgb(222,198,25)" fg:x="299" fg:w="3"/><text x="6.2673%" y="399.50"></text></g><g><title>hash_conntrack_raw (1 samples, 0.02%)</title><rect x="6.0777%" y="389" width="0.0201%" height="15" fill="rgb(211,99,13)" fg:x="302" fg:w="1"/><text x="6.3277%" y="399.50"></text></g><g><title>tcp_error (1 samples, 0.02%)</title><rect x="6.0978%" y="389" width="0.0201%" height="15" fill="rgb(232,111,31)" fg:x="303" fg:w="1"/><text x="6.3478%" y="399.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="6.2387%" y="373" width="0.0402%" height="15" fill="rgb(245,82,37)" fg:x="310" fg:w="2"/><text x="6.4887%" y="383.50"></text></g><g><title>nf_conntrack_in (24 samples, 0.48%)</title><rect x="5.8563%" y="405" width="0.4830%" height="15" fill="rgb(227,149,46)" fg:x="291" fg:w="24"/><text x="6.1063%" y="415.50"></text></g><g><title>tcp_packet (11 samples, 0.22%)</title><rect x="6.1179%" y="389" width="0.2214%" height="15" fill="rgb(218,36,50)" fg:x="304" fg:w="11"/><text x="6.3679%" y="399.50"></text></g><g><title>nf_ct_seq_offset (3 samples, 0.06%)</title><rect x="6.2789%" y="373" width="0.0604%" height="15" fill="rgb(226,80,48)" fg:x="312" fg:w="3"/><text x="6.5289%" y="383.50"></text></g><g><title>nf_nat_ipv4_local_fn (2 samples, 0.04%)</title><rect x="6.3393%" y="405" width="0.0402%" height="15" fill="rgb(238,224,15)" fg:x="315" fg:w="2"/><text x="6.5893%" y="415.50"></text></g><g><title>nf_nat_ipv4_fn (1 samples, 0.02%)</title><rect x="6.3594%" y="389" width="0.0201%" height="15" fill="rgb(241,136,10)" fg:x="316" fg:w="1"/><text x="6.6094%" y="399.50"></text></g><g><title>ip_local_out (34 samples, 0.68%)</title><rect x="5.7356%" y="453" width="0.6842%" height="15" fill="rgb(208,32,45)" fg:x="285" fg:w="34"/><text x="5.9856%" y="463.50"></text></g><g><title>__ip_local_out (34 samples, 0.68%)</title><rect x="5.7356%" y="437" width="0.6842%" height="15" fill="rgb(207,135,9)" fg:x="285" fg:w="34"/><text x="5.9856%" y="447.50"></text></g><g><title>nf_hook_slow (28 samples, 0.56%)</title><rect x="5.8563%" y="421" width="0.5635%" height="15" fill="rgb(206,86,44)" fg:x="291" fg:w="28"/><text x="6.1063%" y="431.50"></text></g><g><title>nft_do_chain_ipv4 (2 samples, 0.04%)</title><rect x="6.3796%" y="405" width="0.0402%" height="15" fill="rgb(245,177,15)" fg:x="317" fg:w="2"/><text x="6.6296%" y="415.50"></text></g><g><title>nft_do_chain (2 samples, 0.04%)</title><rect x="6.3796%" y="389" width="0.0402%" height="15" fill="rgb(206,64,50)" fg:x="317" fg:w="2"/><text x="6.6296%" y="399.50"></text></g><g><title>ip_finish_output (2 samples, 0.04%)</title><rect x="6.5003%" y="437" width="0.0402%" height="15" fill="rgb(234,36,40)" fg:x="323" fg:w="2"/><text x="6.7503%" y="447.50"></text></g><g><title>netif_rx_internal (3 samples, 0.06%)</title><rect x="6.8424%" y="373" width="0.0604%" height="15" fill="rgb(213,64,8)" fg:x="340" fg:w="3"/><text x="7.0924%" y="383.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="6.8625%" y="357" width="0.0402%" height="15" fill="rgb(210,75,36)" fg:x="341" fg:w="2"/><text x="7.1125%" y="367.50"></text></g><g><title>sk_free (1 samples, 0.02%)</title><rect x="6.9028%" y="373" width="0.0201%" height="15" fill="rgb(229,88,21)" fg:x="343" fg:w="1"/><text x="7.1528%" y="383.50"></text></g><g><title>refcount_sub_and_test_checked (1 samples, 0.02%)</title><rect x="6.9028%" y="357" width="0.0201%" height="15" fill="rgb(252,204,47)" fg:x="343" fg:w="1"/><text x="7.1528%" y="367.50"></text></g><g><title>dev_hard_start_xmit (13 samples, 0.26%)</title><rect x="6.7418%" y="405" width="0.2616%" height="15" fill="rgb(208,77,27)" fg:x="335" fg:w="13"/><text x="6.9918%" y="415.50"></text></g><g><title>loopback_xmit (11 samples, 0.22%)</title><rect x="6.7820%" y="389" width="0.2214%" height="15" fill="rgb(221,76,26)" fg:x="337" fg:w="11"/><text x="7.0320%" y="399.50"></text></g><g><title>tcp_wfree (4 samples, 0.08%)</title><rect x="6.9229%" y="373" width="0.0805%" height="15" fill="rgb(225,139,18)" fg:x="344" fg:w="4"/><text x="7.1729%" y="383.50"></text></g><g><title>refcount_sub_and_test_checked (2 samples, 0.04%)</title><rect x="6.9632%" y="357" width="0.0402%" height="15" fill="rgb(230,137,11)" fg:x="346" fg:w="2"/><text x="7.2132%" y="367.50"></text></g><g><title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="7.0034%" y="405" width="0.0201%" height="15" fill="rgb(212,28,1)" fg:x="348" fg:w="1"/><text x="7.2534%" y="415.50"></text></g><g><title>__dev_queue_xmit (27 samples, 0.54%)</title><rect x="6.6412%" y="421" width="0.5434%" height="15" fill="rgb(248,164,17)" fg:x="330" fg:w="27"/><text x="6.8912%" y="431.50"></text></g><g><title>validate_xmit_skb (8 samples, 0.16%)</title><rect x="7.0235%" y="405" width="0.1610%" height="15" fill="rgb(222,171,42)" fg:x="349" fg:w="8"/><text x="7.2735%" y="415.50"></text></g><g><title>netif_skb_features (5 samples, 0.10%)</title><rect x="7.0839%" y="389" width="0.1006%" height="15" fill="rgb(243,84,45)" fg:x="352" fg:w="5"/><text x="7.3339%" y="399.50"></text></g><g><title>skb_network_protocol (1 samples, 0.02%)</title><rect x="7.1644%" y="373" width="0.0201%" height="15" fill="rgb(252,49,23)" fg:x="356" fg:w="1"/><text x="7.4144%" y="383.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="7.4260%" y="341" width="0.0402%" height="15" fill="rgb(215,19,7)" fg:x="369" fg:w="2"/><text x="7.6760%" y="351.50"></text></g><g><title>raw_local_deliver (2 samples, 0.04%)</title><rect x="7.5870%" y="261" width="0.0402%" height="15" fill="rgb(238,81,41)" fg:x="377" fg:w="2"/><text x="7.8370%" y="271.50"></text></g><g><title>inet_ehashfn (2 samples, 0.04%)</title><rect x="7.9090%" y="229" width="0.0402%" height="15" fill="rgb(210,199,37)" fg:x="393" fg:w="2"/><text x="8.1590%" y="239.50"></text></g><g><title>__inet_lookup_established (9 samples, 0.18%)</title><rect x="7.8084%" y="245" width="0.1811%" height="15" fill="rgb(244,192,49)" fg:x="388" fg:w="9"/><text x="8.0584%" y="255.50"></text></g><g><title>refcount_inc_not_zero_checked (2 samples, 0.04%)</title><rect x="7.9493%" y="229" width="0.0402%" height="15" fill="rgb(226,211,11)" fg:x="395" fg:w="2"/><text x="8.1993%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="7.9895%" y="245" width="0.0201%" height="15" fill="rgb(236,162,54)" fg:x="397" fg:w="1"/><text x="8.2395%" y="255.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="8.0097%" y="229" width="0.0201%" height="15" fill="rgb(220,229,9)" fg:x="398" fg:w="1"/><text x="8.2597%" y="239.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="8.0097%" y="245" width="0.0402%" height="15" fill="rgb(250,87,22)" fg:x="398" fg:w="2"/><text x="8.2597%" y="255.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="8.0298%" y="229" width="0.0201%" height="15" fill="rgb(239,43,17)" fg:x="399" fg:w="1"/><text x="8.2798%" y="239.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="8.0700%" y="229" width="0.0402%" height="15" fill="rgb(231,177,25)" fg:x="401" fg:w="2"/><text x="8.3200%" y="239.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="8.1505%" y="213" width="0.0201%" height="15" fill="rgb(219,179,1)" fg:x="405" fg:w="1"/><text x="8.4005%" y="223.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="8.1707%" y="213" width="0.0201%" height="15" fill="rgb(238,219,53)" fg:x="406" fg:w="1"/><text x="8.4207%" y="223.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="8.1707%" y="197" width="0.0201%" height="15" fill="rgb(232,167,36)" fg:x="406" fg:w="1"/><text x="8.4207%" y="207.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="8.1707%" y="181" width="0.0201%" height="15" fill="rgb(244,19,51)" fg:x="406" fg:w="1"/><text x="8.4207%" y="191.50"></text></g><g><title>sk_reset_timer (3 samples, 0.06%)</title><rect x="8.1908%" y="213" width="0.0604%" height="15" fill="rgb(224,6,22)" fg:x="407" fg:w="3"/><text x="8.4408%" y="223.50"></text></g><g><title>mod_timer (1 samples, 0.02%)</title><rect x="8.2310%" y="197" width="0.0201%" height="15" fill="rgb(224,145,5)" fg:x="409" fg:w="1"/><text x="8.4810%" y="207.50"></text></g><g><title>kfree (1 samples, 0.02%)</title><rect x="8.4927%" y="181" width="0.0201%" height="15" fill="rgb(234,130,49)" fg:x="422" fg:w="1"/><text x="8.7427%" y="191.50"></text></g><g><title>__kfree_skb (4 samples, 0.08%)</title><rect x="8.4927%" y="197" width="0.0805%" height="15" fill="rgb(254,6,2)" fg:x="422" fg:w="4"/><text x="8.7427%" y="207.50"></text></g><g><title>skb_release_data (3 samples, 0.06%)</title><rect x="8.5128%" y="181" width="0.0604%" height="15" fill="rgb(208,96,46)" fg:x="423" fg:w="3"/><text x="8.7628%" y="191.50"></text></g><g><title>bictcp_acked (2 samples, 0.04%)</title><rect x="8.5732%" y="197" width="0.0402%" height="15" fill="rgb(239,3,39)" fg:x="426" fg:w="2"/><text x="8.8232%" y="207.50"></text></g><g><title>kfree_skbmem (1 samples, 0.02%)</title><rect x="8.6134%" y="197" width="0.0201%" height="15" fill="rgb(233,210,1)" fg:x="428" fg:w="1"/><text x="8.8634%" y="207.50"></text></g><g><title>kmem_cache_free (3 samples, 0.06%)</title><rect x="8.6335%" y="197" width="0.0604%" height="15" fill="rgb(244,137,37)" fg:x="429" fg:w="3"/><text x="8.8835%" y="207.50"></text></g><g><title>__slab_free (3 samples, 0.06%)</title><rect x="8.6335%" y="181" width="0.0604%" height="15" fill="rgb(240,136,2)" fg:x="429" fg:w="3"/><text x="8.8835%" y="191.50"></text></g><g><title>tcp_ack_update_rtt.isra.49 (3 samples, 0.06%)</title><rect x="8.6939%" y="197" width="0.0604%" height="15" fill="rgb(239,18,37)" fg:x="432" fg:w="3"/><text x="8.9439%" y="207.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="8.7543%" y="197" width="0.0201%" height="15" fill="rgb(218,185,22)" fg:x="435" fg:w="1"/><text x="9.0043%" y="207.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="8.7744%" y="197" width="0.0402%" height="15" fill="rgb(225,218,4)" fg:x="436" fg:w="2"/><text x="9.0244%" y="207.50"></text></g><g><title>tcp_ack (33 samples, 0.66%)</title><rect x="8.2512%" y="213" width="0.6641%" height="15" fill="rgb(230,182,32)" fg:x="410" fg:w="33"/><text x="8.5012%" y="223.50"></text></g><g><title>tcp_update_pacing_rate (5 samples, 0.10%)</title><rect x="8.8147%" y="197" width="0.1006%" height="15" fill="rgb(242,56,43)" fg:x="438" fg:w="5"/><text x="9.0647%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="9.3781%" y="101" width="0.0201%" height="15" fill="rgb(233,99,24)" fg:x="466" fg:w="1"/><text x="9.6281%" y="111.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="9.3983%" y="101" width="0.0201%" height="15" fill="rgb(234,209,42)" fg:x="467" fg:w="1"/><text x="9.6483%" y="111.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="9.3983%" y="85" width="0.0201%" height="15" fill="rgb(227,7,12)" fg:x="467" fg:w="1"/><text x="9.6483%" y="95.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="9.3983%" y="69" width="0.0201%" height="15" fill="rgb(245,203,43)" fg:x="467" fg:w="1"/><text x="9.6483%" y="79.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.08%)</title><rect x="9.4184%" y="101" width="0.0805%" height="15" fill="rgb(238,205,33)" fg:x="468" fg:w="4"/><text x="9.6684%" y="111.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="9.4989%" y="101" width="0.0201%" height="15" fill="rgb(231,56,7)" fg:x="472" fg:w="1"/><text x="9.7489%" y="111.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="9.4989%" y="85" width="0.0201%" height="15" fill="rgb(244,186,29)" fg:x="472" fg:w="1"/><text x="9.7489%" y="95.50"></text></g><g><title>__wake_up_common (20 samples, 0.40%)</title><rect x="9.1366%" y="133" width="0.4025%" height="15" fill="rgb(234,111,31)" fg:x="454" fg:w="20"/><text x="9.3866%" y="143.50"></text></g><g><title>try_to_wake_up (16 samples, 0.32%)</title><rect x="9.2171%" y="117" width="0.3220%" height="15" fill="rgb(241,149,10)" fg:x="458" fg:w="16"/><text x="9.4671%" y="127.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="9.5190%" y="101" width="0.0201%" height="15" fill="rgb(249,206,44)" fg:x="473" fg:w="1"/><text x="9.7690%" y="111.50"></text></g><g><title>sock_def_readable (33 samples, 0.66%)</title><rect x="9.0159%" y="197" width="0.6641%" height="15" fill="rgb(251,153,30)" fg:x="448" fg:w="33"/><text x="9.2659%" y="207.50"></text></g><g><title>__wake_up_common_lock (29 samples, 0.58%)</title><rect x="9.0964%" y="181" width="0.5836%" height="15" fill="rgb(239,152,38)" fg:x="452" fg:w="29"/><text x="9.3464%" y="191.50"></text></g><g><title>__wake_up_common (29 samples, 0.58%)</title><rect x="9.0964%" y="165" width="0.5836%" height="15" fill="rgb(249,139,47)" fg:x="452" fg:w="29"/><text x="9.3464%" y="175.50"></text></g><g><title>ep_poll_callback (29 samples, 0.58%)</title><rect x="9.0964%" y="149" width="0.5836%" height="15" fill="rgb(244,64,35)" fg:x="452" fg:w="29"/><text x="9.3464%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.14%)</title><rect x="9.5391%" y="133" width="0.1409%" height="15" fill="rgb(216,46,15)" fg:x="474" fg:w="7"/><text x="9.7891%" y="143.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="9.6800%" y="197" width="0.0201%" height="15" fill="rgb(250,74,19)" fg:x="481" fg:w="1"/><text x="9.9300%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (85 samples, 1.71%)</title><rect x="8.0499%" y="245" width="1.7106%" height="15" fill="rgb(249,42,33)" fg:x="400" fg:w="85"/><text x="8.2999%" y="255.50"></text></g><g><title>tcp_rcv_established (82 samples, 1.65%)</title><rect x="8.1103%" y="229" width="1.6502%" height="15" fill="rgb(242,149,17)" fg:x="403" fg:w="82"/><text x="8.3603%" y="239.50"></text></g><g><title>tcp_data_queue (42 samples, 0.85%)</title><rect x="8.9153%" y="213" width="0.8452%" height="15" fill="rgb(244,29,21)" fg:x="443" fg:w="42"/><text x="9.1653%" y="223.50"></text></g><g><title>tcp_queue_rcv (3 samples, 0.06%)</title><rect x="9.7001%" y="197" width="0.0604%" height="15" fill="rgb(220,130,37)" fg:x="482" fg:w="3"/><text x="9.9501%" y="207.50"></text></g><g><title>tcp_v4_fill_cb (3 samples, 0.06%)</title><rect x="9.7605%" y="245" width="0.0604%" height="15" fill="rgb(211,67,2)" fg:x="485" fg:w="3"/><text x="10.0105%" y="255.50"></text></g><g><title>ip_local_deliver_finish (114 samples, 2.29%)</title><rect x="7.5468%" y="277" width="2.2942%" height="15" fill="rgb(235,68,52)" fg:x="375" fg:w="114"/><text x="7.7968%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (110 samples, 2.21%)</title><rect x="7.6273%" y="261" width="2.2137%" height="15" fill="rgb(246,142,3)" fg:x="379" fg:w="110"/><text x="7.8773%" y="271.50">t..</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="9.8209%" y="245" width="0.0201%" height="15" fill="rgb(241,25,7)" fg:x="488" fg:w="1"/><text x="10.0709%" y="255.50"></text></g><g><title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="9.8209%" y="229" width="0.0201%" height="15" fill="rgb(242,119,39)" fg:x="488" fg:w="1"/><text x="10.0709%" y="239.50"></text></g><g><title>ipv4_confirm (3 samples, 0.06%)</title><rect x="9.8611%" y="261" width="0.0604%" height="15" fill="rgb(241,98,45)" fg:x="490" fg:w="3"/><text x="10.1111%" y="271.50"></text></g><g><title>nf_ct_deliver_cached_events (3 samples, 0.06%)</title><rect x="9.8611%" y="245" width="0.0604%" height="15" fill="rgb(254,28,30)" fg:x="490" fg:w="3"/><text x="10.1111%" y="255.50"></text></g><g><title>ipv4_helper (2 samples, 0.04%)</title><rect x="9.9215%" y="261" width="0.0402%" height="15" fill="rgb(241,142,54)" fg:x="493" fg:w="2"/><text x="10.1715%" y="271.50"></text></g><g><title>ip_local_deliver (123 samples, 2.48%)</title><rect x="7.5468%" y="293" width="2.4753%" height="15" fill="rgb(222,85,15)" fg:x="375" fg:w="123"/><text x="7.7968%" y="303.50">ip..</text></g><g><title>nf_hook_slow (9 samples, 0.18%)</title><rect x="9.8410%" y="277" width="0.1811%" height="15" fill="rgb(210,85,47)" fg:x="489" fg:w="9"/><text x="10.0910%" y="287.50"></text></g><g><title>nft_do_chain_ipv4 (3 samples, 0.06%)</title><rect x="9.9618%" y="261" width="0.0604%" height="15" fill="rgb(224,206,25)" fg:x="495" fg:w="3"/><text x="10.2118%" y="271.50"></text></g><g><title>nft_do_chain (1 samples, 0.02%)</title><rect x="10.0020%" y="245" width="0.0201%" height="15" fill="rgb(243,201,19)" fg:x="497" fg:w="1"/><text x="10.2520%" y="255.50"></text></g><g><title>ip_rcv_core.isra.19 (2 samples, 0.04%)</title><rect x="10.0221%" y="293" width="0.0402%" height="15" fill="rgb(236,59,4)" fg:x="498" fg:w="2"/><text x="10.2721%" y="303.50"></text></g><g><title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="10.0624%" y="293" width="0.0201%" height="15" fill="rgb(254,179,45)" fg:x="500" fg:w="1"/><text x="10.3124%" y="303.50"></text></g><g><title>ipv4_conntrack_defrag (1 samples, 0.02%)</title><rect x="10.2234%" y="277" width="0.0201%" height="15" fill="rgb(226,14,10)" fg:x="508" fg:w="1"/><text x="10.4734%" y="287.50"></text></g><g><title>net_rx_action (148 samples, 2.98%)</title><rect x="7.3254%" y="357" width="2.9785%" height="15" fill="rgb(244,27,41)" fg:x="364" fg:w="148"/><text x="7.5754%" y="367.50">net..</text></g><g><title>process_backlog (141 samples, 2.84%)</title><rect x="7.4663%" y="341" width="2.8376%" height="15" fill="rgb(235,35,32)" fg:x="371" fg:w="141"/><text x="7.7163%" y="351.50">pr..</text></g><g><title>__netif_receive_skb_one_core (140 samples, 2.82%)</title><rect x="7.4864%" y="325" width="2.8175%" height="15" fill="rgb(218,68,31)" fg:x="372" fg:w="140"/><text x="7.7364%" y="335.50">__..</text></g><g><title>ip_rcv (139 samples, 2.80%)</title><rect x="7.5065%" y="309" width="2.7973%" height="15" fill="rgb(207,120,37)" fg:x="373" fg:w="139"/><text x="7.7565%" y="319.50">ip..</text></g><g><title>nf_hook_slow (11 samples, 0.22%)</title><rect x="10.0825%" y="293" width="0.2214%" height="15" fill="rgb(227,98,0)" fg:x="501" fg:w="11"/><text x="10.3325%" y="303.50"></text></g><g><title>nf_nat_ipv4_in (3 samples, 0.06%)</title><rect x="10.2435%" y="277" width="0.0604%" height="15" fill="rgb(207,7,3)" fg:x="509" fg:w="3"/><text x="10.4935%" y="287.50"></text></g><g><title>nf_nat_packet (1 samples, 0.02%)</title><rect x="10.2838%" y="261" width="0.0201%" height="15" fill="rgb(206,98,19)" fg:x="511" fg:w="1"/><text x="10.5338%" y="271.50"></text></g><g><title>ip_finish_output2 (188 samples, 3.78%)</title><rect x="6.5406%" y="437" width="3.7835%" height="15" fill="rgb(217,5,26)" fg:x="325" fg:w="188"/><text x="6.7906%" y="447.50">ip_f..</text></g><g><title>__local_bh_enable_ip (156 samples, 3.14%)</title><rect x="7.1845%" y="421" width="3.1395%" height="15" fill="rgb(235,190,38)" fg:x="357" fg:w="156"/><text x="7.4345%" y="431.50">__l..</text></g><g><title>do_softirq.part.19 (155 samples, 3.12%)</title><rect x="7.2047%" y="405" width="3.1193%" height="15" fill="rgb(247,86,24)" fg:x="358" fg:w="155"/><text x="7.4547%" y="415.50">do_..</text></g><g><title>do_softirq_own_stack (155 samples, 3.12%)</title><rect x="7.2047%" y="389" width="3.1193%" height="15" fill="rgb(205,101,16)" fg:x="358" fg:w="155"/><text x="7.4547%" y="399.50">do_..</text></g><g><title>__softirqentry_text_start (154 samples, 3.10%)</title><rect x="7.2248%" y="373" width="3.0992%" height="15" fill="rgb(246,168,33)" fg:x="359" fg:w="154"/><text x="7.4748%" y="383.50">__s..</text></g><g><title>run_timer_softirq (1 samples, 0.02%)</title><rect x="10.3039%" y="357" width="0.0201%" height="15" fill="rgb(231,114,1)" fg:x="512" fg:w="1"/><text x="10.5539%" y="367.50"></text></g><g><title>ip_finish_output (1 samples, 0.02%)</title><rect x="10.3240%" y="437" width="0.0201%" height="15" fill="rgb(207,184,53)" fg:x="513" fg:w="1"/><text x="10.5740%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="10.3240%" y="421" width="0.0201%" height="15" fill="rgb(224,95,51)" fg:x="513" fg:w="1"/><text x="10.5740%" y="431.50"></text></g><g><title>ipv4_confirm (2 samples, 0.04%)</title><rect x="10.3844%" y="421" width="0.0402%" height="15" fill="rgb(212,188,45)" fg:x="516" fg:w="2"/><text x="10.6344%" y="431.50"></text></g><g><title>nf_ct_deliver_cached_events (2 samples, 0.04%)</title><rect x="10.3844%" y="405" width="0.0402%" height="15" fill="rgb(223,154,38)" fg:x="516" fg:w="2"/><text x="10.6344%" y="415.50"></text></g><g><title>ipv4_helper (1 samples, 0.02%)</title><rect x="10.4246%" y="421" width="0.0201%" height="15" fill="rgb(251,22,52)" fg:x="518" fg:w="1"/><text x="10.6746%" y="431.50"></text></g><g><title>__ip_queue_xmit (238 samples, 4.79%)</title><rect x="5.6752%" y="469" width="4.7897%" height="15" fill="rgb(229,209,22)" fg:x="282" fg:w="238"/><text x="5.9252%" y="479.50">__ip_q..</text></g><g><title>ip_output (201 samples, 4.05%)</title><rect x="6.4198%" y="453" width="4.0451%" height="15" fill="rgb(234,138,34)" fg:x="319" fg:w="201"/><text x="6.6698%" y="463.50">ip_o..</text></g><g><title>nf_hook_slow (6 samples, 0.12%)</title><rect x="10.3441%" y="437" width="0.1207%" height="15" fill="rgb(212,95,11)" fg:x="514" fg:w="6"/><text x="10.5941%" y="447.50"></text></g><g><title>nf_nat_ipv4_out (1 samples, 0.02%)</title><rect x="10.4448%" y="421" width="0.0201%" height="15" fill="rgb(240,179,47)" fg:x="519" fg:w="1"/><text x="10.6948%" y="431.50"></text></g><g><title>nf_nat_packet (1 samples, 0.02%)</title><rect x="10.4448%" y="405" width="0.0201%" height="15" fill="rgb(240,163,11)" fg:x="519" fg:w="1"/><text x="10.6948%" y="415.50"></text></g><g><title>__list_add_valid (1 samples, 0.02%)</title><rect x="10.4649%" y="469" width="0.0201%" height="15" fill="rgb(236,37,12)" fg:x="520" fg:w="1"/><text x="10.7149%" y="479.50"></text></g><g><title>__skb_clone (6 samples, 0.12%)</title><rect x="10.4850%" y="469" width="0.1207%" height="15" fill="rgb(232,164,16)" fg:x="521" fg:w="6"/><text x="10.7350%" y="479.50"></text></g><g><title>__copy_skb_header (4 samples, 0.08%)</title><rect x="10.5253%" y="453" width="0.0805%" height="15" fill="rgb(244,205,15)" fg:x="523" fg:w="4"/><text x="10.7753%" y="463.50"></text></g><g><title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="10.6058%" y="469" width="0.0402%" height="15" fill="rgb(223,117,47)" fg:x="527" fg:w="2"/><text x="10.8558%" y="479.50"></text></g><g><title>refcount_add_checked (2 samples, 0.04%)</title><rect x="10.6460%" y="469" width="0.0402%" height="15" fill="rgb(244,107,35)" fg:x="529" fg:w="2"/><text x="10.8960%" y="479.50"></text></g><g><title>refcount_add_not_zero_checked (2 samples, 0.04%)</title><rect x="10.6460%" y="453" width="0.0402%" height="15" fill="rgb(205,140,8)" fg:x="529" fg:w="2"/><text x="10.8960%" y="463.50"></text></g><g><title>skb_clone (2 samples, 0.04%)</title><rect x="10.6863%" y="469" width="0.0402%" height="15" fill="rgb(228,84,46)" fg:x="531" fg:w="2"/><text x="10.9363%" y="479.50"></text></g><g><title>tcp_established_options (1 samples, 0.02%)</title><rect x="10.7265%" y="469" width="0.0201%" height="15" fill="rgb(254,188,9)" fg:x="533" fg:w="1"/><text x="10.9765%" y="479.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="10.7466%" y="469" width="0.0201%" height="15" fill="rgb(206,112,54)" fg:x="534" fg:w="1"/><text x="10.9966%" y="479.50"></text></g><g><title>__tcp_transmit_skb (264 samples, 5.31%)</title><rect x="5.5142%" y="485" width="5.3129%" height="15" fill="rgb(216,84,49)" fg:x="274" fg:w="264"/><text x="5.7642%" y="495.50">__tcp_t..</text></g><g><title>tcp_v4_send_check (3 samples, 0.06%)</title><rect x="10.7668%" y="469" width="0.0604%" height="15" fill="rgb(214,194,35)" fg:x="535" fg:w="3"/><text x="11.0168%" y="479.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="10.8271%" y="485" width="0.0402%" height="15" fill="rgb(249,28,3)" fg:x="538" fg:w="2"/><text x="11.0771%" y="495.50"></text></g><g><title>sched_clock (2 samples, 0.04%)</title><rect x="10.8271%" y="469" width="0.0402%" height="15" fill="rgb(222,56,52)" fg:x="538" fg:w="2"/><text x="11.0771%" y="479.50"></text></g><g><title>native_sched_clock (2 samples, 0.04%)</title><rect x="10.8271%" y="453" width="0.0402%" height="15" fill="rgb(245,217,50)" fg:x="538" fg:w="2"/><text x="11.0771%" y="463.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="10.8674%" y="469" width="0.0201%" height="15" fill="rgb(213,201,24)" fg:x="540" fg:w="1"/><text x="11.1174%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (278 samples, 5.59%)</title><rect x="5.3129%" y="517" width="5.5947%" height="15" fill="rgb(248,116,28)" fg:x="264" fg:w="278"/><text x="5.5629%" y="527.50">__tcp_p..</text></g><g><title>tcp_write_xmit (278 samples, 5.59%)</title><rect x="5.3129%" y="501" width="5.5947%" height="15" fill="rgb(219,72,43)" fg:x="264" fg:w="278"/><text x="5.5629%" y="511.50">tcp_wri..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="10.8674%" y="485" width="0.0402%" height="15" fill="rgb(209,138,14)" fg:x="540" fg:w="2"/><text x="11.1174%" y="495.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="10.8875%" y="469" width="0.0201%" height="15" fill="rgb(222,18,33)" fg:x="541" fg:w="1"/><text x="11.1375%" y="479.50"></text></g><g><title>copyin (3 samples, 0.06%)</title><rect x="10.9076%" y="501" width="0.0604%" height="15" fill="rgb(213,199,7)" fg:x="542" fg:w="3"/><text x="11.1576%" y="511.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.06%)</title><rect x="10.9076%" y="485" width="0.0604%" height="15" fill="rgb(250,110,10)" fg:x="542" fg:w="3"/><text x="11.1576%" y="495.50"></text></g><g><title>_copy_from_iter_full (4 samples, 0.08%)</title><rect x="10.9076%" y="517" width="0.0805%" height="15" fill="rgb(248,123,6)" fg:x="542" fg:w="4"/><text x="11.1576%" y="527.50"></text></g><g><title>iov_iter_advance (1 samples, 0.02%)</title><rect x="10.9680%" y="501" width="0.0201%" height="15" fill="rgb(206,91,31)" fg:x="545" fg:w="1"/><text x="11.2180%" y="511.50"></text></g><g><title>__kmalloc_reserve.isra.49 (8 samples, 0.16%)</title><rect x="11.1089%" y="485" width="0.1610%" height="15" fill="rgb(211,154,13)" fg:x="552" fg:w="8"/><text x="11.3589%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (7 samples, 0.14%)</title><rect x="11.1290%" y="469" width="0.1409%" height="15" fill="rgb(225,148,7)" fg:x="553" fg:w="7"/><text x="11.3790%" y="479.50"></text></g><g><title>_cond_resched (1 samples, 0.02%)</title><rect x="11.2497%" y="453" width="0.0201%" height="15" fill="rgb(220,160,43)" fg:x="559" fg:w="1"/><text x="11.4997%" y="463.50"></text></g><g><title>rcu_all_qs (1 samples, 0.02%)</title><rect x="11.2497%" y="437" width="0.0201%" height="15" fill="rgb(213,52,39)" fg:x="559" fg:w="1"/><text x="11.4997%" y="447.50"></text></g><g><title>kmem_cache_alloc_node (5 samples, 0.10%)</title><rect x="11.2699%" y="485" width="0.1006%" height="15" fill="rgb(243,137,7)" fg:x="560" fg:w="5"/><text x="11.5199%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (29 samples, 0.58%)</title><rect x="10.9881%" y="517" width="0.5836%" height="15" fill="rgb(230,79,13)" fg:x="546" fg:w="29"/><text x="11.2381%" y="527.50"></text></g><g><title>__alloc_skb (27 samples, 0.54%)</title><rect x="11.0284%" y="501" width="0.5434%" height="15" fill="rgb(247,105,23)" fg:x="548" fg:w="27"/><text x="11.2784%" y="511.50"></text></g><g><title>ksize (10 samples, 0.20%)</title><rect x="11.3705%" y="485" width="0.2012%" height="15" fill="rgb(223,179,41)" fg:x="565" fg:w="10"/><text x="11.6205%" y="495.50"></text></g><g><title>skb_entail (1 samples, 0.02%)</title><rect x="11.5717%" y="517" width="0.0201%" height="15" fill="rgb(218,9,34)" fg:x="575" fg:w="1"/><text x="11.8217%" y="527.50"></text></g><g><title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="11.5717%" y="501" width="0.0201%" height="15" fill="rgb(222,106,8)" fg:x="575" fg:w="1"/><text x="11.8217%" y="511.50"></text></g><g><title>skb_put (2 samples, 0.04%)</title><rect x="11.5919%" y="517" width="0.0402%" height="15" fill="rgb(211,220,0)" fg:x="576" fg:w="2"/><text x="11.8419%" y="527.50"></text></g><g><title>tcp_push (2 samples, 0.04%)</title><rect x="11.6321%" y="517" width="0.0402%" height="15" fill="rgb(229,52,16)" fg:x="578" fg:w="2"/><text x="11.8821%" y="527.50"></text></g><g><title>tcp_rate_check_app_limited (3 samples, 0.06%)</title><rect x="11.6724%" y="517" width="0.0604%" height="15" fill="rgb(212,155,18)" fg:x="580" fg:w="3"/><text x="11.9224%" y="527.50"></text></g><g><title>tcp_send_mss (7 samples, 0.14%)</title><rect x="11.7327%" y="517" width="0.1409%" height="15" fill="rgb(242,21,14)" fg:x="583" fg:w="7"/><text x="11.9827%" y="527.50"></text></g><g><title>tcp_current_mss (7 samples, 0.14%)</title><rect x="11.7327%" y="501" width="0.1409%" height="15" fill="rgb(222,19,48)" fg:x="583" fg:w="7"/><text x="11.9827%" y="511.50"></text></g><g><title>ipv4_mtu (3 samples, 0.06%)</title><rect x="11.8132%" y="485" width="0.0604%" height="15" fill="rgb(232,45,27)" fg:x="587" fg:w="3"/><text x="12.0632%" y="495.50"></text></g><g><title>do_iter_readv_writev (359 samples, 7.22%)</title><rect x="4.6689%" y="597" width="7.2248%" height="15" fill="rgb(249,103,42)" fg:x="232" fg:w="359"/><text x="4.9189%" y="607.50">do_iter_re..</text></g><g><title>sock_write_iter (356 samples, 7.16%)</title><rect x="4.7293%" y="581" width="7.1644%" height="15" fill="rgb(246,81,33)" fg:x="235" fg:w="356"/><text x="4.9793%" y="591.50">sock_write..</text></g><g><title>sock_sendmsg (356 samples, 7.16%)</title><rect x="4.7293%" y="565" width="7.1644%" height="15" fill="rgb(252,33,42)" fg:x="235" fg:w="356"/><text x="4.9793%" y="575.50">sock_sendm..</text></g><g><title>tcp_sendmsg (348 samples, 7.00%)</title><rect x="4.8903%" y="549" width="7.0034%" height="15" fill="rgb(209,212,41)" fg:x="243" fg:w="348"/><text x="5.1403%" y="559.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (335 samples, 6.74%)</title><rect x="5.1519%" y="533" width="6.7418%" height="15" fill="rgb(207,154,6)" fg:x="256" fg:w="335"/><text x="5.4019%" y="543.50">tcp_sendm..</text></g><g><title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="11.8736%" y="517" width="0.0201%" height="15" fill="rgb(223,64,47)" fg:x="590" fg:w="1"/><text x="12.1236%" y="527.50"></text></g><g><title>fsnotify (1 samples, 0.02%)</title><rect x="11.8937%" y="597" width="0.0201%" height="15" fill="rgb(211,161,38)" fg:x="591" fg:w="1"/><text x="12.1437%" y="607.50"></text></g><g><title>rw_verify_area (3 samples, 0.06%)</title><rect x="11.9139%" y="597" width="0.0604%" height="15" fill="rgb(219,138,40)" fg:x="592" fg:w="3"/><text x="12.1639%" y="607.50"></text></g><g><title>do_iter_write (374 samples, 7.53%)</title><rect x="4.5683%" y="613" width="7.5267%" height="15" fill="rgb(241,228,46)" fg:x="227" fg:w="374"/><text x="4.8183%" y="623.50">do_iter_wr..</text></g><g><title>security_file_permission (6 samples, 0.12%)</title><rect x="11.9742%" y="597" width="0.1207%" height="15" fill="rgb(223,209,38)" fg:x="595" fg:w="6"/><text x="12.2242%" y="607.50"></text></g><g><title>common_file_perm (3 samples, 0.06%)</title><rect x="12.0346%" y="581" width="0.0604%" height="15" fill="rgb(236,164,45)" fg:x="598" fg:w="3"/><text x="12.2846%" y="591.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (418 samples, 8.41%)</title><rect x="3.8438%" y="949" width="8.4122%" height="15" fill="rgb(231,15,5)" fg:x="191" fg:w="418"/><text x="4.0938%" y="959.50">&lt;tokio_util:..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (418 samples, 8.41%)</title><rect x="3.8438%" y="933" width="8.4122%" height="15" fill="rgb(252,35,15)" fg:x="191" fg:w="418"/><text x="4.0938%" y="943.50">&lt;tokio_util:..</text></g><g><title>tokio_util::util::poll_write_buf (417 samples, 8.39%)</title><rect x="3.8640%" y="917" width="8.3920%" height="15" fill="rgb(248,181,18)" fg:x="192" fg:w="417"/><text x="4.1140%" y="927.50">tokio_util::..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (412 samples, 8.29%)</title><rect x="3.9646%" y="901" width="8.2914%" height="15" fill="rgb(233,39,42)" fg:x="197" fg:w="412"/><text x="4.2146%" y="911.50">&lt;tokio::net:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (411 samples, 8.27%)</title><rect x="3.9847%" y="885" width="8.2713%" height="15" fill="rgb(238,110,33)" fg:x="198" fg:w="411"/><text x="4.2347%" y="895.50">tokio::net::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (411 samples, 8.27%)</title><rect x="3.9847%" y="869" width="8.2713%" height="15" fill="rgb(233,195,10)" fg:x="198" fg:w="411"/><text x="4.2347%" y="879.50">tokio::io::p..</text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (411 samples, 8.27%)</title><rect x="3.9847%" y="853" width="8.2713%" height="15" fill="rgb(254,105,3)" fg:x="198" fg:w="411"/><text x="4.2347%" y="863.50">tokio::io::d..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (409 samples, 8.23%)</title><rect x="4.0250%" y="837" width="8.2310%" height="15" fill="rgb(221,225,9)" fg:x="200" fg:w="409"/><text x="4.2750%" y="847.50">tokio::io::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (401 samples, 8.07%)</title><rect x="4.1860%" y="821" width="8.0700%" height="15" fill="rgb(224,227,45)" fg:x="208" fg:w="401"/><text x="4.4360%" y="831.50">tokio::io::..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (401 samples, 8.07%)</title><rect x="4.1860%" y="805" width="8.0700%" height="15" fill="rgb(229,198,43)" fg:x="208" fg:w="401"/><text x="4.4360%" y="815.50">&lt;&amp;mio::net:..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (400 samples, 8.05%)</title><rect x="4.2061%" y="789" width="8.0499%" height="15" fill="rgb(206,209,35)" fg:x="209" fg:w="400"/><text x="4.4561%" y="799.50">mio::io_sou..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (400 samples, 8.05%)</title><rect x="4.2061%" y="773" width="8.0499%" height="15" fill="rgb(245,195,53)" fg:x="209" fg:w="400"/><text x="4.4561%" y="783.50">mio::sys::u..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (400 samples, 8.05%)</title><rect x="4.2061%" y="757" width="8.0499%" height="15" fill="rgb(240,92,26)" fg:x="209" fg:w="400"/><text x="4.4561%" y="767.50">&lt;&amp;mio::net:..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (400 samples, 8.05%)</title><rect x="4.2061%" y="741" width="8.0499%" height="15" fill="rgb(207,40,23)" fg:x="209" fg:w="400"/><text x="4.4561%" y="751.50">&lt;&amp;std::fs::..</text></g><g><title>std::sys::unix::fs::File::write_vectored (400 samples, 8.05%)</title><rect x="4.2061%" y="725" width="8.0499%" height="15" fill="rgb(223,111,35)" fg:x="209" fg:w="400"/><text x="4.4561%" y="735.50">std::sys::u..</text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (400 samples, 8.05%)</title><rect x="4.2061%" y="709" width="8.0499%" height="15" fill="rgb(229,147,28)" fg:x="209" fg:w="400"/><text x="4.4561%" y="719.50">std::sys::u..</text></g><g><title>writev (400 samples, 8.05%)</title><rect x="4.2061%" y="693" width="8.0499%" height="15" fill="rgb(211,29,28)" fg:x="209" fg:w="400"/><text x="4.4561%" y="703.50">writev</text></g><g><title>entry_SYSCALL_64_after_hwframe (398 samples, 8.01%)</title><rect x="4.2463%" y="677" width="8.0097%" height="15" fill="rgb(228,72,33)" fg:x="211" fg:w="398"/><text x="4.4963%" y="687.50">entry_SYSCA..</text></g><g><title>do_syscall_64 (398 samples, 8.01%)</title><rect x="4.2463%" y="661" width="8.0097%" height="15" fill="rgb(205,214,31)" fg:x="211" fg:w="398"/><text x="4.4963%" y="671.50">do_syscall_..</text></g><g><title>do_writev (397 samples, 7.99%)</title><rect x="4.2665%" y="645" width="7.9895%" height="15" fill="rgb(224,111,15)" fg:x="212" fg:w="397"/><text x="4.5165%" y="655.50">do_writev</text></g><g><title>vfs_writev (385 samples, 7.75%)</title><rect x="4.5079%" y="629" width="7.7480%" height="15" fill="rgb(253,21,26)" fg:x="224" fg:w="385"/><text x="4.7579%" y="639.50">vfs_writev</text></g><g><title>import_iovec (8 samples, 0.16%)</title><rect x="12.0950%" y="613" width="0.1610%" height="15" fill="rgb(245,139,43)" fg:x="601" fg:w="8"/><text x="12.3450%" y="623.50"></text></g><g><title>rw_copy_check_uvector (6 samples, 0.12%)</title><rect x="12.1352%" y="597" width="0.1207%" height="15" fill="rgb(252,170,7)" fg:x="603" fg:w="6"/><text x="12.3852%" y="607.50"></text></g><g><title>_copy_from_user (6 samples, 0.12%)</title><rect x="12.1352%" y="581" width="0.1207%" height="15" fill="rgb(231,118,14)" fg:x="603" fg:w="6"/><text x="12.3852%" y="591.50"></text></g><g><title>copy_user_generic_string (4 samples, 0.08%)</title><rect x="12.1755%" y="565" width="0.0805%" height="15" fill="rgb(238,83,0)" fg:x="605" fg:w="4"/><text x="12.4255%" y="575.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="12.2560%" y="869" width="0.0201%" height="15" fill="rgb(221,39,39)" fg:x="609" fg:w="1"/><text x="12.5060%" y="879.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="12.2761%" y="869" width="0.0402%" height="15" fill="rgb(222,119,46)" fg:x="610" fg:w="2"/><text x="12.5261%" y="879.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="12.3164%" y="805" width="0.0805%" height="15" fill="rgb(222,165,49)" fg:x="612" fg:w="4"/><text x="12.5664%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (5 samples, 0.10%)</title><rect x="12.3164%" y="869" width="0.1006%" height="15" fill="rgb(219,113,52)" fg:x="612" fg:w="5"/><text x="12.5664%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;redis_protocol::types::Frame&gt;&gt; (5 samples, 0.10%)</title><rect x="12.3164%" y="853" width="0.1006%" height="15" fill="rgb(214,7,15)" fg:x="612" fg:w="5"/><text x="12.5664%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="12.3164%" y="837" width="0.1006%" height="15" fill="rgb(235,32,4)" fg:x="612" fg:w="5"/><text x="12.5664%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[redis_protocol::types::Frame]&gt; (5 samples, 0.10%)</title><rect x="12.3164%" y="821" width="0.1006%" height="15" fill="rgb(238,90,54)" fg:x="612" fg:w="5"/><text x="12.5664%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (1 samples, 0.02%)</title><rect x="12.3969%" y="805" width="0.0201%" height="15" fill="rgb(213,208,19)" fg:x="616" fg:w="1"/><text x="12.6469%" y="815.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (2 samples, 0.04%)</title><rect x="12.4371%" y="853" width="0.0402%" height="15" fill="rgb(233,156,4)" fg:x="618" fg:w="2"/><text x="12.6871%" y="863.50"></text></g><g><title>redis_protocol::encode::gen_array (1 samples, 0.02%)</title><rect x="12.4572%" y="837" width="0.0201%" height="15" fill="rgb(207,194,5)" fg:x="619" fg:w="1"/><text x="12.7072%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (1 samples, 0.02%)</title><rect x="12.4774%" y="837" width="0.0201%" height="15" fill="rgb(206,111,30)" fg:x="620" fg:w="1"/><text x="12.7274%" y="847.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}}::_{{closure}}::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1253" width="9.2373%" height="15" fill="rgb(243,70,54)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1263.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1237" width="9.2373%" height="15" fill="rgb(242,28,8)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1247.50">&lt;core::future..</text></g><g><title>fred::multiplexer::commands::handle_command_t::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1221" width="9.2373%" height="15" fill="rgb(219,106,18)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1231.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1205" width="9.2373%" height="15" fill="rgb(244,222,10)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1215.50">&lt;core::future..</text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1189" width="9.2373%" height="15" fill="rgb(236,179,52)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1199.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1173" width="9.2373%" height="15" fill="rgb(213,23,39)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1183.50">&lt;core::future..</text></g><g><title>fred::multiplexer::commands::write_command_t::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1157" width="9.2373%" height="15" fill="rgb(238,48,10)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1167.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1141" width="9.2373%" height="15" fill="rgb(251,196,23)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1151.50">&lt;core::future..</text></g><g><title>fred::multiplexer::commands::write_command::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1125" width="9.2373%" height="15" fill="rgb(250,152,24)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1135.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1109" width="9.2373%" height="15" fill="rgb(209,150,17)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1119.50">&lt;core::future..</text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1093" width="9.2373%" height="15" fill="rgb(234,202,34)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1103.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1077" width="9.2373%" height="15" fill="rgb(253,148,53)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1087.50">&lt;core::future..</text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1061" width="9.2373%" height="15" fill="rgb(218,129,16)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1071.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1045" width="9.2373%" height="15" fill="rgb(216,85,19)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1055.50">&lt;core::future..</text></g><g><title>fred::multiplexer::utils::write_command::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="1029" width="9.2373%" height="15" fill="rgb(235,228,7)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1039.50">fred::multipl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 9.24%)</title><rect x="3.2803%" y="1013" width="9.2373%" height="15" fill="rgb(245,175,0)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1023.50">&lt;core::future..</text></g><g><title>fred::protocol::connection::write_command::_{{closure}} (459 samples, 9.24%)</title><rect x="3.2803%" y="997" width="9.2373%" height="15" fill="rgb(208,168,36)" fg:x="163" fg:w="459"/><text x="3.5303%" y="1007.50">fred::protoco..</text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (433 samples, 8.71%)</title><rect x="3.8036%" y="981" width="8.7140%" height="15" fill="rgb(246,171,24)" fg:x="189" fg:w="433"/><text x="4.0536%" y="991.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (431 samples, 8.67%)</title><rect x="3.8438%" y="965" width="8.6738%" height="15" fill="rgb(215,142,24)" fg:x="191" fg:w="431"/><text x="4.0938%" y="975.50">&lt;futures_uti..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (13 samples, 0.26%)</title><rect x="12.2560%" y="949" width="0.2616%" height="15" fill="rgb(250,187,7)" fg:x="609" fg:w="13"/><text x="12.5060%" y="959.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (13 samples, 0.26%)</title><rect x="12.2560%" y="933" width="0.2616%" height="15" fill="rgb(228,66,33)" fg:x="609" fg:w="13"/><text x="12.5060%" y="943.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (13 samples, 0.26%)</title><rect x="12.2560%" y="917" width="0.2616%" height="15" fill="rgb(234,215,21)" fg:x="609" fg:w="13"/><text x="12.5060%" y="927.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (13 samples, 0.26%)</title><rect x="12.2560%" y="901" width="0.2616%" height="15" fill="rgb(222,191,20)" fg:x="609" fg:w="13"/><text x="12.5060%" y="911.50"></text></g><g><title>fred::protocol::codec::encode_frame (13 samples, 0.26%)</title><rect x="12.2560%" y="885" width="0.2616%" height="15" fill="rgb(245,79,54)" fg:x="609" fg:w="13"/><text x="12.5060%" y="895.50"></text></g><g><title>redis_protocol::encode::encode_bytes (5 samples, 0.10%)</title><rect x="12.4170%" y="869" width="0.1006%" height="15" fill="rgb(240,10,37)" fg:x="617" fg:w="5"/><text x="12.6670%" y="879.50"></text></g><g><title>redis_protocol::utils::zero_extend (2 samples, 0.04%)</title><rect x="12.4774%" y="853" width="0.0402%" height="15" fill="rgb(214,192,32)" fg:x="620" fg:w="2"/><text x="12.7274%" y="863.50"></text></g><g><title>log::max_level (1 samples, 0.02%)</title><rect x="12.4975%" y="837" width="0.0201%" height="15" fill="rgb(209,36,54)" fg:x="621" fg:w="1"/><text x="12.7475%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="12.4975%" y="821" width="0.0201%" height="15" fill="rgb(220,10,11)" fg:x="621" fg:w="1"/><text x="12.7475%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="12.4975%" y="805" width="0.0201%" height="15" fill="rgb(221,106,17)" fg:x="621" fg:w="1"/><text x="12.7475%" y="815.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="12.6384%" y="901" width="0.1207%" height="15" fill="rgb(251,142,44)" fg:x="628" fg:w="6"/><text x="12.8884%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="12.9000%" y="885" width="0.0604%" height="15" fill="rgb(238,13,15)" fg:x="641" fg:w="3"/><text x="13.1500%" y="895.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="12.9604%" y="885" width="0.0805%" height="15" fill="rgb(208,107,27)" fg:x="644" fg:w="4"/><text x="13.2104%" y="895.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (26 samples, 0.52%)</title><rect x="12.5780%" y="933" width="0.5232%" height="15" fill="rgb(205,136,37)" fg:x="625" fg:w="26"/><text x="12.8280%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.52%)</title><rect x="12.5780%" y="917" width="0.5232%" height="15" fill="rgb(250,205,27)" fg:x="625" fg:w="26"/><text x="12.8280%" y="927.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (17 samples, 0.34%)</title><rect x="12.7591%" y="901" width="0.3421%" height="15" fill="rgb(210,80,43)" fg:x="634" fg:w="17"/><text x="13.0091%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::responses::process_centralized_frame::{{closure}}&gt;&gt; (3 samples, 0.06%)</title><rect x="13.0409%" y="885" width="0.0604%" height="15" fill="rgb(247,160,36)" fg:x="648" fg:w="3"/><text x="13.2909%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::responses::process_centralized_frame::{{closure}}&gt; (3 samples, 0.06%)</title><rect x="13.0409%" y="869" width="0.0604%" height="15" fill="rgb(234,13,49)" fg:x="648" fg:w="3"/><text x="13.2909%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.04%)</title><rect x="13.2220%" y="869" width="0.0402%" height="15" fill="rgb(234,122,0)" fg:x="657" fg:w="2"/><text x="13.4720%" y="879.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="13.2421%" y="853" width="0.0201%" height="15" fill="rgb(207,146,38)" fg:x="658" fg:w="1"/><text x="13.4921%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.04%)</title><rect x="13.4031%" y="837" width="0.0402%" height="15" fill="rgb(207,177,25)" fg:x="666" fg:w="2"/><text x="13.6531%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.02%)</title><rect x="13.4433%" y="821" width="0.0201%" height="15" fill="rgb(211,178,42)" fg:x="668" fg:w="1"/><text x="13.6933%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.04%)</title><rect x="13.4433%" y="837" width="0.0402%" height="15" fill="rgb(230,69,54)" fg:x="668" fg:w="2"/><text x="13.6933%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (1 samples, 0.02%)</title><rect x="13.4635%" y="821" width="0.0201%" height="15" fill="rgb(214,135,41)" fg:x="669" fg:w="1"/><text x="13.7135%" y="831.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.02%)</title><rect x="13.4635%" y="805" width="0.0201%" height="15" fill="rgb(237,67,25)" fg:x="669" fg:w="1"/><text x="13.7135%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (2 samples, 0.04%)</title><rect x="13.4836%" y="805" width="0.0402%" height="15" fill="rgb(222,189,50)" fg:x="670" fg:w="2"/><text x="13.7336%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (3 samples, 0.06%)</title><rect x="13.4836%" y="837" width="0.0604%" height="15" fill="rgb(245,148,34)" fg:x="670" fg:w="3"/><text x="13.7336%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="13.4836%" y="821" width="0.0604%" height="15" fill="rgb(222,29,6)" fg:x="670" fg:w="3"/><text x="13.7336%" y="831.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.02%)</title><rect x="13.5238%" y="805" width="0.0201%" height="15" fill="rgb(221,189,43)" fg:x="672" fg:w="1"/><text x="13.7738%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::SizeStats&gt;&gt; (3 samples, 0.06%)</title><rect x="13.5440%" y="837" width="0.0604%" height="15" fill="rgb(207,36,27)" fg:x="673" fg:w="3"/><text x="13.7940%" y="847.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="13.5440%" y="821" width="0.0604%" height="15" fill="rgb(217,90,24)" fg:x="673" fg:w="3"/><text x="13.7940%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (3 samples, 0.06%)</title><rect x="13.5440%" y="805" width="0.0604%" height="15" fill="rgb(224,66,35)" fg:x="673" fg:w="3"/><text x="13.7940%" y="815.50"></text></g><g><title>fred::metrics::SizeStats::sample (6 samples, 0.12%)</title><rect x="13.6043%" y="837" width="0.1207%" height="15" fill="rgb(221,13,50)" fg:x="676" fg:w="6"/><text x="13.8543%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.02%)</title><rect x="13.7050%" y="821" width="0.0201%" height="15" fill="rgb(236,68,49)" fg:x="681" fg:w="1"/><text x="13.9550%" y="831.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2 samples, 0.04%)</title><rect x="13.7251%" y="837" width="0.0402%" height="15" fill="rgb(229,146,28)" fg:x="682" fg:w="2"/><text x="13.9751%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2 samples, 0.04%)</title><rect x="13.7251%" y="821" width="0.0402%" height="15" fill="rgb(225,31,38)" fg:x="682" fg:w="2"/><text x="13.9751%" y="831.50"></text></g><g><title>redis_protocol::decode::frame_type (4 samples, 0.08%)</title><rect x="13.9263%" y="789" width="0.0805%" height="15" fill="rgb(250,208,3)" fg:x="692" fg:w="4"/><text x="14.1763%" y="799.50"></text></g><g><title>core::str::converts::from_utf8 (7 samples, 0.14%)</title><rect x="14.0672%" y="757" width="0.1409%" height="15" fill="rgb(246,54,23)" fg:x="699" fg:w="7"/><text x="14.3172%" y="767.50"></text></g><g><title>core::str::validations::run_utf8_validation (7 samples, 0.14%)</title><rect x="14.0672%" y="741" width="0.1409%" height="15" fill="rgb(243,76,11)" fg:x="699" fg:w="7"/><text x="14.3172%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="14.2886%" y="725" width="0.0201%" height="15" fill="rgb(245,21,50)" fg:x="710" fg:w="1"/><text x="14.5386%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="14.2886%" y="709" width="0.0201%" height="15" fill="rgb(228,9,43)" fg:x="710" fg:w="1"/><text x="14.5386%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="14.2886%" y="693" width="0.0201%" height="15" fill="rgb(208,100,47)" fg:x="710" fg:w="1"/><text x="14.5386%" y="703.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="14.2886%" y="677" width="0.0201%" height="15" fill="rgb(232,26,8)" fg:x="710" fg:w="1"/><text x="14.5386%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="14.3087%" y="725" width="0.0201%" height="15" fill="rgb(216,166,38)" fg:x="711" fg:w="1"/><text x="14.5587%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="14.3087%" y="709" width="0.0201%" height="15" fill="rgb(251,202,51)" fg:x="711" fg:w="1"/><text x="14.5587%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.04%)</title><rect x="14.3288%" y="677" width="0.0402%" height="15" fill="rgb(254,216,34)" fg:x="712" fg:w="2"/><text x="14.5788%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="14.3288%" y="661" width="0.0402%" height="15" fill="rgb(251,32,27)" fg:x="712" fg:w="2"/><text x="14.5788%" y="671.50"></text></g><g><title>memchr::memchr::x86::avx::forward_search1 (1 samples, 0.02%)</title><rect x="14.4295%" y="661" width="0.0201%" height="15" fill="rgb(208,127,28)" fg:x="717" fg:w="1"/><text x="14.6795%" y="671.50"></text></g><g><title>redis_protocol::decode::read_to_crlf_s (25 samples, 0.50%)</title><rect x="14.0068%" y="773" width="0.5031%" height="15" fill="rgb(224,137,22)" fg:x="696" fg:w="25"/><text x="14.2568%" y="783.50"></text></g><g><title>redis_protocol::decode::read_to_crlf (15 samples, 0.30%)</title><rect x="14.2081%" y="757" width="0.3019%" height="15" fill="rgb(254,70,32)" fg:x="706" fg:w="15"/><text x="14.4581%" y="767.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::FindSubstring&lt;&amp;[u8]&gt;&gt;::find_substring (14 samples, 0.28%)</title><rect x="14.2282%" y="741" width="0.2817%" height="15" fill="rgb(229,75,37)" fg:x="707" fg:w="14"/><text x="14.4782%" y="751.50"></text></g><g><title>memchr::memchr::memchr (9 samples, 0.18%)</title><rect x="14.3288%" y="725" width="0.1811%" height="15" fill="rgb(252,64,23)" fg:x="712" fg:w="9"/><text x="14.5788%" y="735.50"></text></g><g><title>memchr::memchr::memchr::imp (9 samples, 0.18%)</title><rect x="14.3288%" y="709" width="0.1811%" height="15" fill="rgb(232,162,48)" fg:x="712" fg:w="9"/><text x="14.5788%" y="719.50"></text></g><g><title>memchr::memchr::x86::memchr (9 samples, 0.18%)</title><rect x="14.3288%" y="693" width="0.1811%" height="15" fill="rgb(246,160,12)" fg:x="712" fg:w="9"/><text x="14.5788%" y="703.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (7 samples, 0.14%)</title><rect x="14.3691%" y="677" width="0.1409%" height="15" fill="rgb(247,166,0)" fg:x="714" fg:w="7"/><text x="14.6191%" y="687.50"></text></g><g><title>memchr::memchr::x86::sse2::memchr (3 samples, 0.06%)</title><rect x="14.4496%" y="661" width="0.0604%" height="15" fill="rgb(249,219,21)" fg:x="718" fg:w="3"/><text x="14.6996%" y="671.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="14.4898%" y="645" width="0.0201%" height="15" fill="rgb(205,209,3)" fg:x="720" fg:w="1"/><text x="14.7398%" y="655.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="14.4898%" y="629" width="0.0201%" height="15" fill="rgb(243,44,1)" fg:x="720" fg:w="1"/><text x="14.7398%" y="639.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="14.4898%" y="613" width="0.0201%" height="15" fill="rgb(206,159,16)" fg:x="720" fg:w="1"/><text x="14.7398%" y="623.50"></text></g><g><title>&lt;i64 as core::num::FromStrRadixHelper&gt;::checked_add (2 samples, 0.04%)</title><rect x="14.5502%" y="709" width="0.0402%" height="15" fill="rgb(244,77,30)" fg:x="723" fg:w="2"/><text x="14.8002%" y="719.50"></text></g><g><title>&lt;i64 as core::num::FromStrRadixHelper&gt;::checked_mul (1 samples, 0.02%)</title><rect x="14.5905%" y="709" width="0.0201%" height="15" fill="rgb(218,69,12)" fg:x="725" fg:w="1"/><text x="14.8405%" y="719.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (1 samples, 0.02%)</title><rect x="14.5905%" y="693" width="0.0201%" height="15" fill="rgb(212,87,7)" fg:x="725" fg:w="1"/><text x="14.8405%" y="703.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="14.5905%" y="677" width="0.0201%" height="15" fill="rgb(245,114,25)" fg:x="725" fg:w="1"/><text x="14.8405%" y="687.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::decoder::Decoder&gt;::decode (68 samples, 1.37%)</title><rect x="13.2622%" y="869" width="1.3685%" height="15" fill="rgb(210,61,42)" fg:x="659" fg:w="68"/><text x="13.5122%" y="879.50"></text></g><g><title>fred::protocol::codec::decode_frame (66 samples, 1.33%)</title><rect x="13.3025%" y="853" width="1.3282%" height="15" fill="rgb(211,52,33)" fg:x="661" fg:w="66"/><text x="13.5525%" y="863.50"></text></g><g><title>redis_protocol::decode::decode_bytes (43 samples, 0.87%)</title><rect x="13.7653%" y="837" width="0.8654%" height="15" fill="rgb(234,58,33)" fg:x="684" fg:w="43"/><text x="14.0153%" y="847.50"></text></g><g><title>redis_protocol::decode::decode (41 samples, 0.83%)</title><rect x="13.8056%" y="821" width="0.8251%" height="15" fill="rgb(220,115,36)" fg:x="686" fg:w="41"/><text x="14.0556%" y="831.50"></text></g><g><title>redis_protocol::decode::parse_frame (38 samples, 0.76%)</title><rect x="13.8660%" y="805" width="0.7647%" height="15" fill="rgb(243,153,54)" fg:x="689" fg:w="38"/><text x="14.1160%" y="815.50"></text></g><g><title>redis_protocol::decode::parse_integer (31 samples, 0.62%)</title><rect x="14.0068%" y="789" width="0.6239%" height="15" fill="rgb(251,47,18)" fg:x="696" fg:w="31"/><text x="14.2568%" y="799.50"></text></g><g><title>redis_protocol::decode::to_i64 (6 samples, 0.12%)</title><rect x="14.5100%" y="773" width="0.1207%" height="15" fill="rgb(242,102,42)" fg:x="721" fg:w="6"/><text x="14.7600%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.12%)</title><rect x="14.5100%" y="757" width="0.1207%" height="15" fill="rgb(234,31,38)" fg:x="721" fg:w="6"/><text x="14.7600%" y="767.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for i64&gt;::from_str (6 samples, 0.12%)</title><rect x="14.5100%" y="741" width="0.1207%" height="15" fill="rgb(221,117,51)" fg:x="721" fg:w="6"/><text x="14.7600%" y="751.50"></text></g><g><title>core::num::from_str_radix (6 samples, 0.12%)</title><rect x="14.5100%" y="725" width="0.1207%" height="15" fill="rgb(212,20,18)" fg:x="721" fg:w="6"/><text x="14.7600%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="14.6106%" y="709" width="0.0201%" height="15" fill="rgb(245,133,36)" fg:x="726" fg:w="1"/><text x="14.8606%" y="719.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::RWFrames as core::borrow::BorrowMut&lt;tokio_util::codec::framed_impl::ReadFrame&gt;&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="14.6307%" y="869" width="0.0402%" height="15" fill="rgb(212,6,19)" fg:x="727" fg:w="2"/><text x="14.8807%" y="879.50"></text></g><g><title>log::max_level (1 samples, 0.02%)</title><rect x="14.6710%" y="869" width="0.0201%" height="15" fill="rgb(218,1,36)" fg:x="729" fg:w="1"/><text x="14.9210%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="14.6710%" y="853" width="0.0201%" height="15" fill="rgb(246,84,54)" fg:x="729" fg:w="1"/><text x="14.9210%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="14.6710%" y="837" width="0.0201%" height="15" fill="rgb(242,110,6)" fg:x="729" fg:w="1"/><text x="14.9210%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.02%)</title><rect x="14.6911%" y="853" width="0.0201%" height="15" fill="rgb(214,47,5)" fg:x="730" fg:w="1"/><text x="14.9411%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::uninit_slice (1 samples, 0.02%)</title><rect x="14.6911%" y="837" width="0.0201%" height="15" fill="rgb(218,159,25)" fg:x="730" fg:w="1"/><text x="14.9411%" y="847.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="14.6911%" y="821" width="0.0201%" height="15" fill="rgb(215,211,28)" fg:x="730" fg:w="1"/><text x="14.9411%" y="831.50"></text></g><g><title>std::io::error::Error::kind (1 samples, 0.02%)</title><rect x="14.7917%" y="773" width="0.0201%" height="15" fill="rgb(238,59,32)" fg:x="735" fg:w="1"/><text x="15.0417%" y="783.50"></text></g><g><title>std::sys::unix::decode_error_kind (1 samples, 0.02%)</title><rect x="14.8118%" y="773" width="0.0201%" height="15" fill="rgb(226,82,3)" fg:x="736" fg:w="1"/><text x="15.0618%" y="783.50"></text></g><g><title>tokio::io::driver::registration::Registration::clear_readiness (1 samples, 0.02%)</title><rect x="14.8320%" y="773" width="0.0201%" height="15" fill="rgb(240,164,32)" fg:x="737" fg:w="1"/><text x="15.0820%" y="783.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::clear_readiness (1 samples, 0.02%)</title><rect x="14.8320%" y="757" width="0.0201%" height="15" fill="rgb(232,46,7)" fg:x="737" fg:w="1"/><text x="15.0820%" y="767.50"></text></g><g><title>&lt;tokio::io::driver::ready::Ready as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="14.8320%" y="741" width="0.0201%" height="15" fill="rgb(229,129,53)" fg:x="737" fg:w="1"/><text x="15.0820%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="14.8722%" y="757" width="0.0201%" height="15" fill="rgb(234,188,29)" fg:x="739" fg:w="1"/><text x="15.1222%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt; (1 samples, 0.02%)</title><rect x="14.8722%" y="741" width="0.0201%" height="15" fill="rgb(246,141,4)" fg:x="739" fg:w="1"/><text x="15.1222%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.8722%" y="725" width="0.0201%" height="15" fill="rgb(229,23,39)" fg:x="739" fg:w="1"/><text x="15.1222%" y="735.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (3 samples, 0.06%)</title><rect x="14.8521%" y="773" width="0.0604%" height="15" fill="rgb(206,12,3)" fg:x="738" fg:w="3"/><text x="15.1021%" y="783.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.02%)</title><rect x="14.8923%" y="757" width="0.0201%" height="15" fill="rgb(252,226,20)" fg:x="740" fg:w="1"/><text x="15.1423%" y="767.50"></text></g><g><title>tokio::io::driver::Direction::mask (1 samples, 0.02%)</title><rect x="14.8923%" y="741" width="0.0201%" height="15" fill="rgb(216,123,35)" fg:x="740" fg:w="1"/><text x="15.1423%" y="751.50"></text></g><g><title>__slab_free (1 samples, 0.02%)</title><rect x="15.0332%" y="501" width="0.0201%" height="15" fill="rgb(212,68,40)" fg:x="747" fg:w="1"/><text x="15.2832%" y="511.50"></text></g><g><title>skb_free_head (1 samples, 0.02%)</title><rect x="15.0533%" y="501" width="0.0201%" height="15" fill="rgb(254,125,32)" fg:x="748" fg:w="1"/><text x="15.3033%" y="511.50"></text></g><g><title>dst_release (1 samples, 0.02%)</title><rect x="15.0936%" y="469" width="0.0201%" height="15" fill="rgb(253,97,22)" fg:x="750" fg:w="1"/><text x="15.3436%" y="479.50"></text></g><g><title>skb_release_all (3 samples, 0.06%)</title><rect x="15.0735%" y="501" width="0.0604%" height="15" fill="rgb(241,101,14)" fg:x="749" fg:w="3"/><text x="15.3235%" y="511.50"></text></g><g><title>skb_release_head_state (2 samples, 0.04%)</title><rect x="15.0936%" y="485" width="0.0402%" height="15" fill="rgb(238,103,29)" fg:x="750" fg:w="2"/><text x="15.3436%" y="495.50"></text></g><g><title>sock_rfree (1 samples, 0.02%)</title><rect x="15.1137%" y="469" width="0.0201%" height="15" fill="rgb(233,195,47)" fg:x="751" fg:w="1"/><text x="15.3637%" y="479.50"></text></g><g><title>__kfree_skb (9 samples, 0.18%)</title><rect x="15.0332%" y="517" width="0.1811%" height="15" fill="rgb(246,218,30)" fg:x="747" fg:w="9"/><text x="15.2832%" y="527.50"></text></g><g><title>skb_release_data (4 samples, 0.08%)</title><rect x="15.1338%" y="501" width="0.0805%" height="15" fill="rgb(219,145,47)" fg:x="752" fg:w="4"/><text x="15.3838%" y="511.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="15.2143%" y="517" width="0.0201%" height="15" fill="rgb(243,12,26)" fg:x="756" fg:w="1"/><text x="15.4643%" y="527.50"></text></g><g><title>kfree_skbmem (2 samples, 0.04%)</title><rect x="15.2345%" y="517" width="0.0402%" height="15" fill="rgb(214,87,16)" fg:x="757" fg:w="2"/><text x="15.4845%" y="527.50"></text></g><g><title>refcount_sub_and_test_checked (2 samples, 0.04%)</title><rect x="15.2345%" y="501" width="0.0402%" height="15" fill="rgb(208,99,42)" fg:x="757" fg:w="2"/><text x="15.4845%" y="511.50"></text></g><g><title>lock_sock_nested (4 samples, 0.08%)</title><rect x="15.2747%" y="517" width="0.0805%" height="15" fill="rgb(253,99,2)" fg:x="759" fg:w="4"/><text x="15.5247%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (4 samples, 0.08%)</title><rect x="15.2747%" y="501" width="0.0805%" height="15" fill="rgb(220,168,23)" fg:x="759" fg:w="4"/><text x="15.5247%" y="511.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.08%)</title><rect x="15.2747%" y="485" width="0.0805%" height="15" fill="rgb(242,38,24)" fg:x="759" fg:w="4"/><text x="15.5247%" y="495.50"></text></g><g><title>__check_object_size (3 samples, 0.06%)</title><rect x="15.3753%" y="501" width="0.0604%" height="15" fill="rgb(225,182,9)" fg:x="764" fg:w="3"/><text x="15.6253%" y="511.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="15.4156%" y="485" width="0.0201%" height="15" fill="rgb(243,178,37)" fg:x="766" fg:w="1"/><text x="15.6656%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (7 samples, 0.14%)</title><rect x="15.3552%" y="517" width="0.1409%" height="15" fill="rgb(232,139,19)" fg:x="763" fg:w="7"/><text x="15.6052%" y="527.50"></text></g><g><title>_copy_to_iter (3 samples, 0.06%)</title><rect x="15.4357%" y="501" width="0.0604%" height="15" fill="rgb(225,201,24)" fg:x="767" fg:w="3"/><text x="15.6857%" y="511.50"></text></g><g><title>copyout (2 samples, 0.04%)</title><rect x="15.4558%" y="485" width="0.0402%" height="15" fill="rgb(221,47,46)" fg:x="768" fg:w="2"/><text x="15.7058%" y="495.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="15.4558%" y="469" width="0.0402%" height="15" fill="rgb(249,23,13)" fg:x="768" fg:w="2"/><text x="15.7058%" y="479.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="15.4961%" y="517" width="0.0201%" height="15" fill="rgb(219,9,5)" fg:x="770" fg:w="1"/><text x="15.7461%" y="527.50"></text></g><g><title>__tcp_select_window (1 samples, 0.02%)</title><rect x="15.4961%" y="501" width="0.0201%" height="15" fill="rgb(254,171,16)" fg:x="770" fg:w="1"/><text x="15.7461%" y="511.50"></text></g><g><title>inet_recvmsg (29 samples, 0.58%)</title><rect x="15.0131%" y="549" width="0.5836%" height="15" fill="rgb(230,171,20)" fg:x="746" fg:w="29"/><text x="15.2631%" y="559.50"></text></g><g><title>tcp_recvmsg (29 samples, 0.58%)</title><rect x="15.0131%" y="533" width="0.5836%" height="15" fill="rgb(210,71,41)" fg:x="746" fg:w="29"/><text x="15.2631%" y="543.50"></text></g><g><title>tcp_rcv_space_adjust (4 samples, 0.08%)</title><rect x="15.5162%" y="517" width="0.0805%" height="15" fill="rgb(206,173,20)" fg:x="771" fg:w="4"/><text x="15.7662%" y="527.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.06%)</title><rect x="15.5363%" y="501" width="0.0604%" height="15" fill="rgb(233,88,34)" fg:x="772" fg:w="3"/><text x="15.7863%" y="511.50"></text></g><g><title>sched_clock (3 samples, 0.06%)</title><rect x="15.5363%" y="485" width="0.0604%" height="15" fill="rgb(223,209,46)" fg:x="772" fg:w="3"/><text x="15.7863%" y="495.50"></text></g><g><title>native_sched_clock (3 samples, 0.06%)</title><rect x="15.5363%" y="469" width="0.0604%" height="15" fill="rgb(250,43,18)" fg:x="772" fg:w="3"/><text x="15.7863%" y="479.50"></text></g><g><title>sock_recvmsg (2 samples, 0.04%)</title><rect x="15.5967%" y="549" width="0.0402%" height="15" fill="rgb(208,13,10)" fg:x="775" fg:w="2"/><text x="15.8467%" y="559.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="15.6168%" y="533" width="0.0201%" height="15" fill="rgb(212,200,36)" fg:x="776" fg:w="1"/><text x="15.8668%" y="543.50"></text></g><g><title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="15.6168%" y="517" width="0.0201%" height="15" fill="rgb(225,90,30)" fg:x="776" fg:w="1"/><text x="15.8668%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.80%)</title><rect x="14.9527%" y="613" width="0.8050%" height="15" fill="rgb(236,182,39)" fg:x="743" fg:w="40"/><text x="15.2027%" y="623.50"></text></g><g><title>do_syscall_64 (40 samples, 0.80%)</title><rect x="14.9527%" y="597" width="0.8050%" height="15" fill="rgb(212,144,35)" fg:x="743" fg:w="40"/><text x="15.2027%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (38 samples, 0.76%)</title><rect x="14.9930%" y="581" width="0.7647%" height="15" fill="rgb(228,63,44)" fg:x="745" fg:w="38"/><text x="15.2430%" y="591.50"></text></g><g><title>__sys_recvfrom (38 samples, 0.76%)</title><rect x="14.9930%" y="565" width="0.7647%" height="15" fill="rgb(228,109,6)" fg:x="745" fg:w="38"/><text x="15.2430%" y="575.50"></text></g><g><title>sockfd_lookup_light (6 samples, 0.12%)</title><rect x="15.6369%" y="549" width="0.1207%" height="15" fill="rgb(238,117,24)" fg:x="777" fg:w="6"/><text x="15.8869%" y="559.50"></text></g><g><title>__fget_light (5 samples, 0.10%)</title><rect x="15.6571%" y="533" width="0.1006%" height="15" fill="rgb(242,26,26)" fg:x="778" fg:w="5"/><text x="15.9071%" y="543.50"></text></g><g><title>__fget (4 samples, 0.08%)</title><rect x="15.6772%" y="517" width="0.0805%" height="15" fill="rgb(221,92,48)" fg:x="779" fg:w="4"/><text x="15.9272%" y="527.50"></text></g><g><title>__libc_recv (41 samples, 0.83%)</title><rect x="14.9527%" y="629" width="0.8251%" height="15" fill="rgb(209,209,32)" fg:x="743" fg:w="41"/><text x="15.2027%" y="639.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="15.7577%" y="613" width="0.0201%" height="15" fill="rgb(221,70,22)" fg:x="783" fg:w="1"/><text x="16.0077%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (135 samples, 2.72%)</title><rect x="13.1214%" y="901" width="2.7168%" height="15" fill="rgb(248,145,5)" fg:x="652" fg:w="135"/><text x="13.3714%" y="911.50">&lt;t..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (135 samples, 2.72%)</title><rect x="13.1214%" y="885" width="2.7168%" height="15" fill="rgb(226,116,26)" fg:x="652" fg:w="135"/><text x="13.3714%" y="895.50">&lt;t..</text></g><g><title>tokio_util::util::poll_read_buf (57 samples, 1.15%)</title><rect x="14.6911%" y="869" width="1.1471%" height="15" fill="rgb(244,5,17)" fg:x="730" fg:w="57"/><text x="14.9411%" y="879.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (56 samples, 1.13%)</title><rect x="14.7112%" y="853" width="1.1270%" height="15" fill="rgb(252,159,33)" fg:x="731" fg:w="56"/><text x="14.9612%" y="863.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (54 samples, 1.09%)</title><rect x="14.7515%" y="837" width="1.0867%" height="15" fill="rgb(206,71,0)" fg:x="733" fg:w="54"/><text x="15.0015%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (54 samples, 1.09%)</title><rect x="14.7515%" y="821" width="1.0867%" height="15" fill="rgb(233,118,54)" fg:x="733" fg:w="54"/><text x="15.0015%" y="831.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (54 samples, 1.09%)</title><rect x="14.7515%" y="805" width="1.0867%" height="15" fill="rgb(234,83,48)" fg:x="733" fg:w="54"/><text x="15.0015%" y="815.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (53 samples, 1.07%)</title><rect x="14.7716%" y="789" width="1.0666%" height="15" fill="rgb(228,3,54)" fg:x="734" fg:w="53"/><text x="15.0216%" y="799.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::_{{closure}} (46 samples, 0.93%)</title><rect x="14.9125%" y="773" width="0.9257%" height="15" fill="rgb(226,155,13)" fg:x="741" fg:w="46"/><text x="15.1625%" y="783.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (46 samples, 0.93%)</title><rect x="14.9125%" y="757" width="0.9257%" height="15" fill="rgb(241,28,37)" fg:x="741" fg:w="46"/><text x="15.1625%" y="767.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (46 samples, 0.93%)</title><rect x="14.9125%" y="741" width="0.9257%" height="15" fill="rgb(233,93,10)" fg:x="741" fg:w="46"/><text x="15.1625%" y="751.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (46 samples, 0.93%)</title><rect x="14.9125%" y="725" width="0.9257%" height="15" fill="rgb(225,113,19)" fg:x="741" fg:w="46"/><text x="15.1625%" y="735.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (46 samples, 0.93%)</title><rect x="14.9125%" y="709" width="0.9257%" height="15" fill="rgb(241,2,18)" fg:x="741" fg:w="46"/><text x="15.1625%" y="719.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (46 samples, 0.93%)</title><rect x="14.9125%" y="693" width="0.9257%" height="15" fill="rgb(228,207,21)" fg:x="741" fg:w="46"/><text x="15.1625%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (45 samples, 0.91%)</title><rect x="14.9326%" y="677" width="0.9056%" height="15" fill="rgb(213,211,35)" fg:x="742" fg:w="45"/><text x="15.1826%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (45 samples, 0.91%)</title><rect x="14.9326%" y="661" width="0.9056%" height="15" fill="rgb(209,83,10)" fg:x="742" fg:w="45"/><text x="15.1826%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (45 samples, 0.91%)</title><rect x="14.9326%" y="645" width="0.9056%" height="15" fill="rgb(209,164,1)" fg:x="742" fg:w="45"/><text x="15.1826%" y="655.50"></text></g><g><title>std::sys::unix::cvt (3 samples, 0.06%)</title><rect x="15.7778%" y="629" width="0.0604%" height="15" fill="rgb(213,184,43)" fg:x="784" fg:w="3"/><text x="16.0278%" y="639.50"></text></g><g><title>std::io::error::Error::last_os_error (2 samples, 0.04%)</title><rect x="15.7979%" y="613" width="0.0402%" height="15" fill="rgb(231,61,34)" fg:x="785" fg:w="2"/><text x="16.0479%" y="623.50"></text></g><g><title>std::sys::unix::os::errno (2 samples, 0.04%)</title><rect x="15.7979%" y="597" width="0.0402%" height="15" fill="rgb(235,75,3)" fg:x="785" fg:w="2"/><text x="16.0479%" y="607.50"></text></g><g><title>__errno_location (2 samples, 0.04%)</title><rect x="15.7979%" y="581" width="0.0402%" height="15" fill="rgb(220,106,47)" fg:x="785" fg:w="2"/><text x="16.0479%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;tokio_util::codec::framed::Framed&lt;tokio::net::tcp::stream::TcpStream,fred::protocol::codec::RedisCodec&gt;&gt;&gt; (4 samples, 0.08%)</title><rect x="15.8382%" y="901" width="0.0805%" height="15" fill="rgb(210,196,33)" fg:x="787" fg:w="4"/><text x="16.0882%" y="911.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="15.8382%" y="885" width="0.0805%" height="15" fill="rgb(229,154,42)" fg:x="787" fg:w="4"/><text x="16.0882%" y="895.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (4 samples, 0.08%)</title><rect x="15.8382%" y="869" width="0.0805%" height="15" fill="rgb(228,114,26)" fg:x="787" fg:w="4"/><text x="16.0882%" y="879.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (145 samples, 2.92%)</title><rect x="13.1012%" y="933" width="2.9181%" height="15" fill="rgb(208,144,1)" fg:x="651" fg:w="145"/><text x="13.3512%" y="943.50">&lt;S..</text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (144 samples, 2.90%)</title><rect x="13.1214%" y="917" width="2.8980%" height="15" fill="rgb(239,112,37)" fg:x="652" fg:w="144"/><text x="13.3714%" y="927.50">&lt;f..</text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (5 samples, 0.10%)</title><rect x="15.9187%" y="901" width="0.1006%" height="15" fill="rgb(210,96,50)" fg:x="791" fg:w="5"/><text x="16.1687%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.02%)</title><rect x="15.9992%" y="885" width="0.0201%" height="15" fill="rgb(222,178,2)" fg:x="795" fg:w="1"/><text x="16.2492%" y="895.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock::_{{closure}} (1 samples, 0.02%)</title><rect x="15.9992%" y="869" width="0.0201%" height="15" fill="rgb(226,74,18)" fg:x="795" fg:w="1"/><text x="16.2492%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="15.9992%" y="853" width="0.0201%" height="15" fill="rgb(225,67,54)" fg:x="795" fg:w="1"/><text x="16.2492%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="15.9992%" y="837" width="0.0201%" height="15" fill="rgb(251,92,32)" fg:x="795" fg:w="1"/><text x="16.2492%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="15.9992%" y="821" width="0.0201%" height="15" fill="rgb(228,149,22)" fg:x="795" fg:w="1"/><text x="16.2492%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="15.9992%" y="805" width="0.0201%" height="15" fill="rgb(243,54,13)" fg:x="795" fg:w="1"/><text x="16.2492%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="15.9992%" y="789" width="0.0201%" height="15" fill="rgb(243,180,28)" fg:x="795" fg:w="1"/><text x="16.2492%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.02%)</title><rect x="15.9992%" y="773" width="0.0201%" height="15" fill="rgb(208,167,24)" fg:x="795" fg:w="1"/><text x="16.2492%" y="783.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.14%)</title><rect x="16.0193%" y="933" width="0.1409%" height="15" fill="rgb(245,73,45)" fg:x="796" fg:w="7"/><text x="16.2693%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="16.1602%" y="933" width="0.0201%" height="15" fill="rgb(237,203,48)" fg:x="803" fg:w="1"/><text x="16.4102%" y="943.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="16.3212%" y="917" width="0.1207%" height="15" fill="rgb(211,197,16)" fg:x="811" fg:w="6"/><text x="16.5712%" y="927.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (200 samples, 4.02%)</title><rect x="12.5176%" y="1253" width="4.0250%" height="15" fill="rgb(243,99,51)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1263.50">fred..</text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1237" width="4.0250%" height="15" fill="rgb(215,123,29)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1247.50">&lt;fut..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (200 samples, 4.02%)</title><rect x="12.5176%" y="1221" width="4.0250%" height="15" fill="rgb(239,186,37)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1231.50">fred..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (200 samples, 4.02%)</title><rect x="12.5176%" y="1205" width="4.0250%" height="15" fill="rgb(252,136,39)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1215.50">core..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (200 samples, 4.02%)</title><rect x="12.5176%" y="1189" width="4.0250%" height="15" fill="rgb(223,213,32)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1199.50">fred..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (200 samples, 4.02%)</title><rect x="12.5176%" y="1173" width="4.0250%" height="15" fill="rgb(233,115,5)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1183.50">futu..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1157" width="4.0250%" height="15" fill="rgb(207,226,44)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1167.50">&lt;cor..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1141" width="4.0250%" height="15" fill="rgb(208,126,0)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1151.50">&lt;cor..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1125" width="4.0250%" height="15" fill="rgb(244,66,21)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1135.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1109" width="4.0250%" height="15" fill="rgb(222,97,12)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1119.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1093" width="4.0250%" height="15" fill="rgb(219,213,19)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1103.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1077" width="4.0250%" height="15" fill="rgb(252,169,30)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1087.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1061" width="4.0250%" height="15" fill="rgb(206,32,51)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1071.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1045" width="4.0250%" height="15" fill="rgb(250,172,42)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1055.50">&lt;F a..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1029" width="4.0250%" height="15" fill="rgb(209,34,43)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1039.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="1013" width="4.0250%" height="15" fill="rgb(223,11,35)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1023.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="997" width="4.0250%" height="15" fill="rgb(251,219,26)" fg:x="622" fg:w="200"/><text x="12.7676%" y="1007.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="981" width="4.0250%" height="15" fill="rgb(231,119,3)" fg:x="622" fg:w="200"/><text x="12.7676%" y="991.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (200 samples, 4.02%)</title><rect x="12.5176%" y="965" width="4.0250%" height="15" fill="rgb(216,97,11)" fg:x="622" fg:w="200"/><text x="12.7676%" y="975.50">&lt;F a..</text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (200 samples, 4.02%)</title><rect x="12.5176%" y="949" width="4.0250%" height="15" fill="rgb(223,59,9)" fg:x="622" fg:w="200"/><text x="12.7676%" y="959.50">&lt;fut..</text></g><g><title>core::pin::Pin&lt;P&gt;::set (18 samples, 0.36%)</title><rect x="16.1803%" y="933" width="0.3622%" height="15" fill="rgb(233,93,31)" fg:x="804" fg:w="18"/><text x="16.4303%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::utils::spawn_centralized_listener::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (5 samples, 0.10%)</title><rect x="16.4419%" y="917" width="0.1006%" height="15" fill="rgb(239,81,33)" fg:x="817" fg:w="5"/><text x="16.6919%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::utils::spawn_centralized_listener::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="16.5224%" y="901" width="0.0201%" height="15" fill="rgb(213,120,34)" fg:x="821" fg:w="1"/><text x="16.7724%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::utils::spawn_centralized_listener::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="16.5224%" y="885" width="0.0201%" height="15" fill="rgb(243,49,53)" fg:x="821" fg:w="1"/><text x="16.7724%" y="895.50"></text></g><g><title>__list_add_valid (1 samples, 0.02%)</title><rect x="16.7237%" y="901" width="0.0201%" height="15" fill="rgb(247,216,33)" fg:x="831" fg:w="1"/><text x="16.9737%" y="911.50"></text></g><g><title>__sched_yield (3 samples, 0.06%)</title><rect x="16.7036%" y="1013" width="0.0604%" height="15" fill="rgb(226,26,14)" fg:x="830" fg:w="3"/><text x="16.9536%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="16.7036%" y="997" width="0.0604%" height="15" fill="rgb(215,49,53)" fg:x="830" fg:w="3"/><text x="16.9536%" y="1007.50"></text></g><g><title>do_syscall_64 (3 samples, 0.06%)</title><rect x="16.7036%" y="981" width="0.0604%" height="15" fill="rgb(245,162,40)" fg:x="830" fg:w="3"/><text x="16.9536%" y="991.50"></text></g><g><title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="16.7036%" y="965" width="0.0604%" height="15" fill="rgb(229,68,17)" fg:x="830" fg:w="3"/><text x="16.9536%" y="975.50"></text></g><g><title>schedule (3 samples, 0.06%)</title><rect x="16.7036%" y="949" width="0.0604%" height="15" fill="rgb(213,182,10)" fg:x="830" fg:w="3"/><text x="16.9536%" y="959.50"></text></g><g><title>__schedule (3 samples, 0.06%)</title><rect x="16.7036%" y="933" width="0.0604%" height="15" fill="rgb(245,125,30)" fg:x="830" fg:w="3"/><text x="16.9536%" y="943.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.06%)</title><rect x="16.7036%" y="917" width="0.0604%" height="15" fill="rgb(232,202,2)" fg:x="830" fg:w="3"/><text x="16.9536%" y="927.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="16.7438%" y="901" width="0.0201%" height="15" fill="rgb(237,140,51)" fg:x="832" fg:w="1"/><text x="16.9938%" y="911.50"></text></g><g><title>__calc_delta (1 samples, 0.02%)</title><rect x="16.7438%" y="885" width="0.0201%" height="15" fill="rgb(236,157,25)" fg:x="832" fg:w="1"/><text x="16.9938%" y="895.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.02%)</title><rect x="16.7639%" y="1013" width="0.0201%" height="15" fill="rgb(219,209,0)" fg:x="833" fg:w="1"/><text x="17.0139%" y="1023.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.02%)</title><rect x="16.7639%" y="997" width="0.0201%" height="15" fill="rgb(240,116,54)" fg:x="833" fg:w="1"/><text x="17.0139%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release (1 samples, 0.02%)</title><rect x="16.7841%" y="1013" width="0.0201%" height="15" fill="rgb(216,10,36)" fg:x="834" fg:w="1"/><text x="17.0341%" y="1023.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="16.7841%" y="997" width="0.0201%" height="15" fill="rgb(222,72,44)" fg:x="834" fg:w="1"/><text x="17.0341%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release::_{{closure}} (1 samples, 0.02%)</title><rect x="16.7841%" y="981" width="0.0201%" height="15" fill="rgb(232,159,9)" fg:x="834" fg:w="1"/><text x="17.0341%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (674 samples, 13.56%)</title><rect x="3.2602%" y="1269" width="13.5641%" height="15" fill="rgb(210,39,32)" fg:x="162" fg:w="674"/><text x="3.5102%" y="1279.50">&lt;core::future::from_..</text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (14 samples, 0.28%)</title><rect x="16.5426%" y="1253" width="0.2817%" height="15" fill="rgb(216,194,45)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="16.5426%" y="1237" width="0.2817%" height="15" fill="rgb(218,18,35)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1247.50"></text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (14 samples, 0.28%)</title><rect x="16.5426%" y="1221" width="0.2817%" height="15" fill="rgb(207,83,51)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="16.5426%" y="1205" width="0.2817%" height="15" fill="rgb(225,63,43)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1215.50"></text></g><g><title>fred::commands::keys::incr::_{{closure}} (14 samples, 0.28%)</title><rect x="16.5426%" y="1189" width="0.2817%" height="15" fill="rgb(207,57,36)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="16.5426%" y="1173" width="0.2817%" height="15" fill="rgb(216,99,33)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1183.50"></text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (14 samples, 0.28%)</title><rect x="16.5426%" y="1157" width="0.2817%" height="15" fill="rgb(225,42,16)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="16.5426%" y="1141" width="0.2817%" height="15" fill="rgb(220,201,45)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1151.50"></text></g><g><title>fred::utils::request_response::_{{closure}} (14 samples, 0.28%)</title><rect x="16.5426%" y="1125" width="0.2817%" height="15" fill="rgb(225,33,4)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1135.50"></text></g><g><title>fred::utils::send_command (14 samples, 0.28%)</title><rect x="16.5426%" y="1109" width="0.2817%" height="15" fill="rgb(224,33,50)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (14 samples, 0.28%)</title><rect x="16.5426%" y="1093" width="0.2817%" height="15" fill="rgb(246,198,51)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (14 samples, 0.28%)</title><rect x="16.5426%" y="1077" width="0.2817%" height="15" fill="rgb(205,22,4)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (14 samples, 0.28%)</title><rect x="16.5426%" y="1061" width="0.2817%" height="15" fill="rgb(206,3,8)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1071.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (14 samples, 0.28%)</title><rect x="16.5426%" y="1045" width="0.2817%" height="15" fill="rgb(251,23,15)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1055.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (14 samples, 0.28%)</title><rect x="16.5426%" y="1029" width="0.2817%" height="15" fill="rgb(252,88,28)" fg:x="822" fg:w="14"/><text x="16.7926%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::block::start_index (1 samples, 0.02%)</title><rect x="16.8042%" y="1013" width="0.0201%" height="15" fill="rgb(212,127,14)" fg:x="835" fg:w="1"/><text x="17.0542%" y="1023.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="16.8042%" y="997" width="0.0201%" height="15" fill="rgb(247,145,37)" fg:x="835" fg:w="1"/><text x="17.0542%" y="1007.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="16.8444%" y="1013" width="0.0201%" height="15" fill="rgb(209,117,53)" fg:x="837" fg:w="1"/><text x="17.0944%" y="1023.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (1 samples, 0.02%)</title><rect x="16.8646%" y="1013" width="0.0201%" height="15" fill="rgb(212,90,42)" fg:x="838" fg:w="1"/><text x="17.1146%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="16.8847%" y="965" width="0.0201%" height="15" fill="rgb(218,164,37)" fg:x="839" fg:w="1"/><text x="17.1347%" y="975.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="16.8847%" y="949" width="0.0201%" height="15" fill="rgb(246,65,34)" fg:x="839" fg:w="1"/><text x="17.1347%" y="959.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="16.8847%" y="933" width="0.0201%" height="15" fill="rgb(231,100,33)" fg:x="839" fg:w="1"/><text x="17.1347%" y="943.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="16.8847%" y="917" width="0.0201%" height="15" fill="rgb(228,126,14)" fg:x="839" fg:w="1"/><text x="17.1347%" y="927.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="16.8847%" y="901" width="0.0201%" height="15" fill="rgb(215,173,21)" fg:x="839" fg:w="1"/><text x="17.1347%" y="911.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="16.8847%" y="885" width="0.0201%" height="15" fill="rgb(210,6,40)" fg:x="839" fg:w="1"/><text x="17.1347%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="16.8847%" y="869" width="0.0201%" height="15" fill="rgb(212,48,18)" fg:x="839" fg:w="1"/><text x="17.1347%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="16.9048%" y="965" width="0.0402%" height="15" fill="rgb(230,214,11)" fg:x="840" fg:w="2"/><text x="17.1548%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="16.9048%" y="949" width="0.0402%" height="15" fill="rgb(254,105,39)" fg:x="840" fg:w="2"/><text x="17.1548%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (2 samples, 0.04%)</title><rect x="16.9048%" y="933" width="0.0402%" height="15" fill="rgb(245,158,5)" fg:x="840" fg:w="2"/><text x="17.1548%" y="943.50"></text></g><g><title>fred::multiplexer::responses::check_command_resp_tx (13 samples, 0.26%)</title><rect x="16.8847%" y="1013" width="0.2616%" height="15" fill="rgb(249,208,11)" fg:x="839" fg:w="13"/><text x="17.1347%" y="1023.50"></text></g><g><title>fred::protocol::types::RedisCommand::take_resp_tx (13 samples, 0.26%)</title><rect x="16.8847%" y="997" width="0.2616%" height="15" fill="rgb(210,39,28)" fg:x="839" fg:w="13"/><text x="17.1347%" y="1007.50"></text></g><g><title>fred::utils::take_locked (13 samples, 0.26%)</title><rect x="16.8847%" y="981" width="0.2616%" height="15" fill="rgb(211,56,53)" fg:x="839" fg:w="13"/><text x="17.1347%" y="991.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (10 samples, 0.20%)</title><rect x="16.9451%" y="965" width="0.2012%" height="15" fill="rgb(226,201,30)" fg:x="842" fg:w="10"/><text x="17.1951%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (10 samples, 0.20%)</title><rect x="16.9451%" y="949" width="0.2012%" height="15" fill="rgb(239,101,34)" fg:x="842" fg:w="10"/><text x="17.1951%" y="959.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="17.2671%" y="965" width="0.0402%" height="15" fill="rgb(226,209,5)" fg:x="858" fg:w="2"/><text x="17.5171%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.16%)</title><rect x="17.3073%" y="965" width="0.1610%" height="15" fill="rgb(250,105,47)" fg:x="860" fg:w="8"/><text x="17.5573%" y="975.50"></text></g><g><title>core::mem::drop (8 samples, 0.16%)</title><rect x="17.3073%" y="949" width="0.1610%" height="15" fill="rgb(230,72,3)" fg:x="860" fg:w="8"/><text x="17.5573%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt;&gt; (8 samples, 0.16%)</title><rect x="17.3073%" y="933" width="0.1610%" height="15" fill="rgb(232,218,39)" fg:x="860" fg:w="8"/><text x="17.5573%" y="943.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="17.3073%" y="917" width="0.1610%" height="15" fill="rgb(248,166,6)" fg:x="860" fg:w="8"/><text x="17.5573%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt;&gt; (17 samples, 0.34%)</title><rect x="17.1463%" y="997" width="0.3421%" height="15" fill="rgb(247,89,20)" fg:x="852" fg:w="17"/><text x="17.3963%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect x="17.1463%" y="981" width="0.3421%" height="15" fill="rgb(248,130,54)" fg:x="852" fg:w="17"/><text x="17.3963%" y="991.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="17.4683%" y="965" width="0.0201%" height="15" fill="rgb(234,196,4)" fg:x="868" fg:w="1"/><text x="17.7183%" y="975.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.16%)</title><rect x="17.4884%" y="949" width="0.1610%" height="15" fill="rgb(250,143,31)" fg:x="869" fg:w="8"/><text x="17.7384%" y="959.50"></text></g><g><title>cfree (5 samples, 0.10%)</title><rect x="17.6494%" y="949" width="0.1006%" height="15" fill="rgb(211,110,34)" fg:x="877" fg:w="5"/><text x="17.8994%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.48%)</title><rect x="17.4884%" y="981" width="0.4830%" height="15" fill="rgb(215,124,48)" fg:x="869" fg:w="24"/><text x="17.7384%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fred::types::RedisValue]&gt; (24 samples, 0.48%)</title><rect x="17.4884%" y="965" width="0.4830%" height="15" fill="rgb(216,46,13)" fg:x="869" fg:w="24"/><text x="17.7384%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::types::RedisValue&gt; (11 samples, 0.22%)</title><rect x="17.7501%" y="949" width="0.2214%" height="15" fill="rgb(205,184,25)" fg:x="882" fg:w="11"/><text x="18.0001%" y="959.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.24%)</title><rect x="17.9714%" y="917" width="0.2415%" height="15" fill="rgb(228,1,10)" fg:x="893" fg:w="12"/><text x="18.2214%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.32%)</title><rect x="17.9714%" y="949" width="0.3220%" height="15" fill="rgb(213,116,27)" fg:x="893" fg:w="16"/><text x="18.2214%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.32%)</title><rect x="17.9714%" y="933" width="0.3220%" height="15" fill="rgb(241,95,50)" fg:x="893" fg:w="16"/><text x="18.2214%" y="943.50"></text></g><g><title>cfree (4 samples, 0.08%)</title><rect x="18.2129%" y="917" width="0.0805%" height="15" fill="rgb(238,48,32)" fg:x="905" fg:w="4"/><text x="18.4629%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fred::types::RedisValue&gt;&gt; (41 samples, 0.83%)</title><rect x="17.4884%" y="997" width="0.8251%" height="15" fill="rgb(235,113,49)" fg:x="869" fg:w="41"/><text x="17.7384%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fred::types::RedisValue&gt;&gt; (17 samples, 0.34%)</title><rect x="17.9714%" y="981" width="0.3421%" height="15" fill="rgb(205,127,43)" fg:x="893" fg:w="17"/><text x="18.2214%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect x="17.9714%" y="965" width="0.3421%" height="15" fill="rgb(250,162,2)" fg:x="893" fg:w="17"/><text x="18.2214%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="18.2934%" y="949" width="0.0201%" height="15" fill="rgb(220,13,41)" fg:x="909" fg:w="1"/><text x="18.5434%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::protocol::types::RedisCommandKind&gt; (1 samples, 0.02%)</title><rect x="18.3135%" y="997" width="0.0201%" height="15" fill="rgb(249,221,25)" fg:x="910" fg:w="1"/><text x="18.5635%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="18.3538%" y="981" width="0.0201%" height="15" fill="rgb(215,208,19)" fg:x="912" fg:w="1"/><text x="18.6038%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.3538%" y="965" width="0.0201%" height="15" fill="rgb(236,175,2)" fg:x="912" fg:w="1"/><text x="18.6038%" y="975.50"></text></g><g><title>[libc-2.28.so] (10 samples, 0.20%)</title><rect x="18.3739%" y="949" width="0.2012%" height="15" fill="rgb(241,52,2)" fg:x="913" fg:w="10"/><text x="18.6239%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.22%)</title><rect x="18.3739%" y="981" width="0.2214%" height="15" fill="rgb(248,140,14)" fg:x="913" fg:w="11"/><text x="18.6239%" y="991.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::_{{closure}} (11 samples, 0.22%)</title><rect x="18.3739%" y="965" width="0.2214%" height="15" fill="rgb(253,22,42)" fg:x="913" fg:w="11"/><text x="18.6239%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="18.5752%" y="949" width="0.0201%" height="15" fill="rgb(234,61,47)" fg:x="923" fg:w="1"/><text x="18.8252%" y="959.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (15 samples, 0.30%)</title><rect x="18.5953%" y="965" width="0.3019%" height="15" fill="rgb(208,226,15)" fg:x="924" fg:w="15"/><text x="18.8453%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.30%)</title><rect x="18.5953%" y="949" width="0.3019%" height="15" fill="rgb(217,221,4)" fg:x="924" fg:w="15"/><text x="18.8453%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.30%)</title><rect x="18.5953%" y="933" width="0.3019%" height="15" fill="rgb(212,174,34)" fg:x="924" fg:w="15"/><text x="18.8453%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::to_task (1 samples, 0.02%)</title><rect x="19.0179%" y="853" width="0.0201%" height="15" fill="rgb(253,83,4)" fg:x="945" fg:w="1"/><text x="19.2679%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::to_task (1 samples, 0.02%)</title><rect x="19.0179%" y="837" width="0.0201%" height="15" fill="rgb(250,195,49)" fg:x="945" fg:w="1"/><text x="19.2679%" y="847.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (1 samples, 0.02%)</title><rect x="19.0179%" y="821" width="0.0201%" height="15" fill="rgb(241,192,25)" fg:x="945" fg:w="1"/><text x="19.2679%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.02%)</title><rect x="19.0179%" y="805" width="0.0201%" height="15" fill="rgb(208,124,10)" fg:x="945" fg:w="1"/><text x="19.2679%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (21 samples, 0.42%)</title><rect x="18.9575%" y="885" width="0.4226%" height="15" fill="rgb(222,33,0)" fg:x="942" fg:w="21"/><text x="19.2075%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (19 samples, 0.38%)</title><rect x="18.9978%" y="869" width="0.3824%" height="15" fill="rgb(234,209,28)" fg:x="944" fg:w="19"/><text x="19.2478%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (17 samples, 0.34%)</title><rect x="19.0380%" y="853" width="0.3421%" height="15" fill="rgb(224,11,23)" fg:x="946" fg:w="17"/><text x="19.2880%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (17 samples, 0.34%)</title><rect x="19.0380%" y="837" width="0.3421%" height="15" fill="rgb(232,99,1)" fg:x="946" fg:w="17"/><text x="19.2880%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (17 samples, 0.34%)</title><rect x="19.0380%" y="821" width="0.3421%" height="15" fill="rgb(237,95,45)" fg:x="946" fg:w="17"/><text x="19.2880%" y="831.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="19.4808%" y="837" width="0.0201%" height="15" fill="rgb(208,109,11)" fg:x="968" fg:w="1"/><text x="19.7308%" y="847.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="19.4808%" y="821" width="0.0201%" height="15" fill="rgb(216,190,48)" fg:x="968" fg:w="1"/><text x="19.7308%" y="831.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="19.4808%" y="805" width="0.0201%" height="15" fill="rgb(251,171,36)" fg:x="968" fg:w="1"/><text x="19.7308%" y="815.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="19.4808%" y="789" width="0.0201%" height="15" fill="rgb(230,62,22)" fg:x="968" fg:w="1"/><text x="19.7308%" y="799.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="19.4808%" y="773" width="0.0201%" height="15" fill="rgb(225,114,35)" fg:x="968" fg:w="1"/><text x="19.7308%" y="783.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="19.4808%" y="757" width="0.0201%" height="15" fill="rgb(215,118,42)" fg:x="968" fg:w="1"/><text x="19.7308%" y="767.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="19.4808%" y="741" width="0.0201%" height="15" fill="rgb(243,119,21)" fg:x="968" fg:w="1"/><text x="19.7308%" y="751.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="19.4808%" y="725" width="0.0201%" height="15" fill="rgb(252,177,53)" fg:x="968" fg:w="1"/><text x="19.7308%" y="735.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="19.4808%" y="709" width="0.0201%" height="15" fill="rgb(237,209,29)" fg:x="968" fg:w="1"/><text x="19.7308%" y="719.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="19.4808%" y="693" width="0.0201%" height="15" fill="rgb(212,65,23)" fg:x="968" fg:w="1"/><text x="19.7308%" y="703.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="19.4808%" y="677" width="0.0201%" height="15" fill="rgb(230,222,46)" fg:x="968" fg:w="1"/><text x="19.7308%" y="687.50"></text></g><g><title>snd_complete_urb (1 samples, 0.02%)</title><rect x="19.4808%" y="661" width="0.0201%" height="15" fill="rgb(215,135,32)" fg:x="968" fg:w="1"/><text x="19.7308%" y="671.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="19.4808%" y="645" width="0.0201%" height="15" fill="rgb(246,101,22)" fg:x="968" fg:w="1"/><text x="19.7308%" y="655.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="19.4808%" y="629" width="0.0201%" height="15" fill="rgb(206,107,13)" fg:x="968" fg:w="1"/><text x="19.7308%" y="639.50"></text></g><g><title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="19.4808%" y="613" width="0.0201%" height="15" fill="rgb(250,100,44)" fg:x="968" fg:w="1"/><text x="19.7308%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="19.5009%" y="837" width="0.0402%" height="15" fill="rgb(231,147,38)" fg:x="969" fg:w="2"/><text x="19.7509%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="19.5009%" y="821" width="0.0402%" height="15" fill="rgb(229,8,40)" fg:x="969" fg:w="2"/><text x="19.7509%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (2 samples, 0.04%)</title><rect x="19.5009%" y="805" width="0.0402%" height="15" fill="rgb(221,135,30)" fg:x="969" fg:w="2"/><text x="19.7509%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="19.5009%" y="789" width="0.0402%" height="15" fill="rgb(249,193,18)" fg:x="969" fg:w="2"/><text x="19.7509%" y="799.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="19.5009%" y="773" width="0.0402%" height="15" fill="rgb(209,133,39)" fg:x="969" fg:w="2"/><text x="19.7509%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="19.5009%" y="757" width="0.0402%" height="15" fill="rgb(232,100,14)" fg:x="969" fg:w="2"/><text x="19.7509%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="19.5613%" y="821" width="0.0201%" height="15" fill="rgb(224,185,1)" fg:x="972" fg:w="1"/><text x="19.8113%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="19.6015%" y="805" width="0.0201%" height="15" fill="rgb(223,139,8)" fg:x="974" fg:w="1"/><text x="19.8515%" y="815.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="19.6015%" y="789" width="0.0201%" height="15" fill="rgb(232,213,38)" fg:x="974" fg:w="1"/><text x="19.8515%" y="799.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="19.6015%" y="773" width="0.0201%" height="15" fill="rgb(207,94,22)" fg:x="974" fg:w="1"/><text x="19.8515%" y="783.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="19.6015%" y="757" width="0.0201%" height="15" fill="rgb(219,183,54)" fg:x="974" fg:w="1"/><text x="19.8515%" y="767.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="19.6015%" y="741" width="0.0201%" height="15" fill="rgb(216,185,54)" fg:x="974" fg:w="1"/><text x="19.8515%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="19.6015%" y="725" width="0.0201%" height="15" fill="rgb(254,217,39)" fg:x="974" fg:w="1"/><text x="19.8515%" y="735.50"></text></g><g><title>__fdget_pos (2 samples, 0.04%)</title><rect x="19.6217%" y="629" width="0.0402%" height="15" fill="rgb(240,178,23)" fg:x="975" fg:w="2"/><text x="19.8717%" y="639.50"></text></g><g><title>__fget_light (2 samples, 0.04%)</title><rect x="19.6217%" y="613" width="0.0402%" height="15" fill="rgb(218,11,47)" fg:x="975" fg:w="2"/><text x="19.8717%" y="623.50"></text></g><g><title>__fget (2 samples, 0.04%)</title><rect x="19.6217%" y="597" width="0.0402%" height="15" fill="rgb(218,51,51)" fg:x="975" fg:w="2"/><text x="19.8717%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="19.7424%" y="533" width="0.0402%" height="15" fill="rgb(238,126,27)" fg:x="981" fg:w="2"/><text x="19.9924%" y="543.50"></text></g><g><title>select_idle_sibling (1 samples, 0.02%)</title><rect x="19.8028%" y="517" width="0.0201%" height="15" fill="rgb(249,202,22)" fg:x="984" fg:w="1"/><text x="20.0528%" y="527.50"></text></g><g><title>available_idle_cpu (1 samples, 0.02%)</title><rect x="19.8028%" y="501" width="0.0201%" height="15" fill="rgb(254,195,49)" fg:x="984" fg:w="1"/><text x="20.0528%" y="511.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.06%)</title><rect x="19.7827%" y="533" width="0.0604%" height="15" fill="rgb(208,123,14)" fg:x="983" fg:w="3"/><text x="20.0327%" y="543.50"></text></g><g><title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="19.8229%" y="517" width="0.0201%" height="15" fill="rgb(224,200,8)" fg:x="985" fg:w="1"/><text x="20.0729%" y="527.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.02%)</title><rect x="19.8430%" y="485" width="0.0201%" height="15" fill="rgb(217,61,36)" fg:x="986" fg:w="1"/><text x="20.0930%" y="495.50"></text></g><g><title>ttwu_do_activate (3 samples, 0.06%)</title><rect x="19.8430%" y="533" width="0.0604%" height="15" fill="rgb(206,35,45)" fg:x="986" fg:w="3"/><text x="20.0930%" y="543.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.06%)</title><rect x="19.8430%" y="517" width="0.0604%" height="15" fill="rgb(217,65,33)" fg:x="986" fg:w="3"/><text x="20.0930%" y="527.50"></text></g><g><title>enqueue_entity (3 samples, 0.06%)</title><rect x="19.8430%" y="501" width="0.0604%" height="15" fill="rgb(222,158,48)" fg:x="986" fg:w="3"/><text x="20.0930%" y="511.50"></text></g><g><title>update_load_avg (2 samples, 0.04%)</title><rect x="19.8632%" y="485" width="0.0402%" height="15" fill="rgb(254,2,54)" fg:x="987" fg:w="2"/><text x="20.1132%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="19.8833%" y="469" width="0.0201%" height="15" fill="rgb(250,143,38)" fg:x="988" fg:w="1"/><text x="20.1333%" y="479.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.04%)</title><rect x="19.9034%" y="533" width="0.0402%" height="15" fill="rgb(248,25,0)" fg:x="989" fg:w="2"/><text x="20.1534%" y="543.50"></text></g><g><title>check_preempt_curr (1 samples, 0.02%)</title><rect x="19.9235%" y="517" width="0.0201%" height="15" fill="rgb(206,152,27)" fg:x="990" fg:w="1"/><text x="20.1735%" y="527.50"></text></g><g><title>resched_curr (1 samples, 0.02%)</title><rect x="19.9235%" y="501" width="0.0201%" height="15" fill="rgb(240,77,30)" fg:x="990" fg:w="1"/><text x="20.1735%" y="511.50"></text></g><g><title>__wake_up_common (15 samples, 0.30%)</title><rect x="19.6619%" y="565" width="0.3019%" height="15" fill="rgb(231,5,3)" fg:x="977" fg:w="15"/><text x="19.9119%" y="575.50"></text></g><g><title>try_to_wake_up (15 samples, 0.30%)</title><rect x="19.6619%" y="549" width="0.3019%" height="15" fill="rgb(207,226,32)" fg:x="977" fg:w="15"/><text x="19.9119%" y="559.50"></text></g><g><title>update_rq_clock (1 samples, 0.02%)</title><rect x="19.9437%" y="533" width="0.0201%" height="15" fill="rgb(222,207,47)" fg:x="991" fg:w="1"/><text x="20.1937%" y="543.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="19.9437%" y="517" width="0.0201%" height="15" fill="rgb(229,115,45)" fg:x="991" fg:w="1"/><text x="20.1937%" y="527.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="19.9437%" y="501" width="0.0201%" height="15" fill="rgb(224,191,6)" fg:x="991" fg:w="1"/><text x="20.1937%" y="511.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="19.9437%" y="485" width="0.0201%" height="15" fill="rgb(230,227,24)" fg:x="991" fg:w="1"/><text x="20.1937%" y="495.50"></text></g><g><title>__wake_up_common (19 samples, 0.38%)</title><rect x="19.6619%" y="597" width="0.3824%" height="15" fill="rgb(228,80,19)" fg:x="977" fg:w="19"/><text x="19.9119%" y="607.50"></text></g><g><title>ep_poll_callback (19 samples, 0.38%)</title><rect x="19.6619%" y="581" width="0.3824%" height="15" fill="rgb(247,229,0)" fg:x="977" fg:w="19"/><text x="19.9119%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.08%)</title><rect x="19.9638%" y="565" width="0.0805%" height="15" fill="rgb(237,194,15)" fg:x="992" fg:w="4"/><text x="20.2138%" y="575.50"></text></g><g><title>_copy_from_user (1 samples, 0.02%)</title><rect x="20.0443%" y="597" width="0.0201%" height="15" fill="rgb(219,203,20)" fg:x="996" fg:w="1"/><text x="20.2943%" y="607.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="20.0443%" y="581" width="0.0201%" height="15" fill="rgb(234,128,8)" fg:x="996" fg:w="1"/><text x="20.2943%" y="591.50"></text></g><g><title>eventfd_write (21 samples, 0.42%)</title><rect x="19.6619%" y="613" width="0.4226%" height="15" fill="rgb(248,202,8)" fg:x="977" fg:w="21"/><text x="19.9119%" y="623.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="20.0644%" y="597" width="0.0201%" height="15" fill="rgb(206,104,37)" fg:x="997" fg:w="1"/><text x="20.3144%" y="607.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (24 samples, 0.48%)</title><rect x="19.6217%" y="789" width="0.4830%" height="15" fill="rgb(223,8,27)" fg:x="975" fg:w="24"/><text x="19.8717%" y="799.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (24 samples, 0.48%)</title><rect x="19.6217%" y="773" width="0.4830%" height="15" fill="rgb(216,217,28)" fg:x="975" fg:w="24"/><text x="19.8717%" y="783.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (24 samples, 0.48%)</title><rect x="19.6217%" y="757" width="0.4830%" height="15" fill="rgb(249,199,1)" fg:x="975" fg:w="24"/><text x="19.8717%" y="767.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (24 samples, 0.48%)</title><rect x="19.6217%" y="741" width="0.4830%" height="15" fill="rgb(240,85,17)" fg:x="975" fg:w="24"/><text x="19.8717%" y="751.50"></text></g><g><title>std::sys::unix::fs::File::write (24 samples, 0.48%)</title><rect x="19.6217%" y="725" width="0.4830%" height="15" fill="rgb(206,108,45)" fg:x="975" fg:w="24"/><text x="19.8717%" y="735.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (24 samples, 0.48%)</title><rect x="19.6217%" y="709" width="0.4830%" height="15" fill="rgb(245,210,41)" fg:x="975" fg:w="24"/><text x="19.8717%" y="719.50"></text></g><g><title>__libc_write (24 samples, 0.48%)</title><rect x="19.6217%" y="693" width="0.4830%" height="15" fill="rgb(206,13,37)" fg:x="975" fg:w="24"/><text x="19.8717%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.48%)</title><rect x="19.6217%" y="677" width="0.4830%" height="15" fill="rgb(250,61,18)" fg:x="975" fg:w="24"/><text x="19.8717%" y="687.50"></text></g><g><title>do_syscall_64 (24 samples, 0.48%)</title><rect x="19.6217%" y="661" width="0.4830%" height="15" fill="rgb(235,172,48)" fg:x="975" fg:w="24"/><text x="19.8717%" y="671.50"></text></g><g><title>ksys_write (24 samples, 0.48%)</title><rect x="19.6217%" y="645" width="0.4830%" height="15" fill="rgb(249,201,17)" fg:x="975" fg:w="24"/><text x="19.8717%" y="655.50"></text></g><g><title>vfs_write (22 samples, 0.44%)</title><rect x="19.6619%" y="629" width="0.4427%" height="15" fill="rgb(219,208,6)" fg:x="977" fg:w="22"/><text x="19.9119%" y="639.50"></text></g><g><title>security_file_permission (1 samples, 0.02%)</title><rect x="20.0845%" y="613" width="0.0201%" height="15" fill="rgb(248,31,23)" fg:x="998" fg:w="1"/><text x="20.3345%" y="623.50"></text></g><g><title>common_file_perm (1 samples, 0.02%)</title><rect x="20.0845%" y="597" width="0.0201%" height="15" fill="rgb(245,15,42)" fg:x="998" fg:w="1"/><text x="20.3345%" y="607.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.02%)</title><rect x="20.1046%" y="789" width="0.0201%" height="15" fill="rgb(222,217,39)" fg:x="999" fg:w="1"/><text x="20.3546%" y="799.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (10 samples, 0.20%)</title><rect x="20.1248%" y="789" width="0.2012%" height="15" fill="rgb(210,219,27)" fg:x="1000" fg:w="10"/><text x="20.3748%" y="799.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (10 samples, 0.20%)</title><rect x="20.1248%" y="773" width="0.2012%" height="15" fill="rgb(252,166,36)" fg:x="1000" fg:w="10"/><text x="20.3748%" y="783.50"></text></g><g><title>_nv020074rm (1 samples, 0.02%)</title><rect x="20.5474%" y="725" width="0.0201%" height="15" fill="rgb(245,132,34)" fg:x="1021" fg:w="1"/><text x="20.7974%" y="735.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="20.5675%" y="725" width="0.0201%" height="15" fill="rgb(236,54,3)" fg:x="1022" fg:w="1"/><text x="20.8175%" y="735.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.02%)</title><rect x="20.5876%" y="725" width="0.0201%" height="15" fill="rgb(241,173,43)" fg:x="1023" fg:w="1"/><text x="20.8376%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="20.6078%" y="725" width="0.0402%" height="15" fill="rgb(215,190,9)" fg:x="1024" fg:w="2"/><text x="20.8578%" y="735.50"></text></g><g><title>get_futex_key (2 samples, 0.04%)</title><rect x="21.0908%" y="645" width="0.0402%" height="15" fill="rgb(242,101,16)" fg:x="1048" fg:w="2"/><text x="21.3408%" y="655.50"></text></g><g><title>__unqueue_futex (2 samples, 0.04%)</title><rect x="21.3323%" y="629" width="0.0402%" height="15" fill="rgb(223,190,21)" fg:x="1060" fg:w="2"/><text x="21.5823%" y="639.50"></text></g><g><title>plist_del (2 samples, 0.04%)</title><rect x="21.3323%" y="613" width="0.0402%" height="15" fill="rgb(215,228,25)" fg:x="1060" fg:w="2"/><text x="21.5823%" y="623.50"></text></g><g><title>mark_wake_futex (17 samples, 0.34%)</title><rect x="21.1310%" y="645" width="0.3421%" height="15" fill="rgb(225,36,22)" fg:x="1050" fg:w="17"/><text x="21.3810%" y="655.50"></text></g><g><title>wake_q_add (5 samples, 0.10%)</title><rect x="21.3725%" y="629" width="0.1006%" height="15" fill="rgb(251,106,46)" fg:x="1062" fg:w="5"/><text x="21.6225%" y="639.50"></text></g><g><title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="21.7348%" y="613" width="0.0604%" height="15" fill="rgb(208,90,1)" fg:x="1080" fg:w="3"/><text x="21.9848%" y="623.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="21.7750%" y="597" width="0.0201%" height="15" fill="rgb(243,10,4)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="607.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="21.7750%" y="581" width="0.0201%" height="15" fill="rgb(212,137,27)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="591.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="21.7750%" y="565" width="0.0201%" height="15" fill="rgb(231,220,49)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="575.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="21.7750%" y="549" width="0.0201%" height="15" fill="rgb(237,96,20)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="559.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="21.7750%" y="533" width="0.0201%" height="15" fill="rgb(239,229,30)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="543.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="21.7750%" y="517" width="0.0201%" height="15" fill="rgb(219,65,33)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="21.7750%" y="501" width="0.0201%" height="15" fill="rgb(243,134,7)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="511.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="21.7750%" y="485" width="0.0201%" height="15" fill="rgb(216,177,54)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="495.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="21.7750%" y="469" width="0.0201%" height="15" fill="rgb(211,160,20)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="479.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="21.7750%" y="453" width="0.0201%" height="15" fill="rgb(239,85,39)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="463.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="21.7750%" y="437" width="0.0201%" height="15" fill="rgb(232,125,22)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="447.50"></text></g><g><title>snd_complete_urb (1 samples, 0.02%)</title><rect x="21.7750%" y="421" width="0.0201%" height="15" fill="rgb(244,57,34)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="431.50"></text></g><g><title>retire_playback_urb (1 samples, 0.02%)</title><rect x="21.7750%" y="405" width="0.0201%" height="15" fill="rgb(214,203,32)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="415.50"></text></g><g><title>snd_usb_pcm_delay.part.14 (1 samples, 0.02%)</title><rect x="21.7750%" y="389" width="0.0201%" height="15" fill="rgb(207,58,43)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="399.50"></text></g><g><title>xhci_get_frame (1 samples, 0.02%)</title><rect x="21.7750%" y="373" width="0.0201%" height="15" fill="rgb(215,193,15)" fg:x="1082" fg:w="1"/><text x="22.0250%" y="383.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.24%)</title><rect x="21.7951%" y="613" width="0.2415%" height="15" fill="rgb(232,15,44)" fg:x="1083" fg:w="12"/><text x="22.0451%" y="623.50"></text></g><g><title>select_idle_sibling (1 samples, 0.02%)</title><rect x="22.0165%" y="597" width="0.0201%" height="15" fill="rgb(212,3,48)" fg:x="1094" fg:w="1"/><text x="22.2665%" y="607.50"></text></g><g><title>available_idle_cpu (1 samples, 0.02%)</title><rect x="22.0165%" y="581" width="0.0201%" height="15" fill="rgb(218,128,7)" fg:x="1094" fg:w="1"/><text x="22.2665%" y="591.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.04%)</title><rect x="22.0970%" y="565" width="0.0402%" height="15" fill="rgb(226,216,39)" fg:x="1098" fg:w="2"/><text x="22.3470%" y="575.50"></text></g><g><title>update_cfs_group (1 samples, 0.02%)</title><rect x="22.1373%" y="565" width="0.0201%" height="15" fill="rgb(243,47,51)" fg:x="1100" fg:w="1"/><text x="22.3873%" y="575.50"></text></g><g><title>ttwu_do_activate (9 samples, 0.18%)</title><rect x="22.0366%" y="613" width="0.1811%" height="15" fill="rgb(241,183,40)" fg:x="1095" fg:w="9"/><text x="22.2866%" y="623.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.18%)</title><rect x="22.0366%" y="597" width="0.1811%" height="15" fill="rgb(231,217,32)" fg:x="1095" fg:w="9"/><text x="22.2866%" y="607.50"></text></g><g><title>enqueue_entity (6 samples, 0.12%)</title><rect x="22.0970%" y="581" width="0.1207%" height="15" fill="rgb(229,61,38)" fg:x="1098" fg:w="6"/><text x="22.3470%" y="591.50"></text></g><g><title>update_load_avg (3 samples, 0.06%)</title><rect x="22.1574%" y="565" width="0.0604%" height="15" fill="rgb(225,210,5)" fg:x="1101" fg:w="3"/><text x="22.4074%" y="575.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="22.1976%" y="549" width="0.0201%" height="15" fill="rgb(231,79,45)" fg:x="1103" fg:w="1"/><text x="22.4476%" y="559.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.06%)</title><rect x="22.2178%" y="613" width="0.0604%" height="15" fill="rgb(224,100,7)" fg:x="1104" fg:w="3"/><text x="22.4678%" y="623.50"></text></g><g><title>check_preempt_curr (3 samples, 0.06%)</title><rect x="22.2178%" y="597" width="0.0604%" height="15" fill="rgb(241,198,18)" fg:x="1104" fg:w="3"/><text x="22.4678%" y="607.50"></text></g><g><title>resched_curr (3 samples, 0.06%)</title><rect x="22.2178%" y="581" width="0.0604%" height="15" fill="rgb(252,97,53)" fg:x="1104" fg:w="3"/><text x="22.4678%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (83 samples, 1.67%)</title><rect x="20.6480%" y="725" width="1.6704%" height="15" fill="rgb(220,88,7)" fg:x="1026" fg:w="83"/><text x="20.8980%" y="735.50"></text></g><g><title>do_syscall_64 (83 samples, 1.67%)</title><rect x="20.6480%" y="709" width="1.6704%" height="15" fill="rgb(213,176,14)" fg:x="1026" fg:w="83"/><text x="20.8980%" y="719.50"></text></g><g><title>__x64_sys_futex (83 samples, 1.67%)</title><rect x="20.6480%" y="693" width="1.6704%" height="15" fill="rgb(246,73,7)" fg:x="1026" fg:w="83"/><text x="20.8980%" y="703.50"></text></g><g><title>do_futex (82 samples, 1.65%)</title><rect x="20.6681%" y="677" width="1.6502%" height="15" fill="rgb(245,64,36)" fg:x="1027" fg:w="82"/><text x="20.9181%" y="687.50"></text></g><g><title>futex_wake (81 samples, 1.63%)</title><rect x="20.6883%" y="661" width="1.6301%" height="15" fill="rgb(245,80,10)" fg:x="1028" fg:w="81"/><text x="20.9383%" y="671.50"></text></g><g><title>wake_up_q (42 samples, 0.85%)</title><rect x="21.4731%" y="645" width="0.8452%" height="15" fill="rgb(232,107,50)" fg:x="1067" fg:w="42"/><text x="21.7231%" y="655.50"></text></g><g><title>try_to_wake_up (41 samples, 0.83%)</title><rect x="21.4933%" y="629" width="0.8251%" height="15" fill="rgb(253,3,0)" fg:x="1068" fg:w="41"/><text x="21.7433%" y="639.50"></text></g><g><title>update_rq_clock (2 samples, 0.04%)</title><rect x="22.2781%" y="613" width="0.0402%" height="15" fill="rgb(212,99,53)" fg:x="1107" fg:w="2"/><text x="22.5281%" y="623.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="22.2781%" y="597" width="0.0402%" height="15" fill="rgb(249,111,54)" fg:x="1107" fg:w="2"/><text x="22.5281%" y="607.50"></text></g><g><title>sched_clock (2 samples, 0.04%)</title><rect x="22.2781%" y="581" width="0.0402%" height="15" fill="rgb(249,55,30)" fg:x="1107" fg:w="2"/><text x="22.5281%" y="591.50"></text></g><g><title>native_sched_clock (2 samples, 0.04%)</title><rect x="22.2781%" y="565" width="0.0402%" height="15" fill="rgb(237,47,42)" fg:x="1107" fg:w="2"/><text x="22.5281%" y="575.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (92 samples, 1.85%)</title><rect x="20.5071%" y="757" width="1.8515%" height="15" fill="rgb(211,20,18)" fg:x="1019" fg:w="92"/><text x="20.7571%" y="767.50">&lt;..</text></g><g><title>syscall (92 samples, 1.85%)</title><rect x="20.5071%" y="741" width="1.8515%" height="15" fill="rgb(231,203,46)" fg:x="1019" fg:w="92"/><text x="20.7571%" y="751.50">s..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.04%)</title><rect x="22.3184%" y="725" width="0.0402%" height="15" fill="rgb(237,142,3)" fg:x="1109" fg:w="2"/><text x="22.5684%" y="735.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (1 samples, 0.02%)</title><rect x="22.3586%" y="741" width="0.0201%" height="15" fill="rgb(241,107,1)" fg:x="1111" fg:w="1"/><text x="22.6086%" y="751.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="22.3586%" y="725" width="0.0201%" height="15" fill="rgb(229,83,13)" fg:x="1111" fg:w="1"/><text x="22.6086%" y="735.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="22.3586%" y="709" width="0.0201%" height="15" fill="rgb(241,91,40)" fg:x="1111" fg:w="1"/><text x="22.6086%" y="719.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="22.3586%" y="693" width="0.0201%" height="15" fill="rgb(225,3,45)" fg:x="1111" fg:w="1"/><text x="22.6086%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (1 samples, 0.02%)</title><rect x="22.3586%" y="677" width="0.0201%" height="15" fill="rgb(244,223,14)" fg:x="1111" fg:w="1"/><text x="22.6086%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (9 samples, 0.18%)</title><rect x="22.3586%" y="757" width="0.1811%" height="15" fill="rgb(224,124,37)" fg:x="1111" fg:w="9"/><text x="22.6086%" y="767.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.16%)</title><rect x="22.3787%" y="741" width="0.1610%" height="15" fill="rgb(251,171,30)" fg:x="1112" fg:w="8"/><text x="22.6287%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.16%)</title><rect x="22.3787%" y="725" width="0.1610%" height="15" fill="rgb(236,46,54)" fg:x="1112" fg:w="8"/><text x="22.6287%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.16%)</title><rect x="22.3787%" y="709" width="0.1610%" height="15" fill="rgb(245,213,5)" fg:x="1112" fg:w="8"/><text x="22.6287%" y="719.50"></text></g><g><title>__clock_gettime (8 samples, 0.16%)</title><rect x="22.3787%" y="693" width="0.1610%" height="15" fill="rgb(230,144,27)" fg:x="1112" fg:w="8"/><text x="22.6287%" y="703.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.14%)</title><rect x="22.3989%" y="677" width="0.1409%" height="15" fill="rgb(220,86,6)" fg:x="1113" fg:w="7"/><text x="22.6489%" y="687.50"></text></g><g><title>[[vdso]] (5 samples, 0.10%)</title><rect x="22.4391%" y="661" width="0.1006%" height="15" fill="rgb(240,20,13)" fg:x="1115" fg:w="5"/><text x="22.6891%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.02%)</title><rect x="22.5599%" y="741" width="0.0201%" height="15" fill="rgb(217,89,34)" fg:x="1121" fg:w="1"/><text x="22.8099%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="22.5599%" y="725" width="0.0201%" height="15" fill="rgb(229,13,5)" fg:x="1121" fg:w="1"/><text x="22.8099%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="22.5599%" y="709" width="0.0201%" height="15" fill="rgb(244,67,35)" fg:x="1121" fg:w="1"/><text x="22.8099%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.02%)</title><rect x="22.5800%" y="741" width="0.0201%" height="15" fill="rgb(221,40,2)" fg:x="1122" fg:w="1"/><text x="22.8300%" y="751.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (114 samples, 2.29%)</title><rect x="20.3260%" y="789" width="2.2942%" height="15" fill="rgb(237,157,21)" fg:x="1010" fg:w="114"/><text x="20.5760%" y="799.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (114 samples, 2.29%)</title><rect x="20.3260%" y="773" width="2.2942%" height="15" fill="rgb(222,94,11)" fg:x="1010" fg:w="114"/><text x="20.5760%" y="783.50">p..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.08%)</title><rect x="22.5397%" y="757" width="0.0805%" height="15" fill="rgb(249,113,6)" fg:x="1120" fg:w="4"/><text x="22.7897%" y="767.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (1 samples, 0.02%)</title><rect x="22.6001%" y="741" width="0.0201%" height="15" fill="rgb(238,137,36)" fg:x="1123" fg:w="1"/><text x="22.8501%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.26%)</title><rect x="22.6202%" y="773" width="0.2616%" height="15" fill="rgb(210,102,26)" fg:x="1124" fg:w="13"/><text x="22.8702%" y="783.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.8617%" y="757" width="0.0201%" height="15" fill="rgb(218,30,30)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="767.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.8617%" y="741" width="0.0201%" height="15" fill="rgb(214,67,26)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="22.8617%" y="725" width="0.0201%" height="15" fill="rgb(251,9,53)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="735.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="22.8617%" y="709" width="0.0201%" height="15" fill="rgb(228,204,25)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="719.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="22.8617%" y="693" width="0.0201%" height="15" fill="rgb(207,153,8)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="703.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="22.8617%" y="677" width="0.0201%" height="15" fill="rgb(242,9,16)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="687.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="22.8617%" y="661" width="0.0201%" height="15" fill="rgb(217,211,10)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="671.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="22.8617%" y="645" width="0.0201%" height="15" fill="rgb(219,228,52)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="655.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="22.8617%" y="629" width="0.0201%" height="15" fill="rgb(231,92,29)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="639.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="22.8617%" y="613" width="0.0201%" height="15" fill="rgb(232,8,23)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="623.50"></text></g><g><title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="22.8617%" y="597" width="0.0201%" height="15" fill="rgb(216,211,34)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="607.50"></text></g><g><title>delay_mwaitx (1 samples, 0.02%)</title><rect x="22.8617%" y="581" width="0.0201%" height="15" fill="rgb(236,151,0)" fg:x="1136" fg:w="1"/><text x="23.1117%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="22.8819%" y="773" width="0.0402%" height="15" fill="rgb(209,168,3)" fg:x="1137" fg:w="2"/><text x="23.1319%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="22.8819%" y="757" width="0.0402%" height="15" fill="rgb(208,129,28)" fg:x="1137" fg:w="2"/><text x="23.1319%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="22.8819%" y="741" width="0.0402%" height="15" fill="rgb(229,78,22)" fg:x="1137" fg:w="2"/><text x="23.1319%" y="751.50"></text></g><g><title>fred::multiplexer::responses::respond_to_caller (319 samples, 6.42%)</title><rect x="17.1463%" y="1013" width="6.4198%" height="15" fill="rgb(228,187,13)" fg:x="852" fg:w="319"/><text x="17.3963%" y="1023.50">fred::mu..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (260 samples, 5.23%)</title><rect x="18.3337%" y="997" width="5.2324%" height="15" fill="rgb(240,119,24)" fg:x="911" fg:w="260"/><text x="18.5837%" y="1007.50">tokio:..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (247 samples, 4.97%)</title><rect x="18.5953%" y="981" width="4.9708%" height="15" fill="rgb(209,194,42)" fg:x="924" fg:w="247"/><text x="18.8453%" y="991.50">tokio:..</text></g><g><title>tokio::sync::oneshot::Task::with_task (232 samples, 4.67%)</title><rect x="18.8972%" y="965" width="4.6689%" height="15" fill="rgb(247,200,46)" fg:x="939" fg:w="232"/><text x="19.1472%" y="975.50">tokio..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (232 samples, 4.67%)</title><rect x="18.8972%" y="949" width="4.6689%" height="15" fill="rgb(218,76,16)" fg:x="939" fg:w="232"/><text x="19.1472%" y="959.50">tokio..</text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (232 samples, 4.67%)</title><rect x="18.8972%" y="933" width="4.6689%" height="15" fill="rgb(225,21,48)" fg:x="939" fg:w="232"/><text x="19.1472%" y="943.50">tokio..</text></g><g><title>core::ops::function::FnOnce::call_once (232 samples, 4.67%)</title><rect x="18.8972%" y="917" width="4.6689%" height="15" fill="rgb(239,223,50)" fg:x="939" fg:w="232"/><text x="19.1472%" y="927.50">core:..</text></g><g><title>core::task::wake::Waker::wake_by_ref (232 samples, 4.67%)</title><rect x="18.8972%" y="901" width="4.6689%" height="15" fill="rgb(244,45,21)" fg:x="939" fg:w="232"/><text x="19.1472%" y="911.50">core:..</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (208 samples, 4.19%)</title><rect x="19.3802%" y="885" width="4.1860%" height="15" fill="rgb(232,33,43)" fg:x="963" fg:w="208"/><text x="19.6302%" y="895.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (208 samples, 4.19%)</title><rect x="19.3802%" y="869" width="4.1860%" height="15" fill="rgb(209,8,3)" fg:x="963" fg:w="208"/><text x="19.6302%" y="879.50">tokio..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (208 samples, 4.19%)</title><rect x="19.3802%" y="853" width="4.1860%" height="15" fill="rgb(214,25,53)" fg:x="963" fg:w="208"/><text x="19.6302%" y="863.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (200 samples, 4.02%)</title><rect x="19.5412%" y="837" width="4.0250%" height="15" fill="rgb(254,186,54)" fg:x="971" fg:w="200"/><text x="19.7912%" y="847.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (198 samples, 3.98%)</title><rect x="19.5814%" y="821" width="3.9847%" height="15" fill="rgb(208,174,49)" fg:x="973" fg:w="198"/><text x="19.8314%" y="831.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (196 samples, 3.94%)</title><rect x="19.6217%" y="805" width="3.9445%" height="15" fill="rgb(233,191,51)" fg:x="975" fg:w="196"/><text x="19.8717%" y="815.50">toki..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (47 samples, 0.95%)</title><rect x="22.6202%" y="789" width="0.9459%" height="15" fill="rgb(222,134,10)" fg:x="1124" fg:w="47"/><text x="22.8702%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (32 samples, 0.64%)</title><rect x="22.9221%" y="773" width="0.6440%" height="15" fill="rgb(230,226,20)" fg:x="1139" fg:w="32"/><text x="23.1721%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.34%)</title><rect x="23.2240%" y="757" width="0.3421%" height="15" fill="rgb(251,111,25)" fg:x="1154" fg:w="17"/><text x="23.4740%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.34%)</title><rect x="23.2240%" y="741" width="0.3421%" height="15" fill="rgb(224,40,46)" fg:x="1154" fg:w="17"/><text x="23.4740%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::metrics::LatencyStats&gt;&gt; (9 samples, 0.18%)</title><rect x="23.5862%" y="997" width="0.1811%" height="15" fill="rgb(236,108,47)" fg:x="1172" fg:w="9"/><text x="23.8362%" y="1007.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="23.5862%" y="981" width="0.1811%" height="15" fill="rgb(234,93,0)" fg:x="1172" fg:w="9"/><text x="23.8362%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (9 samples, 0.18%)</title><rect x="23.5862%" y="965" width="0.1811%" height="15" fill="rgb(224,213,32)" fg:x="1172" fg:w="9"/><text x="23.8362%" y="975.50"></text></g><g><title>fred::metrics::LatencyStats::sample (12 samples, 0.24%)</title><rect x="23.7674%" y="997" width="0.2415%" height="15" fill="rgb(251,11,48)" fg:x="1181" fg:w="12"/><text x="24.0174%" y="1007.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (8 samples, 0.16%)</title><rect x="24.0089%" y="997" width="0.1610%" height="15" fill="rgb(236,173,5)" fg:x="1193" fg:w="8"/><text x="24.2589%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (8 samples, 0.16%)</title><rect x="24.0089%" y="981" width="0.1610%" height="15" fill="rgb(230,95,12)" fg:x="1193" fg:w="8"/><text x="24.2589%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (2 samples, 0.04%)</title><rect x="24.2504%" y="965" width="0.0402%" height="15" fill="rgb(232,209,1)" fg:x="1205" fg:w="2"/><text x="24.5004%" y="975.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.18%)</title><rect x="24.1699%" y="997" width="0.1811%" height="15" fill="rgb(232,6,1)" fg:x="1201" fg:w="9"/><text x="24.4199%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.10%)</title><rect x="24.2504%" y="981" width="0.1006%" height="15" fill="rgb(210,224,50)" fg:x="1205" fg:w="5"/><text x="24.5004%" y="991.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.06%)</title><rect x="24.2906%" y="965" width="0.0604%" height="15" fill="rgb(228,127,35)" fg:x="1207" fg:w="3"/><text x="24.5406%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.02%)</title><rect x="24.3309%" y="949" width="0.0201%" height="15" fill="rgb(245,102,45)" fg:x="1209" fg:w="1"/><text x="24.5809%" y="959.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.02%)</title><rect x="24.3309%" y="933" width="0.0201%" height="15" fill="rgb(214,1,49)" fg:x="1209" fg:w="1"/><text x="24.5809%" y="943.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="24.3309%" y="917" width="0.0201%" height="15" fill="rgb(226,163,40)" fg:x="1209" fg:w="1"/><text x="24.5809%" y="927.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="24.3309%" y="901" width="0.0201%" height="15" fill="rgb(239,212,28)" fg:x="1209" fg:w="1"/><text x="24.5809%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (1 samples, 0.02%)</title><rect x="24.3309%" y="885" width="0.0201%" height="15" fill="rgb(220,20,13)" fg:x="1209" fg:w="1"/><text x="24.5809%" y="895.50"></text></g><g><title>fred::multiplexer::responses::sample_latency (68 samples, 1.37%)</title><rect x="23.5661%" y="1013" width="1.3685%" height="15" fill="rgb(210,164,35)" fg:x="1171" fg:w="68"/><text x="23.8161%" y="1023.50"></text></g><g><title>std::time::Instant::now (29 samples, 0.58%)</title><rect x="24.3510%" y="997" width="0.5836%" height="15" fill="rgb(248,109,41)" fg:x="1210" fg:w="29"/><text x="24.6010%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (28 samples, 0.56%)</title><rect x="24.3711%" y="981" width="0.5635%" height="15" fill="rgb(238,23,50)" fg:x="1211" fg:w="28"/><text x="24.6211%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::now (28 samples, 0.56%)</title><rect x="24.3711%" y="965" width="0.5635%" height="15" fill="rgb(211,48,49)" fg:x="1211" fg:w="28"/><text x="24.6211%" y="975.50"></text></g><g><title>__clock_gettime (27 samples, 0.54%)</title><rect x="24.3912%" y="949" width="0.5434%" height="15" fill="rgb(223,36,21)" fg:x="1212" fg:w="27"/><text x="24.6412%" y="959.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.52%)</title><rect x="24.4114%" y="933" width="0.5232%" height="15" fill="rgb(207,123,46)" fg:x="1213" fg:w="26"/><text x="24.6614%" y="943.50"></text></g><g><title>[[vdso]] (20 samples, 0.40%)</title><rect x="24.5321%" y="917" width="0.4025%" height="15" fill="rgb(240,218,32)" fg:x="1219" fg:w="20"/><text x="24.7821%" y="927.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (412 samples, 8.29%)</title><rect x="16.8243%" y="1109" width="8.2914%" height="15" fill="rgb(252,5,43)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1119.50">&lt;F as future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (412 samples, 8.29%)</title><rect x="16.8243%" y="1093" width="8.2914%" height="15" fill="rgb(252,84,19)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1103.50">&lt;core::futur..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (412 samples, 8.29%)</title><rect x="16.8243%" y="1077" width="8.2914%" height="15" fill="rgb(243,152,39)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1087.50">fred::multip..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (412 samples, 8.29%)</title><rect x="16.8243%" y="1061" width="8.2914%" height="15" fill="rgb(234,160,15)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1071.50">&lt;core::futur..</text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (412 samples, 8.29%)</title><rect x="16.8243%" y="1045" width="8.2914%" height="15" fill="rgb(237,34,20)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1055.50">fred::multip..</text></g><g><title>fred::multiplexer::responses::process_response (412 samples, 8.29%)</title><rect x="16.8243%" y="1029" width="8.2914%" height="15" fill="rgb(229,97,13)" fg:x="836" fg:w="412"/><text x="17.0743%" y="1039.50">fred::multip..</text></g><g><title>fred::utils::decr_atomic (9 samples, 0.18%)</title><rect x="24.9346%" y="1013" width="0.1811%" height="15" fill="rgb(234,71,50)" fg:x="1239" fg:w="9"/><text x="25.1846%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.18%)</title><rect x="24.9346%" y="997" width="0.1811%" height="15" fill="rgb(253,155,4)" fg:x="1239" fg:w="9"/><text x="25.1846%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.18%)</title><rect x="24.9346%" y="981" width="0.1811%" height="15" fill="rgb(222,185,37)" fg:x="1239" fg:w="9"/><text x="25.1846%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1269" width="8.3317%" height="15" fill="rgb(251,177,13)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1279.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1253" width="8.3317%" height="15" fill="rgb(250,179,40)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1263.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1237" width="8.3317%" height="15" fill="rgb(242,44,2)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1247.50">&lt;futures_uti..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1221" width="8.3317%" height="15" fill="rgb(216,177,13)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1231.50">&lt;F as future..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1205" width="8.3317%" height="15" fill="rgb(216,106,43)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1215.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1189" width="8.3317%" height="15" fill="rgb(216,183,2)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1199.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1173" width="8.3317%" height="15" fill="rgb(249,75,3)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1183.50">&lt;futures_uti..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1157" width="8.3317%" height="15" fill="rgb(219,67,39)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1167.50">&lt;futures_uti..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1141" width="8.3317%" height="15" fill="rgb(253,228,2)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1151.50">&lt;F as future..</text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (414 samples, 8.33%)</title><rect x="16.8243%" y="1125" width="8.3317%" height="15" fill="rgb(235,138,27)" fg:x="836" fg:w="414"/><text x="17.0743%" y="1135.50">&lt;futures_uti..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2 samples, 0.04%)</title><rect x="25.1157%" y="1109" width="0.0402%" height="15" fill="rgb(236,97,51)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.04%)</title><rect x="25.1157%" y="1093" width="0.0402%" height="15" fill="rgb(240,80,30)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1103.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.04%)</title><rect x="25.1157%" y="1077" width="0.0402%" height="15" fill="rgb(230,178,19)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1087.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.04%)</title><rect x="25.1157%" y="1061" width="0.0402%" height="15" fill="rgb(210,190,27)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1071.50"></text></g><g><title>tokio_util::util::poll_read_buf (2 samples, 0.04%)</title><rect x="25.1157%" y="1045" width="0.0402%" height="15" fill="rgb(222,107,31)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1055.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.04%)</title><rect x="25.1157%" y="1029" width="0.0402%" height="15" fill="rgb(216,127,34)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1039.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.04%)</title><rect x="25.1157%" y="1013" width="0.0402%" height="15" fill="rgb(234,116,52)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1023.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.04%)</title><rect x="25.1157%" y="997" width="0.0402%" height="15" fill="rgb(222,124,15)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="1007.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (2 samples, 0.04%)</title><rect x="25.1157%" y="981" width="0.0402%" height="15" fill="rgb(231,179,28)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="991.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (2 samples, 0.04%)</title><rect x="25.1157%" y="965" width="0.0402%" height="15" fill="rgb(226,93,45)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="975.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::_{{closure}} (2 samples, 0.04%)</title><rect x="25.1157%" y="949" width="0.0402%" height="15" fill="rgb(215,8,51)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="959.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.04%)</title><rect x="25.1157%" y="933" width="0.0402%" height="15" fill="rgb(223,106,5)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="943.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.04%)</title><rect x="25.1157%" y="917" width="0.0402%" height="15" fill="rgb(250,191,5)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="927.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2 samples, 0.04%)</title><rect x="25.1157%" y="901" width="0.0402%" height="15" fill="rgb(242,132,44)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="911.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2 samples, 0.04%)</title><rect x="25.1157%" y="885" width="0.0402%" height="15" fill="rgb(251,152,29)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="895.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.04%)</title><rect x="25.1157%" y="869" width="0.0402%" height="15" fill="rgb(218,179,5)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="879.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.04%)</title><rect x="25.1157%" y="853" width="0.0402%" height="15" fill="rgb(227,67,19)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.04%)</title><rect x="25.1157%" y="837" width="0.0402%" height="15" fill="rgb(233,119,31)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.04%)</title><rect x="25.1157%" y="821" width="0.0402%" height="15" fill="rgb(241,120,22)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="25.1157%" y="805" width="0.0402%" height="15" fill="rgb(224,102,30)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="815.50"></text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (2 samples, 0.04%)</title><rect x="25.1157%" y="789" width="0.0402%" height="15" fill="rgb(210,164,37)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="799.50"></text></g><g><title>fred::multiplexer::responses::process_response (2 samples, 0.04%)</title><rect x="25.1157%" y="773" width="0.0402%" height="15" fill="rgb(226,191,16)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="783.50"></text></g><g><title>fred::multiplexer::responses::respond_to_caller (2 samples, 0.04%)</title><rect x="25.1157%" y="757" width="0.0402%" height="15" fill="rgb(214,40,45)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="25.1157%" y="741" width="0.0402%" height="15" fill="rgb(244,29,26)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="25.1157%" y="725" width="0.0402%" height="15" fill="rgb(216,16,5)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="735.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (2 samples, 0.04%)</title><rect x="25.1157%" y="709" width="0.0402%" height="15" fill="rgb(249,76,35)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="719.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (2 samples, 0.04%)</title><rect x="25.1157%" y="693" width="0.0402%" height="15" fill="rgb(207,11,44)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="703.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (2 samples, 0.04%)</title><rect x="25.1157%" y="677" width="0.0402%" height="15" fill="rgb(228,190,49)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="25.1157%" y="661" width="0.0402%" height="15" fill="rgb(214,173,12)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="671.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (2 samples, 0.04%)</title><rect x="25.1157%" y="645" width="0.0402%" height="15" fill="rgb(218,26,35)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.04%)</title><rect x="25.1157%" y="629" width="0.0402%" height="15" fill="rgb(220,200,19)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (2 samples, 0.04%)</title><rect x="25.1157%" y="613" width="0.0402%" height="15" fill="rgb(239,95,49)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (2 samples, 0.04%)</title><rect x="25.1157%" y="597" width="0.0402%" height="15" fill="rgb(235,85,53)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2 samples, 0.04%)</title><rect x="25.1157%" y="581" width="0.0402%" height="15" fill="rgb(233,133,31)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="25.1157%" y="565" width="0.0402%" height="15" fill="rgb(218,25,20)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (2 samples, 0.04%)</title><rect x="25.1157%" y="549" width="0.0402%" height="15" fill="rgb(252,210,38)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (2 samples, 0.04%)</title><rect x="25.1157%" y="533" width="0.0402%" height="15" fill="rgb(242,134,21)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (2 samples, 0.04%)</title><rect x="25.1157%" y="517" width="0.0402%" height="15" fill="rgb(213,28,48)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.04%)</title><rect x="25.1157%" y="501" width="0.0402%" height="15" fill="rgb(250,196,2)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.04%)</title><rect x="25.1157%" y="485" width="0.0402%" height="15" fill="rgb(227,5,17)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="495.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2 samples, 0.04%)</title><rect x="25.1157%" y="469" width="0.0402%" height="15" fill="rgb(221,226,24)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="479.50"></text></g><g><title>syscall (2 samples, 0.04%)</title><rect x="25.1157%" y="453" width="0.0402%" height="15" fill="rgb(211,5,48)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="25.1157%" y="437" width="0.0402%" height="15" fill="rgb(219,150,6)" fg:x="1248" fg:w="2"/><text x="25.3657%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::types::RedisConfig&gt;&gt; (1 samples, 0.02%)</title><rect x="26.0012%" y="1013" width="0.0201%" height="15" fill="rgb(251,46,16)" fg:x="1292" fg:w="1"/><text x="26.2512%" y="1023.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="26.0012%" y="997" width="0.0201%" height="15" fill="rgb(220,204,40)" fg:x="1292" fg:w="1"/><text x="26.2512%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.02%)</title><rect x="26.0012%" y="981" width="0.0201%" height="15" fill="rgb(211,85,2)" fg:x="1292" fg:w="1"/><text x="26.2512%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.16%)</title><rect x="25.9006%" y="1077" width="0.1610%" height="15" fill="rgb(229,17,7)" fg:x="1287" fg:w="8"/><text x="26.1506%" y="1087.50"></text></g><g><title>fred::multiplexer::commands::check_deferred_multi_command::_{{closure}} (8 samples, 0.16%)</title><rect x="25.9006%" y="1061" width="0.1610%" height="15" fill="rgb(239,72,28)" fg:x="1287" fg:w="8"/><text x="26.1506%" y="1071.50"></text></g><g><title>fred::utils::should_send_multi_command (3 samples, 0.06%)</title><rect x="26.0012%" y="1045" width="0.0604%" height="15" fill="rgb(230,47,54)" fg:x="1292" fg:w="3"/><text x="26.2512%" y="1055.50"></text></g><g><title>fred::utils::is_clustered (3 samples, 0.06%)</title><rect x="26.0012%" y="1029" width="0.0604%" height="15" fill="rgb(214,50,8)" fg:x="1292" fg:w="3"/><text x="26.2512%" y="1039.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.04%)</title><rect x="26.0213%" y="1013" width="0.0402%" height="15" fill="rgb(216,198,43)" fg:x="1293" fg:w="2"/><text x="26.2713%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.04%)</title><rect x="26.0213%" y="997" width="0.0402%" height="15" fill="rgb(234,20,35)" fg:x="1293" fg:w="2"/><text x="26.2713%" y="1007.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.02%)</title><rect x="26.0415%" y="981" width="0.0201%" height="15" fill="rgb(254,45,19)" fg:x="1294" fg:w="1"/><text x="26.2915%" y="991.50"></text></g><g><title>&lt;fred::protocol::types::RedisCommandKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="26.0616%" y="1077" width="0.0201%" height="15" fill="rgb(219,14,44)" fg:x="1295" fg:w="1"/><text x="26.3116%" y="1087.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="26.0817%" y="1077" width="0.0604%" height="15" fill="rgb(217,220,26)" fg:x="1296" fg:w="3"/><text x="26.3317%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,fred::types::RedisConfig&gt;&gt; (6 samples, 0.12%)</title><rect x="26.1622%" y="1045" width="0.1207%" height="15" fill="rgb(213,158,28)" fg:x="1300" fg:w="6"/><text x="26.4122%" y="1055.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="26.1622%" y="1029" width="0.1207%" height="15" fill="rgb(252,51,52)" fg:x="1300" fg:w="6"/><text x="26.4122%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (6 samples, 0.12%)</title><rect x="26.1622%" y="1013" width="0.1207%" height="15" fill="rgb(246,89,16)" fg:x="1300" fg:w="6"/><text x="26.4122%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.58%)</title><rect x="25.8201%" y="1109" width="0.5836%" height="15" fill="rgb(216,158,49)" fg:x="1283" fg:w="29"/><text x="26.0701%" y="1119.50"></text></g><g><title>fred::multiplexer::commands::check_command_structure::_{{closure}} (29 samples, 0.58%)</title><rect x="25.8201%" y="1093" width="0.5836%" height="15" fill="rgb(236,107,19)" fg:x="1283" fg:w="29"/><text x="26.0701%" y="1103.50"></text></g><g><title>fred::multiplexer::commands::check_transaction_hash_slot (13 samples, 0.26%)</title><rect x="26.1421%" y="1077" width="0.2616%" height="15" fill="rgb(228,185,30)" fg:x="1299" fg:w="13"/><text x="26.3921%" y="1087.50"></text></g><g><title>fred::utils::is_clustered (12 samples, 0.24%)</title><rect x="26.1622%" y="1061" width="0.2415%" height="15" fill="rgb(246,134,8)" fg:x="1300" fg:w="12"/><text x="26.4122%" y="1071.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.12%)</title><rect x="26.2830%" y="1045" width="0.1207%" height="15" fill="rgb(214,143,50)" fg:x="1306" fg:w="6"/><text x="26.5330%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.12%)</title><rect x="26.2830%" y="1029" width="0.1207%" height="15" fill="rgb(228,75,8)" fg:x="1306" fg:w="6"/><text x="26.5330%" y="1039.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.02%)</title><rect x="26.3836%" y="1013" width="0.0201%" height="15" fill="rgb(207,175,4)" fg:x="1311" fg:w="1"/><text x="26.6336%" y="1023.50"></text></g><g><title>fred::multiplexer::commands::check_command_structure_t::_{{closure}} (33 samples, 0.66%)</title><rect x="25.8201%" y="1125" width="0.6641%" height="15" fill="rgb(205,108,24)" fg:x="1283" fg:w="33"/><text x="26.0701%" y="1135.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="26.4037%" y="1109" width="0.0805%" height="15" fill="rgb(244,120,49)" fg:x="1312" fg:w="4"/><text x="26.6537%" y="1119.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="26.5043%" y="1093" width="0.0805%" height="15" fill="rgb(223,47,38)" fg:x="1317" fg:w="4"/><text x="26.7543%" y="1103.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="27.4099%" y="997" width="0.0604%" height="15" fill="rgb(229,179,11)" fg:x="1362" fg:w="3"/><text x="27.6599%" y="1007.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.14%)</title><rect x="27.5508%" y="965" width="0.1409%" height="15" fill="rgb(231,122,1)" fg:x="1369" fg:w="7"/><text x="27.8008%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="27.7923%" y="949" width="0.0201%" height="15" fill="rgb(245,119,9)" fg:x="1381" fg:w="1"/><text x="28.0423%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.08%)</title><rect x="27.8124%" y="949" width="0.0805%" height="15" fill="rgb(241,163,25)" fg:x="1382" fg:w="4"/><text x="28.0624%" y="959.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="27.8124%" y="933" width="0.0805%" height="15" fill="rgb(217,214,3)" fg:x="1382" fg:w="4"/><text x="28.0624%" y="943.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="27.9332%" y="901" width="0.0805%" height="15" fill="rgb(240,86,28)" fg:x="1388" fg:w="4"/><text x="28.1832%" y="911.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (9 samples, 0.18%)</title><rect x="27.9131%" y="933" width="0.1811%" height="15" fill="rgb(215,47,9)" fg:x="1387" fg:w="9"/><text x="28.1631%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (8 samples, 0.16%)</title><rect x="27.9332%" y="917" width="0.1610%" height="15" fill="rgb(252,25,45)" fg:x="1388" fg:w="8"/><text x="28.1832%" y="927.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (4 samples, 0.08%)</title><rect x="28.0137%" y="901" width="0.0805%" height="15" fill="rgb(251,164,9)" fg:x="1392" fg:w="4"/><text x="28.2637%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (3 samples, 0.06%)</title><rect x="28.0338%" y="885" width="0.0604%" height="15" fill="rgb(233,194,0)" fg:x="1393" fg:w="3"/><text x="28.2838%" y="895.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (11 samples, 0.22%)</title><rect x="27.8929%" y="949" width="0.2214%" height="15" fill="rgb(249,111,24)" fg:x="1386" fg:w="11"/><text x="28.1429%" y="959.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1 samples, 0.02%)</title><rect x="28.0942%" y="933" width="0.0201%" height="15" fill="rgb(250,223,3)" fg:x="1396" fg:w="1"/><text x="28.3442%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1 samples, 0.02%)</title><rect x="28.0942%" y="917" width="0.0201%" height="15" fill="rgb(236,178,37)" fg:x="1396" fg:w="1"/><text x="28.3442%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;tokio_util::codec::framed::Framed&lt;tokio::net::tcp::stream::TcpStream,fred::protocol::codec::RedisCodec&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="28.1344%" y="869" width="0.0201%" height="15" fill="rgb(241,158,50)" fg:x="1398" fg:w="1"/><text x="28.3844%" y="879.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="28.1344%" y="853" width="0.0201%" height="15" fill="rgb(213,121,41)" fg:x="1398" fg:w="1"/><text x="28.3844%" y="863.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (1 samples, 0.02%)</title><rect x="28.1344%" y="837" width="0.0201%" height="15" fill="rgb(240,92,3)" fg:x="1398" fg:w="1"/><text x="28.3844%" y="847.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (3 samples, 0.06%)</title><rect x="28.1344%" y="917" width="0.0604%" height="15" fill="rgb(205,123,3)" fg:x="1398" fg:w="3"/><text x="28.3844%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (3 samples, 0.06%)</title><rect x="28.1344%" y="901" width="0.0604%" height="15" fill="rgb(205,97,47)" fg:x="1398" fg:w="3"/><text x="28.3844%" y="911.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (3 samples, 0.06%)</title><rect x="28.1344%" y="885" width="0.0604%" height="15" fill="rgb(247,152,14)" fg:x="1398" fg:w="3"/><text x="28.3844%" y="895.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (2 samples, 0.04%)</title><rect x="28.1546%" y="869" width="0.0402%" height="15" fill="rgb(248,195,53)" fg:x="1399" fg:w="2"/><text x="28.4046%" y="879.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (4 samples, 0.08%)</title><rect x="28.1344%" y="933" width="0.0805%" height="15" fill="rgb(226,201,16)" fg:x="1398" fg:w="4"/><text x="28.3844%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="28.1948%" y="917" width="0.0201%" height="15" fill="rgb(205,98,0)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="927.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="28.1948%" y="901" width="0.0201%" height="15" fill="rgb(214,191,48)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="911.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="28.1948%" y="885" width="0.0201%" height="15" fill="rgb(237,112,39)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="895.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="28.1948%" y="869" width="0.0201%" height="15" fill="rgb(247,203,27)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="879.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="28.1948%" y="853" width="0.0201%" height="15" fill="rgb(235,124,28)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.02%)</title><rect x="28.1948%" y="837" width="0.0201%" height="15" fill="rgb(208,207,46)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="847.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.02%)</title><rect x="28.1948%" y="821" width="0.0201%" height="15" fill="rgb(234,176,4)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="28.1948%" y="805" width="0.0201%" height="15" fill="rgb(230,133,28)" fg:x="1401" fg:w="1"/><text x="28.4448%" y="815.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="28.2351%" y="917" width="0.0201%" height="15" fill="rgb(211,137,40)" fg:x="1403" fg:w="1"/><text x="28.4851%" y="927.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="28.2351%" y="901" width="0.0201%" height="15" fill="rgb(254,35,13)" fg:x="1403" fg:w="1"/><text x="28.4851%" y="911.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="28.2552%" y="917" width="0.0201%" height="15" fill="rgb(225,49,51)" fg:x="1404" fg:w="1"/><text x="28.5052%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;tokio_util::codec::framed::Framed&lt;tokio::net::tcp::stream::TcpStream,fred::protocol::codec::RedisCodec&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="28.2753%" y="917" width="0.0604%" height="15" fill="rgb(251,10,15)" fg:x="1405" fg:w="3"/><text x="28.5253%" y="927.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="28.2753%" y="901" width="0.0604%" height="15" fill="rgb(228,207,15)" fg:x="1405" fg:w="3"/><text x="28.5253%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (1 samples, 0.02%)</title><rect x="28.3156%" y="885" width="0.0201%" height="15" fill="rgb(241,99,19)" fg:x="1407" fg:w="1"/><text x="28.5656%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.02%)</title><rect x="28.3156%" y="869" width="0.0201%" height="15" fill="rgb(207,104,49)" fg:x="1407" fg:w="1"/><text x="28.5656%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (1 samples, 0.02%)</title><rect x="28.3156%" y="853" width="0.0201%" height="15" fill="rgb(234,99,18)" fg:x="1407" fg:w="1"/><text x="28.5656%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.02%)</title><rect x="28.3156%" y="837" width="0.0201%" height="15" fill="rgb(213,191,49)" fg:x="1407" fg:w="1"/><text x="28.5656%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.02%)</title><rect x="28.3156%" y="821" width="0.0201%" height="15" fill="rgb(210,226,19)" fg:x="1407" fg:w="1"/><text x="28.5656%" y="831.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (6 samples, 0.12%)</title><rect x="28.3357%" y="917" width="0.1207%" height="15" fill="rgb(229,97,18)" fg:x="1408" fg:w="6"/><text x="28.5857%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.02%)</title><rect x="28.4363%" y="901" width="0.0201%" height="15" fill="rgb(211,167,15)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock::_{{closure}} (1 samples, 0.02%)</title><rect x="28.4363%" y="885" width="0.0201%" height="15" fill="rgb(210,169,34)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="28.4363%" y="869" width="0.0201%" height="15" fill="rgb(241,121,31)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="28.4363%" y="853" width="0.0201%" height="15" fill="rgb(232,40,11)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="28.4363%" y="837" width="0.0201%" height="15" fill="rgb(205,86,26)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="28.4363%" y="821" width="0.0201%" height="15" fill="rgb(231,126,28)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="28.4363%" y="805" width="0.0201%" height="15" fill="rgb(219,221,18)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.02%)</title><rect x="28.4363%" y="789" width="0.0201%" height="15" fill="rgb(211,40,0)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="799.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="28.4363%" y="773" width="0.0201%" height="15" fill="rgb(239,85,43)" fg:x="1413" fg:w="1"/><text x="28.6863%" y="783.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_ready (1 samples, 0.02%)</title><rect x="28.4564%" y="901" width="0.0201%" height="15" fill="rgb(231,55,21)" fg:x="1414" fg:w="1"/><text x="28.7064%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_ready (1 samples, 0.02%)</title><rect x="28.4564%" y="885" width="0.0201%" height="15" fill="rgb(225,184,43)" fg:x="1414" fg:w="1"/><text x="28.7064%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.02%)</title><rect x="28.4967%" y="837" width="0.0201%" height="15" fill="rgb(251,158,41)" fg:x="1416" fg:w="1"/><text x="28.7467%" y="847.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (3 samples, 0.06%)</title><rect x="28.4766%" y="901" width="0.0604%" height="15" fill="rgb(234,159,37)" fg:x="1415" fg:w="3"/><text x="28.7266%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (3 samples, 0.06%)</title><rect x="28.4766%" y="885" width="0.0604%" height="15" fill="rgb(216,204,22)" fg:x="1415" fg:w="3"/><text x="28.7266%" y="895.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (3 samples, 0.06%)</title><rect x="28.4766%" y="869" width="0.0604%" height="15" fill="rgb(214,17,3)" fg:x="1415" fg:w="3"/><text x="28.7266%" y="879.50"></text></g><g><title>fred::protocol::codec::encode_frame (2 samples, 0.04%)</title><rect x="28.4967%" y="853" width="0.0402%" height="15" fill="rgb(212,111,17)" fg:x="1416" fg:w="2"/><text x="28.7467%" y="863.50"></text></g><g><title>fred::metrics::SizeStats::sample (1 samples, 0.02%)</title><rect x="28.5168%" y="837" width="0.0201%" height="15" fill="rgb(221,157,24)" fg:x="1417" fg:w="1"/><text x="28.7668%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (17 samples, 0.34%)</title><rect x="28.2149%" y="933" width="0.3421%" height="15" fill="rgb(252,16,13)" fg:x="1402" fg:w="17"/><text x="28.4649%" y="943.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (5 samples, 0.10%)</title><rect x="28.4564%" y="917" width="0.1006%" height="15" fill="rgb(221,62,2)" fg:x="1414" fg:w="5"/><text x="28.7064%" y="927.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="28.5369%" y="901" width="0.0201%" height="15" fill="rgb(247,87,22)" fg:x="1418" fg:w="1"/><text x="28.7869%" y="911.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (24 samples, 0.48%)</title><rect x="28.1143%" y="949" width="0.4830%" height="15" fill="rgb(215,73,9)" fg:x="1397" fg:w="24"/><text x="28.3643%" y="959.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="28.5571%" y="933" width="0.0402%" height="15" fill="rgb(207,175,33)" fg:x="1419" fg:w="2"/><text x="28.8071%" y="943.50"></text></g><g><title>[libc-2.28.so] (10 samples, 0.20%)</title><rect x="28.5973%" y="949" width="0.2012%" height="15" fill="rgb(243,129,54)" fg:x="1421" fg:w="10"/><text x="28.8473%" y="959.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (2 samples, 0.04%)</title><rect x="28.7986%" y="949" width="0.0402%" height="15" fill="rgb(227,119,45)" fg:x="1431" fg:w="2"/><text x="29.0486%" y="959.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.04%)</title><rect x="28.7986%" y="933" width="0.0402%" height="15" fill="rgb(205,109,36)" fg:x="1431" fg:w="2"/><text x="29.0486%" y="943.50"></text></g><g><title>fred::multiplexer::Counters::should_send (1 samples, 0.02%)</title><rect x="28.8388%" y="949" width="0.0201%" height="15" fill="rgb(205,6,39)" fg:x="1433" fg:w="1"/><text x="29.0888%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.08%)</title><rect x="29.2212%" y="917" width="0.0805%" height="15" fill="rgb(221,32,16)" fg:x="1452" fg:w="4"/><text x="29.4712%" y="927.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="29.2212%" y="901" width="0.0805%" height="15" fill="rgb(228,144,50)" fg:x="1452" fg:w="4"/><text x="29.4712%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.12%)</title><rect x="29.3017%" y="917" width="0.1207%" height="15" fill="rgb(229,201,53)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.12%)</title><rect x="29.3017%" y="901" width="0.1207%" height="15" fill="rgb(249,153,27)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.12%)</title><rect x="29.3017%" y="885" width="0.1207%" height="15" fill="rgb(227,106,25)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.12%)</title><rect x="29.3017%" y="869" width="0.1207%" height="15" fill="rgb(230,65,29)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.12%)</title><rect x="29.3017%" y="853" width="0.1207%" height="15" fill="rgb(221,57,46)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.12%)</title><rect x="29.3017%" y="837" width="0.1207%" height="15" fill="rgb(229,161,17)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.12%)</title><rect x="29.3017%" y="821" width="0.1207%" height="15" fill="rgb(222,213,11)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.12%)</title><rect x="29.3017%" y="805" width="0.1207%" height="15" fill="rgb(235,35,13)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.12%)</title><rect x="29.3017%" y="789" width="0.1207%" height="15" fill="rgb(233,158,34)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.12%)</title><rect x="29.3017%" y="773" width="0.1207%" height="15" fill="rgb(215,151,48)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="783.50"></text></g><g><title>__libc_malloc (6 samples, 0.12%)</title><rect x="29.3017%" y="757" width="0.1207%" height="15" fill="rgb(229,84,14)" fg:x="1456" fg:w="6"/><text x="29.5517%" y="767.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="29.3822%" y="741" width="0.0402%" height="15" fill="rgb(229,68,14)" fg:x="1460" fg:w="2"/><text x="29.6322%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="29.4224%" y="917" width="0.0805%" height="15" fill="rgb(243,106,26)" fg:x="1462" fg:w="4"/><text x="29.6724%" y="927.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="29.4224%" y="901" width="0.0805%" height="15" fill="rgb(206,45,38)" fg:x="1462" fg:w="4"/><text x="29.6724%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.24%)</title><rect x="29.5029%" y="917" width="0.2415%" height="15" fill="rgb(226,6,15)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.24%)</title><rect x="29.5029%" y="901" width="0.2415%" height="15" fill="rgb(232,22,54)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.24%)</title><rect x="29.5029%" y="885" width="0.2415%" height="15" fill="rgb(229,222,32)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.24%)</title><rect x="29.5029%" y="869" width="0.2415%" height="15" fill="rgb(228,62,29)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.24%)</title><rect x="29.5029%" y="853" width="0.2415%" height="15" fill="rgb(251,103,34)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.24%)</title><rect x="29.5029%" y="837" width="0.2415%" height="15" fill="rgb(233,12,30)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="847.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.24%)</title><rect x="29.5029%" y="821" width="0.2415%" height="15" fill="rgb(238,52,0)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="831.50"></text></g><g><title>__libc_malloc (12 samples, 0.24%)</title><rect x="29.5029%" y="805" width="0.2415%" height="15" fill="rgb(223,98,5)" fg:x="1466" fg:w="12"/><text x="29.7529%" y="815.50"></text></g><g><title>fred::protocol::types::RedisCommandKind::cmd_str (7 samples, 0.14%)</title><rect x="29.7444%" y="917" width="0.1409%" height="15" fill="rgb(228,75,37)" fg:x="1478" fg:w="7"/><text x="29.9944%" y="927.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.14%)</title><rect x="30.0865%" y="901" width="0.1409%" height="15" fill="rgb(205,115,49)" fg:x="1495" fg:w="7"/><text x="30.3365%" y="911.50"></text></g><g><title>fred::protocol::types::RedisCommand::to_frame (75 samples, 1.51%)</title><rect x="28.8589%" y="949" width="1.5094%" height="15" fill="rgb(250,154,43)" fg:x="1434" fg:w="75"/><text x="29.1089%" y="959.50"></text></g><g><title>fred::protocol::utils::command_to_frame (75 samples, 1.51%)</title><rect x="28.8589%" y="933" width="1.5094%" height="15" fill="rgb(226,43,29)" fg:x="1434" fg:w="75"/><text x="29.1089%" y="943.50"></text></g><g><title>fred::protocol::utils::value_to_outgoing_frame (24 samples, 0.48%)</title><rect x="29.8853%" y="917" width="0.4830%" height="15" fill="rgb(249,228,39)" fg:x="1485" fg:w="24"/><text x="30.1353%" y="927.50"></text></g><g><title>__libc_malloc (7 samples, 0.14%)</title><rect x="30.2274%" y="901" width="0.1409%" height="15" fill="rgb(216,79,43)" fg:x="1502" fg:w="7"/><text x="30.4774%" y="911.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="30.2677%" y="885" width="0.1006%" height="15" fill="rgb(228,95,12)" fg:x="1504" fg:w="5"/><text x="30.5177%" y="895.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="30.3482%" y="869" width="0.0201%" height="15" fill="rgb(249,221,15)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="879.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="30.3482%" y="853" width="0.0201%" height="15" fill="rgb(233,34,13)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="863.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="30.3482%" y="837" width="0.0201%" height="15" fill="rgb(214,103,39)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="847.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="30.3482%" y="821" width="0.0201%" height="15" fill="rgb(251,126,39)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="831.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="30.3482%" y="805" width="0.0201%" height="15" fill="rgb(214,216,36)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="815.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="30.3482%" y="789" width="0.0201%" height="15" fill="rgb(220,221,8)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="799.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="30.3482%" y="773" width="0.0201%" height="15" fill="rgb(240,216,3)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="783.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="30.3482%" y="757" width="0.0201%" height="15" fill="rgb(232,218,17)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="767.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="30.3482%" y="741" width="0.0201%" height="15" fill="rgb(229,163,45)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="751.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="30.3482%" y="725" width="0.0201%" height="15" fill="rgb(231,110,42)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="735.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="30.3482%" y="709" width="0.0201%" height="15" fill="rgb(208,170,48)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="719.50"></text></g><g><title>snd_complete_urb (1 samples, 0.02%)</title><rect x="30.3482%" y="693" width="0.0201%" height="15" fill="rgb(239,116,25)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="703.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="30.3482%" y="677" width="0.0201%" height="15" fill="rgb(219,200,50)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="687.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="30.3482%" y="661" width="0.0201%" height="15" fill="rgb(245,200,0)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="671.50"></text></g><g><title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="30.3482%" y="645" width="0.0201%" height="15" fill="rgb(245,119,33)" fg:x="1508" fg:w="1"/><text x="30.5982%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt;&gt; (6 samples, 0.12%)</title><rect x="30.3683%" y="933" width="0.1207%" height="15" fill="rgb(231,125,12)" fg:x="1509" fg:w="6"/><text x="30.6183%" y="943.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="30.3683%" y="917" width="0.1207%" height="15" fill="rgb(216,96,41)" fg:x="1509" fg:w="6"/><text x="30.6183%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (6 samples, 0.12%)</title><rect x="30.3683%" y="901" width="0.1207%" height="15" fill="rgb(248,43,45)" fg:x="1509" fg:w="6"/><text x="30.6183%" y="911.50"></text></g><g><title>fred::utils::is_locked_some (16 samples, 0.32%)</title><rect x="30.3683%" y="949" width="0.3220%" height="15" fill="rgb(217,222,7)" fg:x="1509" fg:w="16"/><text x="30.6183%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.20%)</title><rect x="30.4890%" y="933" width="0.2012%" height="15" fill="rgb(233,28,6)" fg:x="1515" fg:w="10"/><text x="30.7390%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.20%)</title><rect x="30.4890%" y="917" width="0.2012%" height="15" fill="rgb(231,218,15)" fg:x="1515" fg:w="10"/><text x="30.7390%" y="927.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (8 samples, 0.16%)</title><rect x="30.5293%" y="901" width="0.1610%" height="15" fill="rgb(226,171,48)" fg:x="1517" fg:w="8"/><text x="30.7793%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 3.36%)</title><rect x="27.5508%" y="981" width="3.3608%" height="15" fill="rgb(235,201,9)" fg:x="1369" fg:w="167"/><text x="27.8008%" y="991.50">&lt;co..</text></g><g><title>fred::protocol::connection::write_command::_{{closure}} (160 samples, 3.22%)</title><rect x="27.6917%" y="965" width="3.2200%" height="15" fill="rgb(217,80,15)" fg:x="1376" fg:w="160"/><text x="27.9417%" y="975.50">fre..</text></g><g><title>std::time::Instant::now (11 samples, 0.22%)</title><rect x="30.6903%" y="949" width="0.2214%" height="15" fill="rgb(219,152,8)" fg:x="1525" fg:w="11"/><text x="30.9403%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (11 samples, 0.22%)</title><rect x="30.6903%" y="933" width="0.2214%" height="15" fill="rgb(243,107,38)" fg:x="1525" fg:w="11"/><text x="30.9403%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.22%)</title><rect x="30.6903%" y="917" width="0.2214%" height="15" fill="rgb(231,17,5)" fg:x="1525" fg:w="11"/><text x="30.9403%" y="927.50"></text></g><g><title>__clock_gettime (11 samples, 0.22%)</title><rect x="30.6903%" y="901" width="0.2214%" height="15" fill="rgb(209,25,54)" fg:x="1525" fg:w="11"/><text x="30.9403%" y="911.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.22%)</title><rect x="30.6903%" y="885" width="0.2214%" height="15" fill="rgb(219,0,2)" fg:x="1525" fg:w="11"/><text x="30.9403%" y="895.50"></text></g><g><title>[[vdso]] (10 samples, 0.20%)</title><rect x="30.7104%" y="869" width="0.2012%" height="15" fill="rgb(246,9,5)" fg:x="1526" fg:w="10"/><text x="30.9604%" y="879.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="30.8915%" y="853" width="0.0201%" height="15" fill="rgb(226,159,4)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="863.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="30.8915%" y="837" width="0.0201%" height="15" fill="rgb(219,175,34)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="847.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="30.8915%" y="821" width="0.0201%" height="15" fill="rgb(236,10,46)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="831.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="30.8915%" y="805" width="0.0201%" height="15" fill="rgb(240,211,16)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="815.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="30.8915%" y="789" width="0.0201%" height="15" fill="rgb(205,3,43)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="799.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="30.8915%" y="773" width="0.0201%" height="15" fill="rgb(245,7,22)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="783.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="30.8915%" y="757" width="0.0201%" height="15" fill="rgb(239,132,32)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="767.50"></text></g><g><title>check_preempt_curr (1 samples, 0.02%)</title><rect x="30.8915%" y="741" width="0.0201%" height="15" fill="rgb(228,202,34)" fg:x="1535" fg:w="1"/><text x="31.1415%" y="751.50"></text></g><g><title>[libc-2.28.so] (8 samples, 0.16%)</title><rect x="30.9117%" y="981" width="0.1610%" height="15" fill="rgb(254,200,22)" fg:x="1536" fg:w="8"/><text x="31.1617%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::back_mut (1 samples, 0.02%)</title><rect x="31.0727%" y="981" width="0.0201%" height="15" fill="rgb(219,10,39)" fg:x="1544" fg:w="1"/><text x="31.3227%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::get_mut (1 samples, 0.02%)</title><rect x="31.0727%" y="965" width="0.0201%" height="15" fill="rgb(226,210,39)" fg:x="1544" fg:w="1"/><text x="31.3227%" y="975.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_back (3 samples, 0.06%)</title><rect x="31.0928%" y="981" width="0.0604%" height="15" fill="rgb(208,219,16)" fg:x="1545" fg:w="3"/><text x="31.3428%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (3 samples, 0.06%)</title><rect x="31.0928%" y="965" width="0.0604%" height="15" fill="rgb(216,158,51)" fg:x="1545" fg:w="3"/><text x="31.3428%" y="975.50"></text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="31.0928%" y="949" width="0.0604%" height="15" fill="rgb(233,14,44)" fg:x="1545" fg:w="3"/><text x="31.3428%" y="959.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="31.0928%" y="933" width="0.0604%" height="15" fill="rgb(237,97,39)" fg:x="1545" fg:w="3"/><text x="31.3428%" y="943.50"></text></g><g><title>fred::multiplexer::utils::write_command::_{{closure}} (185 samples, 3.72%)</title><rect x="27.4703%" y="997" width="3.7231%" height="15" fill="rgb(218,198,43)" fg:x="1365" fg:w="185"/><text x="27.7203%" y="1007.50">fred..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::protocol::connection::write_command::{{closure}}&gt;&gt; (2 samples, 0.04%)</title><rect x="31.1531%" y="981" width="0.0402%" height="15" fill="rgb(231,104,20)" fg:x="1548" fg:w="2"/><text x="31.4031%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::protocol::connection::write_command::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="31.1733%" y="965" width="0.0201%" height="15" fill="rgb(254,36,13)" fg:x="1549" fg:w="1"/><text x="31.4233%" y="975.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.02%)</title><rect x="31.4953%" y="917" width="0.0201%" height="15" fill="rgb(248,14,50)" fg:x="1565" fg:w="1"/><text x="31.7453%" y="927.50"></text></g><g><title>tokio::coop::poll_proceed (3 samples, 0.06%)</title><rect x="31.4953%" y="965" width="0.0604%" height="15" fill="rgb(217,107,29)" fg:x="1565" fg:w="3"/><text x="31.7453%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.06%)</title><rect x="31.4953%" y="949" width="0.0604%" height="15" fill="rgb(251,169,33)" fg:x="1565" fg:w="3"/><text x="31.7453%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.06%)</title><rect x="31.4953%" y="933" width="0.0604%" height="15" fill="rgb(217,108,32)" fg:x="1565" fg:w="3"/><text x="31.7453%" y="943.50"></text></g><g><title>tokio::coop::poll_proceed::_{{closure}} (2 samples, 0.04%)</title><rect x="31.5154%" y="917" width="0.0402%" height="15" fill="rgb(219,66,42)" fg:x="1566" fg:w="2"/><text x="31.7654%" y="927.50"></text></g><g><title>tokio::coop::Budget::decrement (1 samples, 0.02%)</title><rect x="31.5355%" y="901" width="0.0201%" height="15" fill="rgb(206,180,7)" fg:x="1567" fg:w="1"/><text x="31.7855%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (4 samples, 0.08%)</title><rect x="31.7166%" y="949" width="0.0805%" height="15" fill="rgb(208,226,31)" fg:x="1576" fg:w="4"/><text x="31.9666%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="31.7166%" y="933" width="0.0805%" height="15" fill="rgb(218,26,49)" fg:x="1576" fg:w="4"/><text x="31.9666%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.08%)</title><rect x="31.7166%" y="917" width="0.0805%" height="15" fill="rgb(233,197,48)" fg:x="1576" fg:w="4"/><text x="31.9666%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="31.7971%" y="949" width="0.0402%" height="15" fill="rgb(252,181,51)" fg:x="1580" fg:w="2"/><text x="32.0471%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="31.7971%" y="933" width="0.0402%" height="15" fill="rgb(253,90,19)" fg:x="1580" fg:w="2"/><text x="32.0471%" y="943.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.08%)</title><rect x="31.8374%" y="949" width="0.0805%" height="15" fill="rgb(215,171,30)" fg:x="1582" fg:w="4"/><text x="32.0874%" y="959.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::_{{closure}} (4 samples, 0.08%)</title><rect x="31.8374%" y="933" width="0.0805%" height="15" fill="rgb(214,222,9)" fg:x="1582" fg:w="4"/><text x="32.0874%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.08%)</title><rect x="31.8374%" y="917" width="0.0805%" height="15" fill="rgb(223,3,22)" fg:x="1582" fg:w="4"/><text x="32.0874%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (4 samples, 0.08%)</title><rect x="31.8374%" y="901" width="0.0805%" height="15" fill="rgb(225,196,46)" fg:x="1582" fg:w="4"/><text x="32.0874%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2 samples, 0.04%)</title><rect x="31.8776%" y="885" width="0.0402%" height="15" fill="rgb(209,110,37)" fg:x="1584" fg:w="2"/><text x="32.1276%" y="895.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.02%)</title><rect x="31.9179%" y="933" width="0.0201%" height="15" fill="rgb(249,89,12)" fg:x="1586" fg:w="1"/><text x="32.1679%" y="943.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (3 samples, 0.06%)</title><rect x="31.9179%" y="949" width="0.0604%" height="15" fill="rgb(226,27,33)" fg:x="1586" fg:w="3"/><text x="32.1679%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="31.9380%" y="933" width="0.0402%" height="15" fill="rgb(213,82,22)" fg:x="1587" fg:w="2"/><text x="32.1880%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (2 samples, 0.04%)</title><rect x="31.9380%" y="917" width="0.0402%" height="15" fill="rgb(248,140,0)" fg:x="1587" fg:w="2"/><text x="32.1880%" y="927.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="31.9380%" y="901" width="0.0402%" height="15" fill="rgb(228,106,3)" fg:x="1587" fg:w="2"/><text x="32.1880%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.04%)</title><rect x="31.9380%" y="885" width="0.0402%" height="15" fill="rgb(209,23,37)" fg:x="1587" fg:w="2"/><text x="32.1880%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (6 samples, 0.12%)</title><rect x="31.9783%" y="949" width="0.1207%" height="15" fill="rgb(241,93,50)" fg:x="1589" fg:w="6"/><text x="32.2283%" y="959.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (38 samples, 0.76%)</title><rect x="31.3745%" y="981" width="0.7647%" height="15" fill="rgb(253,46,43)" fg:x="1559" fg:w="38"/><text x="31.6245%" y="991.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (29 samples, 0.58%)</title><rect x="31.5556%" y="965" width="0.5836%" height="15" fill="rgb(226,206,43)" fg:x="1568" fg:w="29"/><text x="31.8056%" y="975.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (2 samples, 0.04%)</title><rect x="32.0990%" y="949" width="0.0402%" height="15" fill="rgb(217,54,7)" fg:x="1595" fg:w="2"/><text x="32.3490%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="32.0990%" y="933" width="0.0402%" height="15" fill="rgb(223,5,52)" fg:x="1595" fg:w="2"/><text x="32.3490%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (1 samples, 0.02%)</title><rect x="32.1393%" y="981" width="0.0201%" height="15" fill="rgb(206,52,46)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="991.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="32.1393%" y="965" width="0.0201%" height="15" fill="rgb(253,136,11)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="975.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.1393%" y="949" width="0.0201%" height="15" fill="rgb(208,106,33)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="959.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.1393%" y="933" width="0.0201%" height="15" fill="rgb(206,54,4)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="943.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="32.1393%" y="917" width="0.0201%" height="15" fill="rgb(213,3,15)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="927.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="32.1393%" y="901" width="0.0201%" height="15" fill="rgb(252,211,39)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="911.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="32.1393%" y="885" width="0.0201%" height="15" fill="rgb(223,6,36)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="895.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="32.1393%" y="869" width="0.0201%" height="15" fill="rgb(252,169,45)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="879.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="32.1393%" y="853" width="0.0201%" height="15" fill="rgb(212,48,26)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="863.50"></text></g><g><title>account_user_time (1 samples, 0.02%)</title><rect x="32.1393%" y="837" width="0.0201%" height="15" fill="rgb(251,102,48)" fg:x="1597" fg:w="1"/><text x="32.3893%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (243 samples, 4.89%)</title><rect x="27.2892%" y="1013" width="4.8903%" height="15" fill="rgb(243,208,16)" fg:x="1356" fg:w="243"/><text x="27.5392%" y="1023.50">&lt;core:..</text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (49 samples, 0.99%)</title><rect x="31.1934%" y="997" width="0.9861%" height="15" fill="rgb(219,96,24)" fg:x="1550" fg:w="49"/><text x="31.4434%" y="1007.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.02%)</title><rect x="32.1594%" y="981" width="0.0201%" height="15" fill="rgb(219,33,29)" fg:x="1598" fg:w="1"/><text x="32.4094%" y="991.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="32.1795%" y="1013" width="0.1207%" height="15" fill="rgb(223,176,5)" fg:x="1599" fg:w="6"/><text x="32.4295%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tokio::sync::rwlock::RwLock&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;::write::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="32.3003%" y="1013" width="0.0201%" height="15" fill="rgb(228,140,14)" fg:x="1605" fg:w="1"/><text x="32.5503%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::RwLock&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;::write::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="32.3003%" y="997" width="0.0201%" height="15" fill="rgb(217,179,31)" fg:x="1605" fg:w="1"/><text x="32.5503%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="32.4009%" y="965" width="0.0201%" height="15" fill="rgb(230,9,30)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="975.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.4009%" y="949" width="0.0201%" height="15" fill="rgb(230,136,20)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="959.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.4009%" y="933" width="0.0201%" height="15" fill="rgb(215,210,22)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="943.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="32.4009%" y="917" width="0.0201%" height="15" fill="rgb(218,43,5)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="927.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="32.4009%" y="901" width="0.0201%" height="15" fill="rgb(216,11,5)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="911.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="32.4009%" y="885" width="0.0201%" height="15" fill="rgb(209,82,29)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="895.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="32.4009%" y="869" width="0.0201%" height="15" fill="rgb(244,115,12)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="879.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="32.4009%" y="853" width="0.0201%" height="15" fill="rgb(222,82,18)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="863.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="32.4009%" y="837" width="0.0201%" height="15" fill="rgb(249,227,8)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="847.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="32.4009%" y="821" width="0.0201%" height="15" fill="rgb(253,141,45)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="831.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="32.4009%" y="805" width="0.0201%" height="15" fill="rgb(234,184,4)" fg:x="1610" fg:w="1"/><text x="32.6509%" y="815.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (3 samples, 0.06%)</title><rect x="32.4210%" y="965" width="0.0604%" height="15" fill="rgb(218,194,23)" fg:x="1611" fg:w="3"/><text x="32.6710%" y="975.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (1 samples, 0.02%)</title><rect x="32.5216%" y="821" width="0.0201%" height="15" fill="rgb(235,66,41)" fg:x="1616" fg:w="1"/><text x="32.7716%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.02%)</title><rect x="32.5216%" y="805" width="0.0201%" height="15" fill="rgb(245,217,1)" fg:x="1616" fg:w="1"/><text x="32.7716%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.02%)</title><rect x="32.5216%" y="789" width="0.0201%" height="15" fill="rgb(229,91,1)" fg:x="1616" fg:w="1"/><text x="32.7716%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="32.6021%" y="773" width="0.0201%" height="15" fill="rgb(207,101,30)" fg:x="1620" fg:w="1"/><text x="32.8521%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="32.6021%" y="757" width="0.0201%" height="15" fill="rgb(223,82,49)" fg:x="1620" fg:w="1"/><text x="32.8521%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (12 samples, 0.24%)</title><rect x="32.5015%" y="853" width="0.2415%" height="15" fill="rgb(218,167,17)" fg:x="1615" fg:w="12"/><text x="32.7515%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (11 samples, 0.22%)</title><rect x="32.5216%" y="837" width="0.2214%" height="15" fill="rgb(208,103,14)" fg:x="1616" fg:w="11"/><text x="32.7716%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (10 samples, 0.20%)</title><rect x="32.5418%" y="821" width="0.2012%" height="15" fill="rgb(238,20,8)" fg:x="1617" fg:w="10"/><text x="32.7918%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (10 samples, 0.20%)</title><rect x="32.5418%" y="805" width="0.2012%" height="15" fill="rgb(218,80,54)" fg:x="1617" fg:w="10"/><text x="32.7918%" y="815.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.18%)</title><rect x="32.5619%" y="789" width="0.1811%" height="15" fill="rgb(240,144,17)" fg:x="1618" fg:w="9"/><text x="32.8119%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (6 samples, 0.12%)</title><rect x="32.6223%" y="773" width="0.1207%" height="15" fill="rgb(245,27,50)" fg:x="1621" fg:w="6"/><text x="32.8723%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (4 samples, 0.08%)</title><rect x="32.6625%" y="757" width="0.0805%" height="15" fill="rgb(251,51,7)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.08%)</title><rect x="32.6625%" y="741" width="0.0805%" height="15" fill="rgb(245,217,29)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="751.50"></text></g><g><title>core::mem::take (4 samples, 0.08%)</title><rect x="32.6625%" y="725" width="0.0805%" height="15" fill="rgb(221,176,29)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="735.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="32.6625%" y="709" width="0.0805%" height="15" fill="rgb(212,180,24)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="719.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="32.6625%" y="693" width="0.0805%" height="15" fill="rgb(254,24,2)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="32.6625%" y="677" width="0.0805%" height="15" fill="rgb(230,100,2)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="32.6625%" y="661" width="0.0805%" height="15" fill="rgb(219,142,25)" fg:x="1623" fg:w="4"/><text x="32.9125%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.28%)</title><rect x="32.4814%" y="965" width="0.2817%" height="15" fill="rgb(240,73,43)" fg:x="1614" fg:w="14"/><text x="32.7314%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.28%)</title><rect x="32.4814%" y="949" width="0.2817%" height="15" fill="rgb(214,114,15)" fg:x="1614" fg:w="14"/><text x="32.7314%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.28%)</title><rect x="32.4814%" y="933" width="0.2817%" height="15" fill="rgb(207,130,4)" fg:x="1614" fg:w="14"/><text x="32.7314%" y="943.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (14 samples, 0.28%)</title><rect x="32.4814%" y="917" width="0.2817%" height="15" fill="rgb(221,25,40)" fg:x="1614" fg:w="14"/><text x="32.7314%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (13 samples, 0.26%)</title><rect x="32.5015%" y="901" width="0.2616%" height="15" fill="rgb(241,184,7)" fg:x="1615" fg:w="13"/><text x="32.7515%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.26%)</title><rect x="32.5015%" y="885" width="0.2616%" height="15" fill="rgb(235,159,4)" fg:x="1615" fg:w="13"/><text x="32.7515%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (13 samples, 0.26%)</title><rect x="32.5015%" y="869" width="0.2616%" height="15" fill="rgb(214,87,48)" fg:x="1615" fg:w="13"/><text x="32.7515%" y="879.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="32.7430%" y="853" width="0.0201%" height="15" fill="rgb(246,198,24)" fg:x="1627" fg:w="1"/><text x="32.9930%" y="863.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="32.7631%" y="965" width="0.0201%" height="15" fill="rgb(209,66,40)" fg:x="1628" fg:w="1"/><text x="33.0131%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (1 samples, 0.02%)</title><rect x="32.7631%" y="949" width="0.0201%" height="15" fill="rgb(233,147,39)" fg:x="1628" fg:w="1"/><text x="33.0131%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="32.7631%" y="933" width="0.0201%" height="15" fill="rgb(231,145,52)" fg:x="1628" fg:w="1"/><text x="33.0131%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="32.7631%" y="917" width="0.0201%" height="15" fill="rgb(206,20,26)" fg:x="1628" fg:w="1"/><text x="33.0131%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.02%)</title><rect x="32.7833%" y="965" width="0.0201%" height="15" fill="rgb(238,220,4)" fg:x="1629" fg:w="1"/><text x="33.0333%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (1 samples, 0.02%)</title><rect x="32.8034%" y="965" width="0.0201%" height="15" fill="rgb(252,195,42)" fg:x="1630" fg:w="1"/><text x="33.0534%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.02%)</title><rect x="32.8034%" y="949" width="0.0201%" height="15" fill="rgb(209,10,6)" fg:x="1630" fg:w="1"/><text x="33.0534%" y="959.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (1 samples, 0.02%)</title><rect x="32.8235%" y="965" width="0.0201%" height="15" fill="rgb(229,3,52)" fg:x="1631" fg:w="1"/><text x="33.0735%" y="975.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (26 samples, 0.52%)</title><rect x="32.3405%" y="981" width="0.5232%" height="15" fill="rgb(253,49,37)" fg:x="1607" fg:w="26"/><text x="32.5905%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.02%)</title><rect x="32.8436%" y="965" width="0.0201%" height="15" fill="rgb(240,103,49)" fg:x="1632" fg:w="1"/><text x="33.0936%" y="975.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (1 samples, 0.02%)</title><rect x="32.8436%" y="949" width="0.0201%" height="15" fill="rgb(250,182,30)" fg:x="1632" fg:w="1"/><text x="33.0936%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="32.8436%" y="933" width="0.0201%" height="15" fill="rgb(248,8,30)" fg:x="1632" fg:w="1"/><text x="33.0936%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (28 samples, 0.56%)</title><rect x="32.3204%" y="1013" width="0.5635%" height="15" fill="rgb(237,120,30)" fg:x="1606" fg:w="28"/><text x="32.5704%" y="1023.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.56%)</title><rect x="32.3204%" y="997" width="0.5635%" height="15" fill="rgb(221,146,34)" fg:x="1606" fg:w="28"/><text x="32.5704%" y="1007.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (1 samples, 0.02%)</title><rect x="32.8638%" y="981" width="0.0201%" height="15" fill="rgb(242,55,13)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="32.8638%" y="965" width="0.0201%" height="15" fill="rgb(242,112,31)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="32.8638%" y="949" width="0.0201%" height="15" fill="rgb(249,192,27)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="32.8638%" y="933" width="0.0201%" height="15" fill="rgb(208,204,44)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.02%)</title><rect x="32.8638%" y="917" width="0.0201%" height="15" fill="rgb(208,93,54)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="32.8638%" y="901" width="0.0201%" height="15" fill="rgb(242,1,31)" fg:x="1633" fg:w="1"/><text x="33.1138%" y="911.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (2 samples, 0.04%)</title><rect x="32.9443%" y="965" width="0.0402%" height="15" fill="rgb(241,83,25)" fg:x="1637" fg:w="2"/><text x="33.1943%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="32.9845%" y="965" width="0.0201%" height="15" fill="rgb(205,169,50)" fg:x="1639" fg:w="1"/><text x="33.2345%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="32.9845%" y="949" width="0.0201%" height="15" fill="rgb(239,186,37)" fg:x="1639" fg:w="1"/><text x="33.2345%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="32.9845%" y="933" width="0.0201%" height="15" fill="rgb(205,221,10)" fg:x="1639" fg:w="1"/><text x="33.2345%" y="943.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="32.9845%" y="917" width="0.0201%" height="15" fill="rgb(218,196,15)" fg:x="1639" fg:w="1"/><text x="33.2345%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (8 samples, 0.16%)</title><rect x="32.8839%" y="981" width="0.1610%" height="15" fill="rgb(218,196,35)" fg:x="1634" fg:w="8"/><text x="33.1339%" y="991.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="33.0046%" y="965" width="0.0402%" height="15" fill="rgb(233,63,24)" fg:x="1640" fg:w="2"/><text x="33.2546%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (2 samples, 0.04%)</title><rect x="33.0046%" y="949" width="0.0402%" height="15" fill="rgb(225,8,4)" fg:x="1640" fg:w="2"/><text x="33.2546%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="33.0046%" y="933" width="0.0402%" height="15" fill="rgb(234,105,35)" fg:x="1640" fg:w="2"/><text x="33.2546%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.04%)</title><rect x="33.0046%" y="917" width="0.0402%" height="15" fill="rgb(236,21,32)" fg:x="1640" fg:w="2"/><text x="33.2546%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;core::option::Option&lt;fred::protocol::connection::RedisSink&gt;&gt;&gt; (13 samples, 0.26%)</title><rect x="32.8839%" y="1013" width="0.2616%" height="15" fill="rgb(228,109,6)" fg:x="1634" fg:w="13"/><text x="33.1339%" y="1023.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.26%)</title><rect x="32.8839%" y="997" width="0.2616%" height="15" fill="rgb(229,215,31)" fg:x="1634" fg:w="13"/><text x="33.1339%" y="1007.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (5 samples, 0.10%)</title><rect x="33.0449%" y="981" width="0.1006%" height="15" fill="rgb(221,52,54)" fg:x="1642" fg:w="5"/><text x="33.2949%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.10%)</title><rect x="33.0449%" y="965" width="0.1006%" height="15" fill="rgb(252,129,43)" fg:x="1642" fg:w="5"/><text x="33.2949%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.10%)</title><rect x="33.0449%" y="949" width="0.1006%" height="15" fill="rgb(248,183,27)" fg:x="1642" fg:w="5"/><text x="33.2949%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.10%)</title><rect x="33.0449%" y="933" width="0.1006%" height="15" fill="rgb(250,0,22)" fg:x="1642" fg:w="5"/><text x="33.2949%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="33.1455%" y="1013" width="0.0201%" height="15" fill="rgb(213,166,10)" fg:x="1647" fg:w="1"/><text x="33.3955%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (318 samples, 6.40%)</title><rect x="26.8464%" y="1045" width="6.3997%" height="15" fill="rgb(207,163,36)" fg:x="1334" fg:w="318"/><text x="27.0964%" y="1055.50">&lt;core::f..</text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (312 samples, 6.28%)</title><rect x="26.9672%" y="1029" width="6.2789%" height="15" fill="rgb(208,122,22)" fg:x="1340" fg:w="312"/><text x="27.2172%" y="1039.50">fred::mu..</text></g><g><title>fred::multiplexer::utils::should_apply_backpressure (4 samples, 0.08%)</title><rect x="33.1656%" y="1013" width="0.0805%" height="15" fill="rgb(207,104,49)" fg:x="1648" fg:w="4"/><text x="33.4156%" y="1023.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="33.2461%" y="1045" width="0.1207%" height="15" fill="rgb(248,211,50)" fg:x="1652" fg:w="6"/><text x="33.4961%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (338 samples, 6.80%)</title><rect x="26.6050%" y="1077" width="6.8022%" height="15" fill="rgb(217,13,45)" fg:x="1322" fg:w="338"/><text x="26.8550%" y="1087.50">&lt;core::fu..</text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (330 samples, 6.64%)</title><rect x="26.7659%" y="1061" width="6.6412%" height="15" fill="rgb(211,216,49)" fg:x="1330" fg:w="330"/><text x="27.0159%" y="1071.50">fred::mul..</text></g><g><title>fred::multiplexer::utils::max_attempts_reached (2 samples, 0.04%)</title><rect x="33.3669%" y="1045" width="0.0402%" height="15" fill="rgb(221,58,53)" fg:x="1658" fg:w="2"/><text x="33.6169%" y="1055.50"></text></g><g><title>fred::protocol::types::RedisCommand::max_attempts_exceeded (2 samples, 0.04%)</title><rect x="33.3669%" y="1029" width="0.0402%" height="15" fill="rgb(220,112,41)" fg:x="1658" fg:w="2"/><text x="33.6169%" y="1039.50"></text></g><g><title>[libc-2.28.so] (12 samples, 0.24%)</title><rect x="33.4071%" y="1077" width="0.2415%" height="15" fill="rgb(236,38,28)" fg:x="1660" fg:w="12"/><text x="33.6571%" y="1087.50"></text></g><g><title>_nv029748rm (1 samples, 0.02%)</title><rect x="33.6285%" y="1061" width="0.0201%" height="15" fill="rgb(227,195,22)" fg:x="1671" fg:w="1"/><text x="33.8785%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (357 samples, 7.18%)</title><rect x="26.4842%" y="1109" width="7.1845%" height="15" fill="rgb(214,55,33)" fg:x="1316" fg:w="357"/><text x="26.7342%" y="1119.50">&lt;core::fut..</text></g><g><title>fred::multiplexer::commands::write_command::_{{closure}} (352 samples, 7.08%)</title><rect x="26.5848%" y="1093" width="7.0839%" height="15" fill="rgb(248,80,13)" fg:x="1321" fg:w="352"/><text x="26.8348%" y="1103.50">fred::mult..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::Multiplexer::write::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="33.6486%" y="1077" width="0.0201%" height="15" fill="rgb(238,52,6)" fg:x="1672" fg:w="1"/><text x="33.8986%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::Multiplexer::write::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="33.6486%" y="1061" width="0.0201%" height="15" fill="rgb(224,198,47)" fg:x="1672" fg:w="1"/><text x="33.8986%" y="1071.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="33.6687%" y="1109" width="0.0805%" height="15" fill="rgb(233,171,20)" fg:x="1673" fg:w="4"/><text x="33.9187%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (395 samples, 7.95%)</title><rect x="25.8201%" y="1141" width="7.9493%" height="15" fill="rgb(241,30,25)" fg:x="1283" fg:w="395"/><text x="26.0701%" y="1151.50">&lt;core::futu..</text></g><g><title>fred::multiplexer::commands::write_command_t::_{{closure}} (362 samples, 7.29%)</title><rect x="26.4842%" y="1125" width="7.2852%" height="15" fill="rgb(207,171,38)" fg:x="1316" fg:w="362"/><text x="26.7342%" y="1135.50">fred::mult..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::write_command::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="33.7492%" y="1109" width="0.0201%" height="15" fill="rgb(234,70,1)" fg:x="1677" fg:w="1"/><text x="33.9992%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::multiplexer::commands::write_command::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="33.7492%" y="1093" width="0.0201%" height="15" fill="rgb(232,178,18)" fg:x="1677" fg:w="1"/><text x="33.9992%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.10%)</title><rect x="33.7694%" y="1141" width="0.1006%" height="15" fill="rgb(241,78,40)" fg:x="1678" fg:w="5"/><text x="34.0194%" y="1151.50"></text></g><g><title>&lt;fred::protocol::types::RedisCommandKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="33.8700%" y="1141" width="0.0201%" height="15" fill="rgb(222,35,25)" fg:x="1683" fg:w="1"/><text x="34.1200%" y="1151.50"></text></g><g><title>[libc-2.28.so] (20 samples, 0.40%)</title><rect x="33.8901%" y="1141" width="0.4025%" height="15" fill="rgb(207,92,16)" fg:x="1684" fg:w="20"/><text x="34.1401%" y="1151.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="34.2725%" y="1125" width="0.0201%" height="15" fill="rgb(216,59,51)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1135.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="34.2725%" y="1109" width="0.0201%" height="15" fill="rgb(213,80,28)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1119.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="34.2725%" y="1093" width="0.0201%" height="15" fill="rgb(220,93,7)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1103.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="34.2725%" y="1077" width="0.0201%" height="15" fill="rgb(225,24,44)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1087.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="34.2725%" y="1061" width="0.0201%" height="15" fill="rgb(243,74,40)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1071.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="34.2725%" y="1045" width="0.0201%" height="15" fill="rgb(228,39,7)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1055.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="34.2725%" y="1029" width="0.0201%" height="15" fill="rgb(227,79,8)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1039.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="34.2725%" y="1013" width="0.0201%" height="15" fill="rgb(236,58,11)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1023.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="34.2725%" y="997" width="0.0201%" height="15" fill="rgb(249,63,35)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="1007.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="34.2725%" y="981" width="0.0201%" height="15" fill="rgb(252,114,16)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="991.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.02%)</title><rect x="34.2725%" y="965" width="0.0201%" height="15" fill="rgb(254,151,24)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="975.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="34.2725%" y="949" width="0.0201%" height="15" fill="rgb(253,54,39)" fg:x="1703" fg:w="1"/><text x="34.5225%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::check_command_structure_t::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="34.2926%" y="1141" width="0.0201%" height="15" fill="rgb(243,25,45)" fg:x="1704" fg:w="1"/><text x="34.5426%" y="1151.50"></text></g><g><title>fred::client::RedisClientInner::log_client_name_fn (1 samples, 0.02%)</title><rect x="34.3127%" y="1141" width="0.0201%" height="15" fill="rgb(234,134,9)" fg:x="1705" fg:w="1"/><text x="34.5627%" y="1151.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.02%)</title><rect x="34.3127%" y="1125" width="0.0201%" height="15" fill="rgb(227,166,31)" fg:x="1705" fg:w="1"/><text x="34.5627%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;fred::client::MultiPolicy&gt;&gt;&gt; (4 samples, 0.08%)</title><rect x="34.3932%" y="1109" width="0.0805%" height="15" fill="rgb(245,143,41)" fg:x="1709" fg:w="4"/><text x="34.6432%" y="1119.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="34.3932%" y="1093" width="0.0805%" height="15" fill="rgb(238,181,32)" fg:x="1709" fg:w="4"/><text x="34.6432%" y="1103.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.08%)</title><rect x="34.3932%" y="1077" width="0.0805%" height="15" fill="rgb(224,113,18)" fg:x="1709" fg:w="4"/><text x="34.6432%" y="1087.50"></text></g><g><title>fred::multiplexer::commands::should_disable_pipeline (9 samples, 0.18%)</title><rect x="34.3329%" y="1141" width="0.1811%" height="15" fill="rgb(240,229,28)" fg:x="1706" fg:w="9"/><text x="34.5829%" y="1151.50"></text></g><g><title>fred::utils::is_locked_some (6 samples, 0.12%)</title><rect x="34.3932%" y="1125" width="0.1207%" height="15" fill="rgb(250,185,3)" fg:x="1709" fg:w="6"/><text x="34.6432%" y="1135.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.04%)</title><rect x="34.4737%" y="1109" width="0.0402%" height="15" fill="rgb(212,59,25)" fg:x="1713" fg:w="2"/><text x="34.7237%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.04%)</title><rect x="34.4737%" y="1093" width="0.0402%" height="15" fill="rgb(221,87,20)" fg:x="1713" fg:w="2"/><text x="34.7237%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (472 samples, 9.50%)</title><rect x="25.1560%" y="1269" width="9.4989%" height="15" fill="rgb(213,74,28)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1279.50">&lt;futures_util:..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (472 samples, 9.50%)</title><rect x="25.1560%" y="1253" width="9.4989%" height="15" fill="rgb(224,132,34)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1263.50">&lt;F as futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (472 samples, 9.50%)</title><rect x="25.1560%" y="1237" width="9.4989%" height="15" fill="rgb(222,101,24)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1247.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::commands::init::_{{closure}}::_{{closure}}::_{{closure}} (472 samples, 9.50%)</title><rect x="25.1560%" y="1221" width="9.4989%" height="15" fill="rgb(254,142,4)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1231.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (472 samples, 9.50%)</title><rect x="25.1560%" y="1205" width="9.4989%" height="15" fill="rgb(230,229,49)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1215.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::commands::handle_command_t::_{{closure}} (472 samples, 9.50%)</title><rect x="25.1560%" y="1189" width="9.4989%" height="15" fill="rgb(238,70,47)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1199.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (472 samples, 9.50%)</title><rect x="25.1560%" y="1173" width="9.4989%" height="15" fill="rgb(231,160,17)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1183.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (472 samples, 9.50%)</title><rect x="25.1560%" y="1157" width="9.4989%" height="15" fill="rgb(218,68,53)" fg:x="1250" fg:w="472"/><text x="25.4060%" y="1167.50">fred::multiple..</text></g><g><title>fred::utils::decr_atomic (7 samples, 0.14%)</title><rect x="34.5140%" y="1141" width="0.1409%" height="15" fill="rgb(236,111,10)" fg:x="1715" fg:w="7"/><text x="34.7640%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.10%)</title><rect x="34.5542%" y="1125" width="0.1006%" height="15" fill="rgb(224,34,41)" fg:x="1717" fg:w="5"/><text x="34.8042%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.10%)</title><rect x="34.5542%" y="1109" width="0.1006%" height="15" fill="rgb(241,118,19)" fg:x="1717" fg:w="5"/><text x="34.8042%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.06%)</title><rect x="35.1379%" y="997" width="0.0604%" height="15" fill="rgb(238,129,25)" fg:x="1746" fg:w="3"/><text x="35.3879%" y="1007.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="35.2184%" y="981" width="0.1207%" height="15" fill="rgb(238,22,31)" fg:x="1750" fg:w="6"/><text x="35.4684%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="35.3391%" y="981" width="0.0201%" height="15" fill="rgb(222,174,48)" fg:x="1756" fg:w="1"/><text x="35.5891%" y="991.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="35.4196%" y="933" width="0.0402%" height="15" fill="rgb(206,152,40)" fg:x="1760" fg:w="2"/><text x="35.6696%" y="943.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="35.4599%" y="917" width="0.0402%" height="15" fill="rgb(218,99,54)" fg:x="1762" fg:w="2"/><text x="35.7099%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="35.4599%" y="901" width="0.0402%" height="15" fill="rgb(220,174,26)" fg:x="1762" fg:w="2"/><text x="35.7099%" y="911.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="35.4599%" y="885" width="0.0402%" height="15" fill="rgb(245,116,9)" fg:x="1762" fg:w="2"/><text x="35.7099%" y="895.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="35.4800%" y="869" width="0.0201%" height="15" fill="rgb(209,72,35)" fg:x="1763" fg:w="1"/><text x="35.7300%" y="879.50"></text></g><g><title>alloc::rc::is_dangling (1 samples, 0.02%)</title><rect x="35.4800%" y="853" width="0.0201%" height="15" fill="rgb(226,126,21)" fg:x="1763" fg:w="1"/><text x="35.7300%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (3 samples, 0.06%)</title><rect x="35.5001%" y="885" width="0.0604%" height="15" fill="rgb(227,192,1)" fg:x="1764" fg:w="3"/><text x="35.7501%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.04%)</title><rect x="35.5202%" y="869" width="0.0402%" height="15" fill="rgb(237,180,29)" fg:x="1765" fg:w="2"/><text x="35.7702%" y="879.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (1 samples, 0.02%)</title><rect x="35.5605%" y="885" width="0.0201%" height="15" fill="rgb(230,197,35)" fg:x="1767" fg:w="1"/><text x="35.8105%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.14%)</title><rect x="35.4599%" y="933" width="0.1409%" height="15" fill="rgb(246,193,31)" fg:x="1762" fg:w="7"/><text x="35.7099%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt; (5 samples, 0.10%)</title><rect x="35.5001%" y="917" width="0.1006%" height="15" fill="rgb(241,36,4)" fg:x="1764" fg:w="5"/><text x="35.7501%" y="927.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="35.5001%" y="901" width="0.1006%" height="15" fill="rgb(241,130,17)" fg:x="1764" fg:w="5"/><text x="35.7501%" y="911.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (1 samples, 0.02%)</title><rect x="35.5806%" y="885" width="0.0201%" height="15" fill="rgb(206,137,32)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="35.5806%" y="869" width="0.0201%" height="15" fill="rgb(237,228,51)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="879.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task::_{{closure}} (1 samples, 0.02%)</title><rect x="35.5806%" y="853" width="0.0201%" height="15" fill="rgb(243,6,42)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="35.5806%" y="837" width="0.0201%" height="15" fill="rgb(251,74,28)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="35.5806%" y="821" width="0.0201%" height="15" fill="rgb(218,20,49)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="35.5806%" y="805" width="0.0201%" height="15" fill="rgb(238,28,14)" fg:x="1768" fg:w="1"/><text x="35.8306%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt;&gt; (20 samples, 0.40%)</title><rect x="35.3592%" y="981" width="0.4025%" height="15" fill="rgb(229,40,46)" fg:x="1757" fg:w="20"/><text x="35.6092%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;redis_protocol::types::Frame,fred::error::RedisError&gt;&gt;&gt;&gt; (20 samples, 0.40%)</title><rect x="35.3592%" y="965" width="0.4025%" height="15" fill="rgb(244,195,20)" fg:x="1757" fg:w="20"/><text x="35.6092%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.40%)</title><rect x="35.3592%" y="949" width="0.4025%" height="15" fill="rgb(253,56,35)" fg:x="1757" fg:w="20"/><text x="35.6092%" y="959.50"></text></g><g><title>cfree (8 samples, 0.16%)</title><rect x="35.6007%" y="933" width="0.1610%" height="15" fill="rgb(210,149,44)" fg:x="1769" fg:w="8"/><text x="35.8507%" y="943.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="35.7818%" y="965" width="0.0604%" height="15" fill="rgb(240,135,12)" fg:x="1778" fg:w="3"/><text x="36.0318%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="35.8221%" y="949" width="0.0201%" height="15" fill="rgb(251,24,50)" fg:x="1780" fg:w="1"/><text x="36.0721%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="35.8221%" y="933" width="0.0201%" height="15" fill="rgb(243,200,47)" fg:x="1780" fg:w="1"/><text x="36.0721%" y="943.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (1 samples, 0.02%)</title><rect x="35.8422%" y="965" width="0.0201%" height="15" fill="rgb(224,166,26)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="35.8422%" y="949" width="0.0201%" height="15" fill="rgb(233,0,47)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="35.8422%" y="933" width="0.0201%" height="15" fill="rgb(253,80,5)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="943.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="35.8422%" y="917" width="0.0201%" height="15" fill="rgb(214,133,25)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="927.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="35.8422%" y="901" width="0.0201%" height="15" fill="rgb(209,27,14)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="911.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="35.8422%" y="885" width="0.0201%" height="15" fill="rgb(219,102,51)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="35.8422%" y="869" width="0.0201%" height="15" fill="rgb(237,18,16)" fg:x="1781" fg:w="1"/><text x="36.0922%" y="879.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.04%)</title><rect x="35.8623%" y="917" width="0.0402%" height="15" fill="rgb(241,85,17)" fg:x="1782" fg:w="2"/><text x="36.1123%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="35.8825%" y="901" width="0.0201%" height="15" fill="rgb(236,90,42)" fg:x="1783" fg:w="1"/><text x="36.1325%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="35.8825%" y="885" width="0.0201%" height="15" fill="rgb(249,57,21)" fg:x="1783" fg:w="1"/><text x="36.1325%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="35.8825%" y="869" width="0.0201%" height="15" fill="rgb(243,12,36)" fg:x="1783" fg:w="1"/><text x="36.1325%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.14%)</title><rect x="35.9026%" y="901" width="0.1409%" height="15" fill="rgb(253,128,47)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.14%)</title><rect x="35.9026%" y="885" width="0.1409%" height="15" fill="rgb(207,33,20)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="895.50"></text></g><g><title>core::mem::replace (7 samples, 0.14%)</title><rect x="35.9026%" y="869" width="0.1409%" height="15" fill="rgb(233,215,35)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="879.50"></text></g><g><title>core::mem::swap (7 samples, 0.14%)</title><rect x="35.9026%" y="853" width="0.1409%" height="15" fill="rgb(249,188,52)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.14%)</title><rect x="35.9026%" y="837" width="0.1409%" height="15" fill="rgb(225,12,32)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.14%)</title><rect x="35.9026%" y="821" width="0.1409%" height="15" fill="rgb(247,98,14)" fg:x="1784" fg:w="7"/><text x="36.1526%" y="831.50"></text></g><g><title>tokio::coop::poll_proceed (10 samples, 0.20%)</title><rect x="35.8623%" y="965" width="0.2012%" height="15" fill="rgb(247,219,48)" fg:x="1782" fg:w="10"/><text x="36.1123%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.20%)</title><rect x="35.8623%" y="949" width="0.2012%" height="15" fill="rgb(253,60,48)" fg:x="1782" fg:w="10"/><text x="36.1123%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.20%)</title><rect x="35.8623%" y="933" width="0.2012%" height="15" fill="rgb(245,15,52)" fg:x="1782" fg:w="10"/><text x="36.1123%" y="943.50"></text></g><g><title>tokio::coop::poll_proceed::_{{closure}} (8 samples, 0.16%)</title><rect x="35.9026%" y="917" width="0.1610%" height="15" fill="rgb(220,133,28)" fg:x="1784" fg:w="8"/><text x="36.1526%" y="927.50"></text></g><g><title>tokio::coop::Budget::decrement (1 samples, 0.02%)</title><rect x="36.0435%" y="901" width="0.0201%" height="15" fill="rgb(217,180,4)" fg:x="1791" fg:w="1"/><text x="36.2935%" y="911.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.02%)</title><rect x="36.0636%" y="965" width="0.0201%" height="15" fill="rgb(251,24,1)" fg:x="1792" fg:w="1"/><text x="36.3136%" y="975.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (1 samples, 0.02%)</title><rect x="36.0837%" y="965" width="0.0201%" height="15" fill="rgb(212,185,49)" fg:x="1793" fg:w="1"/><text x="36.3337%" y="975.50"></text></g><g><title>tokio::sync::oneshot::State::load (7 samples, 0.14%)</title><rect x="36.1038%" y="965" width="0.1409%" height="15" fill="rgb(215,175,22)" fg:x="1794" fg:w="7"/><text x="36.3538%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="36.2246%" y="949" width="0.0201%" height="15" fill="rgb(250,205,14)" fg:x="1800" fg:w="1"/><text x="36.4746%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="36.2246%" y="933" width="0.0201%" height="15" fill="rgb(225,211,22)" fg:x="1800" fg:w="1"/><text x="36.4746%" y="943.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (9 samples, 0.18%)</title><rect x="36.2447%" y="965" width="0.1811%" height="15" fill="rgb(251,179,42)" fg:x="1801" fg:w="9"/><text x="36.4947%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.18%)</title><rect x="36.2447%" y="949" width="0.1811%" height="15" fill="rgb(208,216,51)" fg:x="1801" fg:w="9"/><text x="36.4947%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.18%)</title><rect x="36.2447%" y="933" width="0.1811%" height="15" fill="rgb(235,36,11)" fg:x="1801" fg:w="9"/><text x="36.4947%" y="943.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 1.27%)</title><rect x="35.1982%" y="997" width="1.2679%" height="15" fill="rgb(213,189,28)" fg:x="1749" fg:w="63"/><text x="35.4482%" y="1007.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (35 samples, 0.70%)</title><rect x="35.7617%" y="981" width="0.7044%" height="15" fill="rgb(227,203,42)" fg:x="1777" fg:w="35"/><text x="36.0117%" y="991.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (2 samples, 0.04%)</title><rect x="36.4258%" y="965" width="0.0402%" height="15" fill="rgb(244,72,36)" fg:x="1810" fg:w="2"/><text x="36.6758%" y="975.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.04%)</title><rect x="36.4258%" y="949" width="0.0402%" height="15" fill="rgb(213,53,17)" fg:x="1810" fg:w="2"/><text x="36.6758%" y="959.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::_{{closure}} (2 samples, 0.04%)</title><rect x="36.4258%" y="933" width="0.0402%" height="15" fill="rgb(207,167,3)" fg:x="1810" fg:w="2"/><text x="36.6758%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="36.4258%" y="917" width="0.0402%" height="15" fill="rgb(216,98,30)" fg:x="1810" fg:w="2"/><text x="36.6758%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2 samples, 0.04%)</title><rect x="36.4258%" y="901" width="0.0402%" height="15" fill="rgb(236,123,15)" fg:x="1810" fg:w="2"/><text x="36.6758%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.02%)</title><rect x="36.4460%" y="885" width="0.0201%" height="15" fill="rgb(248,81,50)" fg:x="1811" fg:w="1"/><text x="36.6960%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (92 samples, 1.85%)</title><rect x="34.6549%" y="1269" width="1.8515%" height="15" fill="rgb(214,120,4)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1279.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1253" width="1.8515%" height="15" fill="rgb(208,179,34)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1263.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1237" width="1.8515%" height="15" fill="rgb(227,140,7)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1247.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (92 samples, 1.85%)</title><rect x="34.6549%" y="1221" width="1.8515%" height="15" fill="rgb(214,22,6)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1231.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1205" width="1.8515%" height="15" fill="rgb(207,137,27)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1215.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1189" width="1.8515%" height="15" fill="rgb(210,8,46)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1199.50">&lt;..</text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1173" width="1.8515%" height="15" fill="rgb(240,16,54)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1183.50">p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1157" width="1.8515%" height="15" fill="rgb(211,209,29)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1167.50">&lt;..</text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1141" width="1.8515%" height="15" fill="rgb(226,228,24)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1151.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1125" width="1.8515%" height="15" fill="rgb(222,84,9)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1135.50">&lt;..</text></g><g><title>fred::commands::keys::incr::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1109" width="1.8515%" height="15" fill="rgb(234,203,30)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1119.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1093" width="1.8515%" height="15" fill="rgb(238,109,14)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1103.50">&lt;..</text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1077" width="1.8515%" height="15" fill="rgb(233,206,34)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1087.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1061" width="1.8515%" height="15" fill="rgb(220,167,47)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1071.50">&lt;..</text></g><g><title>fred::utils::request_response::_{{closure}} (92 samples, 1.85%)</title><rect x="34.6549%" y="1045" width="1.8515%" height="15" fill="rgb(238,105,10)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1055.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 1.85%)</title><rect x="34.6549%" y="1029" width="1.8515%" height="15" fill="rgb(213,227,17)" fg:x="1722" fg:w="92"/><text x="34.9049%" y="1039.50">&lt;..</text></g><g><title>fred::utils::wait_for_response::_{{closure}} (89 samples, 1.79%)</title><rect x="34.7152%" y="1013" width="1.7911%" height="15" fill="rgb(217,132,38)" fg:x="1725" fg:w="89"/><text x="34.9652%" y="1023.50">f..</text></g><g><title>fred::globals::globals (2 samples, 0.04%)</title><rect x="36.4661%" y="997" width="0.0402%" height="15" fill="rgb(242,146,4)" fg:x="1812" fg:w="2"/><text x="36.7161%" y="1007.50"></text></g><g><title>&lt;fred::globals::GLOBALS as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="36.4862%" y="981" width="0.0201%" height="15" fill="rgb(212,61,9)" fg:x="1813" fg:w="1"/><text x="36.7362%" y="991.50"></text></g><g><title>&lt;fred::globals::GLOBALS as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.02%)</title><rect x="36.4862%" y="965" width="0.0201%" height="15" fill="rgb(247,126,22)" fg:x="1813" fg:w="1"/><text x="36.7362%" y="975.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="36.4862%" y="949" width="0.0201%" height="15" fill="rgb(220,196,2)" fg:x="1813" fg:w="1"/><text x="36.7362%" y="959.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.02%)</title><rect x="36.4862%" y="933" width="0.0201%" height="15" fill="rgb(208,46,4)" fg:x="1813" fg:w="1"/><text x="36.7362%" y="943.50"></text></g><g><title>std::sync::once::Once::is_completed (1 samples, 0.02%)</title><rect x="36.4862%" y="917" width="0.0201%" height="15" fill="rgb(252,104,46)" fg:x="1813" fg:w="1"/><text x="36.7362%" y="927.50"></text></g><g><title>epoll_wait (3 samples, 0.06%)</title><rect x="36.5063%" y="1269" width="0.0604%" height="15" fill="rgb(237,152,48)" fg:x="1814" fg:w="3"/><text x="36.7563%" y="1279.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="36.5063%" y="1253" width="0.0604%" height="15" fill="rgb(221,59,37)" fg:x="1814" fg:w="3"/><text x="36.7563%" y="1263.50"></text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (1 samples, 0.02%)</title><rect x="36.5667%" y="1237" width="0.0201%" height="15" fill="rgb(209,202,51)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="36.5667%" y="1221" width="0.0201%" height="15" fill="rgb(228,81,30)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1231.50"></text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (1 samples, 0.02%)</title><rect x="36.5667%" y="1205" width="0.0201%" height="15" fill="rgb(227,42,39)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;core::option::Option&lt;fred::protocol::connection::RedisSink&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="36.5667%" y="1189" width="0.0201%" height="15" fill="rgb(221,26,2)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1199.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.5667%" y="1173" width="0.0201%" height="15" fill="rgb(254,61,31)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="36.5667%" y="1157" width="0.0201%" height="15" fill="rgb(222,173,38)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="36.5667%" y="1141" width="0.0201%" height="15" fill="rgb(218,50,12)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1151.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="36.5667%" y="1125" width="0.0201%" height="15" fill="rgb(223,88,40)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1135.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.02%)</title><rect x="36.5667%" y="1109" width="0.0201%" height="15" fill="rgb(237,54,19)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1119.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="1093" width="0.0201%" height="15" fill="rgb(251,129,25)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1103.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1 samples, 0.02%)</title><rect x="36.5667%" y="1077" width="0.0201%" height="15" fill="rgb(238,97,19)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1087.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="1061" width="0.0201%" height="15" fill="rgb(240,169,18)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1071.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.02%)</title><rect x="36.5667%" y="1045" width="0.0201%" height="15" fill="rgb(230,187,49)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1055.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.02%)</title><rect x="36.5667%" y="1029" width="0.0201%" height="15" fill="rgb(209,44,26)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1039.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (1 samples, 0.02%)</title><rect x="36.5667%" y="1013" width="0.0201%" height="15" fill="rgb(244,0,6)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1023.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="997" width="0.0201%" height="15" fill="rgb(248,18,21)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="1007.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.02%)</title><rect x="36.5667%" y="981" width="0.0201%" height="15" fill="rgb(245,180,19)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="991.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.02%)</title><rect x="36.5667%" y="965" width="0.0201%" height="15" fill="rgb(252,118,36)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="975.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (1 samples, 0.02%)</title><rect x="36.5667%" y="949" width="0.0201%" height="15" fill="rgb(210,224,19)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="959.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="933" width="0.0201%" height="15" fill="rgb(218,30,24)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="917" width="0.0201%" height="15" fill="rgb(219,75,50)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (1 samples, 0.02%)</title><rect x="36.5667%" y="901" width="0.0201%" height="15" fill="rgb(234,72,50)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="911.50"></text></g><g><title>writev (1 samples, 0.02%)</title><rect x="36.5667%" y="885" width="0.0201%" height="15" fill="rgb(219,100,48)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="36.5667%" y="869" width="0.0201%" height="15" fill="rgb(253,5,41)" fg:x="1817" fg:w="1"/><text x="36.8167%" y="879.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.02%)</title><rect x="36.8283%" y="853" width="0.0201%" height="15" fill="rgb(247,181,11)" fg:x="1830" fg:w="1"/><text x="37.0783%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.04%)</title><rect x="37.2107%" y="821" width="0.0402%" height="15" fill="rgb(222,223,25)" fg:x="1849" fg:w="2"/><text x="37.4607%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="37.3315%" y="725" width="0.0805%" height="15" fill="rgb(214,198,28)" fg:x="1855" fg:w="4"/><text x="37.5815%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="37.3717%" y="709" width="0.0402%" height="15" fill="rgb(230,46,43)" fg:x="1857" fg:w="2"/><text x="37.6217%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="37.2510%" y="821" width="0.2012%" height="15" fill="rgb(233,65,53)" fg:x="1851" fg:w="10"/><text x="37.5010%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.14%)</title><rect x="37.3113%" y="805" width="0.1409%" height="15" fill="rgb(221,121,27)" fg:x="1854" fg:w="7"/><text x="37.5613%" y="815.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.14%)</title><rect x="37.3113%" y="789" width="0.1409%" height="15" fill="rgb(247,70,47)" fg:x="1854" fg:w="7"/><text x="37.5613%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.14%)</title><rect x="37.3113%" y="773" width="0.1409%" height="15" fill="rgb(228,85,35)" fg:x="1854" fg:w="7"/><text x="37.5613%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.14%)</title><rect x="37.3113%" y="757" width="0.1409%" height="15" fill="rgb(209,50,18)" fg:x="1854" fg:w="7"/><text x="37.5613%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.14%)</title><rect x="37.3113%" y="741" width="0.1409%" height="15" fill="rgb(250,19,35)" fg:x="1854" fg:w="7"/><text x="37.5613%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.04%)</title><rect x="37.4120%" y="725" width="0.0402%" height="15" fill="rgb(253,107,29)" fg:x="1859" fg:w="2"/><text x="37.6620%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.04%)</title><rect x="37.4120%" y="709" width="0.0402%" height="15" fill="rgb(252,179,29)" fg:x="1859" fg:w="2"/><text x="37.6620%" y="719.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (2 samples, 0.04%)</title><rect x="37.5126%" y="805" width="0.0402%" height="15" fill="rgb(238,194,6)" fg:x="1864" fg:w="2"/><text x="37.7626%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="37.5931%" y="629" width="0.0201%" height="15" fill="rgb(238,164,29)" fg:x="1868" fg:w="1"/><text x="37.8431%" y="639.50"></text></g><g><title>__libc_malloc (14 samples, 0.28%)</title><rect x="37.6736%" y="613" width="0.2817%" height="15" fill="rgb(224,25,9)" fg:x="1872" fg:w="14"/><text x="37.9236%" y="623.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="37.8748%" y="597" width="0.0805%" height="15" fill="rgb(244,153,23)" fg:x="1882" fg:w="4"/><text x="38.1248%" y="607.50"></text></g><g><title>__rdl_alloc (4 samples, 0.08%)</title><rect x="37.9553%" y="613" width="0.0805%" height="15" fill="rgb(212,203,14)" fg:x="1886" fg:w="4"/><text x="38.2053%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.08%)</title><rect x="37.9553%" y="597" width="0.0805%" height="15" fill="rgb(220,164,20)" fg:x="1886" fg:w="4"/><text x="38.2053%" y="607.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="38.0358%" y="613" width="0.0402%" height="15" fill="rgb(222,203,48)" fg:x="1890" fg:w="2"/><text x="38.2858%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.48%)</title><rect x="37.6132%" y="629" width="0.4830%" height="15" fill="rgb(215,159,22)" fg:x="1869" fg:w="24"/><text x="37.8632%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="38.0761%" y="613" width="0.0201%" height="15" fill="rgb(216,183,47)" fg:x="1892" fg:w="1"/><text x="38.3261%" y="623.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="38.0962%" y="629" width="0.0201%" height="15" fill="rgb(229,195,25)" fg:x="1893" fg:w="1"/><text x="38.3462%" y="639.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="38.0962%" y="613" width="0.0201%" height="15" fill="rgb(224,132,51)" fg:x="1893" fg:w="1"/><text x="38.3462%" y="623.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="38.0962%" y="597" width="0.0201%" height="15" fill="rgb(240,63,7)" fg:x="1893" fg:w="1"/><text x="38.3462%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.56%)</title><rect x="37.5730%" y="693" width="0.5635%" height="15" fill="rgb(249,182,41)" fg:x="1867" fg:w="28"/><text x="37.8230%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.54%)</title><rect x="37.5931%" y="677" width="0.5434%" height="15" fill="rgb(243,47,26)" fg:x="1868" fg:w="27"/><text x="37.8431%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (27 samples, 0.54%)</title><rect x="37.5931%" y="661" width="0.5434%" height="15" fill="rgb(233,48,2)" fg:x="1868" fg:w="27"/><text x="37.8431%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.54%)</title><rect x="37.5931%" y="645" width="0.5434%" height="15" fill="rgb(244,165,34)" fg:x="1868" fg:w="27"/><text x="37.8431%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="38.1163%" y="629" width="0.0201%" height="15" fill="rgb(207,89,7)" fg:x="1894" fg:w="1"/><text x="38.3663%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.1364%" y="693" width="0.0201%" height="15" fill="rgb(244,117,36)" fg:x="1895" fg:w="1"/><text x="38.3864%" y="703.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="38.1364%" y="677" width="0.0201%" height="15" fill="rgb(226,144,34)" fg:x="1895" fg:w="1"/><text x="38.3864%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.68%)</title><rect x="37.5528%" y="789" width="0.6842%" height="15" fill="rgb(213,23,19)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 0.68%)</title><rect x="37.5528%" y="773" width="0.6842%" height="15" fill="rgb(217,75,12)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="783.50"></text></g><g><title>alloc::string::String::push_str (34 samples, 0.68%)</title><rect x="37.5528%" y="757" width="0.6842%" height="15" fill="rgb(224,159,17)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.68%)</title><rect x="37.5528%" y="741" width="0.6842%" height="15" fill="rgb(217,118,1)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.68%)</title><rect x="37.5528%" y="725" width="0.6842%" height="15" fill="rgb(232,180,48)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.68%)</title><rect x="37.5528%" y="709" width="0.6842%" height="15" fill="rgb(230,27,33)" fg:x="1866" fg:w="34"/><text x="37.8028%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.08%)</title><rect x="38.1566%" y="693" width="0.0805%" height="15" fill="rgb(205,31,21)" fg:x="1896" fg:w="4"/><text x="38.4066%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.08%)</title><rect x="38.1566%" y="677" width="0.0805%" height="15" fill="rgb(253,59,4)" fg:x="1896" fg:w="4"/><text x="38.4066%" y="687.50"></text></g><g><title>core::fmt::Formatter::alternate (1 samples, 0.02%)</title><rect x="38.3377%" y="773" width="0.0201%" height="15" fill="rgb(224,201,9)" fg:x="1905" fg:w="1"/><text x="38.5877%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (81 samples, 1.63%)</title><rect x="36.8082%" y="869" width="1.6301%" height="15" fill="rgb(229,206,30)" fg:x="1829" fg:w="81"/><text x="37.0582%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (79 samples, 1.59%)</title><rect x="36.8485%" y="853" width="1.5899%" height="15" fill="rgb(212,67,47)" fg:x="1831" fg:w="79"/><text x="37.0985%" y="863.50"></text></g><g><title>core::fmt::write (79 samples, 1.59%)</title><rect x="36.8485%" y="837" width="1.5899%" height="15" fill="rgb(211,96,50)" fg:x="1831" fg:w="79"/><text x="37.0985%" y="847.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (49 samples, 0.99%)</title><rect x="37.4522%" y="821" width="0.9861%" height="15" fill="rgb(252,114,18)" fg:x="1861" fg:w="49"/><text x="37.7022%" y="831.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (44 samples, 0.89%)</title><rect x="37.5528%" y="805" width="0.8855%" height="15" fill="rgb(223,58,37)" fg:x="1866" fg:w="44"/><text x="37.8028%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad_integral (10 samples, 0.20%)</title><rect x="38.2371%" y="789" width="0.2012%" height="15" fill="rgb(237,70,4)" fg:x="1900" fg:w="10"/><text x="38.4871%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (4 samples, 0.08%)</title><rect x="38.3578%" y="773" width="0.0805%" height="15" fill="rgb(244,85,46)" fg:x="1906" fg:w="4"/><text x="38.6078%" y="783.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.22%)</title><rect x="38.4383%" y="773" width="0.2214%" height="15" fill="rgb(223,39,52)" fg:x="1910" fg:w="11"/><text x="38.6883%" y="783.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="38.6597%" y="773" width="0.0201%" height="15" fill="rgb(218,200,14)" fg:x="1921" fg:w="1"/><text x="38.9097%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="38.6597%" y="757" width="0.0201%" height="15" fill="rgb(208,171,16)" fg:x="1921" fg:w="1"/><text x="38.9097%" y="767.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="38.6798%" y="773" width="0.0402%" height="15" fill="rgb(234,200,18)" fg:x="1922" fg:w="2"/><text x="38.9298%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (19 samples, 0.38%)</title><rect x="38.4383%" y="869" width="0.3824%" height="15" fill="rgb(228,45,11)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.38%)</title><rect x="38.4383%" y="853" width="0.3824%" height="15" fill="rgb(237,182,11)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.38%)</title><rect x="38.4383%" y="837" width="0.3824%" height="15" fill="rgb(241,175,49)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.38%)</title><rect x="38.4383%" y="821" width="0.3824%" height="15" fill="rgb(247,38,35)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.38%)</title><rect x="38.4383%" y="805" width="0.3824%" height="15" fill="rgb(228,39,49)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.38%)</title><rect x="38.4383%" y="789" width="0.3824%" height="15" fill="rgb(226,101,26)" fg:x="1910" fg:w="19"/><text x="38.6883%" y="799.50"></text></g><g><title>cfree (5 samples, 0.10%)</title><rect x="38.7201%" y="773" width="0.1006%" height="15" fill="rgb(206,141,19)" fg:x="1924" fg:w="5"/><text x="38.9701%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (1 samples, 0.02%)</title><rect x="38.8207%" y="869" width="0.0201%" height="15" fill="rgb(211,200,13)" fg:x="1929" fg:w="1"/><text x="39.0707%" y="879.50"></text></g><g><title>core::clone::Clone::clone_from (1 samples, 0.02%)</title><rect x="38.8207%" y="853" width="0.0201%" height="15" fill="rgb(241,121,6)" fg:x="1929" fg:w="1"/><text x="39.0707%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.04%)</title><rect x="39.4043%" y="805" width="0.0402%" height="15" fill="rgb(234,221,29)" fg:x="1958" fg:w="2"/><text x="39.6543%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="39.5452%" y="709" width="0.1006%" height="15" fill="rgb(229,136,5)" fg:x="1965" fg:w="5"/><text x="39.7952%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="39.5653%" y="693" width="0.0805%" height="15" fill="rgb(238,36,11)" fg:x="1966" fg:w="4"/><text x="39.8153%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="39.6458%" y="709" width="0.0402%" height="15" fill="rgb(251,55,41)" fg:x="1970" fg:w="2"/><text x="39.8958%" y="719.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="39.6458%" y="693" width="0.0402%" height="15" fill="rgb(242,34,40)" fg:x="1970" fg:w="2"/><text x="39.8958%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.26%)</title><rect x="39.4446%" y="805" width="0.2616%" height="15" fill="rgb(215,42,17)" fg:x="1960" fg:w="13"/><text x="39.6946%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.16%)</title><rect x="39.5452%" y="789" width="0.1610%" height="15" fill="rgb(207,44,46)" fg:x="1965" fg:w="8"/><text x="39.7952%" y="799.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.16%)</title><rect x="39.5452%" y="773" width="0.1610%" height="15" fill="rgb(211,206,28)" fg:x="1965" fg:w="8"/><text x="39.7952%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.16%)</title><rect x="39.5452%" y="757" width="0.1610%" height="15" fill="rgb(237,167,16)" fg:x="1965" fg:w="8"/><text x="39.7952%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.16%)</title><rect x="39.5452%" y="741" width="0.1610%" height="15" fill="rgb(233,66,6)" fg:x="1965" fg:w="8"/><text x="39.7952%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.16%)</title><rect x="39.5452%" y="725" width="0.1610%" height="15" fill="rgb(246,123,29)" fg:x="1965" fg:w="8"/><text x="39.7952%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="39.6861%" y="709" width="0.0201%" height="15" fill="rgb(209,62,40)" fg:x="1972" fg:w="1"/><text x="39.9361%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="39.6861%" y="693" width="0.0201%" height="15" fill="rgb(218,4,25)" fg:x="1972" fg:w="1"/><text x="39.9361%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="39.7062%" y="805" width="0.0201%" height="15" fill="rgb(253,91,49)" fg:x="1973" fg:w="1"/><text x="39.9562%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="39.7062%" y="789" width="0.0201%" height="15" fill="rgb(228,155,29)" fg:x="1973" fg:w="1"/><text x="39.9562%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="39.8672%" y="677" width="0.0201%" height="15" fill="rgb(243,57,37)" fg:x="1981" fg:w="1"/><text x="40.1172%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="40.0885%" y="613" width="0.0402%" height="15" fill="rgb(244,167,17)" fg:x="1992" fg:w="2"/><text x="40.3385%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="40.1288%" y="613" width="0.0201%" height="15" fill="rgb(207,181,38)" fg:x="1994" fg:w="1"/><text x="40.3788%" y="623.50"></text></g><g><title>__libc_malloc (15 samples, 0.30%)</title><rect x="40.2294%" y="597" width="0.3019%" height="15" fill="rgb(211,8,23)" fg:x="1999" fg:w="15"/><text x="40.4794%" y="607.50"></text></g><g><title>__rdl_alloc (3 samples, 0.06%)</title><rect x="40.5313%" y="597" width="0.0604%" height="15" fill="rgb(235,11,44)" fg:x="2014" fg:w="3"/><text x="40.7813%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.06%)</title><rect x="40.5313%" y="581" width="0.0604%" height="15" fill="rgb(248,18,52)" fg:x="2014" fg:w="3"/><text x="40.7813%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.46%)</title><rect x="40.1489%" y="613" width="0.4629%" height="15" fill="rgb(208,4,7)" fg:x="1995" fg:w="23"/><text x="40.3989%" y="623.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="40.5917%" y="597" width="0.0201%" height="15" fill="rgb(240,17,39)" fg:x="2017" fg:w="1"/><text x="40.8417%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.76%)</title><rect x="39.8873%" y="677" width="0.7647%" height="15" fill="rgb(207,170,3)" fg:x="1982" fg:w="38"/><text x="40.1373%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.62%)</title><rect x="40.0282%" y="661" width="0.6239%" height="15" fill="rgb(236,100,52)" fg:x="1989" fg:w="31"/><text x="40.2782%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (30 samples, 0.60%)</title><rect x="40.0483%" y="645" width="0.6037%" height="15" fill="rgb(246,78,51)" fg:x="1990" fg:w="30"/><text x="40.2983%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.60%)</title><rect x="40.0483%" y="629" width="0.6037%" height="15" fill="rgb(211,17,15)" fg:x="1990" fg:w="30"/><text x="40.2983%" y="639.50"></text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="40.6118%" y="613" width="0.0402%" height="15" fill="rgb(209,59,46)" fg:x="2018" fg:w="2"/><text x="40.8618%" y="623.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="40.6118%" y="597" width="0.0402%" height="15" fill="rgb(210,92,25)" fg:x="2018" fg:w="2"/><text x="40.8618%" y="607.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.04%)</title><rect x="40.6118%" y="581" width="0.0402%" height="15" fill="rgb(238,174,52)" fg:x="2018" fg:w="2"/><text x="40.8618%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.10%)</title><rect x="40.6520%" y="677" width="0.1006%" height="15" fill="rgb(230,73,7)" fg:x="2020" fg:w="5"/><text x="40.9020%" y="687.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="40.6520%" y="661" width="0.1006%" height="15" fill="rgb(243,124,40)" fg:x="2020" fg:w="5"/><text x="40.9020%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (52 samples, 1.05%)</title><rect x="39.8068%" y="773" width="1.0465%" height="15" fill="rgb(244,170,11)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (52 samples, 1.05%)</title><rect x="39.8068%" y="757" width="1.0465%" height="15" fill="rgb(207,114,54)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="767.50"></text></g><g><title>alloc::string::String::push_str (52 samples, 1.05%)</title><rect x="39.8068%" y="741" width="1.0465%" height="15" fill="rgb(205,42,20)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 1.05%)</title><rect x="39.8068%" y="725" width="1.0465%" height="15" fill="rgb(230,30,28)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 1.05%)</title><rect x="39.8068%" y="709" width="1.0465%" height="15" fill="rgb(205,73,54)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 1.05%)</title><rect x="39.8068%" y="693" width="1.0465%" height="15" fill="rgb(254,227,23)" fg:x="1978" fg:w="52"/><text x="40.0568%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.10%)</title><rect x="40.7527%" y="677" width="0.1006%" height="15" fill="rgb(228,202,34)" fg:x="2025" fg:w="5"/><text x="41.0027%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.10%)</title><rect x="40.7527%" y="661" width="0.1006%" height="15" fill="rgb(222,225,37)" fg:x="2025" fg:w="5"/><text x="41.0027%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (76 samples, 1.53%)</title><rect x="39.7263%" y="805" width="1.5295%" height="15" fill="rgb(221,14,54)" fg:x="1974" fg:w="76"/><text x="39.9763%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (75 samples, 1.51%)</title><rect x="39.7464%" y="789" width="1.5094%" height="15" fill="rgb(254,102,2)" fg:x="1975" fg:w="75"/><text x="39.9964%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral (20 samples, 0.40%)</title><rect x="40.8533%" y="773" width="0.4025%" height="15" fill="rgb(232,104,17)" fg:x="2030" fg:w="20"/><text x="41.1033%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (14 samples, 0.28%)</title><rect x="40.9740%" y="757" width="0.2817%" height="15" fill="rgb(250,220,14)" fg:x="2036" fg:w="14"/><text x="41.2240%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.02%)</title><rect x="41.2558%" y="805" width="0.0201%" height="15" fill="rgb(241,158,9)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="815.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.02%)</title><rect x="41.2558%" y="789" width="0.0201%" height="15" fill="rgb(246,9,43)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="41.2558%" y="773" width="0.0201%" height="15" fill="rgb(206,73,33)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="783.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="41.2558%" y="757" width="0.0201%" height="15" fill="rgb(222,79,8)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="767.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="41.2558%" y="741" width="0.0201%" height="15" fill="rgb(234,8,54)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="751.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="41.2558%" y="725" width="0.0201%" height="15" fill="rgb(209,134,38)" fg:x="2050" fg:w="1"/><text x="41.5058%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (115 samples, 2.31%)</title><rect x="38.9817%" y="837" width="2.3143%" height="15" fill="rgb(230,127,29)" fg:x="1937" fg:w="115"/><text x="39.2317%" y="847.50">c..</text></g><g><title>core::fmt::write (114 samples, 2.29%)</title><rect x="39.0018%" y="821" width="2.2942%" height="15" fill="rgb(242,44,41)" fg:x="1938" fg:w="114"/><text x="39.2518%" y="831.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="41.2759%" y="805" width="0.0201%" height="15" fill="rgb(222,56,43)" fg:x="2051" fg:w="1"/><text x="41.5259%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="41.2759%" y="789" width="0.0201%" height="15" fill="rgb(238,39,47)" fg:x="2051" fg:w="1"/><text x="41.5259%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (116 samples, 2.33%)</title><rect x="38.9817%" y="853" width="2.3345%" height="15" fill="rgb(226,79,43)" fg:x="1937" fg:w="116"/><text x="39.2317%" y="863.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.02%)</title><rect x="41.2960%" y="837" width="0.0201%" height="15" fill="rgb(242,105,53)" fg:x="2052" fg:w="1"/><text x="41.5460%" y="847.50"></text></g><g><title>[libc-2.28.so] (13 samples, 0.26%)</title><rect x="41.3162%" y="757" width="0.2616%" height="15" fill="rgb(251,132,46)" fg:x="2053" fg:w="13"/><text x="41.5662%" y="767.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="41.5778%" y="757" width="0.0201%" height="15" fill="rgb(231,77,14)" fg:x="2066" fg:w="1"/><text x="41.8278%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="41.5778%" y="741" width="0.0201%" height="15" fill="rgb(240,135,9)" fg:x="2066" fg:w="1"/><text x="41.8278%" y="751.50"></text></g><g><title>__rust_dealloc (4 samples, 0.08%)</title><rect x="41.5979%" y="757" width="0.0805%" height="15" fill="rgb(248,109,14)" fg:x="2067" fg:w="4"/><text x="41.8479%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.56%)</title><rect x="41.3162%" y="789" width="0.5635%" height="15" fill="rgb(227,146,52)" fg:x="2053" fg:w="28"/><text x="41.5662%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.56%)</title><rect x="41.3162%" y="773" width="0.5635%" height="15" fill="rgb(232,54,3)" fg:x="2053" fg:w="28"/><text x="41.5662%" y="783.50"></text></g><g><title>cfree (10 samples, 0.20%)</title><rect x="41.6784%" y="757" width="0.2012%" height="15" fill="rgb(229,201,43)" fg:x="2071" fg:w="10"/><text x="41.9284%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (29 samples, 0.58%)</title><rect x="41.3162%" y="853" width="0.5836%" height="15" fill="rgb(252,161,33)" fg:x="2053" fg:w="29"/><text x="41.5662%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29 samples, 0.58%)</title><rect x="41.3162%" y="837" width="0.5836%" height="15" fill="rgb(226,146,40)" fg:x="2053" fg:w="29"/><text x="41.5662%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29 samples, 0.58%)</title><rect x="41.3162%" y="821" width="0.5836%" height="15" fill="rgb(219,47,25)" fg:x="2053" fg:w="29"/><text x="41.5662%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.58%)</title><rect x="41.3162%" y="805" width="0.5836%" height="15" fill="rgb(250,135,13)" fg:x="2053" fg:w="29"/><text x="41.5662%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="41.8797%" y="789" width="0.0201%" height="15" fill="rgb(219,229,18)" fg:x="2081" fg:w="1"/><text x="42.1297%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (10 samples, 0.20%)</title><rect x="41.8998%" y="853" width="0.2012%" height="15" fill="rgb(217,152,27)" fg:x="2082" fg:w="10"/><text x="42.1498%" y="863.50"></text></g><g><title>core::clone::Clone::clone_from (10 samples, 0.20%)</title><rect x="41.8998%" y="837" width="0.2012%" height="15" fill="rgb(225,71,47)" fg:x="2082" fg:w="10"/><text x="42.1498%" y="847.50"></text></g><g><title>[libc-2.28.so] (10 samples, 0.20%)</title><rect x="41.8998%" y="821" width="0.2012%" height="15" fill="rgb(220,139,14)" fg:x="2082" fg:w="10"/><text x="42.1498%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="42.1010%" y="853" width="0.0201%" height="15" fill="rgb(247,54,32)" fg:x="2092" fg:w="1"/><text x="42.3510%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="42.1010%" y="837" width="0.0201%" height="15" fill="rgb(252,131,39)" fg:x="2092" fg:w="1"/><text x="42.3510%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="42.1010%" y="821" width="0.0201%" height="15" fill="rgb(210,108,39)" fg:x="2092" fg:w="1"/><text x="42.3510%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="42.1010%" y="805" width="0.0201%" height="15" fill="rgb(205,23,29)" fg:x="2092" fg:w="1"/><text x="42.3510%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="42.1010%" y="789" width="0.0201%" height="15" fill="rgb(246,139,46)" fg:x="2092" fg:w="1"/><text x="42.3510%" y="799.50"></text></g><g><title>__log10_finite (14 samples, 0.28%)</title><rect x="42.1815%" y="773" width="0.2817%" height="15" fill="rgb(250,81,26)" fg:x="2096" fg:w="14"/><text x="42.4315%" y="783.50"></text></g><g><title>[libm-2.28.so] (8 samples, 0.16%)</title><rect x="42.3023%" y="757" width="0.1610%" height="15" fill="rgb(214,104,7)" fg:x="2102" fg:w="8"/><text x="42.5523%" y="767.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (18 samples, 0.36%)</title><rect x="42.1212%" y="853" width="0.3622%" height="15" fill="rgb(233,189,8)" fg:x="2093" fg:w="18"/><text x="42.3712%" y="863.50"></text></g><g><title>redis_protocol::utils::digits_in_number (18 samples, 0.36%)</title><rect x="42.1212%" y="837" width="0.3622%" height="15" fill="rgb(228,141,17)" fg:x="2093" fg:w="18"/><text x="42.3712%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (15 samples, 0.30%)</title><rect x="42.1815%" y="821" width="0.3019%" height="15" fill="rgb(247,157,1)" fg:x="2096" fg:w="15"/><text x="42.4315%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (15 samples, 0.30%)</title><rect x="42.1815%" y="805" width="0.3019%" height="15" fill="rgb(249,225,5)" fg:x="2096" fg:w="15"/><text x="42.4315%" y="815.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (15 samples, 0.30%)</title><rect x="42.1815%" y="789" width="0.3019%" height="15" fill="rgb(242,55,13)" fg:x="2096" fg:w="15"/><text x="42.4315%" y="799.50"></text></g><g><title>log10f32x (1 samples, 0.02%)</title><rect x="42.4633%" y="773" width="0.0201%" height="15" fill="rgb(230,49,50)" fg:x="2110" fg:w="1"/><text x="42.7133%" y="783.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (182 samples, 3.66%)</title><rect x="38.8408%" y="869" width="3.6627%" height="15" fill="rgb(241,111,38)" fg:x="1930" fg:w="182"/><text x="39.0908%" y="879.50">redi..</text></g><g><title>redis_protocol::utils::check_offset (1 samples, 0.02%)</title><rect x="42.4834%" y="853" width="0.0201%" height="15" fill="rgb(252,155,4)" fg:x="2111" fg:w="1"/><text x="42.7334%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="42.5035%" y="837" width="0.0402%" height="15" fill="rgb(212,69,32)" fg:x="2112" fg:w="2"/><text x="42.7535%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="42.6846%" y="773" width="0.0201%" height="15" fill="rgb(243,107,47)" fg:x="2121" fg:w="1"/><text x="42.9346%" y="783.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (3 samples, 0.06%)</title><rect x="42.8054%" y="741" width="0.0604%" height="15" fill="rgb(247,130,12)" fg:x="2127" fg:w="3"/><text x="43.0554%" y="751.50"></text></g><g><title>[libm-2.28.so] (3 samples, 0.06%)</title><rect x="42.8054%" y="725" width="0.0604%" height="15" fill="rgb(233,74,16)" fg:x="2127" fg:w="3"/><text x="43.0554%" y="735.50"></text></g><g><title>@plt (2 samples, 0.04%)</title><rect x="43.0066%" y="677" width="0.0402%" height="15" fill="rgb(208,58,18)" fg:x="2137" fg:w="2"/><text x="43.2566%" y="687.50"></text></g><g><title>__log10_finite (24 samples, 0.48%)</title><rect x="42.8859%" y="693" width="0.4830%" height="15" fill="rgb(242,225,1)" fg:x="2131" fg:w="24"/><text x="43.1359%" y="703.50"></text></g><g><title>[libm-2.28.so] (16 samples, 0.32%)</title><rect x="43.0469%" y="677" width="0.3220%" height="15" fill="rgb(249,39,40)" fg:x="2139" fg:w="16"/><text x="43.2969%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (44 samples, 0.89%)</title><rect x="42.5035%" y="853" width="0.8855%" height="15" fill="rgb(207,72,44)" fg:x="2112" fg:w="44"/><text x="42.7535%" y="863.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (42 samples, 0.85%)</title><rect x="42.5438%" y="837" width="0.8452%" height="15" fill="rgb(215,193,12)" fg:x="2114" fg:w="42"/><text x="42.7938%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (42 samples, 0.85%)</title><rect x="42.5438%" y="821" width="0.8452%" height="15" fill="rgb(248,41,39)" fg:x="2114" fg:w="42"/><text x="42.7938%" y="831.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (42 samples, 0.85%)</title><rect x="42.5438%" y="805" width="0.8452%" height="15" fill="rgb(253,85,4)" fg:x="2114" fg:w="42"/><text x="42.7938%" y="815.50"></text></g><g><title>redis_protocol::utils::encode_len (42 samples, 0.85%)</title><rect x="42.5438%" y="789" width="0.8452%" height="15" fill="rgb(243,70,31)" fg:x="2114" fg:w="42"/><text x="42.7938%" y="799.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (34 samples, 0.68%)</title><rect x="42.7048%" y="773" width="0.6842%" height="15" fill="rgb(253,195,26)" fg:x="2122" fg:w="34"/><text x="42.9548%" y="783.50"></text></g><g><title>redis_protocol::utils::digits_in_number (34 samples, 0.68%)</title><rect x="42.7048%" y="757" width="0.6842%" height="15" fill="rgb(243,42,11)" fg:x="2122" fg:w="34"/><text x="42.9548%" y="767.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (26 samples, 0.52%)</title><rect x="42.8658%" y="741" width="0.5232%" height="15" fill="rgb(239,66,17)" fg:x="2130" fg:w="26"/><text x="43.1158%" y="751.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (26 samples, 0.52%)</title><rect x="42.8658%" y="725" width="0.5232%" height="15" fill="rgb(217,132,21)" fg:x="2130" fg:w="26"/><text x="43.1158%" y="735.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (26 samples, 0.52%)</title><rect x="42.8658%" y="709" width="0.5232%" height="15" fill="rgb(252,202,21)" fg:x="2130" fg:w="26"/><text x="43.1158%" y="719.50"></text></g><g><title>log10f32x (1 samples, 0.02%)</title><rect x="43.3689%" y="693" width="0.0201%" height="15" fill="rgb(233,98,36)" fg:x="2155" fg:w="1"/><text x="43.6189%" y="703.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (348 samples, 7.00%)</title><rect x="36.5868%" y="901" width="7.0034%" height="15" fill="rgb(216,153,54)" fg:x="1818" fg:w="348"/><text x="36.8368%" y="911.50">redis_pro..</text></g><g><title>redis_protocol::encode::gen_array (341 samples, 6.86%)</title><rect x="36.7277%" y="885" width="6.8625%" height="15" fill="rgb(250,99,7)" fg:x="1825" fg:w="341"/><text x="36.9777%" y="895.50">redis_pro..</text></g><g><title>redis_protocol::utils::array_encode_len (54 samples, 1.09%)</title><rect x="42.5035%" y="869" width="1.0867%" height="15" fill="rgb(207,56,50)" fg:x="2112" fg:w="54"/><text x="42.7535%" y="879.50"></text></g><g><title>redis_protocol::utils::digits_in_number (10 samples, 0.20%)</title><rect x="43.3890%" y="853" width="0.2012%" height="15" fill="rgb(244,61,34)" fg:x="2156" fg:w="10"/><text x="43.6390%" y="863.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (6 samples, 0.12%)</title><rect x="43.4695%" y="837" width="0.1207%" height="15" fill="rgb(241,50,38)" fg:x="2160" fg:w="6"/><text x="43.7195%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (6 samples, 0.12%)</title><rect x="43.4695%" y="821" width="0.1207%" height="15" fill="rgb(212,166,30)" fg:x="2160" fg:w="6"/><text x="43.7195%" y="831.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (6 samples, 0.12%)</title><rect x="43.4695%" y="805" width="0.1207%" height="15" fill="rgb(249,127,32)" fg:x="2160" fg:w="6"/><text x="43.7195%" y="815.50"></text></g><g><title>__log10_finite (6 samples, 0.12%)</title><rect x="43.4695%" y="789" width="0.1207%" height="15" fill="rgb(209,103,0)" fg:x="2160" fg:w="6"/><text x="43.7195%" y="799.50"></text></g><g><title>[libm-2.28.so] (3 samples, 0.06%)</title><rect x="43.5299%" y="773" width="0.0604%" height="15" fill="rgb(238,209,51)" fg:x="2163" fg:w="3"/><text x="43.7799%" y="783.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (349 samples, 7.02%)</title><rect x="36.5868%" y="1061" width="7.0235%" height="15" fill="rgb(237,56,23)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="1071.50">&lt;futures_..</text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (349 samples, 7.02%)</title><rect x="36.5868%" y="1045" width="7.0235%" height="15" fill="rgb(215,153,46)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="1055.50">&lt;&amp;mut S a..</text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (349 samples, 7.02%)</title><rect x="36.5868%" y="1029" width="7.0235%" height="15" fill="rgb(224,49,31)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="1039.50">&lt;futures_..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (349 samples, 7.02%)</title><rect x="36.5868%" y="1013" width="7.0235%" height="15" fill="rgb(250,18,42)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="1023.50">futures_u..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (349 samples, 7.02%)</title><rect x="36.5868%" y="997" width="7.0235%" height="15" fill="rgb(215,176,39)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="1007.50">futures_u..</text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (349 samples, 7.02%)</title><rect x="36.5868%" y="981" width="7.0235%" height="15" fill="rgb(223,77,29)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="991.50">&lt;tokio_ut..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (349 samples, 7.02%)</title><rect x="36.5868%" y="965" width="7.0235%" height="15" fill="rgb(234,94,52)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="975.50">&lt;tokio_ut..</text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (349 samples, 7.02%)</title><rect x="36.5868%" y="949" width="7.0235%" height="15" fill="rgb(220,154,50)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="959.50">&lt;fred::pr..</text></g><g><title>fred::protocol::codec::encode_frame (349 samples, 7.02%)</title><rect x="36.5868%" y="933" width="7.0235%" height="15" fill="rgb(212,11,10)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="943.50">fred::pro..</text></g><g><title>redis_protocol::encode::encode_bytes (349 samples, 7.02%)</title><rect x="36.5868%" y="917" width="7.0235%" height="15" fill="rgb(205,166,19)" fg:x="1818" fg:w="349"/><text x="36.8368%" y="927.50">redis_pro..</text></g><g><title>redis_protocol::utils::zero_extend (1 samples, 0.02%)</title><rect x="43.5903%" y="901" width="0.0201%" height="15" fill="rgb(244,198,16)" fg:x="2166" fg:w="1"/><text x="43.8403%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (1 samples, 0.02%)</title><rect x="43.5903%" y="885" width="0.0201%" height="15" fill="rgb(219,69,12)" fg:x="2166" fg:w="1"/><text x="43.8403%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="43.5903%" y="869" width="0.0201%" height="15" fill="rgb(245,30,7)" fg:x="2166" fg:w="1"/><text x="43.8403%" y="879.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="43.5903%" y="853" width="0.0201%" height="15" fill="rgb(218,221,48)" fg:x="2166" fg:w="1"/><text x="43.8403%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="43.6708%" y="805" width="0.0201%" height="15" fill="rgb(216,66,15)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="43.6708%" y="789" width="0.0201%" height="15" fill="rgb(226,122,50)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="799.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="43.6708%" y="773" width="0.0201%" height="15" fill="rgb(239,156,16)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="43.6708%" y="757" width="0.0201%" height="15" fill="rgb(224,27,38)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="43.6708%" y="741" width="0.0201%" height="15" fill="rgb(224,39,27)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="43.6708%" y="725" width="0.0201%" height="15" fill="rgb(215,92,29)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="43.6708%" y="709" width="0.0201%" height="15" fill="rgb(207,159,16)" fg:x="2170" fg:w="1"/><text x="43.9208%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="43.6909%" y="773" width="0.0402%" height="15" fill="rgb(238,163,47)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="43.6909%" y="757" width="0.0402%" height="15" fill="rgb(219,91,49)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="767.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.04%)</title><rect x="43.6909%" y="741" width="0.0402%" height="15" fill="rgb(227,167,31)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="43.6909%" y="725" width="0.0402%" height="15" fill="rgb(234,80,54)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="43.6909%" y="709" width="0.0402%" height="15" fill="rgb(212,114,2)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="43.6909%" y="693" width="0.0402%" height="15" fill="rgb(234,50,24)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="43.6909%" y="677" width="0.0402%" height="15" fill="rgb(221,68,8)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="43.6909%" y="661" width="0.0402%" height="15" fill="rgb(254,180,31)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.04%)</title><rect x="43.6909%" y="645" width="0.0402%" height="15" fill="rgb(247,130,50)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="43.6909%" y="629" width="0.0402%" height="15" fill="rgb(211,109,4)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="43.6909%" y="613" width="0.0402%" height="15" fill="rgb(238,50,21)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.04%)</title><rect x="43.6909%" y="597" width="0.0402%" height="15" fill="rgb(225,57,45)" fg:x="2171" fg:w="2"/><text x="43.9409%" y="607.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (7 samples, 0.14%)</title><rect x="43.6506%" y="853" width="0.1409%" height="15" fill="rgb(209,196,50)" fg:x="2169" fg:w="7"/><text x="43.9006%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.14%)</title><rect x="43.6506%" y="837" width="0.1409%" height="15" fill="rgb(242,140,13)" fg:x="2169" fg:w="7"/><text x="43.9006%" y="847.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="43.6506%" y="821" width="0.1409%" height="15" fill="rgb(217,111,7)" fg:x="2169" fg:w="7"/><text x="43.9006%" y="831.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (5 samples, 0.10%)</title><rect x="43.6909%" y="805" width="0.1006%" height="15" fill="rgb(253,193,51)" fg:x="2171" fg:w="5"/><text x="43.9409%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (5 samples, 0.10%)</title><rect x="43.6909%" y="789" width="0.1006%" height="15" fill="rgb(252,70,29)" fg:x="2171" fg:w="5"/><text x="43.9409%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.06%)</title><rect x="43.7311%" y="773" width="0.0604%" height="15" fill="rgb(232,127,12)" fg:x="2173" fg:w="3"/><text x="43.9811%" y="783.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="43.7915%" y="757" width="0.0201%" height="15" fill="rgb(211,180,21)" fg:x="2176" fg:w="1"/><text x="44.0415%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect x="43.7915%" y="853" width="0.0402%" height="15" fill="rgb(229,72,13)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="43.7915%" y="837" width="0.0402%" height="15" fill="rgb(240,211,49)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="43.7915%" y="821" width="0.0402%" height="15" fill="rgb(219,149,40)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="43.7915%" y="805" width="0.0402%" height="15" fill="rgb(210,127,46)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="43.7915%" y="789" width="0.0402%" height="15" fill="rgb(220,106,7)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="43.7915%" y="773" width="0.0402%" height="15" fill="rgb(249,31,22)" fg:x="2176" fg:w="2"/><text x="44.0415%" y="783.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="43.8116%" y="757" width="0.0201%" height="15" fill="rgb(253,1,49)" fg:x="2177" fg:w="1"/><text x="44.0616%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="43.8720%" y="789" width="0.0402%" height="15" fill="rgb(227,144,33)" fg:x="2180" fg:w="2"/><text x="44.1220%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="43.8921%" y="773" width="0.0201%" height="15" fill="rgb(249,163,44)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="783.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="43.8921%" y="757" width="0.0201%" height="15" fill="rgb(234,15,39)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="43.8921%" y="741" width="0.0201%" height="15" fill="rgb(207,66,16)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="43.8921%" y="725" width="0.0201%" height="15" fill="rgb(233,112,24)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="43.8921%" y="709" width="0.0201%" height="15" fill="rgb(230,90,22)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="43.8921%" y="693" width="0.0201%" height="15" fill="rgb(229,61,13)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="703.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="43.8921%" y="677" width="0.0201%" height="15" fill="rgb(225,57,24)" fg:x="2181" fg:w="1"/><text x="44.1421%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="43.9123%" y="597" width="0.0201%" height="15" fill="rgb(208,169,48)" fg:x="2182" fg:w="1"/><text x="44.1623%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.04%)</title><rect x="43.9525%" y="581" width="0.0402%" height="15" fill="rgb(244,218,51)" fg:x="2184" fg:w="2"/><text x="44.2025%" y="591.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="43.9726%" y="565" width="0.0201%" height="15" fill="rgb(214,148,10)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="575.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="43.9726%" y="549" width="0.0201%" height="15" fill="rgb(225,174,27)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="559.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="43.9726%" y="533" width="0.0201%" height="15" fill="rgb(230,96,26)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="543.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="43.9726%" y="517" width="0.0201%" height="15" fill="rgb(232,10,30)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="527.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="43.9726%" y="501" width="0.0201%" height="15" fill="rgb(222,8,50)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="511.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="43.9726%" y="485" width="0.0201%" height="15" fill="rgb(213,81,27)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="495.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="43.9726%" y="469" width="0.0201%" height="15" fill="rgb(245,50,10)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="479.50"></text></g><g><title>ahci_multi_irqs_intr_hard (1 samples, 0.02%)</title><rect x="43.9726%" y="453" width="0.0201%" height="15" fill="rgb(216,100,18)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="463.50"></text></g><g><title>ahci_handle_port_interrupt (1 samples, 0.02%)</title><rect x="43.9726%" y="437" width="0.0201%" height="15" fill="rgb(236,147,54)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="447.50"></text></g><g><title>ata_qc_complete_multiple (1 samples, 0.02%)</title><rect x="43.9726%" y="421" width="0.0201%" height="15" fill="rgb(205,143,26)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="431.50"></text></g><g><title>ata_scsi_qc_complete (1 samples, 0.02%)</title><rect x="43.9726%" y="405" width="0.0201%" height="15" fill="rgb(236,26,9)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="415.50"></text></g><g><title>blk_mq_complete_request (1 samples, 0.02%)</title><rect x="43.9726%" y="389" width="0.0201%" height="15" fill="rgb(221,165,53)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="399.50"></text></g><g><title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="43.9726%" y="373" width="0.0201%" height="15" fill="rgb(214,110,17)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="383.50"></text></g><g><title>generic_exec_single (1 samples, 0.02%)</title><rect x="43.9726%" y="357" width="0.0201%" height="15" fill="rgb(237,197,12)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="367.50"></text></g><g><title>llist_add_batch (1 samples, 0.02%)</title><rect x="43.9726%" y="341" width="0.0201%" height="15" fill="rgb(205,84,17)" fg:x="2185" fg:w="1"/><text x="44.2226%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="43.9928%" y="581" width="0.0201%" height="15" fill="rgb(237,18,45)" fg:x="2186" fg:w="1"/><text x="44.2428%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="43.9928%" y="565" width="0.0201%" height="15" fill="rgb(221,87,14)" fg:x="2186" fg:w="1"/><text x="44.2428%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.12%)</title><rect x="43.9123%" y="661" width="0.1207%" height="15" fill="rgb(238,186,15)" fg:x="2182" fg:w="6"/><text x="44.1623%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.12%)</title><rect x="43.9123%" y="645" width="0.1207%" height="15" fill="rgb(208,115,11)" fg:x="2182" fg:w="6"/><text x="44.1623%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.12%)</title><rect x="43.9123%" y="629" width="0.1207%" height="15" fill="rgb(254,175,0)" fg:x="2182" fg:w="6"/><text x="44.1623%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.12%)</title><rect x="43.9123%" y="613" width="0.1207%" height="15" fill="rgb(227,24,42)" fg:x="2182" fg:w="6"/><text x="44.1623%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.10%)</title><rect x="43.9324%" y="597" width="0.1006%" height="15" fill="rgb(223,211,37)" fg:x="2183" fg:w="5"/><text x="44.1824%" y="607.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="44.0129%" y="581" width="0.0201%" height="15" fill="rgb(235,49,27)" fg:x="2187" fg:w="1"/><text x="44.2629%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.14%)</title><rect x="43.9123%" y="757" width="0.1409%" height="15" fill="rgb(254,97,51)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.14%)</title><rect x="43.9123%" y="741" width="0.1409%" height="15" fill="rgb(249,51,40)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="751.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.14%)</title><rect x="43.9123%" y="725" width="0.1409%" height="15" fill="rgb(210,128,45)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.14%)</title><rect x="43.9123%" y="709" width="0.1409%" height="15" fill="rgb(224,137,50)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.14%)</title><rect x="43.9123%" y="693" width="0.1409%" height="15" fill="rgb(242,15,9)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.14%)</title><rect x="43.9123%" y="677" width="0.1409%" height="15" fill="rgb(233,187,41)" fg:x="2182" fg:w="7"/><text x="44.1623%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="44.0330%" y="661" width="0.0201%" height="15" fill="rgb(227,2,29)" fg:x="2188" fg:w="1"/><text x="44.2830%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="44.0330%" y="645" width="0.0201%" height="15" fill="rgb(222,70,3)" fg:x="2188" fg:w="1"/><text x="44.2830%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.28%)</title><rect x="43.8318%" y="821" width="0.2817%" height="15" fill="rgb(213,11,42)" fg:x="2178" fg:w="14"/><text x="44.0818%" y="831.50"></text></g><g><title>core::fmt::write (14 samples, 0.28%)</title><rect x="43.8318%" y="805" width="0.2817%" height="15" fill="rgb(225,150,9)" fg:x="2178" fg:w="14"/><text x="44.0818%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.20%)</title><rect x="43.9123%" y="789" width="0.2012%" height="15" fill="rgb(230,162,45)" fg:x="2182" fg:w="10"/><text x="44.1623%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.20%)</title><rect x="43.9123%" y="773" width="0.2012%" height="15" fill="rgb(222,14,52)" fg:x="2182" fg:w="10"/><text x="44.1623%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.06%)</title><rect x="44.0531%" y="757" width="0.0604%" height="15" fill="rgb(254,198,14)" fg:x="2189" fg:w="3"/><text x="44.3031%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.02%)</title><rect x="44.0934%" y="741" width="0.0201%" height="15" fill="rgb(220,217,30)" fg:x="2191" fg:w="1"/><text x="44.3434%" y="751.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (17 samples, 0.34%)</title><rect x="43.8318%" y="837" width="0.3421%" height="15" fill="rgb(215,146,41)" fg:x="2178" fg:w="17"/><text x="44.0818%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (3 samples, 0.06%)</title><rect x="44.1135%" y="821" width="0.0604%" height="15" fill="rgb(217,27,36)" fg:x="2192" fg:w="3"/><text x="44.3635%" y="831.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="44.1739%" y="741" width="0.0201%" height="15" fill="rgb(219,218,39)" fg:x="2195" fg:w="1"/><text x="44.4239%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.10%)</title><rect x="44.1739%" y="837" width="0.1006%" height="15" fill="rgb(219,4,42)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="44.1739%" y="821" width="0.1006%" height="15" fill="rgb(249,119,36)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="44.1739%" y="805" width="0.1006%" height="15" fill="rgb(209,23,33)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="44.1739%" y="789" width="0.1006%" height="15" fill="rgb(211,10,0)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect x="44.1739%" y="773" width="0.1006%" height="15" fill="rgb(208,99,37)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="44.1739%" y="757" width="0.1006%" height="15" fill="rgb(213,132,31)" fg:x="2195" fg:w="5"/><text x="44.4239%" y="767.50"></text></g><g><title>cfree (4 samples, 0.08%)</title><rect x="44.1940%" y="741" width="0.0805%" height="15" fill="rgb(243,129,40)" fg:x="2196" fg:w="4"/><text x="44.4440%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (1 samples, 0.02%)</title><rect x="44.2745%" y="837" width="0.0201%" height="15" fill="rgb(210,66,33)" fg:x="2200" fg:w="1"/><text x="44.5245%" y="847.50"></text></g><g><title>core::clone::Clone::clone_from (1 samples, 0.02%)</title><rect x="44.2745%" y="821" width="0.0201%" height="15" fill="rgb(209,189,4)" fg:x="2200" fg:w="1"/><text x="44.5245%" y="831.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="44.2745%" y="805" width="0.0201%" height="15" fill="rgb(214,107,37)" fg:x="2200" fg:w="1"/><text x="44.5245%" y="815.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (25 samples, 0.50%)</title><rect x="43.8318%" y="853" width="0.5031%" height="15" fill="rgb(245,88,54)" fg:x="2178" fg:w="25"/><text x="44.0818%" y="863.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (2 samples, 0.04%)</title><rect x="44.2946%" y="837" width="0.0402%" height="15" fill="rgb(205,146,20)" fg:x="2201" fg:w="2"/><text x="44.5446%" y="847.50"></text></g><g><title>redis_protocol::utils::digits_in_number (2 samples, 0.04%)</title><rect x="44.2946%" y="821" width="0.0402%" height="15" fill="rgb(220,161,25)" fg:x="2201" fg:w="2"/><text x="44.5446%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (1 samples, 0.02%)</title><rect x="44.3148%" y="805" width="0.0201%" height="15" fill="rgb(215,152,15)" fg:x="2202" fg:w="1"/><text x="44.5648%" y="815.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (1 samples, 0.02%)</title><rect x="44.3148%" y="789" width="0.0201%" height="15" fill="rgb(233,192,44)" fg:x="2202" fg:w="1"/><text x="44.5648%" y="799.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (1 samples, 0.02%)</title><rect x="44.3148%" y="773" width="0.0201%" height="15" fill="rgb(240,170,46)" fg:x="2202" fg:w="1"/><text x="44.5648%" y="783.50"></text></g><g><title>__log10_finite (1 samples, 0.02%)</title><rect x="44.3148%" y="757" width="0.0201%" height="15" fill="rgb(207,104,33)" fg:x="2202" fg:w="1"/><text x="44.5648%" y="767.50"></text></g><g><title>[libm-2.28.so] (1 samples, 0.02%)</title><rect x="44.3148%" y="741" width="0.0201%" height="15" fill="rgb(219,21,39)" fg:x="2202" fg:w="1"/><text x="44.5648%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="44.3550%" y="757" width="0.0201%" height="15" fill="rgb(214,133,29)" fg:x="2204" fg:w="1"/><text x="44.6050%" y="767.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (1 samples, 0.02%)</title><rect x="44.3953%" y="725" width="0.0201%" height="15" fill="rgb(226,93,6)" fg:x="2206" fg:w="1"/><text x="44.6453%" y="735.50"></text></g><g><title>[libm-2.28.so] (1 samples, 0.02%)</title><rect x="44.3953%" y="709" width="0.0201%" height="15" fill="rgb(252,222,34)" fg:x="2206" fg:w="1"/><text x="44.6453%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.14%)</title><rect x="44.3349%" y="837" width="0.1409%" height="15" fill="rgb(252,92,48)" fg:x="2203" fg:w="7"/><text x="44.5849%" y="847.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (7 samples, 0.14%)</title><rect x="44.3349%" y="821" width="0.1409%" height="15" fill="rgb(245,223,24)" fg:x="2203" fg:w="7"/><text x="44.5849%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.14%)</title><rect x="44.3349%" y="805" width="0.1409%" height="15" fill="rgb(205,176,3)" fg:x="2203" fg:w="7"/><text x="44.5849%" y="815.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (7 samples, 0.14%)</title><rect x="44.3349%" y="789" width="0.1409%" height="15" fill="rgb(235,151,15)" fg:x="2203" fg:w="7"/><text x="44.5849%" y="799.50"></text></g><g><title>redis_protocol::utils::encode_len (7 samples, 0.14%)</title><rect x="44.3349%" y="773" width="0.1409%" height="15" fill="rgb(237,209,11)" fg:x="2203" fg:w="7"/><text x="44.5849%" y="783.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (5 samples, 0.10%)</title><rect x="44.3751%" y="757" width="0.1006%" height="15" fill="rgb(243,227,24)" fg:x="2205" fg:w="5"/><text x="44.6251%" y="767.50"></text></g><g><title>redis_protocol::utils::digits_in_number (5 samples, 0.10%)</title><rect x="44.3751%" y="741" width="0.1006%" height="15" fill="rgb(239,193,16)" fg:x="2205" fg:w="5"/><text x="44.6251%" y="751.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (3 samples, 0.06%)</title><rect x="44.4154%" y="725" width="0.0604%" height="15" fill="rgb(231,27,9)" fg:x="2207" fg:w="3"/><text x="44.6654%" y="735.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (3 samples, 0.06%)</title><rect x="44.4154%" y="709" width="0.0604%" height="15" fill="rgb(219,169,10)" fg:x="2207" fg:w="3"/><text x="44.6654%" y="719.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (3 samples, 0.06%)</title><rect x="44.4154%" y="693" width="0.0604%" height="15" fill="rgb(244,229,43)" fg:x="2207" fg:w="3"/><text x="44.6654%" y="703.50"></text></g><g><title>__log10_finite (3 samples, 0.06%)</title><rect x="44.4154%" y="677" width="0.0604%" height="15" fill="rgb(254,38,20)" fg:x="2207" fg:w="3"/><text x="44.6654%" y="687.50"></text></g><g><title>__log10_finite (1 samples, 0.02%)</title><rect x="44.4757%" y="773" width="0.0201%" height="15" fill="rgb(250,47,30)" fg:x="2210" fg:w="1"/><text x="44.7257%" y="783.50"></text></g><g><title>[libm-2.28.so] (1 samples, 0.02%)</title><rect x="44.4757%" y="757" width="0.0201%" height="15" fill="rgb(224,124,36)" fg:x="2210" fg:w="1"/><text x="44.7257%" y="767.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (45 samples, 0.91%)</title><rect x="43.6104%" y="1045" width="0.9056%" height="15" fill="rgb(246,68,51)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="1055.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (45 samples, 0.91%)</title><rect x="43.6104%" y="1029" width="0.9056%" height="15" fill="rgb(253,43,49)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (45 samples, 0.91%)</title><rect x="43.6104%" y="1013" width="0.9056%" height="15" fill="rgb(219,54,36)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="1023.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_lock_and_flush_slot (45 samples, 0.91%)</title><rect x="43.6104%" y="997" width="0.9056%" height="15" fill="rgb(227,133,34)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="1007.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (45 samples, 0.91%)</title><rect x="43.6104%" y="981" width="0.9056%" height="15" fill="rgb(247,227,15)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="991.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (45 samples, 0.91%)</title><rect x="43.6104%" y="965" width="0.9056%" height="15" fill="rgb(229,96,14)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="975.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (45 samples, 0.91%)</title><rect x="43.6104%" y="949" width="0.9056%" height="15" fill="rgb(220,79,17)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="959.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (45 samples, 0.91%)</title><rect x="43.6104%" y="933" width="0.9056%" height="15" fill="rgb(205,131,53)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="943.50"></text></g><g><title>fred::protocol::codec::encode_frame (45 samples, 0.91%)</title><rect x="43.6104%" y="917" width="0.9056%" height="15" fill="rgb(209,50,29)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="927.50"></text></g><g><title>redis_protocol::encode::encode_bytes (45 samples, 0.91%)</title><rect x="43.6104%" y="901" width="0.9056%" height="15" fill="rgb(245,86,46)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="911.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (45 samples, 0.91%)</title><rect x="43.6104%" y="885" width="0.9056%" height="15" fill="rgb(235,66,46)" fg:x="2167" fg:w="45"/><text x="43.8604%" y="895.50"></text></g><g><title>redis_protocol::encode::gen_array (44 samples, 0.89%)</title><rect x="43.6305%" y="869" width="0.8855%" height="15" fill="rgb(232,148,31)" fg:x="2168" fg:w="44"/><text x="43.8805%" y="879.50"></text></g><g><title>redis_protocol::utils::array_encode_len (9 samples, 0.18%)</title><rect x="44.3349%" y="853" width="0.1811%" height="15" fill="rgb(217,149,8)" fg:x="2203" fg:w="9"/><text x="44.5849%" y="863.50"></text></g><g><title>redis_protocol::utils::digits_in_number (2 samples, 0.04%)</title><rect x="44.4757%" y="837" width="0.0402%" height="15" fill="rgb(209,183,11)" fg:x="2210" fg:w="2"/><text x="44.7257%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (2 samples, 0.04%)</title><rect x="44.4757%" y="821" width="0.0402%" height="15" fill="rgb(208,55,20)" fg:x="2210" fg:w="2"/><text x="44.7257%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (2 samples, 0.04%)</title><rect x="44.4757%" y="805" width="0.0402%" height="15" fill="rgb(218,39,14)" fg:x="2210" fg:w="2"/><text x="44.7257%" y="815.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (2 samples, 0.04%)</title><rect x="44.4757%" y="789" width="0.0402%" height="15" fill="rgb(216,169,33)" fg:x="2210" fg:w="2"/><text x="44.7257%" y="799.50"></text></g><g><title>log10f32x (1 samples, 0.02%)</title><rect x="44.4959%" y="773" width="0.0201%" height="15" fill="rgb(233,80,24)" fg:x="2211" fg:w="1"/><text x="44.7459%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.06%)</title><rect x="44.5965%" y="853" width="0.0604%" height="15" fill="rgb(213,179,31)" fg:x="2216" fg:w="3"/><text x="44.8465%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="44.6166%" y="837" width="0.0402%" height="15" fill="rgb(209,19,5)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="847.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.04%)</title><rect x="44.6166%" y="821" width="0.0402%" height="15" fill="rgb(219,18,35)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="44.6166%" y="805" width="0.0402%" height="15" fill="rgb(209,169,16)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="44.6166%" y="789" width="0.0402%" height="15" fill="rgb(245,90,51)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="44.6166%" y="773" width="0.0402%" height="15" fill="rgb(220,99,45)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="44.6166%" y="757" width="0.0402%" height="15" fill="rgb(249,89,25)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="44.6166%" y="741" width="0.0402%" height="15" fill="rgb(239,193,0)" fg:x="2217" fg:w="2"/><text x="44.8666%" y="751.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (2 samples, 0.04%)</title><rect x="44.6569%" y="837" width="0.0402%" height="15" fill="rgb(231,126,1)" fg:x="2219" fg:w="2"/><text x="44.9069%" y="847.50"></text></g><g><title>__libc_malloc (8 samples, 0.16%)</title><rect x="44.7172%" y="645" width="0.1610%" height="15" fill="rgb(243,166,3)" fg:x="2222" fg:w="8"/><text x="44.9672%" y="655.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="44.7977%" y="629" width="0.0805%" height="15" fill="rgb(223,22,34)" fg:x="2226" fg:w="4"/><text x="45.0477%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="44.6971%" y="821" width="0.2012%" height="15" fill="rgb(251,52,51)" fg:x="2221" fg:w="10"/><text x="44.9471%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.18%)</title><rect x="44.7172%" y="805" width="0.1811%" height="15" fill="rgb(221,165,28)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="815.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.18%)</title><rect x="44.7172%" y="789" width="0.1811%" height="15" fill="rgb(218,121,47)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.18%)</title><rect x="44.7172%" y="773" width="0.1811%" height="15" fill="rgb(209,120,9)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.18%)</title><rect x="44.7172%" y="757" width="0.1811%" height="15" fill="rgb(236,68,12)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.18%)</title><rect x="44.7172%" y="741" width="0.1811%" height="15" fill="rgb(225,194,26)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.18%)</title><rect x="44.7172%" y="725" width="0.1811%" height="15" fill="rgb(231,84,39)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.18%)</title><rect x="44.7172%" y="709" width="0.1811%" height="15" fill="rgb(210,11,45)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (9 samples, 0.18%)</title><rect x="44.7172%" y="693" width="0.1811%" height="15" fill="rgb(224,54,52)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.18%)</title><rect x="44.7172%" y="677" width="0.1811%" height="15" fill="rgb(238,102,14)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.18%)</title><rect x="44.7172%" y="661" width="0.1811%" height="15" fill="rgb(243,160,52)" fg:x="2222" fg:w="9"/><text x="44.9672%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="44.8782%" y="645" width="0.0201%" height="15" fill="rgb(216,114,19)" fg:x="2230" fg:w="1"/><text x="45.1282%" y="655.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (22 samples, 0.44%)</title><rect x="44.5160%" y="901" width="0.4427%" height="15" fill="rgb(244,166,37)" fg:x="2212" fg:w="22"/><text x="44.7660%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (22 samples, 0.44%)</title><rect x="44.5160%" y="885" width="0.4427%" height="15" fill="rgb(246,29,44)" fg:x="2212" fg:w="22"/><text x="44.7660%" y="895.50"></text></g><g><title>core::fmt::write (21 samples, 0.42%)</title><rect x="44.5361%" y="869" width="0.4226%" height="15" fill="rgb(215,56,53)" fg:x="2213" fg:w="21"/><text x="44.7861%" y="879.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (15 samples, 0.30%)</title><rect x="44.6569%" y="853" width="0.3019%" height="15" fill="rgb(217,60,2)" fg:x="2219" fg:w="15"/><text x="44.9069%" y="863.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (13 samples, 0.26%)</title><rect x="44.6971%" y="837" width="0.2616%" height="15" fill="rgb(207,26,24)" fg:x="2221" fg:w="13"/><text x="44.9471%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.06%)</title><rect x="44.8984%" y="821" width="0.0604%" height="15" fill="rgb(252,210,15)" fg:x="2231" fg:w="3"/><text x="45.1484%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="44.9587%" y="901" width="0.0201%" height="15" fill="rgb(253,209,26)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="44.9587%" y="885" width="0.0201%" height="15" fill="rgb(238,170,14)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="44.9587%" y="869" width="0.0201%" height="15" fill="rgb(216,178,15)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="44.9587%" y="853" width="0.0201%" height="15" fill="rgb(250,197,2)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="44.9587%" y="837" width="0.0201%" height="15" fill="rgb(212,70,42)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="44.9587%" y="821" width="0.0201%" height="15" fill="rgb(227,213,9)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="831.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="44.9587%" y="805" width="0.0201%" height="15" fill="rgb(245,99,25)" fg:x="2234" fg:w="1"/><text x="45.2087%" y="815.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.02%)</title><rect x="45.0191%" y="869" width="0.0201%" height="15" fill="rgb(250,82,29)" fg:x="2237" fg:w="1"/><text x="45.2691%" y="879.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="45.1801%" y="837" width="0.0201%" height="15" fill="rgb(241,226,54)" fg:x="2245" fg:w="1"/><text x="45.4301%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="45.2002%" y="741" width="0.0201%" height="15" fill="rgb(221,99,41)" fg:x="2246" fg:w="1"/><text x="45.4502%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="45.2002%" y="725" width="0.0201%" height="15" fill="rgb(213,90,21)" fg:x="2246" fg:w="1"/><text x="45.4502%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="45.2002%" y="837" width="0.0402%" height="15" fill="rgb(205,208,24)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.04%)</title><rect x="45.2002%" y="821" width="0.0402%" height="15" fill="rgb(246,31,12)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="831.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.04%)</title><rect x="45.2002%" y="805" width="0.0402%" height="15" fill="rgb(213,154,6)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="45.2002%" y="789" width="0.0402%" height="15" fill="rgb(222,163,29)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="45.2002%" y="773" width="0.0402%" height="15" fill="rgb(227,201,8)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="45.2002%" y="757" width="0.0402%" height="15" fill="rgb(233,9,32)" fg:x="2246" fg:w="2"/><text x="45.4502%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="45.2204%" y="741" width="0.0201%" height="15" fill="rgb(217,54,24)" fg:x="2247" fg:w="1"/><text x="45.4704%" y="751.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="45.2204%" y="725" width="0.0201%" height="15" fill="rgb(235,192,0)" fg:x="2247" fg:w="1"/><text x="45.4704%" y="735.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.02%)</title><rect x="45.2606%" y="821" width="0.0201%" height="15" fill="rgb(235,45,9)" fg:x="2249" fg:w="1"/><text x="45.5106%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="45.3411%" y="645" width="0.0201%" height="15" fill="rgb(246,42,40)" fg:x="2253" fg:w="1"/><text x="45.5911%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="45.3612%" y="645" width="0.0402%" height="15" fill="rgb(248,111,24)" fg:x="2254" fg:w="2"/><text x="45.6112%" y="655.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="45.3814%" y="629" width="0.0201%" height="15" fill="rgb(249,65,22)" fg:x="2255" fg:w="1"/><text x="45.6314%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.12%)</title><rect x="45.3210%" y="709" width="0.1207%" height="15" fill="rgb(238,111,51)" fg:x="2252" fg:w="6"/><text x="45.5710%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="45.3411%" y="693" width="0.1006%" height="15" fill="rgb(250,118,22)" fg:x="2253" fg:w="5"/><text x="45.5911%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.10%)</title><rect x="45.3411%" y="677" width="0.1006%" height="15" fill="rgb(234,84,26)" fg:x="2253" fg:w="5"/><text x="45.5911%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.10%)</title><rect x="45.3411%" y="661" width="0.1006%" height="15" fill="rgb(243,172,12)" fg:x="2253" fg:w="5"/><text x="45.5911%" y="671.50"></text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="45.4015%" y="645" width="0.0402%" height="15" fill="rgb(236,150,49)" fg:x="2256" fg:w="2"/><text x="45.6515%" y="655.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="45.4015%" y="629" width="0.0402%" height="15" fill="rgb(225,197,26)" fg:x="2256" fg:w="2"/><text x="45.6515%" y="639.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.04%)</title><rect x="45.4015%" y="613" width="0.0402%" height="15" fill="rgb(214,17,42)" fg:x="2256" fg:w="2"/><text x="45.6515%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="45.4417%" y="709" width="0.0201%" height="15" fill="rgb(224,165,40)" fg:x="2258" fg:w="1"/><text x="45.6917%" y="719.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="45.4417%" y="693" width="0.0201%" height="15" fill="rgb(246,100,4)" fg:x="2258" fg:w="1"/><text x="45.6917%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="45.2807%" y="805" width="0.2012%" height="15" fill="rgb(222,103,0)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="45.2807%" y="789" width="0.2012%" height="15" fill="rgb(227,189,26)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="799.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.20%)</title><rect x="45.2807%" y="773" width="0.2012%" height="15" fill="rgb(214,202,17)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.20%)</title><rect x="45.2807%" y="757" width="0.2012%" height="15" fill="rgb(229,111,3)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.20%)</title><rect x="45.2807%" y="741" width="0.2012%" height="15" fill="rgb(229,172,15)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.20%)</title><rect x="45.2807%" y="725" width="0.2012%" height="15" fill="rgb(230,224,35)" fg:x="2250" fg:w="10"/><text x="45.5307%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="45.4619%" y="709" width="0.0201%" height="15" fill="rgb(251,141,6)" fg:x="2259" fg:w="1"/><text x="45.7119%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="45.4619%" y="693" width="0.0201%" height="15" fill="rgb(225,208,6)" fg:x="2259" fg:w="1"/><text x="45.7119%" y="703.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (26 samples, 0.52%)</title><rect x="45.0191%" y="885" width="0.5232%" height="15" fill="rgb(246,181,16)" fg:x="2237" fg:w="26"/><text x="45.2691%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (25 samples, 0.50%)</title><rect x="45.0392%" y="869" width="0.5031%" height="15" fill="rgb(227,129,36)" fg:x="2238" fg:w="25"/><text x="45.2892%" y="879.50"></text></g><g><title>core::fmt::write (24 samples, 0.48%)</title><rect x="45.0594%" y="853" width="0.4830%" height="15" fill="rgb(248,117,24)" fg:x="2239" fg:w="24"/><text x="45.3094%" y="863.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (15 samples, 0.30%)</title><rect x="45.2405%" y="837" width="0.3019%" height="15" fill="rgb(214,185,35)" fg:x="2248" fg:w="15"/><text x="45.4905%" y="847.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (13 samples, 0.26%)</title><rect x="45.2807%" y="821" width="0.2616%" height="15" fill="rgb(236,150,34)" fg:x="2250" fg:w="13"/><text x="45.5307%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.06%)</title><rect x="45.4820%" y="805" width="0.0604%" height="15" fill="rgb(243,228,27)" fg:x="2260" fg:w="3"/><text x="45.7320%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.02%)</title><rect x="45.5222%" y="789" width="0.0201%" height="15" fill="rgb(245,77,44)" fg:x="2262" fg:w="1"/><text x="45.7722%" y="799.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="45.5424%" y="789" width="0.1006%" height="15" fill="rgb(235,214,42)" fg:x="2263" fg:w="5"/><text x="45.7924%" y="799.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="45.6430%" y="789" width="0.0201%" height="15" fill="rgb(221,74,3)" fg:x="2268" fg:w="1"/><text x="45.8930%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="45.6430%" y="773" width="0.0201%" height="15" fill="rgb(206,121,29)" fg:x="2268" fg:w="1"/><text x="45.8930%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.26%)</title><rect x="45.5424%" y="821" width="0.2616%" height="15" fill="rgb(249,131,53)" fg:x="2263" fg:w="13"/><text x="45.7924%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.26%)</title><rect x="45.5424%" y="805" width="0.2616%" height="15" fill="rgb(236,170,29)" fg:x="2263" fg:w="13"/><text x="45.7924%" y="815.50"></text></g><g><title>cfree (7 samples, 0.14%)</title><rect x="45.6631%" y="789" width="0.1409%" height="15" fill="rgb(247,96,15)" fg:x="2269" fg:w="7"/><text x="45.9131%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.28%)</title><rect x="45.5424%" y="885" width="0.2817%" height="15" fill="rgb(211,210,7)" fg:x="2263" fg:w="14"/><text x="45.7924%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.28%)</title><rect x="45.5424%" y="869" width="0.2817%" height="15" fill="rgb(240,88,50)" fg:x="2263" fg:w="14"/><text x="45.7924%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.28%)</title><rect x="45.5424%" y="853" width="0.2817%" height="15" fill="rgb(209,229,26)" fg:x="2263" fg:w="14"/><text x="45.7924%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.28%)</title><rect x="45.5424%" y="837" width="0.2817%" height="15" fill="rgb(210,68,23)" fg:x="2263" fg:w="14"/><text x="45.7924%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="45.8040%" y="821" width="0.0201%" height="15" fill="rgb(229,180,13)" fg:x="2276" fg:w="1"/><text x="46.0540%" y="831.50"></text></g><g><title>core::clone::Clone::clone_from (3 samples, 0.06%)</title><rect x="45.8241%" y="869" width="0.0604%" height="15" fill="rgb(236,53,44)" fg:x="2277" fg:w="3"/><text x="46.0741%" y="879.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="45.8241%" y="853" width="0.0604%" height="15" fill="rgb(244,214,29)" fg:x="2277" fg:w="3"/><text x="46.0741%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (4 samples, 0.08%)</title><rect x="45.8241%" y="885" width="0.0805%" height="15" fill="rgb(220,75,29)" fg:x="2277" fg:w="4"/><text x="46.0741%" y="895.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="45.8845%" y="869" width="0.0201%" height="15" fill="rgb(214,183,37)" fg:x="2280" fg:w="1"/><text x="46.1345%" y="879.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (1 samples, 0.02%)</title><rect x="45.9247%" y="853" width="0.0201%" height="15" fill="rgb(239,117,29)" fg:x="2282" fg:w="1"/><text x="46.1747%" y="863.50"></text></g><g><title>[libm-2.28.so] (1 samples, 0.02%)</title><rect x="45.9247%" y="837" width="0.0201%" height="15" fill="rgb(237,171,35)" fg:x="2282" fg:w="1"/><text x="46.1747%" y="847.50"></text></g><g><title>redis_protocol::encode::gen_bulkstring (50 samples, 1.01%)</title><rect x="44.9789%" y="901" width="1.0062%" height="15" fill="rgb(229,178,53)" fg:x="2235" fg:w="50"/><text x="45.2289%" y="911.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (4 samples, 0.08%)</title><rect x="45.9046%" y="885" width="0.0805%" height="15" fill="rgb(210,102,19)" fg:x="2281" fg:w="4"/><text x="46.1546%" y="895.50"></text></g><g><title>redis_protocol::utils::digits_in_number (4 samples, 0.08%)</title><rect x="45.9046%" y="869" width="0.0805%" height="15" fill="rgb(235,127,22)" fg:x="2281" fg:w="4"/><text x="46.1546%" y="879.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (2 samples, 0.04%)</title><rect x="45.9449%" y="853" width="0.0402%" height="15" fill="rgb(244,31,31)" fg:x="2283" fg:w="2"/><text x="46.1949%" y="863.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (2 samples, 0.04%)</title><rect x="45.9449%" y="837" width="0.0402%" height="15" fill="rgb(231,43,21)" fg:x="2283" fg:w="2"/><text x="46.1949%" y="847.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (2 samples, 0.04%)</title><rect x="45.9449%" y="821" width="0.0402%" height="15" fill="rgb(217,131,35)" fg:x="2283" fg:w="2"/><text x="46.1949%" y="831.50"></text></g><g><title>__log10_finite (2 samples, 0.04%)</title><rect x="45.9449%" y="805" width="0.0402%" height="15" fill="rgb(221,149,4)" fg:x="2283" fg:w="2"/><text x="46.1949%" y="815.50"></text></g><g><title>[libm-2.28.so] (2 samples, 0.04%)</title><rect x="45.9449%" y="789" width="0.0402%" height="15" fill="rgb(232,170,28)" fg:x="2283" fg:w="2"/><text x="46.1949%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="45.9851%" y="869" width="0.0402%" height="15" fill="rgb(238,56,10)" fg:x="2285" fg:w="2"/><text x="46.2351%" y="879.50"></text></g><g><title>@plt (1 samples, 0.02%)</title><rect x="46.1461%" y="709" width="0.0201%" height="15" fill="rgb(235,196,14)" fg:x="2293" fg:w="1"/><text x="46.3961%" y="719.50"></text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (479 samples, 9.64%)</title><rect x="36.5667%" y="1269" width="9.6398%" height="15" fill="rgb(216,45,48)" fg:x="1817" fg:w="479"/><text x="36.8167%" y="1279.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (479 samples, 9.64%)</title><rect x="36.5667%" y="1253" width="9.6398%" height="15" fill="rgb(238,213,17)" fg:x="1817" fg:w="479"/><text x="36.8167%" y="1263.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::commands::write_command_t::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1237" width="9.6196%" height="15" fill="rgb(212,13,2)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1247.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 9.62%)</title><rect x="36.5868%" y="1221" width="9.6196%" height="15" fill="rgb(240,114,20)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1231.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::commands::write_command::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1205" width="9.6196%" height="15" fill="rgb(228,41,40)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1215.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 9.62%)</title><rect x="36.5868%" y="1189" width="9.6196%" height="15" fill="rgb(244,132,35)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1199.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::Multiplexer::write::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1173" width="9.6196%" height="15" fill="rgb(253,189,4)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1183.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 9.62%)</title><rect x="36.5868%" y="1157" width="9.6196%" height="15" fill="rgb(224,37,19)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1167.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::utils::write_centralized_command::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1141" width="9.6196%" height="15" fill="rgb(235,223,18)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1151.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 9.62%)</title><rect x="36.5868%" y="1125" width="9.6196%" height="15" fill="rgb(235,163,25)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1135.50">&lt;core::future:..</text></g><g><title>fred::multiplexer::utils::write_command::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1109" width="9.6196%" height="15" fill="rgb(217,145,28)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1119.50">fred::multiple..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 9.62%)</title><rect x="36.5868%" y="1093" width="9.6196%" height="15" fill="rgb(223,223,32)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1103.50">&lt;core::future:..</text></g><g><title>fred::protocol::connection::write_command::_{{closure}} (478 samples, 9.62%)</title><rect x="36.5868%" y="1077" width="9.6196%" height="15" fill="rgb(227,189,39)" fg:x="1818" fg:w="478"/><text x="36.8368%" y="1087.50">fred::protocol..</text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (129 samples, 2.60%)</title><rect x="43.6104%" y="1061" width="2.5961%" height="15" fill="rgb(248,10,22)" fg:x="2167" fg:w="129"/><text x="43.8604%" y="1071.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (84 samples, 1.69%)</title><rect x="44.5160%" y="1045" width="1.6905%" height="15" fill="rgb(248,46,39)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="1055.50"></text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (84 samples, 1.69%)</title><rect x="44.5160%" y="1029" width="1.6905%" height="15" fill="rgb(248,113,48)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="1039.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (84 samples, 1.69%)</title><rect x="44.5160%" y="1013" width="1.6905%" height="15" fill="rgb(245,16,25)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="1023.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (84 samples, 1.69%)</title><rect x="44.5160%" y="997" width="1.6905%" height="15" fill="rgb(249,152,16)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="1007.50"></text></g><g><title>&lt;fred::protocol::codec::RedisCodec as tokio_util::codec::encoder::Encoder&lt;redis_protocol::types::Frame&gt;&gt;::encode (84 samples, 1.69%)</title><rect x="44.5160%" y="981" width="1.6905%" height="15" fill="rgb(250,16,1)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="991.50"></text></g><g><title>fred::protocol::codec::encode_frame (84 samples, 1.69%)</title><rect x="44.5160%" y="965" width="1.6905%" height="15" fill="rgb(249,138,3)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="975.50"></text></g><g><title>redis_protocol::encode::encode_bytes (84 samples, 1.69%)</title><rect x="44.5160%" y="949" width="1.6905%" height="15" fill="rgb(227,71,41)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="959.50"></text></g><g><title>redis_protocol::encode::attempt_encoding (84 samples, 1.69%)</title><rect x="44.5160%" y="933" width="1.6905%" height="15" fill="rgb(209,184,23)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="943.50"></text></g><g><title>redis_protocol::encode::gen_array (84 samples, 1.69%)</title><rect x="44.5160%" y="917" width="1.6905%" height="15" fill="rgb(223,215,31)" fg:x="2212" fg:w="84"/><text x="44.7660%" y="927.50"></text></g><g><title>redis_protocol::utils::array_encode_len (11 samples, 0.22%)</title><rect x="45.9851%" y="901" width="0.2214%" height="15" fill="rgb(210,146,28)" fg:x="2285" fg:w="11"/><text x="46.2351%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.22%)</title><rect x="45.9851%" y="885" width="0.2214%" height="15" fill="rgb(209,183,41)" fg:x="2285" fg:w="11"/><text x="46.2351%" y="895.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}} (9 samples, 0.18%)</title><rect x="46.0254%" y="869" width="0.1811%" height="15" fill="rgb(209,224,45)" fg:x="2287" fg:w="9"/><text x="46.2754%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.18%)</title><rect x="46.0254%" y="853" width="0.1811%" height="15" fill="rgb(224,209,51)" fg:x="2287" fg:w="9"/><text x="46.2754%" y="863.50"></text></g><g><title>redis_protocol::utils::array_encode_len::_{{closure}}::_{{closure}} (9 samples, 0.18%)</title><rect x="46.0254%" y="837" width="0.1811%" height="15" fill="rgb(223,17,39)" fg:x="2287" fg:w="9"/><text x="46.2754%" y="847.50"></text></g><g><title>redis_protocol::utils::encode_len (9 samples, 0.18%)</title><rect x="46.0254%" y="821" width="0.1811%" height="15" fill="rgb(234,204,37)" fg:x="2287" fg:w="9"/><text x="46.2754%" y="831.50"></text></g><g><title>redis_protocol::utils::bulkstring_encode_len (6 samples, 0.12%)</title><rect x="46.0857%" y="805" width="0.1207%" height="15" fill="rgb(236,120,5)" fg:x="2290" fg:w="6"/><text x="46.3357%" y="815.50"></text></g><g><title>redis_protocol::utils::digits_in_number (5 samples, 0.10%)</title><rect x="46.1059%" y="789" width="0.1006%" height="15" fill="rgb(248,97,27)" fg:x="2291" fg:w="5"/><text x="46.3559%" y="799.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log10 (4 samples, 0.08%)</title><rect x="46.1260%" y="773" width="0.0805%" height="15" fill="rgb(240,66,17)" fg:x="2292" fg:w="4"/><text x="46.3760%" y="783.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (4 samples, 0.08%)</title><rect x="46.1260%" y="757" width="0.0805%" height="15" fill="rgb(210,79,3)" fg:x="2292" fg:w="4"/><text x="46.3760%" y="767.50"></text></g><g><title>std::f64::_&lt;impl f64&gt;::log10::_{{closure}} (4 samples, 0.08%)</title><rect x="46.1260%" y="741" width="0.0805%" height="15" fill="rgb(214,176,27)" fg:x="2292" fg:w="4"/><text x="46.3760%" y="751.50"></text></g><g><title>__log10_finite (4 samples, 0.08%)</title><rect x="46.1260%" y="725" width="0.0805%" height="15" fill="rgb(235,185,3)" fg:x="2292" fg:w="4"/><text x="46.3760%" y="735.50"></text></g><g><title>[libm-2.28.so] (2 samples, 0.04%)</title><rect x="46.1662%" y="709" width="0.0402%" height="15" fill="rgb(227,24,12)" fg:x="2294" fg:w="2"/><text x="46.4162%" y="719.50"></text></g><g><title>tokio::coop::poll_proceed (1 samples, 0.02%)</title><rect x="46.9913%" y="853" width="0.0201%" height="15" fill="rgb(252,169,48)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="46.9913%" y="837" width="0.0201%" height="15" fill="rgb(212,65,1)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="46.9913%" y="821" width="0.0201%" height="15" fill="rgb(242,39,24)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="831.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.02%)</title><rect x="46.9913%" y="805" width="0.0201%" height="15" fill="rgb(249,32,23)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="46.9913%" y="789" width="0.0201%" height="15" fill="rgb(251,195,23)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="799.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="46.9913%" y="773" width="0.0201%" height="15" fill="rgb(236,174,8)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="46.9913%" y="757" width="0.0201%" height="15" fill="rgb(220,197,8)" fg:x="2335" fg:w="1"/><text x="47.2413%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="47.1322%" y="837" width="0.0201%" height="15" fill="rgb(240,108,37)" fg:x="2342" fg:w="1"/><text x="47.3822%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="47.1322%" y="821" width="0.0201%" height="15" fill="rgb(232,176,24)" fg:x="2342" fg:w="1"/><text x="47.3822%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="47.1523%" y="837" width="0.0201%" height="15" fill="rgb(243,35,29)" fg:x="2343" fg:w="1"/><text x="47.4023%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="47.1523%" y="821" width="0.0201%" height="15" fill="rgb(210,37,18)" fg:x="2343" fg:w="1"/><text x="47.4023%" y="831.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.02%)</title><rect x="47.1725%" y="837" width="0.0201%" height="15" fill="rgb(224,184,40)" fg:x="2344" fg:w="1"/><text x="47.4225%" y="847.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (15 samples, 0.30%)</title><rect x="46.9310%" y="869" width="0.3019%" height="15" fill="rgb(236,39,29)" fg:x="2332" fg:w="15"/><text x="47.1810%" y="879.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (11 samples, 0.22%)</title><rect x="47.0115%" y="853" width="0.2214%" height="15" fill="rgb(232,48,39)" fg:x="2336" fg:w="11"/><text x="47.2615%" y="863.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (2 samples, 0.04%)</title><rect x="47.1926%" y="837" width="0.0402%" height="15" fill="rgb(236,34,42)" fg:x="2345" fg:w="2"/><text x="47.4426%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (2 samples, 0.04%)</title><rect x="47.2328%" y="869" width="0.0402%" height="15" fill="rgb(243,106,37)" fg:x="2347" fg:w="2"/><text x="47.4828%" y="879.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="47.2328%" y="853" width="0.0402%" height="15" fill="rgb(218,96,6)" fg:x="2347" fg:w="2"/><text x="47.4828%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.46%)</title><rect x="46.8505%" y="901" width="0.4629%" height="15" fill="rgb(235,130,12)" fg:x="2328" fg:w="23"/><text x="47.1005%" y="911.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::_{{closure}} (23 samples, 0.46%)</title><rect x="46.8505%" y="885" width="0.4629%" height="15" fill="rgb(231,95,0)" fg:x="2328" fg:w="23"/><text x="47.1005%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (2 samples, 0.04%)</title><rect x="47.2731%" y="869" width="0.0402%" height="15" fill="rgb(228,12,23)" fg:x="2349" fg:w="2"/><text x="47.5231%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="47.3133%" y="901" width="0.0201%" height="15" fill="rgb(216,12,1)" fg:x="2351" fg:w="1"/><text x="47.5633%" y="911.50"></text></g><g><title>fred::multiplexer::responses::last_centralized_command_ends_transaction::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="47.3133%" y="885" width="0.0201%" height="15" fill="rgb(219,59,3)" fg:x="2351" fg:w="1"/><text x="47.5633%" y="895.50"></text></g><g><title>fred::protocol::types::RedisCommandKind::is_exec (1 samples, 0.02%)</title><rect x="47.3133%" y="869" width="0.0201%" height="15" fill="rgb(215,208,46)" fg:x="2351" fg:w="1"/><text x="47.5633%" y="879.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (2 samples, 0.04%)</title><rect x="47.4140%" y="853" width="0.0402%" height="15" fill="rgb(254,224,29)" fg:x="2356" fg:w="2"/><text x="47.6640%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (2 samples, 0.04%)</title><rect x="47.4743%" y="709" width="0.0402%" height="15" fill="rgb(232,14,29)" fg:x="2359" fg:w="2"/><text x="47.7243%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.04%)</title><rect x="47.4743%" y="693" width="0.0402%" height="15" fill="rgb(208,45,52)" fg:x="2359" fg:w="2"/><text x="47.7243%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.04%)</title><rect x="47.4743%" y="677" width="0.0402%" height="15" fill="rgb(234,191,28)" fg:x="2359" fg:w="2"/><text x="47.7243%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.10%)</title><rect x="47.4743%" y="789" width="0.1006%" height="15" fill="rgb(244,67,43)" fg:x="2359" fg:w="5"/><text x="47.7243%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.10%)</title><rect x="47.4743%" y="773" width="0.1006%" height="15" fill="rgb(236,189,24)" fg:x="2359" fg:w="5"/><text x="47.7243%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (5 samples, 0.10%)</title><rect x="47.4743%" y="757" width="0.1006%" height="15" fill="rgb(239,214,33)" fg:x="2359" fg:w="5"/><text x="47.7243%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (5 samples, 0.10%)</title><rect x="47.4743%" y="741" width="0.1006%" height="15" fill="rgb(226,176,41)" fg:x="2359" fg:w="5"/><text x="47.7243%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (5 samples, 0.10%)</title><rect x="47.4743%" y="725" width="0.1006%" height="15" fill="rgb(248,47,8)" fg:x="2359" fg:w="5"/><text x="47.7243%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (3 samples, 0.06%)</title><rect x="47.5146%" y="709" width="0.0604%" height="15" fill="rgb(218,81,44)" fg:x="2361" fg:w="3"/><text x="47.7646%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (3 samples, 0.06%)</title><rect x="47.5146%" y="693" width="0.0604%" height="15" fill="rgb(213,98,6)" fg:x="2361" fg:w="3"/><text x="47.7646%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.06%)</title><rect x="47.5146%" y="677" width="0.0604%" height="15" fill="rgb(222,85,22)" fg:x="2361" fg:w="3"/><text x="47.7646%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (1 samples, 0.02%)</title><rect x="47.5548%" y="661" width="0.0201%" height="15" fill="rgb(239,46,39)" fg:x="2363" fg:w="1"/><text x="47.8048%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="47.5548%" y="645" width="0.0201%" height="15" fill="rgb(237,12,29)" fg:x="2363" fg:w="1"/><text x="47.8048%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.14%)</title><rect x="47.4542%" y="853" width="0.1409%" height="15" fill="rgb(214,77,8)" fg:x="2358" fg:w="7"/><text x="47.7042%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.14%)</title><rect x="47.4542%" y="837" width="0.1409%" height="15" fill="rgb(217,168,37)" fg:x="2358" fg:w="7"/><text x="47.7042%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.14%)</title><rect x="47.4542%" y="821" width="0.1409%" height="15" fill="rgb(221,217,23)" fg:x="2358" fg:w="7"/><text x="47.7042%" y="831.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (7 samples, 0.14%)</title><rect x="47.4542%" y="805" width="0.1409%" height="15" fill="rgb(243,229,36)" fg:x="2358" fg:w="7"/><text x="47.7042%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.02%)</title><rect x="47.5750%" y="789" width="0.0201%" height="15" fill="rgb(251,163,40)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="47.5750%" y="773" width="0.0201%" height="15" fill="rgb(237,222,12)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="783.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="47.5750%" y="757" width="0.0201%" height="15" fill="rgb(248,132,6)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="767.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="47.5750%" y="741" width="0.0201%" height="15" fill="rgb(227,167,50)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="751.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="47.5750%" y="725" width="0.0201%" height="15" fill="rgb(242,84,37)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="735.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="47.5750%" y="709" width="0.0201%" height="15" fill="rgb(212,4,50)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="47.5750%" y="693" width="0.0201%" height="15" fill="rgb(230,228,32)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="47.5750%" y="677" width="0.0201%" height="15" fill="rgb(248,217,23)" fg:x="2364" fg:w="1"/><text x="47.8250%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (14 samples, 0.28%)</title><rect x="47.3536%" y="869" width="0.2817%" height="15" fill="rgb(238,197,32)" fg:x="2353" fg:w="14"/><text x="47.6036%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (2 samples, 0.04%)</title><rect x="47.5951%" y="853" width="0.0402%" height="15" fill="rgb(236,106,1)" fg:x="2365" fg:w="2"/><text x="47.8451%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.04%)</title><rect x="47.5951%" y="837" width="0.0402%" height="15" fill="rgb(219,228,13)" fg:x="2365" fg:w="2"/><text x="47.8451%" y="847.50"></text></g><g><title>fred::multiplexer::responses::last_centralized_command_ends_transaction::_{{closure}} (44 samples, 0.89%)</title><rect x="46.8102%" y="917" width="0.8855%" height="15" fill="rgb(238,30,35)" fg:x="2326" fg:w="44"/><text x="47.0602%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::read_guard::RwLockReadGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (18 samples, 0.36%)</title><rect x="47.3335%" y="901" width="0.3622%" height="15" fill="rgb(236,70,23)" fg:x="2352" fg:w="18"/><text x="47.5835%" y="911.50"></text></g><g><title>&lt;tokio::sync::rwlock::read_guard::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.36%)</title><rect x="47.3335%" y="885" width="0.3622%" height="15" fill="rgb(249,104,48)" fg:x="2352" fg:w="18"/><text x="47.5835%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (3 samples, 0.06%)</title><rect x="47.6353%" y="869" width="0.0604%" height="15" fill="rgb(254,117,50)" fg:x="2367" fg:w="3"/><text x="47.8853%" y="879.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="47.6756%" y="853" width="0.0201%" height="15" fill="rgb(223,152,4)" fg:x="2369" fg:w="1"/><text x="47.9256%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="47.6756%" y="837" width="0.0201%" height="15" fill="rgb(245,6,2)" fg:x="2369" fg:w="1"/><text x="47.9256%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="47.6756%" y="821" width="0.0201%" height="15" fill="rgb(249,150,24)" fg:x="2369" fg:w="1"/><text x="47.9256%" y="831.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::project (1 samples, 0.02%)</title><rect x="47.8165%" y="885" width="0.0201%" height="15" fill="rgb(228,185,42)" fg:x="2376" fg:w="1"/><text x="48.0665%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="47.9976%" y="869" width="0.0201%" height="15" fill="rgb(226,39,33)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="879.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::_{{closure}} (1 samples, 0.02%)</title><rect x="47.9976%" y="853" width="0.0201%" height="15" fill="rgb(221,166,19)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="47.9976%" y="837" width="0.0201%" height="15" fill="rgb(209,109,2)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.02%)</title><rect x="47.9976%" y="821" width="0.0201%" height="15" fill="rgb(252,216,26)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.02%)</title><rect x="47.9976%" y="805" width="0.0201%" height="15" fill="rgb(227,173,36)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="815.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="47.9976%" y="789" width="0.0201%" height="15" fill="rgb(209,90,7)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="799.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="47.9976%" y="773" width="0.0201%" height="15" fill="rgb(250,194,11)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="783.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="47.9976%" y="757" width="0.0201%" height="15" fill="rgb(220,72,50)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="767.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="47.9976%" y="741" width="0.0201%" height="15" fill="rgb(222,106,48)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="751.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="47.9976%" y="725" width="0.0201%" height="15" fill="rgb(216,220,45)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="735.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="47.9976%" y="709" width="0.0201%" height="15" fill="rgb(234,112,18)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="719.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="47.9976%" y="693" width="0.0201%" height="15" fill="rgb(206,179,9)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="703.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="47.9976%" y="677" width="0.0201%" height="15" fill="rgb(215,115,40)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="687.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="47.9976%" y="661" width="0.0201%" height="15" fill="rgb(222,69,34)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="671.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="47.9976%" y="645" width="0.0201%" height="15" fill="rgb(209,161,10)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="655.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="47.9976%" y="629" width="0.0201%" height="15" fill="rgb(217,6,38)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="639.50"></text></g><g><title>snd_complete_urb (1 samples, 0.02%)</title><rect x="47.9976%" y="613" width="0.0201%" height="15" fill="rgb(229,229,48)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="623.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="47.9976%" y="597" width="0.0201%" height="15" fill="rgb(225,21,28)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="607.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="47.9976%" y="581" width="0.0201%" height="15" fill="rgb(206,33,13)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="591.50"></text></g><g><title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="47.9976%" y="565" width="0.0201%" height="15" fill="rgb(242,178,17)" fg:x="2385" fg:w="1"/><text x="48.2476%" y="575.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (13 samples, 0.26%)</title><rect x="47.7963%" y="901" width="0.2616%" height="15" fill="rgb(220,162,5)" fg:x="2375" fg:w="13"/><text x="48.0463%" y="911.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (11 samples, 0.22%)</title><rect x="47.8366%" y="885" width="0.2214%" height="15" fill="rgb(210,33,43)" fg:x="2377" fg:w="11"/><text x="48.0866%" y="895.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (2 samples, 0.04%)</title><rect x="48.0177%" y="869" width="0.0402%" height="15" fill="rgb(216,116,54)" fg:x="2386" fg:w="2"/><text x="48.2677%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 1.29%)</title><rect x="46.7901%" y="933" width="1.2880%" height="15" fill="rgb(249,92,24)" fg:x="2325" fg:w="64"/><text x="47.0401%" y="943.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (19 samples, 0.38%)</title><rect x="47.6957%" y="917" width="0.3824%" height="15" fill="rgb(231,189,14)" fg:x="2370" fg:w="19"/><text x="47.9457%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.02%)</title><rect x="48.0580%" y="901" width="0.0201%" height="15" fill="rgb(230,8,41)" fg:x="2388" fg:w="1"/><text x="48.3080%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.06%)</title><rect x="48.0781%" y="933" width="0.0604%" height="15" fill="rgb(249,7,27)" fg:x="2389" fg:w="3"/><text x="48.3281%" y="943.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="48.0781%" y="917" width="0.0604%" height="15" fill="rgb(232,86,5)" fg:x="2389" fg:w="3"/><text x="48.3281%" y="927.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="48.1385%" y="933" width="0.0604%" height="15" fill="rgb(224,175,18)" fg:x="2392" fg:w="3"/><text x="48.3885%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="48.1988%" y="901" width="0.0201%" height="15" fill="rgb(220,129,12)" fg:x="2395" fg:w="1"/><text x="48.4488%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="48.1988%" y="885" width="0.0201%" height="15" fill="rgb(210,19,36)" fg:x="2395" fg:w="1"/><text x="48.4488%" y="895.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_read (12 samples, 0.24%)</title><rect x="48.1988%" y="917" width="0.2415%" height="15" fill="rgb(219,96,14)" fg:x="2395" fg:w="12"/><text x="48.4488%" y="927.50"></text></g><g><title>core::ptr::read (11 samples, 0.22%)</title><rect x="48.2190%" y="901" width="0.2214%" height="15" fill="rgb(249,106,1)" fg:x="2396" fg:w="11"/><text x="48.4690%" y="911.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::pop_front (13 samples, 0.26%)</title><rect x="48.1988%" y="933" width="0.2616%" height="15" fill="rgb(249,155,20)" fg:x="2395" fg:w="13"/><text x="48.4488%" y="943.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::is_empty (1 samples, 0.02%)</title><rect x="48.4403%" y="917" width="0.0201%" height="15" fill="rgb(244,168,9)" fg:x="2407" fg:w="1"/><text x="48.6903%" y="927.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (3 samples, 0.06%)</title><rect x="48.5208%" y="885" width="0.0604%" height="15" fill="rgb(216,23,50)" fg:x="2411" fg:w="3"/><text x="48.7708%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.06%)</title><rect x="48.5812%" y="885" width="0.0604%" height="15" fill="rgb(224,219,20)" fg:x="2414" fg:w="3"/><text x="48.8312%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.06%)</title><rect x="48.5812%" y="869" width="0.0604%" height="15" fill="rgb(222,156,15)" fg:x="2414" fg:w="3"/><text x="48.8312%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.06%)</title><rect x="48.5812%" y="853" width="0.0604%" height="15" fill="rgb(231,97,17)" fg:x="2414" fg:w="3"/><text x="48.8312%" y="863.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (3 samples, 0.06%)</title><rect x="48.5812%" y="837" width="0.0604%" height="15" fill="rgb(218,70,48)" fg:x="2414" fg:w="3"/><text x="48.8312%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect x="48.6013%" y="821" width="0.0402%" height="15" fill="rgb(212,196,52)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.04%)</title><rect x="48.6013%" y="805" width="0.0402%" height="15" fill="rgb(243,203,18)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.04%)</title><rect x="48.6013%" y="789" width="0.0402%" height="15" fill="rgb(252,125,41)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (2 samples, 0.04%)</title><rect x="48.6013%" y="773" width="0.0402%" height="15" fill="rgb(223,180,33)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (2 samples, 0.04%)</title><rect x="48.6013%" y="757" width="0.0402%" height="15" fill="rgb(254,159,46)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (2 samples, 0.04%)</title><rect x="48.6013%" y="741" width="0.0402%" height="15" fill="rgb(254,38,10)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2 samples, 0.04%)</title><rect x="48.6013%" y="725" width="0.0402%" height="15" fill="rgb(208,217,32)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="735.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="48.6013%" y="709" width="0.0402%" height="15" fill="rgb(221,120,13)" fg:x="2415" fg:w="2"/><text x="48.8513%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="48.6215%" y="693" width="0.0201%" height="15" fill="rgb(246,54,52)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="48.6215%" y="677" width="0.0201%" height="15" fill="rgb(242,34,25)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.02%)</title><rect x="48.6215%" y="661" width="0.0201%" height="15" fill="rgb(247,209,9)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="671.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="48.6215%" y="645" width="0.0201%" height="15" fill="rgb(228,71,26)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="655.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="48.6215%" y="629" width="0.0201%" height="15" fill="rgb(222,145,49)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="48.6215%" y="613" width="0.0201%" height="15" fill="rgb(218,121,17)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="623.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="48.6215%" y="597" width="0.0201%" height="15" fill="rgb(244,50,7)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="607.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="48.6215%" y="581" width="0.0201%" height="15" fill="rgb(246,229,37)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="591.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="48.6215%" y="565" width="0.0201%" height="15" fill="rgb(225,18,5)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="575.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="48.6215%" y="549" width="0.0201%" height="15" fill="rgb(213,204,8)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="559.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="48.6215%" y="533" width="0.0201%" height="15" fill="rgb(238,103,6)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="543.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="48.6215%" y="517" width="0.0201%" height="15" fill="rgb(222,25,35)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="48.6215%" y="501" width="0.0201%" height="15" fill="rgb(213,203,35)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="511.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="48.6215%" y="485" width="0.0201%" height="15" fill="rgb(221,79,53)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="495.50"></text></g><g><title>xhci_dma_to_transfer_ring (1 samples, 0.02%)</title><rect x="48.6215%" y="469" width="0.0201%" height="15" fill="rgb(243,200,35)" fg:x="2416" fg:w="1"/><text x="48.8715%" y="479.50"></text></g><g><title>core::mem::drop (3 samples, 0.06%)</title><rect x="48.6416%" y="885" width="0.0604%" height="15" fill="rgb(248,60,25)" fg:x="2417" fg:w="3"/><text x="48.8916%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (3 samples, 0.06%)</title><rect x="48.6416%" y="869" width="0.0604%" height="15" fill="rgb(227,53,46)" fg:x="2417" fg:w="3"/><text x="48.8916%" y="879.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="48.6416%" y="853" width="0.0604%" height="15" fill="rgb(216,120,32)" fg:x="2417" fg:w="3"/><text x="48.8916%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.06%)</title><rect x="48.6416%" y="837" width="0.0604%" height="15" fill="rgb(220,134,1)" fg:x="2417" fg:w="3"/><text x="48.8916%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (2 samples, 0.04%)</title><rect x="48.7020%" y="885" width="0.0402%" height="15" fill="rgb(237,168,5)" fg:x="2420" fg:w="2"/><text x="48.9520%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.04%)</title><rect x="48.7020%" y="869" width="0.0402%" height="15" fill="rgb(231,100,33)" fg:x="2420" fg:w="2"/><text x="48.9520%" y="879.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (15 samples, 0.30%)</title><rect x="48.4605%" y="901" width="0.3019%" height="15" fill="rgb(236,177,47)" fg:x="2408" fg:w="15"/><text x="48.7105%" y="911.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (1 samples, 0.02%)</title><rect x="48.7422%" y="885" width="0.0201%" height="15" fill="rgb(235,7,49)" fg:x="2422" fg:w="1"/><text x="48.9922%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;fred::multiplexer::SentCommand&gt;&gt;&gt; (20 samples, 0.40%)</title><rect x="48.4605%" y="933" width="0.4025%" height="15" fill="rgb(232,119,22)" fg:x="2408" fg:w="20"/><text x="48.7105%" y="943.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.40%)</title><rect x="48.4605%" y="917" width="0.4025%" height="15" fill="rgb(254,73,53)" fg:x="2408" fg:w="20"/><text x="48.7105%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (5 samples, 0.10%)</title><rect x="48.7623%" y="901" width="0.1006%" height="15" fill="rgb(251,35,20)" fg:x="2423" fg:w="5"/><text x="49.0123%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.06%)</title><rect x="48.8026%" y="885" width="0.0604%" height="15" fill="rgb(241,119,20)" fg:x="2425" fg:w="3"/><text x="49.0526%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.06%)</title><rect x="48.8026%" y="869" width="0.0604%" height="15" fill="rgb(207,102,14)" fg:x="2425" fg:w="3"/><text x="49.0526%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.06%)</title><rect x="48.8026%" y="853" width="0.0604%" height="15" fill="rgb(248,201,50)" fg:x="2425" fg:w="3"/><text x="49.0526%" y="863.50"></text></g><g><title>fred::multiplexer::responses::check_pubsub_message (3 samples, 0.06%)</title><rect x="48.8630%" y="933" width="0.0604%" height="15" fill="rgb(222,185,44)" fg:x="2428" fg:w="3"/><text x="49.1130%" y="943.50"></text></g><g><title>fred::multiplexer::responses::check_redirection_error (1 samples, 0.02%)</title><rect x="48.9233%" y="933" width="0.0201%" height="15" fill="rgb(218,107,18)" fg:x="2431" fg:w="1"/><text x="49.1733%" y="943.50"></text></g><g><title>redis_protocol::types::Frame::is_moved_or_ask_error (1 samples, 0.02%)</title><rect x="48.9233%" y="917" width="0.0201%" height="15" fill="rgb(237,177,39)" fg:x="2431" fg:w="1"/><text x="49.1733%" y="927.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (137 samples, 2.76%)</title><rect x="46.2065%" y="1269" width="2.7571%" height="15" fill="rgb(246,69,6)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1279.50">fr..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (137 samples, 2.76%)</title><rect x="46.2065%" y="1253" width="2.7571%" height="15" fill="rgb(234,208,37)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1263.50">fu..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1237" width="2.7571%" height="15" fill="rgb(225,4,6)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1247.50">&lt;c..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1221" width="2.7571%" height="15" fill="rgb(233,45,0)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1231.50">&lt;c..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1205" width="2.7571%" height="15" fill="rgb(226,136,5)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1215.50">&lt;f..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1189" width="2.7571%" height="15" fill="rgb(211,91,47)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1199.50">&lt;f..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1173" width="2.7571%" height="15" fill="rgb(242,88,51)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1183.50">&lt;f..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1157" width="2.7571%" height="15" fill="rgb(230,91,28)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1167.50">&lt;f..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1141" width="2.7571%" height="15" fill="rgb(254,186,29)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1151.50">&lt;f..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1125" width="2.7571%" height="15" fill="rgb(238,6,4)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1135.50">&lt;F..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1109" width="2.7571%" height="15" fill="rgb(221,151,16)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1119.50">&lt;f..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1093" width="2.7571%" height="15" fill="rgb(251,143,52)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1103.50">&lt;f..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1077" width="2.7571%" height="15" fill="rgb(206,90,15)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1087.50">&lt;f..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1061" width="2.7571%" height="15" fill="rgb(218,35,8)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1071.50">&lt;f..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1045" width="2.7571%" height="15" fill="rgb(239,215,6)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1055.50">&lt;F..</text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1029" width="2.7571%" height="15" fill="rgb(245,116,39)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1039.50">&lt;f..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (137 samples, 2.76%)</title><rect x="46.2065%" y="1013" width="2.7571%" height="15" fill="rgb(242,65,28)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1023.50">&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="997" width="2.7571%" height="15" fill="rgb(252,132,53)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="1007.50">&lt;c..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (137 samples, 2.76%)</title><rect x="46.2065%" y="981" width="2.7571%" height="15" fill="rgb(224,159,50)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="991.50">fr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 2.76%)</title><rect x="46.2065%" y="965" width="2.7571%" height="15" fill="rgb(224,93,4)" fg:x="2296" fg:w="137"/><text x="46.4565%" y="975.50">&lt;c..</text></g><g><title>fred::multiplexer::responses::process_centralized_frame::_{{closure}} (127 samples, 2.56%)</title><rect x="46.4077%" y="949" width="2.5558%" height="15" fill="rgb(208,81,34)" fg:x="2306" fg:w="127"/><text x="46.6577%" y="959.50">fr..</text></g><g><title>fred::multiplexer::responses::process_response (1 samples, 0.02%)</title><rect x="48.9434%" y="933" width="0.0201%" height="15" fill="rgb(233,92,54)" fg:x="2432" fg:w="1"/><text x="49.1934%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.10%)</title><rect x="48.9636%" y="501" width="0.1006%" height="15" fill="rgb(237,21,14)" fg:x="2433" fg:w="5"/><text x="49.2136%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.10%)</title><rect x="48.9636%" y="485" width="0.1006%" height="15" fill="rgb(249,128,51)" fg:x="2433" fg:w="5"/><text x="49.2136%" y="495.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (5 samples, 0.10%)</title><rect x="48.9636%" y="469" width="0.1006%" height="15" fill="rgb(223,129,24)" fg:x="2433" fg:w="5"/><text x="49.2136%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.06%)</title><rect x="49.0038%" y="453" width="0.0604%" height="15" fill="rgb(231,168,25)" fg:x="2435" fg:w="3"/><text x="49.2538%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.06%)</title><rect x="49.0038%" y="437" width="0.0604%" height="15" fill="rgb(224,39,20)" fg:x="2435" fg:w="3"/><text x="49.2538%" y="447.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="49.0642%" y="501" width="0.1006%" height="15" fill="rgb(225,152,53)" fg:x="2438" fg:w="5"/><text x="49.3142%" y="511.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.04%)</title><rect x="49.1648%" y="501" width="0.0402%" height="15" fill="rgb(252,17,24)" fg:x="2443" fg:w="2"/><text x="49.4148%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="49.1648%" y="485" width="0.0402%" height="15" fill="rgb(250,114,30)" fg:x="2443" fg:w="2"/><text x="49.4148%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="49.1648%" y="469" width="0.0402%" height="15" fill="rgb(229,5,4)" fg:x="2443" fg:w="2"/><text x="49.4148%" y="479.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="49.1648%" y="453" width="0.0402%" height="15" fill="rgb(225,176,49)" fg:x="2443" fg:w="2"/><text x="49.4148%" y="463.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="49.1849%" y="437" width="0.0201%" height="15" fill="rgb(224,221,49)" fg:x="2444" fg:w="1"/><text x="49.4349%" y="447.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="49.1849%" y="421" width="0.0201%" height="15" fill="rgb(253,169,27)" fg:x="2444" fg:w="1"/><text x="49.4349%" y="431.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.26%)</title><rect x="48.9636%" y="1269" width="0.2616%" height="15" fill="rgb(211,206,16)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1279.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="1253" width="0.2616%" height="15" fill="rgb(244,87,35)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (13 samples, 0.26%)</title><rect x="48.9636%" y="1237" width="0.2616%" height="15" fill="rgb(246,28,10)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1247.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (13 samples, 0.26%)</title><rect x="48.9636%" y="1221" width="0.2616%" height="15" fill="rgb(229,12,44)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="1205" width="0.2616%" height="15" fill="rgb(210,145,37)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="1189" width="0.2616%" height="15" fill="rgb(227,112,52)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (13 samples, 0.26%)</title><rect x="48.9636%" y="1173" width="0.2616%" height="15" fill="rgb(238,155,34)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (13 samples, 0.26%)</title><rect x="48.9636%" y="1157" width="0.2616%" height="15" fill="rgb(239,226,36)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.26%)</title><rect x="48.9636%" y="1141" width="0.2616%" height="15" fill="rgb(230,16,23)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1151.50"></text></g><g><title>std::panicking::try (13 samples, 0.26%)</title><rect x="48.9636%" y="1125" width="0.2616%" height="15" fill="rgb(236,171,36)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.26%)</title><rect x="48.9636%" y="1109" width="0.2616%" height="15" fill="rgb(221,22,14)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.26%)</title><rect x="48.9636%" y="1093" width="0.2616%" height="15" fill="rgb(242,43,11)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="1077" width="0.2616%" height="15" fill="rgb(232,69,23)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="1061" width="0.2616%" height="15" fill="rgb(216,180,54)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.26%)</title><rect x="48.9636%" y="1045" width="0.2616%" height="15" fill="rgb(216,5,24)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="1029" width="0.2616%" height="15" fill="rgb(225,89,9)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="1013" width="0.2616%" height="15" fill="rgb(243,75,33)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="997" width="0.2616%" height="15" fill="rgb(247,141,45)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (13 samples, 0.26%)</title><rect x="48.9636%" y="981" width="0.2616%" height="15" fill="rgb(232,177,36)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="991.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (13 samples, 0.26%)</title><rect x="48.9636%" y="965" width="0.2616%" height="15" fill="rgb(219,125,36)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="949" width="0.2616%" height="15" fill="rgb(227,94,9)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (13 samples, 0.26%)</title><rect x="48.9636%" y="933" width="0.2616%" height="15" fill="rgb(240,34,52)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (13 samples, 0.26%)</title><rect x="48.9636%" y="917" width="0.2616%" height="15" fill="rgb(216,45,12)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="927.50"></text></g><g><title>tokio::coop::budget (13 samples, 0.26%)</title><rect x="48.9636%" y="901" width="0.2616%" height="15" fill="rgb(246,21,19)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="911.50"></text></g><g><title>tokio::coop::with_budget (13 samples, 0.26%)</title><rect x="48.9636%" y="885" width="0.2616%" height="15" fill="rgb(213,98,42)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.26%)</title><rect x="48.9636%" y="869" width="0.2616%" height="15" fill="rgb(250,136,47)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.26%)</title><rect x="48.9636%" y="853" width="0.2616%" height="15" fill="rgb(251,124,27)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="863.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="837" width="0.2616%" height="15" fill="rgb(229,180,14)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="821" width="0.2616%" height="15" fill="rgb(245,216,25)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="831.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (13 samples, 0.26%)</title><rect x="48.9636%" y="805" width="0.2616%" height="15" fill="rgb(251,43,5)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="789" width="0.2616%" height="15" fill="rgb(250,128,24)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="773" width="0.2616%" height="15" fill="rgb(217,117,27)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (13 samples, 0.26%)</title><rect x="48.9636%" y="757" width="0.2616%" height="15" fill="rgb(245,147,4)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (13 samples, 0.26%)</title><rect x="48.9636%" y="741" width="0.2616%" height="15" fill="rgb(242,201,35)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="751.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.26%)</title><rect x="48.9636%" y="725" width="0.2616%" height="15" fill="rgb(218,181,1)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="735.50"></text></g><g><title>std::panicking::try (13 samples, 0.26%)</title><rect x="48.9636%" y="709" width="0.2616%" height="15" fill="rgb(222,6,29)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="719.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.26%)</title><rect x="48.9636%" y="693" width="0.2616%" height="15" fill="rgb(208,186,3)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.26%)</title><rect x="48.9636%" y="677" width="0.2616%" height="15" fill="rgb(216,36,26)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="661" width="0.2616%" height="15" fill="rgb(248,201,23)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="671.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="645" width="0.2616%" height="15" fill="rgb(251,170,31)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="655.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.26%)</title><rect x="48.9636%" y="629" width="0.2616%" height="15" fill="rgb(207,110,25)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="639.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="613" width="0.2616%" height="15" fill="rgb(250,54,15)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="597" width="0.2616%" height="15" fill="rgb(227,68,33)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="607.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="581" width="0.2616%" height="15" fill="rgb(238,34,41)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="591.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.26%)</title><rect x="48.9636%" y="565" width="0.2616%" height="15" fill="rgb(220,11,15)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="575.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="549" width="0.2616%" height="15" fill="rgb(246,111,35)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.26%)</title><rect x="48.9636%" y="533" width="0.2616%" height="15" fill="rgb(209,88,53)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="543.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (13 samples, 0.26%)</title><rect x="48.9636%" y="517" width="0.2616%" height="15" fill="rgb(231,185,47)" fg:x="2433" fg:w="13"/><text x="49.2136%" y="527.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="49.2051%" y="501" width="0.0201%" height="15" fill="rgb(233,154,1)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="511.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="49.2051%" y="485" width="0.0201%" height="15" fill="rgb(225,15,46)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="495.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="49.2051%" y="469" width="0.0201%" height="15" fill="rgb(211,135,41)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="479.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="49.2051%" y="453" width="0.0201%" height="15" fill="rgb(208,54,0)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="49.2051%" y="437" width="0.0201%" height="15" fill="rgb(244,136,14)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="447.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="49.2051%" y="421" width="0.0201%" height="15" fill="rgb(241,56,14)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="431.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="49.2051%" y="405" width="0.0201%" height="15" fill="rgb(205,80,24)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="415.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="49.2051%" y="389" width="0.0201%" height="15" fill="rgb(220,57,4)" fg:x="2445" fg:w="1"/><text x="49.4551%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.12%)</title><rect x="49.2252%" y="1269" width="0.1207%" height="15" fill="rgb(226,193,50)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.12%)</title><rect x="49.2252%" y="1253" width="0.1207%" height="15" fill="rgb(231,168,22)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1263.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="1237" width="0.1207%" height="15" fill="rgb(254,215,14)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="1221" width="0.1207%" height="15" fill="rgb(211,115,16)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1231.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (6 samples, 0.12%)</title><rect x="49.2252%" y="1205" width="0.1207%" height="15" fill="rgb(236,210,16)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="1189" width="0.1207%" height="15" fill="rgb(221,94,12)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="1173" width="0.1207%" height="15" fill="rgb(235,218,49)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.12%)</title><rect x="49.2252%" y="1157" width="0.1207%" height="15" fill="rgb(217,114,14)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.12%)</title><rect x="49.2252%" y="1141" width="0.1207%" height="15" fill="rgb(216,145,22)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.12%)</title><rect x="49.2252%" y="1125" width="0.1207%" height="15" fill="rgb(217,112,39)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1135.50"></text></g><g><title>std::panicking::try (6 samples, 0.12%)</title><rect x="49.2252%" y="1109" width="0.1207%" height="15" fill="rgb(225,85,32)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.12%)</title><rect x="49.2252%" y="1093" width="0.1207%" height="15" fill="rgb(245,209,47)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.12%)</title><rect x="49.2252%" y="1077" width="0.1207%" height="15" fill="rgb(218,220,15)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="1061" width="0.1207%" height="15" fill="rgb(222,202,31)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="1045" width="0.1207%" height="15" fill="rgb(243,203,4)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1055.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.12%)</title><rect x="49.2252%" y="1029" width="0.1207%" height="15" fill="rgb(237,92,17)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="1013" width="0.1207%" height="15" fill="rgb(231,119,7)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="997" width="0.1207%" height="15" fill="rgb(237,82,41)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="1007.50"></text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="981" width="0.1207%" height="15" fill="rgb(226,81,48)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="965" width="0.1207%" height="15" fill="rgb(234,70,51)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="975.50"></text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="949" width="0.1207%" height="15" fill="rgb(251,86,4)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="933" width="0.1207%" height="15" fill="rgb(244,144,28)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="943.50"></text></g><g><title>fred::commands::keys::incr::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="917" width="0.1207%" height="15" fill="rgb(232,161,39)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="901" width="0.1207%" height="15" fill="rgb(247,34,51)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="911.50"></text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="885" width="0.1207%" height="15" fill="rgb(225,132,2)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="49.2252%" y="869" width="0.1207%" height="15" fill="rgb(209,159,44)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="879.50"></text></g><g><title>fred::utils::request_response::_{{closure}} (6 samples, 0.12%)</title><rect x="49.2252%" y="853" width="0.1207%" height="15" fill="rgb(251,214,1)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="863.50"></text></g><g><title>fred::protocol::types::RedisCommand::new (6 samples, 0.12%)</title><rect x="49.2252%" y="837" width="0.1207%" height="15" fill="rgb(247,84,47)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.12%)</title><rect x="49.2252%" y="821" width="0.1207%" height="15" fill="rgb(240,111,43)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.12%)</title><rect x="49.2252%" y="805" width="0.1207%" height="15" fill="rgb(215,214,35)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.12%)</title><rect x="49.2252%" y="789" width="0.1207%" height="15" fill="rgb(248,207,23)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.12%)</title><rect x="49.2252%" y="773" width="0.1207%" height="15" fill="rgb(214,186,4)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="783.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.12%)</title><rect x="49.2252%" y="757" width="0.1207%" height="15" fill="rgb(220,133,22)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="767.50"></text></g><g><title>__libc_malloc (6 samples, 0.12%)</title><rect x="49.2252%" y="741" width="0.1207%" height="15" fill="rgb(239,134,19)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="751.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="49.2252%" y="725" width="0.1207%" height="15" fill="rgb(250,140,9)" fg:x="2446" fg:w="6"/><text x="49.4752%" y="735.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (3 samples, 0.06%)</title><rect x="49.3459%" y="1077" width="0.0604%" height="15" fill="rgb(225,59,14)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1087.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="1061" width="0.0604%" height="15" fill="rgb(214,152,51)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1071.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (3 samples, 0.06%)</title><rect x="49.3459%" y="1045" width="0.0604%" height="15" fill="rgb(251,227,43)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.06%)</title><rect x="49.3459%" y="1029" width="0.0604%" height="15" fill="rgb(241,96,17)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1039.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.06%)</title><rect x="49.3459%" y="1013" width="0.0604%" height="15" fill="rgb(234,198,43)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1023.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 0.06%)</title><rect x="49.3459%" y="997" width="0.0604%" height="15" fill="rgb(220,108,29)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="981" width="0.0604%" height="15" fill="rgb(226,163,33)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="965" width="0.0604%" height="15" fill="rgb(205,194,45)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="949" width="0.0604%" height="15" fill="rgb(206,143,44)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="959.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="933" width="0.0604%" height="15" fill="rgb(236,136,36)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="917" width="0.0604%" height="15" fill="rgb(249,172,42)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="901" width="0.0604%" height="15" fill="rgb(216,139,23)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="911.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.06%)</title><rect x="49.3459%" y="885" width="0.0604%" height="15" fill="rgb(207,166,20)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="895.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="869" width="0.0604%" height="15" fill="rgb(210,209,22)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="853" width="0.0604%" height="15" fill="rgb(232,118,20)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="837" width="0.0604%" height="15" fill="rgb(238,113,42)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="821" width="0.0604%" height="15" fill="rgb(231,42,5)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="831.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.06%)</title><rect x="49.3459%" y="805" width="0.0604%" height="15" fill="rgb(243,166,24)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="815.50"></text></g><g><title>&lt;futures_util::future::try_future::ErrInto&lt;Fut,E&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="789" width="0.0604%" height="15" fill="rgb(237,226,12)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="773" width="0.0604%" height="15" fill="rgb(229,133,24)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="783.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="757" width="0.0604%" height="15" fill="rgb(238,33,43)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="767.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="741" width="0.0604%" height="15" fill="rgb(227,59,38)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="751.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="725" width="0.0604%" height="15" fill="rgb(230,97,0)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="735.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.06%)</title><rect x="49.3459%" y="709" width="0.0604%" height="15" fill="rgb(250,173,50)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="49.3459%" y="693" width="0.0604%" height="15" fill="rgb(240,15,50)" fg:x="2452" fg:w="3"/><text x="49.5959%" y="703.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="49.4868%" y="917" width="0.0201%" height="15" fill="rgb(221,93,22)" fg:x="2459" fg:w="1"/><text x="49.7368%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;tokio::sync::mpsc::unbounded::UnboundedSender&lt;fred::protocol::types::RedisCommand&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="49.5069%" y="917" width="0.0402%" height="15" fill="rgb(245,180,53)" fg:x="2460" fg:w="2"/><text x="49.7569%" y="927.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="49.5069%" y="901" width="0.0402%" height="15" fill="rgb(231,88,51)" fg:x="2460" fg:w="2"/><text x="49.7569%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.04%)</title><rect x="49.5069%" y="885" width="0.0402%" height="15" fill="rgb(240,58,21)" fg:x="2460" fg:w="2"/><text x="49.7569%" y="895.50"></text></g><g><title>fred::utils::incr_atomic (2 samples, 0.04%)</title><rect x="49.5472%" y="917" width="0.0402%" height="15" fill="rgb(237,21,10)" fg:x="2462" fg:w="2"/><text x="49.7972%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="49.5472%" y="901" width="0.0402%" height="15" fill="rgb(218,43,11)" fg:x="2462" fg:w="2"/><text x="49.7972%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="49.5472%" y="885" width="0.0402%" height="15" fill="rgb(218,221,29)" fg:x="2462" fg:w="2"/><text x="49.7972%" y="895.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.20%)</title><rect x="49.5874%" y="917" width="0.2012%" height="15" fill="rgb(214,118,42)" fg:x="2464" fg:w="10"/><text x="49.8374%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.20%)</title><rect x="49.5874%" y="901" width="0.2012%" height="15" fill="rgb(251,200,26)" fg:x="2464" fg:w="10"/><text x="49.8374%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (5 samples, 0.10%)</title><rect x="49.6881%" y="885" width="0.1006%" height="15" fill="rgb(237,101,39)" fg:x="2469" fg:w="5"/><text x="49.9381%" y="895.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="49.8289%" y="869" width="0.0201%" height="15" fill="rgb(251,117,11)" fg:x="2476" fg:w="1"/><text x="50.0789%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.06%)</title><rect x="50.2717%" y="837" width="0.0604%" height="15" fill="rgb(216,223,23)" fg:x="2498" fg:w="3"/><text x="50.5217%" y="847.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="50.2717%" y="821" width="0.0604%" height="15" fill="rgb(251,54,12)" fg:x="2498" fg:w="3"/><text x="50.5217%" y="831.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (25 samples, 0.50%)</title><rect x="49.8491%" y="869" width="0.5031%" height="15" fill="rgb(254,176,54)" fg:x="2477" fg:w="25"/><text x="50.0991%" y="879.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (4 samples, 0.08%)</title><rect x="50.2717%" y="853" width="0.0805%" height="15" fill="rgb(210,32,8)" fg:x="2498" fg:w="4"/><text x="50.5217%" y="863.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (1 samples, 0.02%)</title><rect x="50.3321%" y="837" width="0.0201%" height="15" fill="rgb(235,52,38)" fg:x="2501" fg:w="1"/><text x="50.5821%" y="847.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="50.3321%" y="821" width="0.0201%" height="15" fill="rgb(231,4,44)" fg:x="2501" fg:w="1"/><text x="50.5821%" y="831.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (51 samples, 1.03%)</title><rect x="49.7887%" y="901" width="1.0264%" height="15" fill="rgb(249,2,32)" fg:x="2474" fg:w="51"/><text x="50.0387%" y="911.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (51 samples, 1.03%)</title><rect x="49.7887%" y="885" width="1.0264%" height="15" fill="rgb(224,65,26)" fg:x="2474" fg:w="51"/><text x="50.0387%" y="895.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (23 samples, 0.46%)</title><rect x="50.3522%" y="869" width="0.4629%" height="15" fill="rgb(250,73,40)" fg:x="2502" fg:w="23"/><text x="50.6022%" y="879.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (18 samples, 0.36%)</title><rect x="50.4528%" y="853" width="0.3622%" height="15" fill="rgb(253,177,16)" fg:x="2507" fg:w="18"/><text x="50.7028%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (18 samples, 0.36%)</title><rect x="50.4528%" y="837" width="0.3622%" height="15" fill="rgb(217,32,34)" fg:x="2507" fg:w="18"/><text x="50.7028%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (18 samples, 0.36%)</title><rect x="50.4528%" y="821" width="0.3622%" height="15" fill="rgb(212,7,10)" fg:x="2507" fg:w="18"/><text x="50.7028%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.10%)</title><rect x="50.8151%" y="885" width="0.1006%" height="15" fill="rgb(245,89,8)" fg:x="2525" fg:w="5"/><text x="51.0651%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.10%)</title><rect x="50.8151%" y="869" width="0.1006%" height="15" fill="rgb(237,16,53)" fg:x="2525" fg:w="5"/><text x="51.0651%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 1.83%)</title><rect x="49.3459%" y="1093" width="1.8314%" height="15" fill="rgb(250,204,30)" fg:x="2452" fg:w="91"/><text x="49.5959%" y="1103.50">&lt;..</text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (88 samples, 1.77%)</title><rect x="49.4063%" y="1077" width="1.7710%" height="15" fill="rgb(208,77,27)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1087.50">p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 1.77%)</title><rect x="49.4063%" y="1061" width="1.7710%" height="15" fill="rgb(250,204,28)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1071.50">&lt;..</text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (88 samples, 1.77%)</title><rect x="49.4063%" y="1045" width="1.7710%" height="15" fill="rgb(244,63,21)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1055.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 1.77%)</title><rect x="49.4063%" y="1029" width="1.7710%" height="15" fill="rgb(236,85,44)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1039.50">&lt;..</text></g><g><title>fred::commands::keys::incr::_{{closure}} (88 samples, 1.77%)</title><rect x="49.4063%" y="1013" width="1.7710%" height="15" fill="rgb(215,98,4)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1023.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 1.77%)</title><rect x="49.4063%" y="997" width="1.7710%" height="15" fill="rgb(235,38,11)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="1007.50">&lt;..</text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (88 samples, 1.77%)</title><rect x="49.4063%" y="981" width="1.7710%" height="15" fill="rgb(254,186,25)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="991.50">f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 1.77%)</title><rect x="49.4063%" y="965" width="1.7710%" height="15" fill="rgb(225,55,31)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="975.50">&lt;..</text></g><g><title>fred::utils::request_response::_{{closure}} (88 samples, 1.77%)</title><rect x="49.4063%" y="949" width="1.7710%" height="15" fill="rgb(211,15,21)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="959.50">f..</text></g><g><title>fred::utils::send_command (88 samples, 1.77%)</title><rect x="49.4063%" y="933" width="1.7710%" height="15" fill="rgb(215,187,41)" fg:x="2455" fg:w="88"/><text x="49.6563%" y="943.50">f..</text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (69 samples, 1.39%)</title><rect x="49.7887%" y="917" width="1.3886%" height="15" fill="rgb(248,69,32)" fg:x="2474" fg:w="69"/><text x="50.0387%" y="927.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::inc_num_messages (18 samples, 0.36%)</title><rect x="50.8151%" y="901" width="0.3622%" height="15" fill="rgb(252,102,52)" fg:x="2525" fg:w="18"/><text x="51.0651%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.26%)</title><rect x="50.9157%" y="885" width="0.2616%" height="15" fill="rgb(253,140,32)" fg:x="2530" fg:w="13"/><text x="51.1657%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.26%)</title><rect x="50.9157%" y="869" width="0.2616%" height="15" fill="rgb(216,56,42)" fg:x="2530" fg:w="13"/><text x="51.1657%" y="879.50"></text></g><g><title>__rust_probestack (3 samples, 0.06%)</title><rect x="51.1773%" y="661" width="0.0604%" height="15" fill="rgb(216,184,14)" fg:x="2543" fg:w="3"/><text x="51.4273%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (96 samples, 1.93%)</title><rect x="49.3459%" y="1269" width="1.9320%" height="15" fill="rgb(237,187,27)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1279.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (96 samples, 1.93%)</title><rect x="49.3459%" y="1253" width="1.9320%" height="15" fill="rgb(219,65,3)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1263.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (96 samples, 1.93%)</title><rect x="49.3459%" y="1237" width="1.9320%" height="15" fill="rgb(245,83,25)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1247.50">t..</text></g><g><title>std::panic::catch_unwind (96 samples, 1.93%)</title><rect x="49.3459%" y="1221" width="1.9320%" height="15" fill="rgb(214,205,45)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1231.50">s..</text></g><g><title>std::panicking::try (96 samples, 1.93%)</title><rect x="49.3459%" y="1205" width="1.9320%" height="15" fill="rgb(241,20,18)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1215.50">s..</text></g><g><title>std::panicking::try::do_call (96 samples, 1.93%)</title><rect x="49.3459%" y="1189" width="1.9320%" height="15" fill="rgb(232,163,23)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1199.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (96 samples, 1.93%)</title><rect x="49.3459%" y="1173" width="1.9320%" height="15" fill="rgb(214,5,46)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1183.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (96 samples, 1.93%)</title><rect x="49.3459%" y="1157" width="1.9320%" height="15" fill="rgb(229,78,17)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1167.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (96 samples, 1.93%)</title><rect x="49.3459%" y="1141" width="1.9320%" height="15" fill="rgb(248,89,10)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1151.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (96 samples, 1.93%)</title><rect x="49.3459%" y="1125" width="1.9320%" height="15" fill="rgb(248,54,15)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1135.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (96 samples, 1.93%)</title><rect x="49.3459%" y="1109" width="1.9320%" height="15" fill="rgb(223,116,6)" fg:x="2452" fg:w="96"/><text x="49.5959%" y="1119.50">t..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="51.1773%" y="1093" width="0.1006%" height="15" fill="rgb(205,125,38)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="1077" width="0.1006%" height="15" fill="rgb(251,78,38)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (5 samples, 0.10%)</title><rect x="51.1773%" y="1061" width="0.1006%" height="15" fill="rgb(253,78,28)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1071.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5 samples, 0.10%)</title><rect x="51.1773%" y="1045" width="0.1006%" height="15" fill="rgb(209,120,3)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="1029" width="0.1006%" height="15" fill="rgb(238,229,9)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (5 samples, 0.10%)</title><rect x="51.1773%" y="1013" width="0.1006%" height="15" fill="rgb(253,159,18)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5 samples, 0.10%)</title><rect x="51.1773%" y="997" width="0.1006%" height="15" fill="rgb(244,42,34)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="1007.50"></text></g><g><title>tokio::coop::budget (5 samples, 0.10%)</title><rect x="51.1773%" y="981" width="0.1006%" height="15" fill="rgb(224,8,7)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="991.50"></text></g><g><title>tokio::coop::with_budget (5 samples, 0.10%)</title><rect x="51.1773%" y="965" width="0.1006%" height="15" fill="rgb(210,201,45)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.10%)</title><rect x="51.1773%" y="949" width="0.1006%" height="15" fill="rgb(252,185,21)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.10%)</title><rect x="51.1773%" y="933" width="0.1006%" height="15" fill="rgb(223,131,1)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="943.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="917" width="0.1006%" height="15" fill="rgb(245,141,16)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="901" width="0.1006%" height="15" fill="rgb(229,55,45)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="911.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (5 samples, 0.10%)</title><rect x="51.1773%" y="885" width="0.1006%" height="15" fill="rgb(208,92,15)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.10%)</title><rect x="51.1773%" y="869" width="0.1006%" height="15" fill="rgb(234,185,47)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.10%)</title><rect x="51.1773%" y="853" width="0.1006%" height="15" fill="rgb(253,104,50)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.10%)</title><rect x="51.1773%" y="837" width="0.1006%" height="15" fill="rgb(205,70,7)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.10%)</title><rect x="51.1773%" y="821" width="0.1006%" height="15" fill="rgb(240,178,43)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="831.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.10%)</title><rect x="51.1773%" y="805" width="0.1006%" height="15" fill="rgb(214,112,2)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="815.50"></text></g><g><title>std::panicking::try (5 samples, 0.10%)</title><rect x="51.1773%" y="789" width="0.1006%" height="15" fill="rgb(206,46,17)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="799.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.10%)</title><rect x="51.1773%" y="773" width="0.1006%" height="15" fill="rgb(225,220,16)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.10%)</title><rect x="51.1773%" y="757" width="0.1006%" height="15" fill="rgb(238,65,40)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="741" width="0.1006%" height="15" fill="rgb(230,151,21)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5 samples, 0.10%)</title><rect x="51.1773%" y="725" width="0.1006%" height="15" fill="rgb(218,58,49)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.10%)</title><rect x="51.1773%" y="709" width="0.1006%" height="15" fill="rgb(219,179,14)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (5 samples, 0.10%)</title><rect x="51.1773%" y="693" width="0.1006%" height="15" fill="rgb(223,72,1)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="51.1773%" y="677" width="0.1006%" height="15" fill="rgb(238,126,10)" fg:x="2543" fg:w="5"/><text x="51.4273%" y="687.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (2 samples, 0.04%)</title><rect x="51.2377%" y="661" width="0.0402%" height="15" fill="rgb(224,206,38)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="671.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="645" width="0.0402%" height="15" fill="rgb(212,201,54)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="655.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (2 samples, 0.04%)</title><rect x="51.2377%" y="629" width="0.0402%" height="15" fill="rgb(218,154,48)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.04%)</title><rect x="51.2377%" y="613" width="0.0402%" height="15" fill="rgb(232,93,24)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="623.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.04%)</title><rect x="51.2377%" y="597" width="0.0402%" height="15" fill="rgb(245,30,21)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="607.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.04%)</title><rect x="51.2377%" y="581" width="0.0402%" height="15" fill="rgb(242,148,29)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="565" width="0.0402%" height="15" fill="rgb(244,153,54)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="549" width="0.0402%" height="15" fill="rgb(252,87,22)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="559.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="533" width="0.0402%" height="15" fill="rgb(210,51,29)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="543.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="517" width="0.0402%" height="15" fill="rgb(242,136,47)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="527.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="501" width="0.0402%" height="15" fill="rgb(238,68,4)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="511.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="51.2377%" y="485" width="0.0402%" height="15" fill="rgb(242,161,30)" fg:x="2546" fg:w="2"/><text x="51.4877%" y="495.50"></text></g><g><title>[libc-2.28.so] (3 samples, 0.06%)</title><rect x="51.3987%" y="1013" width="0.0604%" height="15" fill="rgb(218,58,44)" fg:x="2554" fg:w="3"/><text x="51.6487%" y="1023.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="51.6603%" y="949" width="0.1006%" height="15" fill="rgb(252,125,32)" fg:x="2567" fg:w="5"/><text x="51.9103%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.22%)</title><rect x="51.5798%" y="965" width="0.2214%" height="15" fill="rgb(219,178,0)" fg:x="2563" fg:w="11"/><text x="51.8298%" y="975.50"></text></g><g><title>fred::multiplexer::commands::handle_command::_{{closure}} (2 samples, 0.04%)</title><rect x="51.7609%" y="949" width="0.0402%" height="15" fill="rgb(213,152,7)" fg:x="2572" fg:w="2"/><text x="52.0109%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.44%)</title><rect x="51.5798%" y="997" width="0.4427%" height="15" fill="rgb(249,109,34)" fg:x="2563" fg:w="22"/><text x="51.8298%" y="1007.50"></text></g><g><title>fred::multiplexer::commands::handle_command_t::_{{closure}} (22 samples, 0.44%)</title><rect x="51.5798%" y="981" width="0.4427%" height="15" fill="rgb(232,96,21)" fg:x="2563" fg:w="22"/><text x="51.8298%" y="991.50"></text></g><g><title>[libc-2.28.so] (11 samples, 0.22%)</title><rect x="51.8012%" y="965" width="0.2214%" height="15" fill="rgb(228,27,39)" fg:x="2574" fg:w="11"/><text x="52.0512%" y="975.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (39 samples, 0.78%)</title><rect x="51.3584%" y="1045" width="0.7849%" height="15" fill="rgb(211,182,52)" fg:x="2552" fg:w="39"/><text x="51.6084%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.78%)</title><rect x="51.3584%" y="1029" width="0.7849%" height="15" fill="rgb(234,178,38)" fg:x="2552" fg:w="39"/><text x="51.6084%" y="1039.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}}::_{{closure}}::_{{closure}} (34 samples, 0.68%)</title><rect x="51.4590%" y="1013" width="0.6842%" height="15" fill="rgb(221,111,3)" fg:x="2557" fg:w="34"/><text x="51.7090%" y="1023.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="52.0225%" y="997" width="0.1207%" height="15" fill="rgb(228,175,21)" fg:x="2585" fg:w="6"/><text x="52.2725%" y="1007.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.04%)</title><rect x="52.2842%" y="917" width="0.0402%" height="15" fill="rgb(228,174,43)" fg:x="2598" fg:w="2"/><text x="52.5342%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="52.3043%" y="901" width="0.0201%" height="15" fill="rgb(211,191,0)" fg:x="2599" fg:w="1"/><text x="52.5543%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="52.3043%" y="885" width="0.0201%" height="15" fill="rgb(253,117,3)" fg:x="2599" fg:w="1"/><text x="52.5543%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="52.3043%" y="869" width="0.0201%" height="15" fill="rgb(241,127,19)" fg:x="2599" fg:w="1"/><text x="52.5543%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.08%)</title><rect x="52.3244%" y="901" width="0.0805%" height="15" fill="rgb(218,103,12)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="52.3244%" y="885" width="0.0805%" height="15" fill="rgb(236,214,43)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="895.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="52.3244%" y="869" width="0.0805%" height="15" fill="rgb(244,144,19)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="879.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="52.3244%" y="853" width="0.0805%" height="15" fill="rgb(246,188,10)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="52.3244%" y="837" width="0.0805%" height="15" fill="rgb(212,193,33)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="52.3244%" y="821" width="0.0805%" height="15" fill="rgb(241,51,29)" fg:x="2600" fg:w="4"/><text x="52.5744%" y="831.50"></text></g><g><title>tokio::coop::poll_proceed (8 samples, 0.16%)</title><rect x="52.2842%" y="965" width="0.1610%" height="15" fill="rgb(211,58,19)" fg:x="2598" fg:w="8"/><text x="52.5342%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.16%)</title><rect x="52.2842%" y="949" width="0.1610%" height="15" fill="rgb(229,111,26)" fg:x="2598" fg:w="8"/><text x="52.5342%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.16%)</title><rect x="52.2842%" y="933" width="0.1610%" height="15" fill="rgb(213,115,40)" fg:x="2598" fg:w="8"/><text x="52.5342%" y="943.50"></text></g><g><title>tokio::coop::poll_proceed::_{{closure}} (6 samples, 0.12%)</title><rect x="52.3244%" y="917" width="0.1207%" height="15" fill="rgb(209,56,44)" fg:x="2600" fg:w="6"/><text x="52.5744%" y="927.50"></text></g><g><title>tokio::coop::Budget::decrement (2 samples, 0.04%)</title><rect x="52.4049%" y="901" width="0.0402%" height="15" fill="rgb(230,108,32)" fg:x="2604" fg:w="2"/><text x="52.6549%" y="911.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (3 samples, 0.06%)</title><rect x="52.4452%" y="933" width="0.0604%" height="15" fill="rgb(216,165,31)" fg:x="2606" fg:w="3"/><text x="52.6952%" y="943.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="52.5055%" y="933" width="0.0805%" height="15" fill="rgb(218,122,21)" fg:x="2609" fg:w="4"/><text x="52.7555%" y="943.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="52.6263%" y="901" width="0.0201%" height="15" fill="rgb(223,224,47)" fg:x="2615" fg:w="1"/><text x="52.8763%" y="911.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (6 samples, 0.12%)</title><rect x="52.6263%" y="917" width="0.1207%" height="15" fill="rgb(238,102,44)" fg:x="2615" fg:w="6"/><text x="52.8763%" y="927.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (5 samples, 0.10%)</title><rect x="52.6464%" y="901" width="0.1006%" height="15" fill="rgb(236,46,40)" fg:x="2616" fg:w="5"/><text x="52.8964%" y="911.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::_{{closure}} (5 samples, 0.10%)</title><rect x="52.6464%" y="885" width="0.1006%" height="15" fill="rgb(247,202,50)" fg:x="2616" fg:w="5"/><text x="52.8964%" y="895.50"></text></g><g><title>core::ptr::read (5 samples, 0.10%)</title><rect x="52.6464%" y="869" width="0.1006%" height="15" fill="rgb(209,99,20)" fg:x="2616" fg:w="5"/><text x="52.8964%" y="879.50"></text></g><g><title>__sched_yield (1 samples, 0.02%)</title><rect x="52.7672%" y="901" width="0.0201%" height="15" fill="rgb(252,27,34)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="52.7672%" y="885" width="0.0201%" height="15" fill="rgb(215,206,23)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="895.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="52.7672%" y="869" width="0.0201%" height="15" fill="rgb(212,135,36)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="879.50"></text></g><g><title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="52.7672%" y="853" width="0.0201%" height="15" fill="rgb(240,189,1)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="863.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="52.7672%" y="837" width="0.0201%" height="15" fill="rgb(242,56,20)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="847.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="52.7672%" y="821" width="0.0201%" height="15" fill="rgb(247,132,33)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="831.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="52.7672%" y="805" width="0.0201%" height="15" fill="rgb(208,149,11)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="815.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="52.7672%" y="789" width="0.0201%" height="15" fill="rgb(211,33,11)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="799.50"></text></g><g><title>cpuacct_charge (1 samples, 0.02%)</title><rect x="52.7672%" y="773" width="0.0201%" height="15" fill="rgb(221,29,38)" fg:x="2622" fg:w="1"/><text x="53.0172%" y="783.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.02%)</title><rect x="52.7873%" y="901" width="0.0201%" height="15" fill="rgb(206,182,49)" fg:x="2623" fg:w="1"/><text x="53.0373%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.02%)</title><rect x="52.7873%" y="885" width="0.0201%" height="15" fill="rgb(216,140,1)" fg:x="2623" fg:w="1"/><text x="53.0373%" y="895.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (4 samples, 0.08%)</title><rect x="52.7470%" y="917" width="0.0805%" height="15" fill="rgb(232,57,40)" fg:x="2621" fg:w="4"/><text x="52.9970%" y="927.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::reclaim_block (1 samples, 0.02%)</title><rect x="52.8074%" y="901" width="0.0201%" height="15" fill="rgb(224,186,18)" fg:x="2624" fg:w="1"/><text x="53.0574%" y="911.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::reclaim (1 samples, 0.02%)</title><rect x="52.8074%" y="885" width="0.0201%" height="15" fill="rgb(215,121,11)" fg:x="2624" fg:w="1"/><text x="53.0574%" y="895.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (1 samples, 0.02%)</title><rect x="52.8074%" y="869" width="0.0201%" height="15" fill="rgb(245,147,10)" fg:x="2624" fg:w="1"/><text x="53.0574%" y="879.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.06%)</title><rect x="52.9684%" y="805" width="0.0604%" height="15" fill="rgb(238,153,13)" fg:x="2632" fg:w="3"/><text x="53.2184%" y="815.50"></text></g><g><title>pick_next_entity (1 samples, 0.02%)</title><rect x="53.0087%" y="789" width="0.0201%" height="15" fill="rgb(233,108,0)" fg:x="2634" fg:w="1"/><text x="53.2587%" y="799.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (23 samples, 0.46%)</title><rect x="52.5860%" y="933" width="0.4629%" height="15" fill="rgb(212,157,17)" fg:x="2613" fg:w="23"/><text x="52.8360%" y="943.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (11 samples, 0.22%)</title><rect x="52.8275%" y="917" width="0.2214%" height="15" fill="rgb(225,213,38)" fg:x="2625" fg:w="11"/><text x="53.0775%" y="927.50"></text></g><g><title>__sched_yield (4 samples, 0.08%)</title><rect x="52.9684%" y="901" width="0.0805%" height="15" fill="rgb(248,16,11)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="52.9684%" y="885" width="0.0805%" height="15" fill="rgb(241,33,4)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="895.50"></text></g><g><title>do_syscall_64 (4 samples, 0.08%)</title><rect x="52.9684%" y="869" width="0.0805%" height="15" fill="rgb(222,26,43)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="879.50"></text></g><g><title>__x64_sys_sched_yield (4 samples, 0.08%)</title><rect x="52.9684%" y="853" width="0.0805%" height="15" fill="rgb(243,29,36)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="863.50"></text></g><g><title>schedule (4 samples, 0.08%)</title><rect x="52.9684%" y="837" width="0.0805%" height="15" fill="rgb(241,9,27)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="847.50"></text></g><g><title>__schedule (4 samples, 0.08%)</title><rect x="52.9684%" y="821" width="0.0805%" height="15" fill="rgb(205,117,26)" fg:x="2632" fg:w="4"/><text x="53.2184%" y="831.50"></text></g><g><title>update_rq_clock (1 samples, 0.02%)</title><rect x="53.0288%" y="805" width="0.0201%" height="15" fill="rgb(209,80,39)" fg:x="2635" fg:w="1"/><text x="53.2788%" y="815.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="53.0288%" y="789" width="0.0201%" height="15" fill="rgb(239,155,6)" fg:x="2635" fg:w="1"/><text x="53.2788%" y="799.50"></text></g><g><title>sched_clock (1 samples, 0.02%)</title><rect x="53.0288%" y="773" width="0.0201%" height="15" fill="rgb(212,104,12)" fg:x="2635" fg:w="1"/><text x="53.2788%" y="783.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="53.0288%" y="757" width="0.0201%" height="15" fill="rgb(234,204,3)" fg:x="2635" fg:w="1"/><text x="53.2788%" y="767.50"></text></g><g><title>&lt;tokio_stream::wrappers::mpsc_unbounded::UnboundedReceiverStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.87%)</title><rect x="52.2439%" y="1013" width="0.8654%" height="15" fill="rgb(251,218,7)" fg:x="2596" fg:w="43"/><text x="52.4939%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::poll_recv (43 samples, 0.87%)</title><rect x="52.2439%" y="997" width="0.8654%" height="15" fill="rgb(221,81,32)" fg:x="2596" fg:w="43"/><text x="52.4939%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (43 samples, 0.87%)</title><rect x="52.2439%" y="981" width="0.8654%" height="15" fill="rgb(214,152,26)" fg:x="2596" fg:w="43"/><text x="52.4939%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (33 samples, 0.66%)</title><rect x="52.4452%" y="965" width="0.6641%" height="15" fill="rgb(223,22,3)" fg:x="2606" fg:w="33"/><text x="52.6952%" y="975.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (33 samples, 0.66%)</title><rect x="52.4452%" y="949" width="0.6641%" height="15" fill="rgb(207,174,7)" fg:x="2606" fg:w="33"/><text x="52.6952%" y="959.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (3 samples, 0.06%)</title><rect x="53.0489%" y="933" width="0.0604%" height="15" fill="rgb(224,19,52)" fg:x="2636" fg:w="3"/><text x="53.2989%" y="943.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (2 samples, 0.04%)</title><rect x="53.0690%" y="917" width="0.0402%" height="15" fill="rgb(228,24,14)" fg:x="2637" fg:w="2"/><text x="53.3190%" y="927.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="53.0892%" y="901" width="0.0201%" height="15" fill="rgb(230,153,43)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="911.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.02%)</title><rect x="53.0892%" y="885" width="0.0201%" height="15" fill="rgb(231,106,12)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="895.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.02%)</title><rect x="53.0892%" y="869" width="0.0201%" height="15" fill="rgb(215,92,2)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="879.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="53.0892%" y="853" width="0.0201%" height="15" fill="rgb(249,143,25)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.02%)</title><rect x="53.0892%" y="837" width="0.0201%" height="15" fill="rgb(252,7,35)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.02%)</title><rect x="53.0892%" y="821" width="0.0201%" height="15" fill="rgb(216,69,40)" fg:x="2638" fg:w="1"/><text x="53.3392%" y="831.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (49 samples, 0.99%)</title><rect x="52.1433%" y="1045" width="0.9861%" height="15" fill="rgb(240,36,33)" fg:x="2591" fg:w="49"/><text x="52.3933%" y="1055.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (49 samples, 0.99%)</title><rect x="52.1433%" y="1029" width="0.9861%" height="15" fill="rgb(231,128,14)" fg:x="2591" fg:w="49"/><text x="52.3933%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="53.1093%" y="1013" width="0.0201%" height="15" fill="rgb(245,143,14)" fg:x="2639" fg:w="1"/><text x="53.3593%" y="1023.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (1 samples, 0.02%)</title><rect x="53.1093%" y="997" width="0.0201%" height="15" fill="rgb(222,130,28)" fg:x="2639" fg:w="1"/><text x="53.3593%" y="1007.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.14%)</title><rect x="53.1294%" y="1045" width="0.1409%" height="15" fill="rgb(212,10,48)" fg:x="2640" fg:w="7"/><text x="53.3794%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (1 samples, 0.02%)</title><rect x="53.2703%" y="1045" width="0.0201%" height="15" fill="rgb(254,118,45)" fg:x="2647" fg:w="1"/><text x="53.5203%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="53.2703%" y="1029" width="0.0201%" height="15" fill="rgb(228,6,45)" fg:x="2647" fg:w="1"/><text x="53.5203%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="53.2904%" y="1045" width="0.0201%" height="15" fill="rgb(241,18,35)" fg:x="2648" fg:w="1"/><text x="53.5404%" y="1055.50"></text></g><g><title>[libc-2.28.so] (43 samples, 0.87%)</title><rect x="53.3910%" y="1029" width="0.8654%" height="15" fill="rgb(227,214,53)" fg:x="2653" fg:w="43"/><text x="53.6410%" y="1039.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (49 samples, 0.99%)</title><rect x="53.3105%" y="1045" width="0.9861%" height="15" fill="rgb(224,107,51)" fg:x="2649" fg:w="49"/><text x="53.5605%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::future::from_generator::GenFuture&lt;fred::multiplexer::commands::init::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="54.2564%" y="1029" width="0.0402%" height="15" fill="rgb(248,60,28)" fg:x="2696" fg:w="2"/><text x="54.5064%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(alloc::sync::Arc&lt;fred::client::RedisClientInner&gt;,fred::multiplexer::Multiplexer)&gt;&gt; (2 samples, 0.04%)</title><rect x="54.2966%" y="1045" width="0.0402%" height="15" fill="rgb(249,101,23)" fg:x="2698" fg:w="2"/><text x="54.5466%" y="1055.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (153 samples, 3.08%)</title><rect x="51.2779%" y="1109" width="3.0791%" height="15" fill="rgb(228,51,19)" fg:x="2548" fg:w="153"/><text x="51.5279%" y="1119.50">fre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 3.08%)</title><rect x="51.2779%" y="1093" width="3.0791%" height="15" fill="rgb(213,20,6)" fg:x="2548" fg:w="153"/><text x="51.5279%" y="1103.50">&lt;co..</text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (153 samples, 3.08%)</title><rect x="51.2779%" y="1077" width="3.0791%" height="15" fill="rgb(212,124,10)" fg:x="2548" fg:w="153"/><text x="51.5279%" y="1087.50">fre..</text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (153 samples, 3.08%)</title><rect x="51.2779%" y="1061" width="3.0791%" height="15" fill="rgb(248,3,40)" fg:x="2548" fg:w="153"/><text x="51.5279%" y="1071.50">&lt;fu..</text></g><g><title>futures_util::stream::try_stream::try_fold::_::&lt;impl futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt;&gt;::project (1 samples, 0.02%)</title><rect x="54.3369%" y="1045" width="0.0201%" height="15" fill="rgb(223,178,23)" fg:x="2700" fg:w="1"/><text x="54.5869%" y="1055.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="54.3570%" y="965" width="0.1006%" height="15" fill="rgb(240,132,45)" fg:x="2701" fg:w="5"/><text x="54.6070%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="54.3570%" y="949" width="0.1006%" height="15" fill="rgb(245,164,36)" fg:x="2701" fg:w="5"/><text x="54.6070%" y="959.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="54.3570%" y="933" width="0.1006%" height="15" fill="rgb(231,188,53)" fg:x="2701" fg:w="5"/><text x="54.6070%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="54.3570%" y="917" width="0.1006%" height="15" fill="rgb(237,198,39)" fg:x="2701" fg:w="5"/><text x="54.6070%" y="927.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.02%)</title><rect x="54.4375%" y="901" width="0.0201%" height="15" fill="rgb(223,120,35)" fg:x="2705" fg:w="1"/><text x="54.6875%" y="911.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.4375%" y="885" width="0.0201%" height="15" fill="rgb(253,107,49)" fg:x="2705" fg:w="1"/><text x="54.6875%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.4375%" y="869" width="0.0201%" height="15" fill="rgb(216,44,31)" fg:x="2705" fg:w="1"/><text x="54.6875%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.4375%" y="853" width="0.0201%" height="15" fill="rgb(253,87,21)" fg:x="2705" fg:w="1"/><text x="54.6875%" y="863.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="54.5381%" y="661" width="0.0201%" height="15" fill="rgb(226,18,2)" fg:x="2710" fg:w="1"/><text x="54.7881%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::sync::broadcast::Slot&lt;fred::error::RedisError&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.5381%" y="645" width="0.0201%" height="15" fill="rgb(216,8,46)" fg:x="2710" fg:w="1"/><text x="54.7881%" y="655.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.5381%" y="629" width="0.0201%" height="15" fill="rgb(226,140,39)" fg:x="2710" fg:w="1"/><text x="54.7881%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.02%)</title><rect x="54.5381%" y="613" width="0.0201%" height="15" fill="rgb(221,194,54)" fg:x="2710" fg:w="1"/><text x="54.7881%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::sync::broadcast::Slot&lt;fred::error::RedisError&gt;&gt;&gt; (4 samples, 0.08%)</title><rect x="54.5583%" y="661" width="0.0805%" height="15" fill="rgb(213,92,11)" fg:x="2711" fg:w="4"/><text x="54.8083%" y="671.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="54.5583%" y="645" width="0.0805%" height="15" fill="rgb(229,162,46)" fg:x="2711" fg:w="4"/><text x="54.8083%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.08%)</title><rect x="54.5583%" y="629" width="0.0805%" height="15" fill="rgb(214,111,36)" fg:x="2711" fg:w="4"/><text x="54.8083%" y="639.50"></text></g><g><title>std::panic::catch_unwind (175 samples, 3.52%)</title><rect x="51.2779%" y="1253" width="3.5218%" height="15" fill="rgb(207,6,21)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1263.50">std..</text></g><g><title>std::panicking::try (175 samples, 3.52%)</title><rect x="51.2779%" y="1237" width="3.5218%" height="15" fill="rgb(213,127,38)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1247.50">std..</text></g><g><title>std::panicking::try::do_call (175 samples, 3.52%)</title><rect x="51.2779%" y="1221" width="3.5218%" height="15" fill="rgb(238,118,32)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1231.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (175 samples, 3.52%)</title><rect x="51.2779%" y="1205" width="3.5218%" height="15" fill="rgb(240,139,39)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1215.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (175 samples, 3.52%)</title><rect x="51.2779%" y="1189" width="3.5218%" height="15" fill="rgb(235,10,37)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1199.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (175 samples, 3.52%)</title><rect x="51.2779%" y="1173" width="3.5218%" height="15" fill="rgb(249,171,38)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1183.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (175 samples, 3.52%)</title><rect x="51.2779%" y="1157" width="3.5218%" height="15" fill="rgb(242,144,32)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1167.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (175 samples, 3.52%)</title><rect x="51.2779%" y="1141" width="3.5218%" height="15" fill="rgb(217,117,21)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1151.50">tok..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (175 samples, 3.52%)</title><rect x="51.2779%" y="1125" width="3.5218%" height="15" fill="rgb(249,87,1)" fg:x="2548" fg:w="175"/><text x="51.5279%" y="1135.50">&lt;co..</text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (22 samples, 0.44%)</title><rect x="54.3570%" y="1109" width="0.4427%" height="15" fill="rgb(248,196,48)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1119.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (22 samples, 0.44%)</title><rect x="54.3570%" y="1093" width="0.4427%" height="15" fill="rgb(251,206,33)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1103.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (22 samples, 0.44%)</title><rect x="54.3570%" y="1077" width="0.4427%" height="15" fill="rgb(232,141,28)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.44%)</title><rect x="54.3570%" y="1061" width="0.4427%" height="15" fill="rgb(209,167,14)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1071.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (22 samples, 0.44%)</title><rect x="54.3570%" y="1045" width="0.4427%" height="15" fill="rgb(225,11,50)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1055.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (22 samples, 0.44%)</title><rect x="54.3570%" y="1029" width="0.4427%" height="15" fill="rgb(209,50,20)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (22 samples, 0.44%)</title><rect x="54.3570%" y="1013" width="0.4427%" height="15" fill="rgb(212,17,46)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (22 samples, 0.44%)</title><rect x="54.3570%" y="997" width="0.4427%" height="15" fill="rgb(216,101,39)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (22 samples, 0.44%)</title><rect x="54.3570%" y="981" width="0.4427%" height="15" fill="rgb(212,228,48)" fg:x="2701" fg:w="22"/><text x="54.6070%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="965" width="0.3421%" height="15" fill="rgb(250,6,50)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="949" width="0.3421%" height="15" fill="rgb(250,160,48)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="959.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="933" width="0.3421%" height="15" fill="rgb(244,216,33)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="943.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (17 samples, 0.34%)</title><rect x="54.4576%" y="917" width="0.3421%" height="15" fill="rgb(207,157,5)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="901" width="0.3421%" height="15" fill="rgb(228,199,8)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="885" width="0.3421%" height="15" fill="rgb(227,80,20)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="869" width="0.3421%" height="15" fill="rgb(222,9,33)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="879.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="853" width="0.3421%" height="15" fill="rgb(239,44,28)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="863.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (17 samples, 0.34%)</title><rect x="54.4576%" y="837" width="0.3421%" height="15" fill="rgb(249,187,43)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::ErrInto&lt;Fut,E&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="821" width="0.3421%" height="15" fill="rgb(216,141,28)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="831.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="805" width="0.3421%" height="15" fill="rgb(230,154,53)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="789" width="0.3421%" height="15" fill="rgb(227,82,4)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="773" width="0.3421%" height="15" fill="rgb(220,107,16)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="783.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="757" width="0.3421%" height="15" fill="rgb(207,187,2)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="767.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (17 samples, 0.34%)</title><rect x="54.4576%" y="741" width="0.3421%" height="15" fill="rgb(210,162,52)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.34%)</title><rect x="54.4576%" y="725" width="0.3421%" height="15" fill="rgb(217,216,49)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="735.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (17 samples, 0.34%)</title><rect x="54.4576%" y="709" width="0.3421%" height="15" fill="rgb(218,146,49)" fg:x="2706" fg:w="17"/><text x="54.7076%" y="719.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.32%)</title><rect x="54.4778%" y="693" width="0.3220%" height="15" fill="rgb(216,55,40)" fg:x="2707" fg:w="16"/><text x="54.7278%" y="703.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (16 samples, 0.32%)</title><rect x="54.4778%" y="677" width="0.3220%" height="15" fill="rgb(208,196,21)" fg:x="2707" fg:w="16"/><text x="54.7278%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (8 samples, 0.16%)</title><rect x="54.6388%" y="661" width="0.1610%" height="15" fill="rgb(242,117,42)" fg:x="2715" fg:w="8"/><text x="54.8888%" y="671.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (8 samples, 0.16%)</title><rect x="54.6388%" y="645" width="0.1610%" height="15" fill="rgb(210,11,23)" fg:x="2715" fg:w="8"/><text x="54.8888%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (8 samples, 0.16%)</title><rect x="54.6388%" y="629" width="0.1610%" height="15" fill="rgb(217,110,2)" fg:x="2715" fg:w="8"/><text x="54.8888%" y="639.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.04%)</title><rect x="54.7595%" y="613" width="0.0402%" height="15" fill="rgb(229,77,54)" fg:x="2721" fg:w="2"/><text x="55.0095%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="54.7796%" y="597" width="0.0201%" height="15" fill="rgb(218,53,16)" fg:x="2722" fg:w="1"/><text x="55.0296%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="54.7796%" y="581" width="0.0201%" height="15" fill="rgb(215,38,13)" fg:x="2722" fg:w="1"/><text x="55.0296%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (176 samples, 3.54%)</title><rect x="51.2779%" y="1269" width="3.5420%" height="15" fill="rgb(235,42,18)" fg:x="2548" fg:w="176"/><text x="51.5279%" y="1279.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="54.7998%" y="1253" width="0.0201%" height="15" fill="rgb(219,66,54)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.02%)</title><rect x="54.7998%" y="1237" width="0.0201%" height="15" fill="rgb(222,205,4)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.7998%" y="1221" width="0.0201%" height="15" fill="rgb(227,213,46)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1231.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (1 samples, 0.02%)</title><rect x="54.7998%" y="1205" width="0.0201%" height="15" fill="rgb(250,145,42)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.7998%" y="1189" width="0.0201%" height="15" fill="rgb(219,15,2)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1199.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (1 samples, 0.02%)</title><rect x="54.7998%" y="1173" width="0.0201%" height="15" fill="rgb(231,181,52)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_fold::TryFold&lt;St,Fut,T,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="54.7998%" y="1157" width="0.0201%" height="15" fill="rgb(235,1,42)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1167.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.02%)</title><rect x="54.7998%" y="1141" width="0.0201%" height="15" fill="rgb(249,88,27)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.02%)</title><rect x="54.7998%" y="1125" width="0.0201%" height="15" fill="rgb(235,145,16)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (1 samples, 0.02%)</title><rect x="54.7998%" y="1109" width="0.0201%" height="15" fill="rgb(237,114,19)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="54.7998%" y="1093" width="0.0201%" height="15" fill="rgb(238,51,50)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="54.7998%" y="1077" width="0.0201%" height="15" fill="rgb(205,194,25)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1087.50"></text></g><g><title>__sched_yield (1 samples, 0.02%)</title><rect x="54.7998%" y="1061" width="0.0201%" height="15" fill="rgb(215,203,17)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1071.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="54.7998%" y="1045" width="0.0201%" height="15" fill="rgb(233,112,49)" fg:x="2723" fg:w="1"/><text x="55.0498%" y="1055.50"></text></g><g><title>fred::client::RedisClient::connect::_{{closure}} (8 samples, 0.16%)</title><rect x="54.8400%" y="917" width="0.1610%" height="15" fill="rgb(241,130,26)" fg:x="2725" fg:w="8"/><text x="55.0900%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.08%)</title><rect x="54.9205%" y="901" width="0.0805%" height="15" fill="rgb(252,223,19)" fg:x="2729" fg:w="4"/><text x="55.1705%" y="911.50"></text></g><g><title>fred::multiplexer::commands::init::_{{closure}} (4 samples, 0.08%)</title><rect x="54.9205%" y="885" width="0.0805%" height="15" fill="rgb(211,95,25)" fg:x="2729" fg:w="4"/><text x="55.1705%" y="895.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (2 samples, 0.04%)</title><rect x="55.0010%" y="917" width="0.0402%" height="15" fill="rgb(251,182,27)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="927.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="901" width="0.0402%" height="15" fill="rgb(238,24,4)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="911.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (2 samples, 0.04%)</title><rect x="55.0010%" y="885" width="0.0402%" height="15" fill="rgb(224,220,25)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.04%)</title><rect x="55.0010%" y="869" width="0.0402%" height="15" fill="rgb(239,133,26)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="879.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.04%)</title><rect x="55.0010%" y="853" width="0.0402%" height="15" fill="rgb(211,94,48)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="863.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.04%)</title><rect x="55.0010%" y="837" width="0.0402%" height="15" fill="rgb(239,87,6)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="821" width="0.0402%" height="15" fill="rgb(227,62,0)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="805" width="0.0402%" height="15" fill="rgb(211,226,4)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="789" width="0.0402%" height="15" fill="rgb(253,38,52)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="773" width="0.0402%" height="15" fill="rgb(229,126,40)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="783.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="757" width="0.0402%" height="15" fill="rgb(229,165,44)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="767.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="741" width="0.0402%" height="15" fill="rgb(247,95,47)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="751.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.04%)</title><rect x="55.0010%" y="725" width="0.0402%" height="15" fill="rgb(216,140,30)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="735.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="709" width="0.0402%" height="15" fill="rgb(246,214,8)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="719.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="693" width="0.0402%" height="15" fill="rgb(227,224,15)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="703.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="55.0010%" y="677" width="0.0402%" height="15" fill="rgb(233,175,4)" fg:x="2733" fg:w="2"/><text x="55.2510%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.04%)</title><rect x="55.5041%" y="821" width="0.0402%" height="15" fill="rgb(221,66,45)" fg:x="2758" fg:w="2"/><text x="55.7541%" y="831.50"></text></g><g><title>&lt;fred::types::RedisValue as core::convert::From&lt;fred::types::RedisKey&gt;&gt;::from (2 samples, 0.04%)</title><rect x="55.5041%" y="805" width="0.0402%" height="15" fill="rgb(221,178,18)" fg:x="2758" fg:w="2"/><text x="55.7541%" y="815.50"></text></g><g><title>__libc_malloc (2 samples, 0.04%)</title><rect x="55.5645%" y="613" width="0.0402%" height="15" fill="rgb(213,81,29)" fg:x="2761" fg:w="2"/><text x="55.8145%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.24%)</title><rect x="55.3834%" y="837" width="0.2415%" height="15" fill="rgb(220,89,49)" fg:x="2752" fg:w="12"/><text x="55.6334%" y="847.50"></text></g><g><title>&lt;fred::types::RedisKey as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.08%)</title><rect x="55.5444%" y="821" width="0.0805%" height="15" fill="rgb(227,60,33)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect x="55.5444%" y="805" width="0.0805%" height="15" fill="rgb(205,113,12)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect x="55.5444%" y="789" width="0.0805%" height="15" fill="rgb(211,32,1)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect x="55.5444%" y="773" width="0.0805%" height="15" fill="rgb(246,2,12)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect x="55.5444%" y="757" width="0.0805%" height="15" fill="rgb(243,37,27)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect x="55.5444%" y="741" width="0.0805%" height="15" fill="rgb(248,211,31)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect x="55.5444%" y="725" width="0.0805%" height="15" fill="rgb(242,146,47)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="55.5444%" y="709" width="0.0805%" height="15" fill="rgb(206,70,20)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="55.5444%" y="693" width="0.0805%" height="15" fill="rgb(215,10,51)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.08%)</title><rect x="55.5444%" y="677" width="0.0805%" height="15" fill="rgb(243,178,53)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="55.5444%" y="661" width="0.0805%" height="15" fill="rgb(233,221,20)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="55.5444%" y="645" width="0.0805%" height="15" fill="rgb(218,95,35)" fg:x="2760" fg:w="4"/><text x="55.7944%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="55.5645%" y="629" width="0.0604%" height="15" fill="rgb(229,13,5)" fg:x="2761" fg:w="3"/><text x="55.8145%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="55.6047%" y="613" width="0.0201%" height="15" fill="rgb(252,164,30)" fg:x="2763" fg:w="1"/><text x="55.8547%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.04%)</title><rect x="56.2689%" y="773" width="0.0402%" height="15" fill="rgb(232,68,36)" fg:x="2796" fg:w="2"/><text x="56.5189%" y="783.50"></text></g><g><title>[libc-2.28.so] (2 samples, 0.04%)</title><rect x="56.2689%" y="757" width="0.0402%" height="15" fill="rgb(219,59,54)" fg:x="2796" fg:w="2"/><text x="56.5189%" y="767.50"></text></g><g><title>[libc-2.28.so] (18 samples, 0.36%)</title><rect x="56.3091%" y="773" width="0.3622%" height="15" fill="rgb(250,92,33)" fg:x="2798" fg:w="18"/><text x="56.5591%" y="783.50"></text></g><g><title>__libc_malloc (13 samples, 0.26%)</title><rect x="56.7317%" y="693" width="0.2616%" height="15" fill="rgb(229,162,54)" fg:x="2819" fg:w="13"/><text x="56.9817%" y="703.50"></text></g><g><title>[libc-2.28.so] (6 samples, 0.12%)</title><rect x="56.8726%" y="677" width="0.1207%" height="15" fill="rgb(244,114,52)" fg:x="2826" fg:w="6"/><text x="57.1226%" y="687.50"></text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}}::_{{closure}} (17 samples, 0.34%)</title><rect x="56.6714%" y="773" width="0.3421%" height="15" fill="rgb(212,211,43)" fg:x="2816" fg:w="17"/><text x="56.9214%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.28%)</title><rect x="56.7317%" y="757" width="0.2817%" height="15" fill="rgb(226,147,8)" fg:x="2819" fg:w="14"/><text x="56.9817%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.28%)</title><rect x="56.7317%" y="741" width="0.2817%" height="15" fill="rgb(226,23,13)" fg:x="2819" fg:w="14"/><text x="56.9817%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.28%)</title><rect x="56.7317%" y="725" width="0.2817%" height="15" fill="rgb(240,63,4)" fg:x="2819" fg:w="14"/><text x="56.9817%" y="735.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.28%)</title><rect x="56.7317%" y="709" width="0.2817%" height="15" fill="rgb(221,1,32)" fg:x="2819" fg:w="14"/><text x="56.9817%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="56.9934%" y="693" width="0.0201%" height="15" fill="rgb(242,117,10)" fg:x="2832" fg:w="1"/><text x="57.2434%" y="703.50"></text></g><g><title>__libc_malloc (6 samples, 0.12%)</title><rect x="57.0537%" y="677" width="0.1207%" height="15" fill="rgb(249,172,44)" fg:x="2835" fg:w="6"/><text x="57.3037%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.14%)</title><rect x="57.0537%" y="757" width="0.1409%" height="15" fill="rgb(244,46,45)" fg:x="2835" fg:w="7"/><text x="57.3037%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.14%)</title><rect x="57.0537%" y="741" width="0.1409%" height="15" fill="rgb(206,43,17)" fg:x="2835" fg:w="7"/><text x="57.3037%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.14%)</title><rect x="57.0537%" y="725" width="0.1409%" height="15" fill="rgb(239,218,39)" fg:x="2835" fg:w="7"/><text x="57.3037%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.14%)</title><rect x="57.0537%" y="709" width="0.1409%" height="15" fill="rgb(208,169,54)" fg:x="2835" fg:w="7"/><text x="57.3037%" y="719.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect x="57.0537%" y="693" width="0.1409%" height="15" fill="rgb(247,25,42)" fg:x="2835" fg:w="7"/><text x="57.3037%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="57.1745%" y="677" width="0.0201%" height="15" fill="rgb(226,23,31)" fg:x="2841" fg:w="1"/><text x="57.4245%" y="687.50"></text></g><g><title>fred::protocol::types::RedisCommand::new (11 samples, 0.22%)</title><rect x="57.0135%" y="773" width="0.2214%" height="15" fill="rgb(247,16,28)" fg:x="2833" fg:w="11"/><text x="57.2635%" y="783.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.04%)</title><rect x="57.1946%" y="757" width="0.0402%" height="15" fill="rgb(231,147,38)" fg:x="2842" fg:w="2"/><text x="57.4446%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.04%)</title><rect x="57.1946%" y="741" width="0.0402%" height="15" fill="rgb(253,81,48)" fg:x="2842" fg:w="2"/><text x="57.4446%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.04%)</title><rect x="57.1946%" y="725" width="0.0402%" height="15" fill="rgb(249,222,43)" fg:x="2842" fg:w="2"/><text x="57.4446%" y="735.50"></text></g><g><title>__clock_gettime (2 samples, 0.04%)</title><rect x="57.1946%" y="709" width="0.0402%" height="15" fill="rgb(221,3,27)" fg:x="2842" fg:w="2"/><text x="57.4446%" y="719.50"></text></g><g><title>fred::utils::send_command (1 samples, 0.02%)</title><rect x="57.2349%" y="773" width="0.0201%" height="15" fill="rgb(228,180,5)" fg:x="2844" fg:w="1"/><text x="57.4849%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="57.2550%" y="757" width="0.0402%" height="15" fill="rgb(227,131,42)" fg:x="2845" fg:w="2"/><text x="57.5050%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="57.2550%" y="741" width="0.0402%" height="15" fill="rgb(212,3,39)" fg:x="2845" fg:w="2"/><text x="57.5050%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="57.2550%" y="725" width="0.0402%" height="15" fill="rgb(226,45,5)" fg:x="2845" fg:w="2"/><text x="57.5050%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 1.53%)</title><rect x="55.8664%" y="805" width="1.5295%" height="15" fill="rgb(215,167,45)" fg:x="2776" fg:w="76"/><text x="56.1164%" y="815.50"></text></g><g><title>fred::utils::request_response::_{{closure}} (76 samples, 1.53%)</title><rect x="55.8664%" y="789" width="1.5295%" height="15" fill="rgb(250,218,53)" fg:x="2776" fg:w="76"/><text x="56.1164%" y="799.50"></text></g><g><title>tokio::sync::oneshot::channel (7 samples, 0.14%)</title><rect x="57.2550%" y="773" width="0.1409%" height="15" fill="rgb(207,140,0)" fg:x="2845" fg:w="7"/><text x="57.5050%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.10%)</title><rect x="57.2952%" y="757" width="0.1006%" height="15" fill="rgb(238,133,51)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.10%)</title><rect x="57.2952%" y="741" width="0.1006%" height="15" fill="rgb(218,203,53)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.10%)</title><rect x="57.2952%" y="725" width="0.1006%" height="15" fill="rgb(226,184,25)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.10%)</title><rect x="57.2952%" y="709" width="0.1006%" height="15" fill="rgb(231,121,21)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="719.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.10%)</title><rect x="57.2952%" y="693" width="0.1006%" height="15" fill="rgb(251,14,34)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="703.50"></text></g><g><title>__libc_malloc (5 samples, 0.10%)</title><rect x="57.2952%" y="677" width="0.1006%" height="15" fill="rgb(249,193,11)" fg:x="2847" fg:w="5"/><text x="57.5452%" y="687.50"></text></g><g><title>fred::protocol::utils::frame_to_single_result (2 samples, 0.04%)</title><rect x="57.3959%" y="805" width="0.0402%" height="15" fill="rgb(220,172,37)" fg:x="2852" fg:w="2"/><text x="57.6459%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 1.89%)</title><rect x="55.6249%" y="837" width="1.8917%" height="15" fill="rgb(231,229,43)" fg:x="2764" fg:w="94"/><text x="55.8749%" y="847.50">&lt;..</text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (94 samples, 1.89%)</title><rect x="55.6249%" y="821" width="1.8917%" height="15" fill="rgb(250,161,5)" fg:x="2764" fg:w="94"/><text x="55.8749%" y="831.50">f..</text></g><g><title>fred::utils::request_response (4 samples, 0.08%)</title><rect x="57.4361%" y="805" width="0.0805%" height="15" fill="rgb(218,225,18)" fg:x="2854" fg:w="4"/><text x="57.6861%" y="815.50"></text></g><g><title>core::future::from_generator (4 samples, 0.08%)</title><rect x="57.4361%" y="789" width="0.0805%" height="15" fill="rgb(245,45,42)" fg:x="2854" fg:w="4"/><text x="57.6861%" y="799.50"></text></g><g><title>[libc-2.28.so] (20 samples, 0.40%)</title><rect x="57.5166%" y="837" width="0.4025%" height="15" fill="rgb(211,115,1)" fg:x="2858" fg:w="20"/><text x="57.7666%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 2.74%)</title><rect x="55.2828%" y="901" width="2.7370%" height="15" fill="rgb(248,133,52)" fg:x="2747" fg:w="136"/><text x="55.5328%" y="911.50">&lt;c..</text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (136 samples, 2.74%)</title><rect x="55.2828%" y="885" width="2.7370%" height="15" fill="rgb(238,100,21)" fg:x="2747" fg:w="136"/><text x="55.5328%" y="895.50">fr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 2.72%)</title><rect x="55.3029%" y="869" width="2.7168%" height="15" fill="rgb(247,144,11)" fg:x="2748" fg:w="135"/><text x="55.5529%" y="879.50">&lt;c..</text></g><g><title>fred::commands::keys::incr::_{{closure}} (135 samples, 2.72%)</title><rect x="55.3029%" y="853" width="2.7168%" height="15" fill="rgb(206,164,16)" fg:x="2748" fg:w="135"/><text x="55.5529%" y="863.50">fr..</text></g><g><title>fred::commands::one_arg_ok_cmd (5 samples, 0.10%)</title><rect x="57.9191%" y="837" width="0.1006%" height="15" fill="rgb(222,34,3)" fg:x="2878" fg:w="5"/><text x="58.1691%" y="847.50"></text></g><g><title>core::future::from_generator (5 samples, 0.10%)</title><rect x="57.9191%" y="821" width="0.1006%" height="15" fill="rgb(248,82,4)" fg:x="2878" fg:w="5"/><text x="58.1691%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;fred::types::RedisValue&gt; (2 samples, 0.04%)</title><rect x="58.0197%" y="901" width="0.0402%" height="15" fill="rgb(228,81,46)" fg:x="2883" fg:w="2"/><text x="58.2697%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (168 samples, 3.38%)</title><rect x="54.8199%" y="1269" width="3.3810%" height="15" fill="rgb(227,67,47)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1279.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (168 samples, 3.38%)</title><rect x="54.8199%" y="1253" width="3.3810%" height="15" fill="rgb(215,93,53)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1263.50">tok..</text></g><g><title>tokio::coop::budget (168 samples, 3.38%)</title><rect x="54.8199%" y="1237" width="3.3810%" height="15" fill="rgb(248,194,39)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1247.50">tok..</text></g><g><title>tokio::coop::with_budget (168 samples, 3.38%)</title><rect x="54.8199%" y="1221" width="3.3810%" height="15" fill="rgb(215,5,19)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1231.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (168 samples, 3.38%)</title><rect x="54.8199%" y="1205" width="3.3810%" height="15" fill="rgb(226,215,51)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1215.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (168 samples, 3.38%)</title><rect x="54.8199%" y="1189" width="3.3810%" height="15" fill="rgb(225,56,26)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1199.50">std..</text></g><g><title>tokio::coop::with_budget::_{{closure}} (168 samples, 3.38%)</title><rect x="54.8199%" y="1173" width="3.3810%" height="15" fill="rgb(222,75,29)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1183.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (168 samples, 3.38%)</title><rect x="54.8199%" y="1157" width="3.3810%" height="15" fill="rgb(236,139,6)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1167.50">tok..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (168 samples, 3.38%)</title><rect x="54.8199%" y="1141" width="3.3810%" height="15" fill="rgb(223,137,36)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1151.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (168 samples, 3.38%)</title><rect x="54.8199%" y="1125" width="3.3810%" height="15" fill="rgb(226,99,2)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1135.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (168 samples, 3.38%)</title><rect x="54.8199%" y="1109" width="3.3810%" height="15" fill="rgb(206,133,23)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1119.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (168 samples, 3.38%)</title><rect x="54.8199%" y="1093" width="3.3810%" height="15" fill="rgb(243,173,15)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1103.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (168 samples, 3.38%)</title><rect x="54.8199%" y="1077" width="3.3810%" height="15" fill="rgb(228,69,28)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1087.50">tok..</text></g><g><title>std::panic::catch_unwind (168 samples, 3.38%)</title><rect x="54.8199%" y="1061" width="3.3810%" height="15" fill="rgb(212,51,22)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1071.50">std..</text></g><g><title>std::panicking::try (168 samples, 3.38%)</title><rect x="54.8199%" y="1045" width="3.3810%" height="15" fill="rgb(227,113,0)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1055.50">std..</text></g><g><title>std::panicking::try::do_call (168 samples, 3.38%)</title><rect x="54.8199%" y="1029" width="3.3810%" height="15" fill="rgb(252,84,27)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1039.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (168 samples, 3.38%)</title><rect x="54.8199%" y="1013" width="3.3810%" height="15" fill="rgb(223,145,39)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1023.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (168 samples, 3.38%)</title><rect x="54.8199%" y="997" width="3.3810%" height="15" fill="rgb(239,219,30)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="1007.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (168 samples, 3.38%)</title><rect x="54.8199%" y="981" width="3.3810%" height="15" fill="rgb(224,196,39)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="991.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (168 samples, 3.38%)</title><rect x="54.8199%" y="965" width="3.3810%" height="15" fill="rgb(205,35,43)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="975.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (168 samples, 3.38%)</title><rect x="54.8199%" y="949" width="3.3810%" height="15" fill="rgb(228,201,21)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="959.50">tok..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (168 samples, 3.38%)</title><rect x="54.8199%" y="933" width="3.3810%" height="15" fill="rgb(237,118,16)" fg:x="2724" fg:w="168"/><text x="55.0699%" y="943.50">&lt;co..</text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (157 samples, 3.16%)</title><rect x="55.0413%" y="917" width="3.1596%" height="15" fill="rgb(241,17,19)" fg:x="2735" fg:w="157"/><text x="55.2913%" y="927.50">pip..</text></g><g><title>pipeline_test::utils::incr_atomic (7 samples, 0.14%)</title><rect x="58.0600%" y="901" width="0.1409%" height="15" fill="rgb(214,10,25)" fg:x="2885" fg:w="7"/><text x="58.3100%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (7 samples, 0.14%)</title><rect x="58.0600%" y="885" width="0.1409%" height="15" fill="rgb(238,37,29)" fg:x="2885" fg:w="7"/><text x="58.3100%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.08%)</title><rect x="58.2008%" y="853" width="0.0805%" height="15" fill="rgb(253,83,25)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="863.50"></text></g><g><title>&lt;fred::types::RedisKey as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.08%)</title><rect x="58.2008%" y="837" width="0.0805%" height="15" fill="rgb(234,192,12)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="847.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect x="58.2008%" y="821" width="0.0805%" height="15" fill="rgb(241,216,45)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect x="58.2008%" y="805" width="0.0805%" height="15" fill="rgb(242,22,33)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect x="58.2008%" y="789" width="0.0805%" height="15" fill="rgb(231,105,49)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect x="58.2008%" y="773" width="0.0805%" height="15" fill="rgb(218,204,15)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect x="58.2008%" y="757" width="0.0805%" height="15" fill="rgb(235,138,41)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect x="58.2008%" y="741" width="0.0805%" height="15" fill="rgb(246,0,9)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="58.2008%" y="725" width="0.0805%" height="15" fill="rgb(210,74,4)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="58.2008%" y="709" width="0.0805%" height="15" fill="rgb(250,60,41)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.08%)</title><rect x="58.2008%" y="693" width="0.0805%" height="15" fill="rgb(220,115,12)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="58.2008%" y="677" width="0.0805%" height="15" fill="rgb(237,100,13)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="58.2008%" y="661" width="0.0805%" height="15" fill="rgb(213,55,26)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="58.2008%" y="645" width="0.0805%" height="15" fill="rgb(216,17,4)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="655.50"></text></g><g><title>__libc_malloc (4 samples, 0.08%)</title><rect x="58.2008%" y="629" width="0.0805%" height="15" fill="rgb(220,153,47)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="639.50"></text></g><g><title>[libc-2.28.so] (4 samples, 0.08%)</title><rect x="58.2008%" y="613" width="0.0805%" height="15" fill="rgb(215,131,9)" fg:x="2892" fg:w="4"/><text x="58.4508%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.12%)</title><rect x="58.2813%" y="821" width="0.1207%" height="15" fill="rgb(233,46,42)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="831.50"></text></g><g><title>fred::utils::request_response::_{{closure}} (6 samples, 0.12%)</title><rect x="58.2813%" y="805" width="0.1207%" height="15" fill="rgb(226,86,7)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="815.50"></text></g><g><title>fred::protocol::types::RedisCommand::new (6 samples, 0.12%)</title><rect x="58.2813%" y="789" width="0.1207%" height="15" fill="rgb(239,226,21)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="799.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.12%)</title><rect x="58.2813%" y="773" width="0.1207%" height="15" fill="rgb(244,137,22)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.12%)</title><rect x="58.2813%" y="757" width="0.1207%" height="15" fill="rgb(211,139,35)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.12%)</title><rect x="58.2813%" y="741" width="0.1207%" height="15" fill="rgb(214,62,50)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="751.50"></text></g><g><title>__clock_gettime (6 samples, 0.12%)</title><rect x="58.2813%" y="725" width="0.1207%" height="15" fill="rgb(212,113,44)" fg:x="2896" fg:w="6"/><text x="58.5313%" y="735.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.10%)</title><rect x="58.3015%" y="709" width="0.1006%" height="15" fill="rgb(226,150,43)" fg:x="2897" fg:w="5"/><text x="58.5515%" y="719.50"></text></g><g><title>[[vdso]] (4 samples, 0.08%)</title><rect x="58.3216%" y="693" width="0.0805%" height="15" fill="rgb(250,71,37)" fg:x="2898" fg:w="4"/><text x="58.5716%" y="703.50"></text></g><g><title>[unknown] (2,744 samples, 55.22%)</title><rect x="3.2602%" y="1285" width="55.2224%" height="15" fill="rgb(219,76,19)" fg:x="162" fg:w="2744"/><text x="3.5102%" y="1295.50">[unknown]</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (14 samples, 0.28%)</title><rect x="58.2008%" y="1269" width="0.2817%" height="15" fill="rgb(250,39,11)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1279.50"></text></g><g><title>tokio::coop::budget (14 samples, 0.28%)</title><rect x="58.2008%" y="1253" width="0.2817%" height="15" fill="rgb(230,64,31)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1263.50"></text></g><g><title>tokio::coop::with_budget (14 samples, 0.28%)</title><rect x="58.2008%" y="1237" width="0.2817%" height="15" fill="rgb(208,222,23)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.28%)</title><rect x="58.2008%" y="1221" width="0.2817%" height="15" fill="rgb(227,125,18)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.28%)</title><rect x="58.2008%" y="1205" width="0.2817%" height="15" fill="rgb(234,210,9)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1215.50"></text></g><g><title>tokio::coop::with_budget::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="1189" width="0.2817%" height="15" fill="rgb(217,127,24)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="1173" width="0.2817%" height="15" fill="rgb(239,141,48)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1183.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (14 samples, 0.28%)</title><rect x="58.2008%" y="1157" width="0.2817%" height="15" fill="rgb(227,109,8)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="1141" width="0.2817%" height="15" fill="rgb(235,184,23)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="1125" width="0.2817%" height="15" fill="rgb(227,226,48)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14 samples, 0.28%)</title><rect x="58.2008%" y="1109" width="0.2817%" height="15" fill="rgb(206,150,11)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (14 samples, 0.28%)</title><rect x="58.2008%" y="1093" width="0.2817%" height="15" fill="rgb(254,2,33)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.28%)</title><rect x="58.2008%" y="1077" width="0.2817%" height="15" fill="rgb(243,160,20)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1087.50"></text></g><g><title>std::panicking::try (14 samples, 0.28%)</title><rect x="58.2008%" y="1061" width="0.2817%" height="15" fill="rgb(218,208,30)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.28%)</title><rect x="58.2008%" y="1045" width="0.2817%" height="15" fill="rgb(224,120,49)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.28%)</title><rect x="58.2008%" y="1029" width="0.2817%" height="15" fill="rgb(246,12,2)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="1013" width="0.2817%" height="15" fill="rgb(236,117,3)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="997" width="0.2817%" height="15" fill="rgb(216,128,52)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.28%)</title><rect x="58.2008%" y="981" width="0.2817%" height="15" fill="rgb(246,145,19)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="991.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="965" width="0.2817%" height="15" fill="rgb(222,11,46)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="949" width="0.2817%" height="15" fill="rgb(245,82,36)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="959.50"></text></g><g><title>pipeline_test::spawn_client_task::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="933" width="0.2817%" height="15" fill="rgb(250,73,51)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="917" width="0.2817%" height="15" fill="rgb(221,189,23)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="927.50"></text></g><g><title>fred::client::RedisClient::incr::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="901" width="0.2817%" height="15" fill="rgb(210,33,7)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="58.2008%" y="885" width="0.2817%" height="15" fill="rgb(210,107,22)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="895.50"></text></g><g><title>fred::commands::keys::incr::_{{closure}} (14 samples, 0.28%)</title><rect x="58.2008%" y="869" width="0.2817%" height="15" fill="rgb(222,116,37)" fg:x="2892" fg:w="14"/><text x="58.4508%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.20%)</title><rect x="58.2813%" y="853" width="0.2012%" height="15" fill="rgb(254,17,48)" fg:x="2896" fg:w="10"/><text x="58.5313%" y="863.50"></text></g><g><title>fred::commands::one_arg_value_cmd::_{{closure}} (10 samples, 0.20%)</title><rect x="58.2813%" y="837" width="0.2012%" height="15" fill="rgb(224,36,32)" fg:x="2896" fg:w="10"/><text x="58.5313%" y="847.50"></text></g><g><title>fred::protocol::utils::frame_to_single_result (4 samples, 0.08%)</title><rect x="58.4021%" y="821" width="0.0805%" height="15" fill="rgb(232,90,46)" fg:x="2902" fg:w="4"/><text x="58.6521%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;redis_protocol::types::Frame&gt; (2 samples, 0.04%)</title><rect x="58.4423%" y="805" width="0.0402%" height="15" fill="rgb(241,66,40)" fg:x="2904" fg:w="2"/><text x="58.6923%" y="815.50"></text></g><g><title>ret_from_fork (6 samples, 0.12%)</title><rect x="58.4826%" y="1269" width="0.1207%" height="15" fill="rgb(249,184,29)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1279.50"></text></g><g><title>schedule_tail (6 samples, 0.12%)</title><rect x="58.4826%" y="1253" width="0.1207%" height="15" fill="rgb(231,181,1)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1263.50"></text></g><g><title>finish_task_switch (6 samples, 0.12%)</title><rect x="58.4826%" y="1237" width="0.1207%" height="15" fill="rgb(224,94,2)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1247.50"></text></g><g><title>call_function_interrupt (6 samples, 0.12%)</title><rect x="58.4826%" y="1221" width="0.1207%" height="15" fill="rgb(229,170,15)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1231.50"></text></g><g><title>smp_call_function_interrupt (6 samples, 0.12%)</title><rect x="58.4826%" y="1205" width="0.1207%" height="15" fill="rgb(240,127,35)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1215.50"></text></g><g><title>flush_smp_call_function_queue (6 samples, 0.12%)</title><rect x="58.4826%" y="1189" width="0.1207%" height="15" fill="rgb(248,196,34)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1199.50"></text></g><g><title>flush_tlb_func_remote (6 samples, 0.12%)</title><rect x="58.4826%" y="1173" width="0.1207%" height="15" fill="rgb(236,137,7)" fg:x="2906" fg:w="6"/><text x="58.7326%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="58.6033%" y="1253" width="0.0201%" height="15" fill="rgb(235,127,16)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1263.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="58.6033%" y="1237" width="0.0201%" height="15" fill="rgb(250,192,54)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1247.50"></text></g><g><title>__x64_sys_exit (1 samples, 0.02%)</title><rect x="58.6033%" y="1221" width="0.0201%" height="15" fill="rgb(218,98,20)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1231.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="58.6033%" y="1205" width="0.0201%" height="15" fill="rgb(230,176,47)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1215.50"></text></g><g><title>exit_signals (1 samples, 0.02%)</title><rect x="58.6033%" y="1189" width="0.0201%" height="15" fill="rgb(244,2,33)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1199.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="58.6033%" y="1173" width="0.0201%" height="15" fill="rgb(231,100,17)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1183.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="58.6033%" y="1157" width="0.0201%" height="15" fill="rgb(245,23,12)" fg:x="2912" fg:w="1"/><text x="58.8533%" y="1167.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="58.6235%" y="1141" width="0.0201%" height="15" fill="rgb(249,55,22)" fg:x="2913" fg:w="1"/><text x="58.8735%" y="1151.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="58.6235%" y="1125" width="0.0201%" height="15" fill="rgb(207,134,9)" fg:x="2913" fg:w="1"/><text x="58.8735%" y="1135.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="58.6436%" y="1109" width="0.0201%" height="15" fill="rgb(218,134,0)" fg:x="2914" fg:w="1"/><text x="58.8936%" y="1119.50"></text></g><g><title>ctx_sched_out (1 samples, 0.02%)</title><rect x="58.6436%" y="1093" width="0.0201%" height="15" fill="rgb(213,212,33)" fg:x="2914" fg:w="1"/><text x="58.8936%" y="1103.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="58.6436%" y="1077" width="0.0201%" height="15" fill="rgb(252,106,18)" fg:x="2914" fg:w="1"/><text x="58.8936%" y="1087.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.02%)</title><rect x="58.6436%" y="1061" width="0.0201%" height="15" fill="rgb(208,126,42)" fg:x="2914" fg:w="1"/><text x="58.8936%" y="1071.50"></text></g><g><title>native_read_msr (1 samples, 0.02%)</title><rect x="58.6436%" y="1045" width="0.0201%" height="15" fill="rgb(246,175,29)" fg:x="2914" fg:w="1"/><text x="58.8936%" y="1055.50"></text></g><g><title>down_read (8 samples, 0.16%)</title><rect x="58.6235%" y="1189" width="0.1610%" height="15" fill="rgb(215,13,50)" fg:x="2913" fg:w="8"/><text x="58.8735%" y="1199.50"></text></g><g><title>call_rwsem_down_read_failed (8 samples, 0.16%)</title><rect x="58.6235%" y="1173" width="0.1610%" height="15" fill="rgb(216,172,15)" fg:x="2913" fg:w="8"/><text x="58.8735%" y="1183.50"></text></g><g><title>rwsem_down_read_failed (8 samples, 0.16%)</title><rect x="58.6235%" y="1157" width="0.1610%" height="15" fill="rgb(212,103,13)" fg:x="2913" fg:w="8"/><text x="58.8735%" y="1167.50"></text></g><g><title>schedule (7 samples, 0.14%)</title><rect x="58.6436%" y="1141" width="0.1409%" height="15" fill="rgb(231,171,36)" fg:x="2914" fg:w="7"/><text x="58.8936%" y="1151.50"></text></g><g><title>__schedule (7 samples, 0.14%)</title><rect x="58.6436%" y="1125" width="0.1409%" height="15" fill="rgb(250,123,20)" fg:x="2914" fg:w="7"/><text x="58.8936%" y="1135.50"></text></g><g><title>finish_task_switch (6 samples, 0.12%)</title><rect x="58.6637%" y="1109" width="0.1207%" height="15" fill="rgb(212,53,50)" fg:x="2915" fg:w="6"/><text x="58.9137%" y="1119.50"></text></g><g><title>call_function_interrupt (6 samples, 0.12%)</title><rect x="58.6637%" y="1093" width="0.1207%" height="15" fill="rgb(243,54,12)" fg:x="2915" fg:w="6"/><text x="58.9137%" y="1103.50"></text></g><g><title>smp_call_function_interrupt (6 samples, 0.12%)</title><rect x="58.6637%" y="1077" width="0.1207%" height="15" fill="rgb(234,101,34)" fg:x="2915" fg:w="6"/><text x="58.9137%" y="1087.50"></text></g><g><title>flush_smp_call_function_queue (6 samples, 0.12%)</title><rect x="58.6637%" y="1061" width="0.1207%" height="15" fill="rgb(254,67,22)" fg:x="2915" fg:w="6"/><text x="58.9137%" y="1071.50"></text></g><g><title>llist_reverse_order (5 samples, 0.10%)</title><rect x="58.6838%" y="1045" width="0.1006%" height="15" fill="rgb(250,35,47)" fg:x="2916" fg:w="5"/><text x="58.9338%" y="1055.50"></text></g><g><title>find_vma_prev (12 samples, 0.24%)</title><rect x="58.7845%" y="1189" width="0.2415%" height="15" fill="rgb(226,126,38)" fg:x="2921" fg:w="12"/><text x="59.0345%" y="1199.50"></text></g><g><title>find_vma (12 samples, 0.24%)</title><rect x="58.7845%" y="1173" width="0.2415%" height="15" fill="rgb(216,138,53)" fg:x="2921" fg:w="12"/><text x="59.0345%" y="1183.50"></text></g><g><title>call_function_interrupt (6 samples, 0.12%)</title><rect x="58.9052%" y="1157" width="0.1207%" height="15" fill="rgb(246,199,43)" fg:x="2927" fg:w="6"/><text x="59.1552%" y="1167.50"></text></g><g><title>lru_add_drain (6 samples, 0.12%)</title><rect x="59.0260%" y="1173" width="0.1207%" height="15" fill="rgb(232,125,11)" fg:x="2933" fg:w="6"/><text x="59.2760%" y="1183.50"></text></g><g><title>lru_add_drain_cpu (6 samples, 0.12%)</title><rect x="59.0260%" y="1157" width="0.1207%" height="15" fill="rgb(218,219,45)" fg:x="2933" fg:w="6"/><text x="59.2760%" y="1167.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.12%)</title><rect x="59.0260%" y="1141" width="0.1207%" height="15" fill="rgb(216,102,54)" fg:x="2933" fg:w="6"/><text x="59.2760%" y="1151.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.12%)</title><rect x="59.0260%" y="1125" width="0.1207%" height="15" fill="rgb(250,228,7)" fg:x="2933" fg:w="6"/><text x="59.2760%" y="1135.50"></text></g><g><title>flush_tlb_mm_range (3 samples, 0.06%)</title><rect x="59.1467%" y="1141" width="0.0604%" height="15" fill="rgb(226,125,25)" fg:x="2939" fg:w="3"/><text x="59.3967%" y="1151.50"></text></g><g><title>smp_call_function_many (2 samples, 0.04%)</title><rect x="59.1668%" y="1125" width="0.0402%" height="15" fill="rgb(224,165,27)" fg:x="2940" fg:w="2"/><text x="59.4168%" y="1135.50"></text></g><g><title>madvise (30 samples, 0.60%)</title><rect x="58.6235%" y="1253" width="0.6037%" height="15" fill="rgb(233,86,3)" fg:x="2913" fg:w="30"/><text x="58.8735%" y="1263.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.60%)</title><rect x="58.6235%" y="1237" width="0.6037%" height="15" fill="rgb(228,116,20)" fg:x="2913" fg:w="30"/><text x="58.8735%" y="1247.50"></text></g><g><title>do_syscall_64 (30 samples, 0.60%)</title><rect x="58.6235%" y="1221" width="0.6037%" height="15" fill="rgb(209,192,17)" fg:x="2913" fg:w="30"/><text x="58.8735%" y="1231.50"></text></g><g><title>__x64_sys_madvise (30 samples, 0.60%)</title><rect x="58.6235%" y="1205" width="0.6037%" height="15" fill="rgb(224,88,34)" fg:x="2913" fg:w="30"/><text x="58.8735%" y="1215.50"></text></g><g><title>zap_page_range (10 samples, 0.20%)</title><rect x="59.0260%" y="1189" width="0.2012%" height="15" fill="rgb(233,38,6)" fg:x="2933" fg:w="10"/><text x="59.2760%" y="1199.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.08%)</title><rect x="59.1467%" y="1173" width="0.0805%" height="15" fill="rgb(212,59,30)" fg:x="2939" fg:w="4"/><text x="59.3967%" y="1183.50"></text></g><g><title>arch_tlb_finish_mmu (4 samples, 0.08%)</title><rect x="59.1467%" y="1157" width="0.0805%" height="15" fill="rgb(213,80,3)" fg:x="2939" fg:w="4"/><text x="59.3967%" y="1167.50"></text></g><g><title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="59.2071%" y="1141" width="0.0201%" height="15" fill="rgb(251,178,7)" fg:x="2942" fg:w="1"/><text x="59.4571%" y="1151.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="59.2071%" y="1125" width="0.0201%" height="15" fill="rgb(213,154,26)" fg:x="2942" fg:w="1"/><text x="59.4571%" y="1135.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="59.2071%" y="1109" width="0.0201%" height="15" fill="rgb(238,165,49)" fg:x="2942" fg:w="1"/><text x="59.4571%" y="1119.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="59.2071%" y="1093" width="0.0201%" height="15" fill="rgb(248,91,46)" fg:x="2942" fg:w="1"/><text x="59.4571%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="59.2272%" y="1205" width="0.0201%" height="15" fill="rgb(244,21,52)" fg:x="2943" fg:w="1"/><text x="59.4772%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="59.2272%" y="1189" width="0.0201%" height="15" fill="rgb(247,122,20)" fg:x="2943" fg:w="1"/><text x="59.4772%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::EnterGuard&gt; (1 samples, 0.02%)</title><rect x="59.2473%" y="1061" width="0.0201%" height="15" fill="rgb(218,27,9)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.2473%" y="1045" width="0.0201%" height="15" fill="rgb(246,7,6)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="59.2473%" y="1029" width="0.0201%" height="15" fill="rgb(227,135,54)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="59.2473%" y="1013" width="0.0201%" height="15" fill="rgb(247,14,11)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="1023.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.02%)</title><rect x="59.2473%" y="997" width="0.0201%" height="15" fill="rgb(206,149,34)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::handle::Handle&gt;&gt; (1 samples, 0.02%)</title><rect x="59.2473%" y="981" width="0.0201%" height="15" fill="rgb(227,228,4)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.02%)</title><rect x="59.2473%" y="965" width="0.0201%" height="15" fill="rgb(238,218,28)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (1 samples, 0.02%)</title><rect x="59.2473%" y="949" width="0.0201%" height="15" fill="rgb(252,86,40)" fg:x="2944" fg:w="1"/><text x="59.4973%" y="959.50"></text></g><g><title>core::mem::drop (5 samples, 0.10%)</title><rect x="59.2675%" y="1045" width="0.1006%" height="15" fill="rgb(251,225,11)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (5 samples, 0.10%)</title><rect x="59.2675%" y="1029" width="0.1006%" height="15" fill="rgb(206,46,49)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="59.2675%" y="1013" width="0.1006%" height="15" fill="rgb(245,128,24)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.10%)</title><rect x="59.2675%" y="997" width="0.1006%" height="15" fill="rgb(219,177,34)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="1007.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (5 samples, 0.10%)</title><rect x="59.2675%" y="981" width="0.1006%" height="15" fill="rgb(218,60,48)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (5 samples, 0.10%)</title><rect x="59.2675%" y="965" width="0.1006%" height="15" fill="rgb(221,11,5)" fg:x="2945" fg:w="5"/><text x="59.5175%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.10%)</title><rect x="59.3681%" y="997" width="0.1006%" height="15" fill="rgb(220,148,13)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="1007.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.10%)</title><rect x="59.3681%" y="981" width="0.1006%" height="15" fill="rgb(210,16,3)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.10%)</title><rect x="59.3681%" y="965" width="0.1006%" height="15" fill="rgb(236,80,2)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.10%)</title><rect x="59.3681%" y="949" width="0.1006%" height="15" fill="rgb(239,129,19)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (5 samples, 0.10%)</title><rect x="59.3681%" y="933" width="0.1006%" height="15" fill="rgb(220,106,35)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (5 samples, 0.10%)</title><rect x="59.3681%" y="917" width="0.1006%" height="15" fill="rgb(252,139,45)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::hash (5 samples, 0.10%)</title><rect x="59.3681%" y="901" width="0.1006%" height="15" fill="rgb(229,8,36)" fg:x="2950" fg:w="5"/><text x="59.6181%" y="911.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (5 samples, 0.10%)</title><rect x="59.4687%" y="949" width="0.1006%" height="15" fill="rgb(230,126,33)" fg:x="2955" fg:w="5"/><text x="59.7187%" y="959.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.10%)</title><rect x="59.4687%" y="933" width="0.1006%" height="15" fill="rgb(239,140,21)" fg:x="2955" fg:w="5"/><text x="59.7187%" y="943.50"></text></g><g><title>syscall (5 samples, 0.10%)</title><rect x="59.4687%" y="917" width="0.1006%" height="15" fill="rgb(254,104,9)" fg:x="2955" fg:w="5"/><text x="59.7187%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="59.4687%" y="901" width="0.1006%" height="15" fill="rgb(239,52,14)" fg:x="2955" fg:w="5"/><text x="59.7187%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (11 samples, 0.22%)</title><rect x="59.3681%" y="1045" width="0.2214%" height="15" fill="rgb(208,227,44)" fg:x="2950" fg:w="11"/><text x="59.6181%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (11 samples, 0.22%)</title><rect x="59.3681%" y="1029" width="0.2214%" height="15" fill="rgb(246,18,19)" fg:x="2950" fg:w="11"/><text x="59.6181%" y="1039.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (11 samples, 0.22%)</title><rect x="59.3681%" y="1013" width="0.2214%" height="15" fill="rgb(235,228,25)" fg:x="2950" fg:w="11"/><text x="59.6181%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.12%)</title><rect x="59.4687%" y="997" width="0.1207%" height="15" fill="rgb(240,156,20)" fg:x="2955" fg:w="6"/><text x="59.7187%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.12%)</title><rect x="59.4687%" y="981" width="0.1207%" height="15" fill="rgb(224,8,20)" fg:x="2955" fg:w="6"/><text x="59.7187%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (6 samples, 0.12%)</title><rect x="59.4687%" y="965" width="0.1207%" height="15" fill="rgb(214,12,52)" fg:x="2955" fg:w="6"/><text x="59.7187%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="59.5693%" y="949" width="0.0201%" height="15" fill="rgb(211,220,47)" fg:x="2960" fg:w="1"/><text x="59.8193%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (1 samples, 0.02%)</title><rect x="59.5693%" y="933" width="0.0201%" height="15" fill="rgb(250,173,5)" fg:x="2960" fg:w="1"/><text x="59.8193%" y="943.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.12%)</title><rect x="59.5895%" y="933" width="0.1207%" height="15" fill="rgb(250,125,52)" fg:x="2961" fg:w="6"/><text x="59.8395%" y="943.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="59.6901%" y="917" width="0.0201%" height="15" fill="rgb(209,133,18)" fg:x="2966" fg:w="1"/><text x="59.9401%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::hash (6 samples, 0.12%)</title><rect x="59.7102%" y="917" width="0.1207%" height="15" fill="rgb(216,173,22)" fg:x="2967" fg:w="6"/><text x="59.9602%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 0.26%)</title><rect x="59.5895%" y="1045" width="0.2616%" height="15" fill="rgb(205,3,22)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 0.26%)</title><rect x="59.5895%" y="1029" width="0.2616%" height="15" fill="rgb(248,22,20)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.26%)</title><rect x="59.5895%" y="1013" width="0.2616%" height="15" fill="rgb(233,6,29)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="1023.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 0.26%)</title><rect x="59.5895%" y="997" width="0.2616%" height="15" fill="rgb(240,22,54)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::park (13 samples, 0.26%)</title><rect x="59.5895%" y="981" width="0.2616%" height="15" fill="rgb(231,133,32)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (13 samples, 0.26%)</title><rect x="59.5895%" y="965" width="0.2616%" height="15" fill="rgb(248,193,4)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (13 samples, 0.26%)</title><rect x="59.5895%" y="949" width="0.2616%" height="15" fill="rgb(211,178,46)" fg:x="2961" fg:w="13"/><text x="59.8395%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (7 samples, 0.14%)</title><rect x="59.7102%" y="933" width="0.1409%" height="15" fill="rgb(224,5,42)" fg:x="2967" fg:w="7"/><text x="59.9602%" y="943.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (1 samples, 0.02%)</title><rect x="59.8310%" y="917" width="0.0201%" height="15" fill="rgb(239,176,25)" fg:x="2973" fg:w="1"/><text x="60.0810%" y="927.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (1 samples, 0.02%)</title><rect x="59.8310%" y="901" width="0.0201%" height="15" fill="rgb(245,187,50)" fg:x="2973" fg:w="1"/><text x="60.0810%" y="911.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.02%)</title><rect x="59.8310%" y="885" width="0.0201%" height="15" fill="rgb(248,24,15)" fg:x="2973" fg:w="1"/><text x="60.0810%" y="895.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.02%)</title><rect x="59.8310%" y="869" width="0.0201%" height="15" fill="rgb(205,166,13)" fg:x="2973" fg:w="1"/><text x="60.0810%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="59.8310%" y="853" width="0.0201%" height="15" fill="rgb(208,114,23)" fg:x="2973" fg:w="1"/><text x="60.0810%" y="863.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (1 samples, 0.02%)</title><rect x="60.0724%" y="629" width="0.0201%" height="15" fill="rgb(239,127,18)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="639.50"></text></g><g><title>tokio::time::driver::ClockTime::now (1 samples, 0.02%)</title><rect x="60.0724%" y="613" width="0.0201%" height="15" fill="rgb(219,154,28)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="623.50"></text></g><g><title>tokio::time::clock::Clock::now (1 samples, 0.02%)</title><rect x="60.0724%" y="597" width="0.0201%" height="15" fill="rgb(225,157,23)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="607.50"></text></g><g><title>tokio::time::clock::now (1 samples, 0.02%)</title><rect x="60.0724%" y="581" width="0.0201%" height="15" fill="rgb(219,8,6)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="591.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="60.0724%" y="565" width="0.0201%" height="15" fill="rgb(212,47,6)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.02%)</title><rect x="60.0724%" y="549" width="0.0201%" height="15" fill="rgb(224,190,4)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.02%)</title><rect x="60.0724%" y="533" width="0.0201%" height="15" fill="rgb(239,183,29)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="543.50"></text></g><g><title>__clock_gettime (1 samples, 0.02%)</title><rect x="60.0724%" y="517" width="0.0201%" height="15" fill="rgb(213,57,7)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="527.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="60.0724%" y="501" width="0.0201%" height="15" fill="rgb(216,148,1)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="511.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="60.0724%" y="485" width="0.0201%" height="15" fill="rgb(236,182,29)" fg:x="2985" fg:w="1"/><text x="60.3224%" y="495.50"></text></g><g><title>mio::poll::Poll::poll (1 samples, 0.02%)</title><rect x="60.0926%" y="533" width="0.0201%" height="15" fill="rgb(244,120,48)" fg:x="2986" fg:w="1"/><text x="60.3426%" y="543.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.02%)</title><rect x="60.0926%" y="517" width="0.0201%" height="15" fill="rgb(206,71,34)" fg:x="2986" fg:w="1"/><text x="60.3426%" y="527.50"></text></g><g><title>epoll_wait (1 samples, 0.02%)</title><rect x="60.0926%" y="501" width="0.0201%" height="15" fill="rgb(242,32,6)" fg:x="2986" fg:w="1"/><text x="60.3426%" y="511.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="60.0926%" y="485" width="0.0201%" height="15" fill="rgb(241,35,3)" fg:x="2986" fg:w="1"/><text x="60.3426%" y="495.50"></text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park_timeout (2 samples, 0.04%)</title><rect x="60.0926%" y="565" width="0.0402%" height="15" fill="rgb(222,62,19)" fg:x="2986" fg:w="2"/><text x="60.3426%" y="575.50"></text></g><g><title>tokio::io::driver::Driver::turn (2 samples, 0.04%)</title><rect x="60.0926%" y="549" width="0.0402%" height="15" fill="rgb(223,110,41)" fg:x="2986" fg:w="2"/><text x="60.3426%" y="559.50"></text></g><g><title>tokio::io::driver::Driver::dispatch (1 samples, 0.02%)</title><rect x="60.1127%" y="533" width="0.0201%" height="15" fill="rgb(208,224,4)" fg:x="2987" fg:w="1"/><text x="60.3627%" y="543.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (1 samples, 0.02%)</title><rect x="60.1127%" y="517" width="0.0201%" height="15" fill="rgb(241,137,19)" fg:x="2987" fg:w="1"/><text x="60.3627%" y="527.50"></text></g><g><title>&lt;tokio::signal::unix::driver::Driver as tokio::park::Park&gt;::park_timeout (3 samples, 0.06%)</title><rect x="60.0926%" y="581" width="0.0604%" height="15" fill="rgb(244,24,17)" fg:x="2986" fg:w="3"/><text x="60.3426%" y="591.50"></text></g><g><title>tokio::signal::unix::driver::Driver::process (1 samples, 0.02%)</title><rect x="60.1328%" y="565" width="0.0201%" height="15" fill="rgb(245,178,49)" fg:x="2988" fg:w="1"/><text x="60.3828%" y="575.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (1 samples, 0.02%)</title><rect x="60.1328%" y="549" width="0.0201%" height="15" fill="rgb(219,160,38)" fg:x="2988" fg:w="1"/><text x="60.3828%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="60.1328%" y="533" width="0.0201%" height="15" fill="rgb(228,137,14)" fg:x="2988" fg:w="1"/><text x="60.3828%" y="543.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_timeout (4 samples, 0.08%)</title><rect x="60.0926%" y="629" width="0.0805%" height="15" fill="rgb(237,134,11)" fg:x="2986" fg:w="4"/><text x="60.3426%" y="639.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (4 samples, 0.08%)</title><rect x="60.0926%" y="613" width="0.0805%" height="15" fill="rgb(211,126,44)" fg:x="2986" fg:w="4"/><text x="60.3426%" y="623.50"></text></g><g><title>&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park_timeout (4 samples, 0.08%)</title><rect x="60.0926%" y="597" width="0.0805%" height="15" fill="rgb(226,171,33)" fg:x="2986" fg:w="4"/><text x="60.3426%" y="607.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (1 samples, 0.02%)</title><rect x="60.1529%" y="581" width="0.0201%" height="15" fill="rgb(253,99,13)" fg:x="2989" fg:w="1"/><text x="60.4029%" y="591.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.02%)</title><rect x="60.1529%" y="565" width="0.0201%" height="15" fill="rgb(244,48,7)" fg:x="2989" fg:w="1"/><text x="60.4029%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (1 samples, 0.02%)</title><rect x="60.1529%" y="549" width="0.0201%" height="15" fill="rgb(244,217,54)" fg:x="2989" fg:w="1"/><text x="60.4029%" y="559.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (1 samples, 0.02%)</title><rect x="60.1529%" y="533" width="0.0201%" height="15" fill="rgb(224,15,18)" fg:x="2989" fg:w="1"/><text x="60.4029%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (1 samples, 0.02%)</title><rect x="60.1529%" y="517" width="0.0201%" height="15" fill="rgb(244,99,12)" fg:x="2989" fg:w="1"/><text x="60.4029%" y="527.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (7 samples, 0.14%)</title><rect x="60.0523%" y="709" width="0.1409%" height="15" fill="rgb(233,226,8)" fg:x="2984" fg:w="7"/><text x="60.3023%" y="719.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park_timeout (6 samples, 0.12%)</title><rect x="60.0724%" y="693" width="0.1207%" height="15" fill="rgb(229,211,3)" fg:x="2985" fg:w="6"/><text x="60.3224%" y="703.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (6 samples, 0.12%)</title><rect x="60.0724%" y="677" width="0.1207%" height="15" fill="rgb(216,140,21)" fg:x="2985" fg:w="6"/><text x="60.3224%" y="687.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park_timeout (6 samples, 0.12%)</title><rect x="60.0724%" y="661" width="0.1207%" height="15" fill="rgb(234,122,30)" fg:x="2985" fg:w="6"/><text x="60.3224%" y="671.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (6 samples, 0.12%)</title><rect x="60.0724%" y="645" width="0.1207%" height="15" fill="rgb(236,25,46)" fg:x="2985" fg:w="6"/><text x="60.3224%" y="655.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration_time (1 samples, 0.02%)</title><rect x="60.1731%" y="629" width="0.0201%" height="15" fill="rgb(217,52,54)" fg:x="2990" fg:w="1"/><text x="60.4231%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (8 samples, 0.16%)</title><rect x="60.0523%" y="725" width="0.1610%" height="15" fill="rgb(222,29,26)" fg:x="2984" fg:w="8"/><text x="60.3023%" y="735.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (1 samples, 0.02%)</title><rect x="60.1932%" y="709" width="0.0201%" height="15" fill="rgb(216,177,29)" fg:x="2991" fg:w="1"/><text x="60.4432%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.02%)</title><rect x="60.1932%" y="693" width="0.0201%" height="15" fill="rgb(247,136,51)" fg:x="2991" fg:w="1"/><text x="60.4432%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (1 samples, 0.02%)</title><rect x="60.1932%" y="677" width="0.0201%" height="15" fill="rgb(231,47,47)" fg:x="2991" fg:w="1"/><text x="60.4432%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="60.1932%" y="661" width="0.0201%" height="15" fill="rgb(211,192,36)" fg:x="2991" fg:w="1"/><text x="60.4432%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (9 samples, 0.18%)</title><rect x="60.0523%" y="741" width="0.1811%" height="15" fill="rgb(229,156,32)" fg:x="2984" fg:w="9"/><text x="60.3023%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (1 samples, 0.02%)</title><rect x="60.2133%" y="725" width="0.0201%" height="15" fill="rgb(248,213,20)" fg:x="2992" fg:w="1"/><text x="60.4633%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="60.6359%" y="677" width="0.0201%" height="15" fill="rgb(217,64,7)" fg:x="3013" fg:w="1"/><text x="60.8859%" y="687.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (1 samples, 0.02%)</title><rect x="60.6561%" y="677" width="0.0201%" height="15" fill="rgb(232,142,8)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="687.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (1 samples, 0.02%)</title><rect x="60.6561%" y="661" width="0.0201%" height="15" fill="rgb(224,92,44)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="671.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (1 samples, 0.02%)</title><rect x="60.6561%" y="645" width="0.0201%" height="15" fill="rgb(214,169,17)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="655.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (1 samples, 0.02%)</title><rect x="60.6561%" y="629" width="0.0201%" height="15" fill="rgb(210,59,37)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="639.50"></text></g><g><title>tokio::io::driver::Driver::turn (1 samples, 0.02%)</title><rect x="60.6561%" y="613" width="0.0201%" height="15" fill="rgb(214,116,48)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="623.50"></text></g><g><title>mio::poll::Poll::poll (1 samples, 0.02%)</title><rect x="60.6561%" y="597" width="0.0201%" height="15" fill="rgb(244,191,6)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="607.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.02%)</title><rect x="60.6561%" y="581" width="0.0201%" height="15" fill="rgb(241,50,52)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="591.50"></text></g><g><title>epoll_wait (1 samples, 0.02%)</title><rect x="60.6561%" y="565" width="0.0201%" height="15" fill="rgb(236,75,39)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="60.6561%" y="549" width="0.0201%" height="15" fill="rgb(236,99,0)" fg:x="3014" fg:w="1"/><text x="60.9061%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.28%)</title><rect x="60.8372%" y="661" width="0.2817%" height="15" fill="rgb(207,202,15)" fg:x="3023" fg:w="14"/><text x="61.0872%" y="671.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="61.5416%" y="597" width="0.0604%" height="15" fill="rgb(233,207,14)" fg:x="3058" fg:w="3"/><text x="61.7916%" y="607.50"></text></g><g><title>do_sched_yield (23 samples, 0.46%)</title><rect x="61.3403%" y="613" width="0.4629%" height="15" fill="rgb(226,27,51)" fg:x="3048" fg:w="23"/><text x="61.5903%" y="623.50"></text></g><g><title>yield_task_fair (10 samples, 0.20%)</title><rect x="61.6019%" y="597" width="0.2012%" height="15" fill="rgb(206,104,42)" fg:x="3061" fg:w="10"/><text x="61.8519%" y="607.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.12%)</title><rect x="62.3465%" y="581" width="0.1207%" height="15" fill="rgb(212,225,4)" fg:x="3098" fg:w="6"/><text x="62.5965%" y="591.50"></text></g><g><title>__list_add_valid (3 samples, 0.06%)</title><rect x="63.1314%" y="565" width="0.0604%" height="15" fill="rgb(233,96,42)" fg:x="3137" fg:w="3"/><text x="63.3814%" y="575.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.02%)</title><rect x="63.1918%" y="565" width="0.0201%" height="15" fill="rgb(229,21,32)" fg:x="3140" fg:w="1"/><text x="63.4418%" y="575.50"></text></g><g><title>pick_next_entity (12 samples, 0.24%)</title><rect x="63.2119%" y="565" width="0.2415%" height="15" fill="rgb(226,216,24)" fg:x="3141" fg:w="12"/><text x="63.4619%" y="575.50"></text></g><g><title>clear_buddies (5 samples, 0.10%)</title><rect x="63.3528%" y="549" width="0.1006%" height="15" fill="rgb(221,163,17)" fg:x="3148" fg:w="5"/><text x="63.6028%" y="559.50"></text></g><g><title>__calc_delta (8 samples, 0.16%)</title><rect x="63.7553%" y="549" width="0.1610%" height="15" fill="rgb(216,216,42)" fg:x="3168" fg:w="8"/><text x="64.0053%" y="559.50"></text></g><g><title>__cgroup_account_cputime (2 samples, 0.04%)</title><rect x="63.9163%" y="549" width="0.0402%" height="15" fill="rgb(240,118,7)" fg:x="3176" fg:w="2"/><text x="64.1663%" y="559.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="63.9364%" y="533" width="0.0201%" height="15" fill="rgb(221,67,37)" fg:x="3177" fg:w="1"/><text x="64.1864%" y="543.50"></text></g><g><title>cpuacct_charge (28 samples, 0.56%)</title><rect x="63.9565%" y="549" width="0.5635%" height="15" fill="rgb(241,32,44)" fg:x="3178" fg:w="28"/><text x="64.2065%" y="559.50"></text></g><g><title>pick_next_task_fair (109 samples, 2.19%)</title><rect x="62.4673%" y="581" width="2.1936%" height="15" fill="rgb(235,204,43)" fg:x="3104" fg:w="109"/><text x="62.7173%" y="591.50">p..</text></g><g><title>update_curr (60 samples, 1.21%)</title><rect x="63.4534%" y="565" width="1.2075%" height="15" fill="rgb(213,116,10)" fg:x="3153" fg:w="60"/><text x="63.7034%" y="575.50"></text></g><g><title>update_min_vruntime (7 samples, 0.14%)</title><rect x="64.5200%" y="549" width="0.1409%" height="15" fill="rgb(239,15,48)" fg:x="3206" fg:w="7"/><text x="64.7700%" y="559.50"></text></g><g><title>rcu_note_context_switch (2 samples, 0.04%)</title><rect x="64.6609%" y="581" width="0.0402%" height="15" fill="rgb(207,123,36)" fg:x="3213" fg:w="2"/><text x="64.9109%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (196 samples, 3.94%)</title><rect x="61.1189%" y="661" width="3.9445%" height="15" fill="rgb(209,103,30)" fg:x="3037" fg:w="196"/><text x="61.3689%" y="671.50">entr..</text></g><g><title>do_syscall_64 (192 samples, 3.86%)</title><rect x="61.1994%" y="645" width="3.8640%" height="15" fill="rgb(238,100,19)" fg:x="3041" fg:w="192"/><text x="61.4494%" y="655.50">do_s..</text></g><g><title>__x64_sys_sched_yield (186 samples, 3.74%)</title><rect x="61.3202%" y="629" width="3.7432%" height="15" fill="rgb(244,30,14)" fg:x="3047" fg:w="186"/><text x="61.5702%" y="639.50">__x6..</text></g><g><title>schedule (162 samples, 3.26%)</title><rect x="61.8032%" y="613" width="3.2602%" height="15" fill="rgb(249,174,6)" fg:x="3071" fg:w="162"/><text x="62.0532%" y="623.50">sch..</text></g><g><title>__schedule (156 samples, 3.14%)</title><rect x="61.9239%" y="597" width="3.1395%" height="15" fill="rgb(235,213,41)" fg:x="3077" fg:w="156"/><text x="62.1739%" y="607.50">__s..</text></g><g><title>update_rq_clock (18 samples, 0.36%)</title><rect x="64.7011%" y="581" width="0.3622%" height="15" fill="rgb(213,118,6)" fg:x="3215" fg:w="18"/><text x="64.9511%" y="591.50"></text></g><g><title>sched_clock_cpu (16 samples, 0.32%)</title><rect x="64.7414%" y="565" width="0.3220%" height="15" fill="rgb(235,44,51)" fg:x="3217" fg:w="16"/><text x="64.9914%" y="575.50"></text></g><g><title>sched_clock (16 samples, 0.32%)</title><rect x="64.7414%" y="549" width="0.3220%" height="15" fill="rgb(217,9,53)" fg:x="3217" fg:w="16"/><text x="64.9914%" y="559.50"></text></g><g><title>native_sched_clock (16 samples, 0.32%)</title><rect x="64.7414%" y="533" width="0.3220%" height="15" fill="rgb(237,172,34)" fg:x="3217" fg:w="16"/><text x="64.9914%" y="543.50"></text></g><g><title>__sched_yield (221 samples, 4.45%)</title><rect x="60.6762%" y="677" width="4.4476%" height="15" fill="rgb(206,206,11)" fg:x="3015" fg:w="221"/><text x="60.9262%" y="687.50">__sch..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.06%)</title><rect x="65.0634%" y="661" width="0.0604%" height="15" fill="rgb(214,149,29)" fg:x="3233" fg:w="3"/><text x="65.3134%" y="671.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="65.1238%" y="677" width="0.0201%" height="15" fill="rgb(208,123,3)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="687.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="65.1238%" y="661" width="0.0201%" height="15" fill="rgb(229,126,4)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="671.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="65.1238%" y="645" width="0.0201%" height="15" fill="rgb(222,92,36)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="655.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="65.1238%" y="629" width="0.0201%" height="15" fill="rgb(216,39,41)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="639.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="65.1238%" y="613" width="0.0201%" height="15" fill="rgb(253,127,28)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="623.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="65.1238%" y="597" width="0.0201%" height="15" fill="rgb(249,152,51)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="607.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="65.1238%" y="581" width="0.0201%" height="15" fill="rgb(209,123,42)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="591.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="65.1238%" y="565" width="0.0201%" height="15" fill="rgb(241,118,22)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="575.50"></text></g><g><title>enqueue_entity (1 samples, 0.02%)</title><rect x="65.1238%" y="549" width="0.0201%" height="15" fill="rgb(208,25,7)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="559.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="65.1238%" y="533" width="0.0201%" height="15" fill="rgb(243,144,39)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="543.50"></text></g><g><title>dbs_update_util_handler (1 samples, 0.02%)</title><rect x="65.1238%" y="517" width="0.0201%" height="15" fill="rgb(250,50,5)" fg:x="3236" fg:w="1"/><text x="65.3738%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.08%)</title><rect x="65.1439%" y="677" width="0.0805%" height="15" fill="rgb(207,67,11)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.08%)</title><rect x="65.1439%" y="661" width="0.0805%" height="15" fill="rgb(245,204,40)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.08%)</title><rect x="65.1439%" y="645" width="0.0805%" height="15" fill="rgb(238,228,24)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (4 samples, 0.08%)</title><rect x="65.1439%" y="629" width="0.0805%" height="15" fill="rgb(217,116,22)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.08%)</title><rect x="65.1439%" y="613" width="0.0805%" height="15" fill="rgb(234,98,12)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.08%)</title><rect x="65.1439%" y="597" width="0.0805%" height="15" fill="rgb(242,170,50)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="607.50"></text></g><g><title>syscall (4 samples, 0.08%)</title><rect x="65.1439%" y="581" width="0.0805%" height="15" fill="rgb(235,7,5)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.08%)</title><rect x="65.1439%" y="565" width="0.0805%" height="15" fill="rgb(241,114,28)" fg:x="3237" fg:w="4"/><text x="65.3939%" y="575.50"></text></g><g><title>std::thread::yield_now (2 samples, 0.04%)</title><rect x="65.2244%" y="677" width="0.0402%" height="15" fill="rgb(246,112,42)" fg:x="3241" fg:w="2"/><text x="65.4744%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (2 samples, 0.04%)</title><rect x="65.2244%" y="661" width="0.0402%" height="15" fill="rgb(248,228,14)" fg:x="3241" fg:w="2"/><text x="65.4744%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (11 samples, 0.22%)</title><rect x="65.3451%" y="661" width="0.2214%" height="15" fill="rgb(208,133,18)" fg:x="3247" fg:w="11"/><text x="65.5951%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect x="65.3451%" y="645" width="0.2214%" height="15" fill="rgb(207,35,49)" fg:x="3247" fg:w="11"/><text x="65.5951%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.12%)</title><rect x="65.4458%" y="629" width="0.1207%" height="15" fill="rgb(205,68,36)" fg:x="3252" fg:w="6"/><text x="65.6958%" y="639.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="65.5464%" y="613" width="0.0201%" height="15" fill="rgb(245,62,40)" fg:x="3257" fg:w="1"/><text x="65.7964%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.24%)</title><rect x="65.5665%" y="661" width="0.2415%" height="15" fill="rgb(228,27,24)" fg:x="3258" fg:w="12"/><text x="65.8165%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.24%)</title><rect x="65.5665%" y="645" width="0.2415%" height="15" fill="rgb(253,19,12)" fg:x="3258" fg:w="12"/><text x="65.8165%" y="655.50"></text></g><g><title>__sched_yield (6 samples, 0.12%)</title><rect x="65.8281%" y="629" width="0.1207%" height="15" fill="rgb(232,28,20)" fg:x="3271" fg:w="6"/><text x="66.0781%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.12%)</title><rect x="65.8281%" y="613" width="0.1207%" height="15" fill="rgb(218,35,51)" fg:x="3271" fg:w="6"/><text x="66.0781%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31 samples, 0.62%)</title><rect x="66.1703%" y="613" width="0.6239%" height="15" fill="rgb(212,90,40)" fg:x="3288" fg:w="31"/><text x="66.4203%" y="623.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="66.7740%" y="597" width="0.0201%" height="15" fill="rgb(220,172,12)" fg:x="3318" fg:w="1"/><text x="67.0240%" y="607.50"></text></g><g><title>smp_irq_work_interrupt (1 samples, 0.02%)</title><rect x="66.7740%" y="581" width="0.0201%" height="15" fill="rgb(226,159,20)" fg:x="3318" fg:w="1"/><text x="67.0240%" y="591.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="66.7740%" y="565" width="0.0201%" height="15" fill="rgb(234,205,16)" fg:x="3318" fg:w="1"/><text x="67.0240%" y="575.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="66.7740%" y="549" width="0.0201%" height="15" fill="rgb(207,9,39)" fg:x="3318" fg:w="1"/><text x="67.0240%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (33 samples, 0.66%)</title><rect x="68.7664%" y="549" width="0.6641%" height="15" fill="rgb(249,143,15)" fg:x="3417" fg:w="33"/><text x="69.0164%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.66%)</title><rect x="68.7664%" y="533" width="0.6641%" height="15" fill="rgb(253,133,29)" fg:x="3417" fg:w="33"/><text x="69.0164%" y="543.50"></text></g><g><title>plist_add (2 samples, 0.04%)</title><rect x="71.4832%" y="421" width="0.0402%" height="15" fill="rgb(221,187,0)" fg:x="3552" fg:w="2"/><text x="71.7332%" y="431.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="71.8253%" y="373" width="0.0201%" height="15" fill="rgb(205,204,26)" fg:x="3569" fg:w="1"/><text x="72.0753%" y="383.50"></text></g><g><title>__const_udelay (9 samples, 0.18%)</title><rect x="72.0064%" y="325" width="0.1811%" height="15" fill="rgb(224,68,54)" fg:x="3578" fg:w="9"/><text x="72.2564%" y="335.50"></text></g><g><title>amd_pmu_addr_offset (1 samples, 0.02%)</title><rect x="72.1876%" y="325" width="0.0201%" height="15" fill="rgb(209,67,4)" fg:x="3587" fg:w="1"/><text x="72.4376%" y="335.50"></text></g><g><title>delay_mwaitx (82 samples, 1.65%)</title><rect x="72.2077%" y="325" width="1.6502%" height="15" fill="rgb(228,229,18)" fg:x="3588" fg:w="82"/><text x="72.4577%" y="335.50"></text></g><g><title>amd_pmu_wait_on_overflow (121 samples, 2.44%)</title><rect x="71.9461%" y="341" width="2.4351%" height="15" fill="rgb(231,89,13)" fg:x="3575" fg:w="121"/><text x="72.1961%" y="351.50">am..</text></g><g><title>native_read_msr (26 samples, 0.52%)</title><rect x="73.8579%" y="325" width="0.5232%" height="15" fill="rgb(210,182,18)" fg:x="3670" fg:w="26"/><text x="74.1079%" y="335.50"></text></g><g><title>amd_pmu_addr_offset (11 samples, 0.22%)</title><rect x="74.5220%" y="325" width="0.2214%" height="15" fill="rgb(240,105,2)" fg:x="3703" fg:w="11"/><text x="74.7720%" y="335.50"></text></g><g><title>native_read_msr (42 samples, 0.85%)</title><rect x="74.7434%" y="325" width="0.8452%" height="15" fill="rgb(207,170,50)" fg:x="3714" fg:w="42"/><text x="74.9934%" y="335.50"></text></g><g><title>amd_pmu_disable_all (248 samples, 4.99%)</title><rect x="71.8656%" y="357" width="4.9909%" height="15" fill="rgb(232,133,24)" fg:x="3571" fg:w="248"/><text x="72.1156%" y="367.50">amd_pm..</text></g><g><title>x86_pmu_disable_all (123 samples, 2.48%)</title><rect x="74.3812%" y="341" width="2.4753%" height="15" fill="rgb(235,166,27)" fg:x="3696" fg:w="123"/><text x="74.6312%" y="351.50">x8..</text></g><g><title>native_write_msr (63 samples, 1.27%)</title><rect x="75.5886%" y="325" width="1.2679%" height="15" fill="rgb(209,19,13)" fg:x="3756" fg:w="63"/><text x="75.8386%" y="335.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.06%)</title><rect x="76.8565%" y="357" width="0.0604%" height="15" fill="rgb(226,79,39)" fg:x="3819" fg:w="3"/><text x="77.1065%" y="367.50"></text></g><g><title>sched_clock (3 samples, 0.06%)</title><rect x="76.8565%" y="341" width="0.0604%" height="15" fill="rgb(222,163,10)" fg:x="3819" fg:w="3"/><text x="77.1065%" y="351.50"></text></g><g><title>native_sched_clock (3 samples, 0.06%)</title><rect x="76.8565%" y="325" width="0.0604%" height="15" fill="rgb(214,44,19)" fg:x="3819" fg:w="3"/><text x="77.1065%" y="335.50"></text></g><g><title>ctx_sched_out (254 samples, 5.11%)</title><rect x="71.8454%" y="373" width="5.1117%" height="15" fill="rgb(210,217,13)" fg:x="3570" fg:w="254"/><text x="72.0954%" y="383.50">ctx_sc..</text></g><g><title>x86_pmu_disable (2 samples, 0.04%)</title><rect x="76.9169%" y="357" width="0.0402%" height="15" fill="rgb(237,61,54)" fg:x="3822" fg:w="2"/><text x="77.1669%" y="367.50"></text></g><g><title>__perf_event_task_sched_out (261 samples, 5.25%)</title><rect x="71.7247%" y="389" width="5.2526%" height="15" fill="rgb(226,184,24)" fg:x="3564" fg:w="261"/><text x="71.9747%" y="399.50">__perf..</text></g><g><title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="76.9571%" y="373" width="0.0201%" height="15" fill="rgb(223,226,4)" fg:x="3824" fg:w="1"/><text x="77.2071%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="76.9773%" y="389" width="0.0201%" height="15" fill="rgb(210,26,41)" fg:x="3825" fg:w="1"/><text x="77.2273%" y="399.50"></text></g><g><title>account_entity_dequeue (4 samples, 0.08%)</title><rect x="77.1383%" y="357" width="0.0805%" height="15" fill="rgb(220,221,6)" fg:x="3833" fg:w="4"/><text x="77.3883%" y="367.50"></text></g><g><title>reweight_entity (3 samples, 0.06%)</title><rect x="77.2188%" y="357" width="0.0604%" height="15" fill="rgb(225,89,49)" fg:x="3837" fg:w="3"/><text x="77.4688%" y="367.50"></text></g><g><title>update_cfs_group (4 samples, 0.08%)</title><rect x="77.2791%" y="357" width="0.0805%" height="15" fill="rgb(218,70,45)" fg:x="3840" fg:w="4"/><text x="77.5291%" y="367.50"></text></g><g><title>__calc_delta (3 samples, 0.06%)</title><rect x="77.5206%" y="341" width="0.0604%" height="15" fill="rgb(238,166,21)" fg:x="3852" fg:w="3"/><text x="77.7706%" y="351.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="77.5810%" y="341" width="0.0201%" height="15" fill="rgb(224,141,44)" fg:x="3855" fg:w="1"/><text x="77.8310%" y="351.50"></text></g><g><title>cpuacct_charge (2 samples, 0.04%)</title><rect x="77.6011%" y="341" width="0.0402%" height="15" fill="rgb(230,12,49)" fg:x="3856" fg:w="2"/><text x="77.8511%" y="351.50"></text></g><g><title>update_curr (15 samples, 0.30%)</title><rect x="77.3596%" y="357" width="0.3019%" height="15" fill="rgb(212,174,12)" fg:x="3844" fg:w="15"/><text x="77.6096%" y="367.50"></text></g><g><title>update_min_vruntime (1 samples, 0.02%)</title><rect x="77.6414%" y="341" width="0.0201%" height="15" fill="rgb(246,67,9)" fg:x="3858" fg:w="1"/><text x="77.8914%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.04%)</title><rect x="77.7822%" y="341" width="0.0402%" height="15" fill="rgb(239,35,23)" fg:x="3865" fg:w="2"/><text x="78.0322%" y="351.50"></text></g><g><title>dequeue_entity (41 samples, 0.83%)</title><rect x="77.0578%" y="373" width="0.8251%" height="15" fill="rgb(211,167,0)" fg:x="3829" fg:w="41"/><text x="77.3078%" y="383.50"></text></g><g><title>update_load_avg (11 samples, 0.22%)</title><rect x="77.6615%" y="357" width="0.2214%" height="15" fill="rgb(225,119,45)" fg:x="3859" fg:w="11"/><text x="77.9115%" y="367.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.06%)</title><rect x="77.8225%" y="341" width="0.0604%" height="15" fill="rgb(210,162,6)" fg:x="3867" fg:w="3"/><text x="78.0725%" y="351.50"></text></g><g><title>dequeue_task_fair (45 samples, 0.91%)</title><rect x="76.9974%" y="389" width="0.9056%" height="15" fill="rgb(208,118,35)" fg:x="3826" fg:w="45"/><text x="77.2474%" y="399.50"></text></g><g><title>update_min_vruntime (1 samples, 0.02%)</title><rect x="77.8829%" y="373" width="0.0201%" height="15" fill="rgb(239,4,53)" fg:x="3870" fg:w="1"/><text x="78.1329%" y="383.50"></text></g><g><title>apic_timer_interrupt (6 samples, 0.12%)</title><rect x="77.9030%" y="373" width="0.1207%" height="15" fill="rgb(213,130,21)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="383.50"></text></g><g><title>smp_apic_timer_interrupt (6 samples, 0.12%)</title><rect x="77.9030%" y="357" width="0.1207%" height="15" fill="rgb(235,148,0)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="367.50"></text></g><g><title>hrtimer_interrupt (6 samples, 0.12%)</title><rect x="77.9030%" y="341" width="0.1207%" height="15" fill="rgb(244,224,18)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="351.50"></text></g><g><title>__hrtimer_run_queues (6 samples, 0.12%)</title><rect x="77.9030%" y="325" width="0.1207%" height="15" fill="rgb(211,214,4)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="335.50"></text></g><g><title>timerfd_tmrproc (6 samples, 0.12%)</title><rect x="77.9030%" y="309" width="0.1207%" height="15" fill="rgb(206,119,25)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="319.50"></text></g><g><title>timerfd_triggered (6 samples, 0.12%)</title><rect x="77.9030%" y="293" width="0.1207%" height="15" fill="rgb(243,93,47)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="303.50"></text></g><g><title>__wake_up_common (6 samples, 0.12%)</title><rect x="77.9030%" y="277" width="0.1207%" height="15" fill="rgb(224,194,6)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="287.50"></text></g><g><title>ep_poll_callback (6 samples, 0.12%)</title><rect x="77.9030%" y="261" width="0.1207%" height="15" fill="rgb(243,229,6)" fg:x="3871" fg:w="6"/><text x="78.1530%" y="271.50"></text></g><g><title>finish_task_switch (12 samples, 0.24%)</title><rect x="77.9030%" y="389" width="0.2415%" height="15" fill="rgb(207,23,50)" fg:x="3871" fg:w="12"/><text x="78.1530%" y="399.50"></text></g><g><title>irq_work_interrupt (6 samples, 0.12%)</title><rect x="78.0237%" y="373" width="0.1207%" height="15" fill="rgb(253,192,32)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="383.50"></text></g><g><title>smp_irq_work_interrupt (6 samples, 0.12%)</title><rect x="78.0237%" y="357" width="0.1207%" height="15" fill="rgb(213,21,6)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="367.50"></text></g><g><title>irq_work_run (6 samples, 0.12%)</title><rect x="78.0237%" y="341" width="0.1207%" height="15" fill="rgb(243,151,13)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="351.50"></text></g><g><title>irq_work_run_list (6 samples, 0.12%)</title><rect x="78.0237%" y="325" width="0.1207%" height="15" fill="rgb(233,165,41)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="335.50"></text></g><g><title>queue_work_on (6 samples, 0.12%)</title><rect x="78.0237%" y="309" width="0.1207%" height="15" fill="rgb(246,176,45)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="319.50"></text></g><g><title>__queue_work (6 samples, 0.12%)</title><rect x="78.0237%" y="293" width="0.1207%" height="15" fill="rgb(217,170,52)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="303.50"></text></g><g><title>insert_work (6 samples, 0.12%)</title><rect x="78.0237%" y="277" width="0.1207%" height="15" fill="rgb(214,203,54)" fg:x="3877" fg:w="6"/><text x="78.2737%" y="287.50"></text></g><g><title>pick_next_task_fair (10 samples, 0.20%)</title><rect x="78.1445%" y="389" width="0.2012%" height="15" fill="rgb(248,215,49)" fg:x="3883" fg:w="10"/><text x="78.3945%" y="399.50"></text></g><g><title>load_balance (1 samples, 0.02%)</title><rect x="78.3256%" y="373" width="0.0201%" height="15" fill="rgb(208,46,10)" fg:x="3892" fg:w="1"/><text x="78.5756%" y="383.50"></text></g><g><title>cpumask_next_and (1 samples, 0.02%)</title><rect x="78.3256%" y="357" width="0.0201%" height="15" fill="rgb(254,5,31)" fg:x="3892" fg:w="1"/><text x="78.5756%" y="367.50"></text></g><g><title>find_next_and_bit (1 samples, 0.02%)</title><rect x="78.3256%" y="341" width="0.0201%" height="15" fill="rgb(222,104,33)" fg:x="3892" fg:w="1"/><text x="78.5756%" y="351.50"></text></g><g><title>__update_idle_core (6 samples, 0.12%)</title><rect x="78.3457%" y="373" width="0.1207%" height="15" fill="rgb(248,49,16)" fg:x="3893" fg:w="6"/><text x="78.5957%" y="383.50"></text></g><g><title>pick_next_task_idle (9 samples, 0.18%)</title><rect x="78.3457%" y="389" width="0.1811%" height="15" fill="rgb(232,198,41)" fg:x="3893" fg:w="9"/><text x="78.5957%" y="399.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.06%)</title><rect x="78.4665%" y="373" width="0.0604%" height="15" fill="rgb(214,125,3)" fg:x="3899" fg:w="3"/><text x="78.7165%" y="383.50"></text></g><g><title>put_prev_entity (3 samples, 0.06%)</title><rect x="78.4665%" y="357" width="0.0604%" height="15" fill="rgb(229,220,28)" fg:x="3899" fg:w="3"/><text x="78.7165%" y="367.50"></text></g><g><title>futex_wait_queue_me (355 samples, 7.14%)</title><rect x="71.4832%" y="437" width="7.1443%" height="15" fill="rgb(222,64,37)" fg:x="3552" fg:w="355"/><text x="71.7332%" y="447.50">futex_wait..</text></g><g><title>schedule (353 samples, 7.10%)</title><rect x="71.5234%" y="421" width="7.1040%" height="15" fill="rgb(249,184,13)" fg:x="3554" fg:w="353"/><text x="71.7734%" y="431.50">schedule</text></g><g><title>__schedule (352 samples, 7.08%)</title><rect x="71.5436%" y="405" width="7.0839%" height="15" fill="rgb(252,176,6)" fg:x="3555" fg:w="352"/><text x="71.7936%" y="415.50">__schedule</text></g><g><title>update_rq_clock (5 samples, 0.10%)</title><rect x="78.5269%" y="389" width="0.1006%" height="15" fill="rgb(228,153,7)" fg:x="3902" fg:w="5"/><text x="78.7769%" y="399.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.10%)</title><rect x="78.5269%" y="373" width="0.1006%" height="15" fill="rgb(242,193,5)" fg:x="3902" fg:w="5"/><text x="78.7769%" y="383.50"></text></g><g><title>sched_clock (5 samples, 0.10%)</title><rect x="78.5269%" y="357" width="0.1006%" height="15" fill="rgb(232,140,9)" fg:x="3902" fg:w="5"/><text x="78.7769%" y="367.50"></text></g><g><title>native_sched_clock (5 samples, 0.10%)</title><rect x="78.5269%" y="341" width="0.1006%" height="15" fill="rgb(213,222,16)" fg:x="3902" fg:w="5"/><text x="78.7769%" y="351.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="79.0501%" y="421" width="0.0402%" height="15" fill="rgb(222,75,50)" fg:x="3928" fg:w="2"/><text x="79.3001%" y="431.50"></text></g><g><title>get_futex_key (8 samples, 0.16%)</title><rect x="79.0904%" y="421" width="0.1610%" height="15" fill="rgb(205,180,2)" fg:x="3930" fg:w="8"/><text x="79.3404%" y="431.50"></text></g><g><title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="79.2514%" y="421" width="0.0604%" height="15" fill="rgb(216,34,7)" fg:x="3938" fg:w="3"/><text x="79.5014%" y="431.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (624 samples, 12.56%)</title><rect x="66.7941%" y="565" width="12.5579%" height="15" fill="rgb(253,16,32)" fg:x="3319" fg:w="624"/><text x="67.0441%" y="575.50">&lt;parking_lot_core::..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (493 samples, 9.92%)</title><rect x="69.4305%" y="549" width="9.9215%" height="15" fill="rgb(208,97,28)" fg:x="3450" fg:w="493"/><text x="69.6805%" y="559.50">parking_lot_co..</text></g><g><title>syscall (493 samples, 9.92%)</title><rect x="69.4305%" y="533" width="9.9215%" height="15" fill="rgb(225,92,11)" fg:x="3450" fg:w="493"/><text x="69.6805%" y="543.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (426 samples, 8.57%)</title><rect x="70.7788%" y="517" width="8.5732%" height="15" fill="rgb(243,38,12)" fg:x="3517" fg:w="426"/><text x="71.0288%" y="527.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (420 samples, 8.45%)</title><rect x="70.8996%" y="501" width="8.4524%" height="15" fill="rgb(208,139,16)" fg:x="3523" fg:w="420"/><text x="71.1496%" y="511.50">do_syscall_64</text></g><g><title>__x64_sys_futex (400 samples, 8.05%)</title><rect x="71.3021%" y="485" width="8.0499%" height="15" fill="rgb(227,24,9)" fg:x="3543" fg:w="400"/><text x="71.5521%" y="495.50">__x64_sys_f..</text></g><g><title>do_futex (397 samples, 7.99%)</title><rect x="71.3624%" y="469" width="7.9895%" height="15" fill="rgb(206,62,11)" fg:x="3546" fg:w="397"/><text x="71.6124%" y="479.50">do_futex</text></g><g><title>futex_wait (397 samples, 7.99%)</title><rect x="71.3624%" y="453" width="7.9895%" height="15" fill="rgb(228,134,27)" fg:x="3546" fg:w="397"/><text x="71.6124%" y="463.50">futex_wait</text></g><g><title>futex_wait_setup (36 samples, 0.72%)</title><rect x="78.6275%" y="437" width="0.7245%" height="15" fill="rgb(205,55,33)" fg:x="3907" fg:w="36"/><text x="78.8775%" y="447.50"></text></g><g><title>hash_futex (2 samples, 0.04%)</title><rect x="79.3117%" y="421" width="0.0402%" height="15" fill="rgb(243,75,43)" fg:x="3941" fg:w="2"/><text x="79.5617%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="79.3520%" y="565" width="0.0201%" height="15" fill="rgb(223,27,42)" fg:x="3943" fg:w="1"/><text x="79.6020%" y="575.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (1 samples, 0.02%)</title><rect x="79.3520%" y="549" width="0.0201%" height="15" fill="rgb(232,189,33)" fg:x="3943" fg:w="1"/><text x="79.6020%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="79.3520%" y="533" width="0.0201%" height="15" fill="rgb(210,9,39)" fg:x="3943" fg:w="1"/><text x="79.6020%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.02%)</title><rect x="79.3721%" y="549" width="0.0201%" height="15" fill="rgb(242,85,26)" fg:x="3944" fg:w="1"/><text x="79.6221%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (12 samples, 0.24%)</title><rect x="79.3721%" y="565" width="0.2415%" height="15" fill="rgb(248,44,4)" fg:x="3944" fg:w="12"/><text x="79.6221%" y="575.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (11 samples, 0.22%)</title><rect x="79.3922%" y="549" width="0.2214%" height="15" fill="rgb(250,96,46)" fg:x="3945" fg:w="11"/><text x="79.6422%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (640 samples, 12.88%)</title><rect x="66.7941%" y="581" width="12.8799%" height="15" fill="rgb(229,116,26)" fg:x="3319" fg:w="640"/><text x="67.0441%" y="591.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (3 samples, 0.06%)</title><rect x="79.6136%" y="565" width="0.0604%" height="15" fill="rgb(246,94,34)" fg:x="3956" fg:w="3"/><text x="79.8636%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.06%)</title><rect x="79.6136%" y="549" width="0.0604%" height="15" fill="rgb(251,73,21)" fg:x="3956" fg:w="3"/><text x="79.8636%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="79.6136%" y="533" width="0.0604%" height="15" fill="rgb(254,121,25)" fg:x="3956" fg:w="3"/><text x="79.8636%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (691 samples, 13.91%)</title><rect x="65.8080%" y="661" width="13.9062%" height="15" fill="rgb(215,161,49)" fg:x="3270" fg:w="691"/><text x="66.0580%" y="671.50">tokio::loom::std::par..</text></g><g><title>parking_lot::condvar::Condvar::wait (691 samples, 13.91%)</title><rect x="65.8080%" y="645" width="13.9062%" height="15" fill="rgb(221,43,13)" fg:x="3270" fg:w="691"/><text x="66.0580%" y="655.50">parking_lot::condvar:..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (684 samples, 13.77%)</title><rect x="65.9489%" y="629" width="13.7653%" height="15" fill="rgb(249,5,37)" fg:x="3277" fg:w="684"/><text x="66.1989%" y="639.50">parking_lot::condvar:..</text></g><g><title>parking_lot_core::parking_lot::park (642 samples, 12.92%)</title><rect x="66.7941%" y="613" width="12.9201%" height="15" fill="rgb(226,25,44)" fg:x="3319" fg:w="642"/><text x="67.0441%" y="623.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (642 samples, 12.92%)</title><rect x="66.7941%" y="597" width="12.9201%" height="15" fill="rgb(238,189,16)" fg:x="3319" fg:w="642"/><text x="67.0441%" y="607.50">parking_lot_core::p..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="79.6740%" y="581" width="0.0402%" height="15" fill="rgb(251,186,8)" fg:x="3959" fg:w="2"/><text x="79.9240%" y="591.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (720 samples, 14.49%)</title><rect x="65.2646%" y="677" width="14.4898%" height="15" fill="rgb(254,34,31)" fg:x="3243" fg:w="720"/><text x="65.5146%" y="687.50">tokio::runtime::park::..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="79.7142%" y="661" width="0.0402%" height="15" fill="rgb(225,215,27)" fg:x="3961" fg:w="2"/><text x="79.9642%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="79.7142%" y="645" width="0.0402%" height="15" fill="rgb(221,192,48)" fg:x="3961" fg:w="2"/><text x="79.9642%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="79.7142%" y="629" width="0.0402%" height="15" fill="rgb(219,137,20)" fg:x="3961" fg:w="2"/><text x="79.9642%" y="639.50"></text></g><g><title>mio::event::events::Events::iter (1 samples, 0.02%)</title><rect x="79.9960%" y="517" width="0.0201%" height="15" fill="rgb(219,84,11)" fg:x="3975" fg:w="1"/><text x="80.2460%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="80.0161%" y="485" width="0.0201%" height="15" fill="rgb(224,10,23)" fg:x="3976" fg:w="1"/><text x="80.2661%" y="495.50"></text></g><g><title>[libc-2.28.so] (1 samples, 0.02%)</title><rect x="80.1368%" y="469" width="0.0201%" height="15" fill="rgb(248,22,39)" fg:x="3982" fg:w="1"/><text x="80.3868%" y="479.50"></text></g><g><title>__fget_light (5 samples, 0.10%)</title><rect x="80.1972%" y="405" width="0.1006%" height="15" fill="rgb(212,154,20)" fg:x="3985" fg:w="5"/><text x="80.4472%" y="415.50"></text></g><g><title>__fget (5 samples, 0.10%)</title><rect x="80.1972%" y="389" width="0.1006%" height="15" fill="rgb(236,199,50)" fg:x="3985" fg:w="5"/><text x="80.4472%" y="399.50"></text></g><g><title>__pm_relax (5 samples, 0.10%)</title><rect x="80.4790%" y="373" width="0.1006%" height="15" fill="rgb(211,9,17)" fg:x="3999" fg:w="5"/><text x="80.7290%" y="383.50"></text></g><g><title>_raw_spin_lock_irq (3 samples, 0.06%)</title><rect x="80.5796%" y="373" width="0.0604%" height="15" fill="rgb(243,216,36)" fg:x="4004" fg:w="3"/><text x="80.8296%" y="383.50"></text></g><g><title>eventfd_poll (2 samples, 0.04%)</title><rect x="82.0890%" y="341" width="0.0402%" height="15" fill="rgb(250,2,10)" fg:x="4079" fg:w="2"/><text x="82.3390%" y="351.50"></text></g><g><title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="83.0549%" y="309" width="0.0201%" height="15" fill="rgb(226,50,48)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="319.50"></text></g><g><title>smp_irq_work_interrupt (1 samples, 0.02%)</title><rect x="83.0549%" y="293" width="0.0201%" height="15" fill="rgb(243,81,16)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="303.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="83.0549%" y="277" width="0.0201%" height="15" fill="rgb(250,14,2)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="287.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="83.0549%" y="261" width="0.0201%" height="15" fill="rgb(233,135,29)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="271.50"></text></g><g><title>perf_pending_event (1 samples, 0.02%)</title><rect x="83.0549%" y="245" width="0.0201%" height="15" fill="rgb(224,64,43)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="255.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="83.0549%" y="229" width="0.0201%" height="15" fill="rgb(238,84,13)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="239.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="83.0549%" y="213" width="0.0201%" height="15" fill="rgb(253,48,26)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="223.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="83.0549%" y="197" width="0.0201%" height="15" fill="rgb(205,223,31)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="207.50"></text></g><g><title>pollwake (1 samples, 0.02%)</title><rect x="83.0549%" y="181" width="0.0201%" height="15" fill="rgb(221,41,32)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="191.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="83.0549%" y="165" width="0.0201%" height="15" fill="rgb(213,158,31)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="175.50"></text></g><g><title>llist_add_batch (1 samples, 0.02%)</title><rect x="83.0549%" y="149" width="0.0201%" height="15" fill="rgb(245,126,43)" fg:x="4127" fg:w="1"/><text x="83.3049%" y="159.50"></text></g><g><title>ep_scan_ready_list.constprop.22 (144 samples, 2.90%)</title><rect x="80.3381%" y="389" width="2.8980%" height="15" fill="rgb(227,7,22)" fg:x="3992" fg:w="144"/><text x="80.5881%" y="399.50">ep..</text></g><g><title>ep_send_events_proc (129 samples, 2.60%)</title><rect x="80.6400%" y="373" width="2.5961%" height="15" fill="rgb(252,90,44)" fg:x="4007" fg:w="129"/><text x="80.8900%" y="383.50">ep..</text></g><g><title>ep_item_poll.isra.18 (113 samples, 2.27%)</title><rect x="80.9620%" y="357" width="2.2741%" height="15" fill="rgb(253,91,0)" fg:x="4023" fg:w="113"/><text x="81.2120%" y="367.50">e..</text></g><g><title>sock_poll (55 samples, 1.11%)</title><rect x="82.1292%" y="341" width="1.1069%" height="15" fill="rgb(252,175,49)" fg:x="4081" fg:w="55"/><text x="82.3792%" y="351.50"></text></g><g><title>tcp_poll (24 samples, 0.48%)</title><rect x="82.7531%" y="325" width="0.4830%" height="15" fill="rgb(246,150,1)" fg:x="4112" fg:w="24"/><text x="83.0031%" y="335.50"></text></g><g><title>tcp_stream_memory_free (8 samples, 0.16%)</title><rect x="83.0751%" y="309" width="0.1610%" height="15" fill="rgb(241,192,25)" fg:x="4128" fg:w="8"/><text x="83.3251%" y="319.50"></text></g><g><title>__const_udelay (7 samples, 0.14%)</title><rect x="83.4574%" y="277" width="0.1409%" height="15" fill="rgb(239,187,11)" fg:x="4147" fg:w="7"/><text x="83.7074%" y="287.50"></text></g><g><title>delay_mwaitx (31 samples, 0.62%)</title><rect x="83.5983%" y="277" width="0.6239%" height="15" fill="rgb(218,202,51)" fg:x="4154" fg:w="31"/><text x="83.8483%" y="287.50"></text></g><g><title>amd_pmu_wait_on_overflow (42 samples, 0.85%)</title><rect x="83.4574%" y="293" width="0.8452%" height="15" fill="rgb(225,176,8)" fg:x="4147" fg:w="42"/><text x="83.7074%" y="303.50"></text></g><g><title>native_read_msr (4 samples, 0.08%)</title><rect x="84.2222%" y="277" width="0.0805%" height="15" fill="rgb(219,122,41)" fg:x="4185" fg:w="4"/><text x="84.4722%" y="287.50"></text></g><g><title>amd_pmu_addr_offset (1 samples, 0.02%)</title><rect x="84.3631%" y="277" width="0.0201%" height="15" fill="rgb(248,140,20)" fg:x="4192" fg:w="1"/><text x="84.6131%" y="287.50"></text></g><g><title>native_read_msr (15 samples, 0.30%)</title><rect x="84.3832%" y="277" width="0.3019%" height="15" fill="rgb(245,41,37)" fg:x="4193" fg:w="15"/><text x="84.6332%" y="287.50"></text></g><g><title>amd_pmu_disable_all (93 samples, 1.87%)</title><rect x="83.3769%" y="309" width="1.8716%" height="15" fill="rgb(235,82,39)" fg:x="4143" fg:w="93"/><text x="83.6269%" y="319.50">a..</text></g><g><title>x86_pmu_disable_all (47 samples, 0.95%)</title><rect x="84.3027%" y="293" width="0.9459%" height="15" fill="rgb(230,108,42)" fg:x="4189" fg:w="47"/><text x="84.5527%" y="303.50"></text></g><g><title>native_write_msr (28 samples, 0.56%)</title><rect x="84.6850%" y="277" width="0.5635%" height="15" fill="rgb(215,150,50)" fg:x="4208" fg:w="28"/><text x="84.9350%" y="287.50"></text></g><g><title>ctx_sched_out (96 samples, 1.93%)</title><rect x="83.3568%" y="325" width="1.9320%" height="15" fill="rgb(233,212,5)" fg:x="4142" fg:w="96"/><text x="83.6068%" y="335.50">c..</text></g><g><title>x86_pmu_disable (2 samples, 0.04%)</title><rect x="85.2485%" y="309" width="0.0402%" height="15" fill="rgb(245,80,22)" fg:x="4236" fg:w="2"/><text x="85.4985%" y="319.50"></text></g><g><title>__perf_event_task_sched_out (100 samples, 2.01%)</title><rect x="83.2964%" y="341" width="2.0125%" height="15" fill="rgb(238,129,16)" fg:x="4139" fg:w="100"/><text x="83.5464%" y="351.50">_..</text></g><g><title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="85.2888%" y="325" width="0.0201%" height="15" fill="rgb(240,19,0)" fg:x="4238" fg:w="1"/><text x="85.5388%" y="335.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="85.3089%" y="341" width="0.0604%" height="15" fill="rgb(232,42,35)" fg:x="4239" fg:w="3"/><text x="85.5589%" y="351.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.02%)</title><rect x="85.4297%" y="309" width="0.0201%" height="15" fill="rgb(223,130,24)" fg:x="4245" fg:w="1"/><text x="85.6797%" y="319.50"></text></g><g><title>reweight_entity (1 samples, 0.02%)</title><rect x="85.4498%" y="309" width="0.0201%" height="15" fill="rgb(237,16,22)" fg:x="4246" fg:w="1"/><text x="85.6998%" y="319.50"></text></g><g><title>update_cfs_group (3 samples, 0.06%)</title><rect x="85.4699%" y="309" width="0.0604%" height="15" fill="rgb(248,192,20)" fg:x="4247" fg:w="3"/><text x="85.7199%" y="319.50"></text></g><g><title>update_curr (2 samples, 0.04%)</title><rect x="85.5303%" y="309" width="0.0402%" height="15" fill="rgb(233,167,2)" fg:x="4250" fg:w="2"/><text x="85.7803%" y="319.50"></text></g><g><title>update_min_vruntime (1 samples, 0.02%)</title><rect x="85.5504%" y="293" width="0.0201%" height="15" fill="rgb(252,71,44)" fg:x="4251" fg:w="1"/><text x="85.8004%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="85.6510%" y="293" width="0.0201%" height="15" fill="rgb(238,37,47)" fg:x="4256" fg:w="1"/><text x="85.9010%" y="303.50"></text></g><g><title>dequeue_task_fair (16 samples, 0.32%)</title><rect x="85.3693%" y="341" width="0.3220%" height="15" fill="rgb(214,202,54)" fg:x="4242" fg:w="16"/><text x="85.6193%" y="351.50"></text></g><g><title>dequeue_entity (14 samples, 0.28%)</title><rect x="85.4095%" y="325" width="0.2817%" height="15" fill="rgb(254,165,40)" fg:x="4244" fg:w="14"/><text x="85.6595%" y="335.50"></text></g><g><title>update_load_avg (6 samples, 0.12%)</title><rect x="85.5705%" y="309" width="0.1207%" height="15" fill="rgb(246,173,38)" fg:x="4252" fg:w="6"/><text x="85.8205%" y="319.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="85.6712%" y="293" width="0.0201%" height="15" fill="rgb(215,3,27)" fg:x="4257" fg:w="1"/><text x="85.9212%" y="303.50"></text></g><g><title>finish_task_switch (7 samples, 0.14%)</title><rect x="85.6913%" y="341" width="0.1409%" height="15" fill="rgb(239,169,51)" fg:x="4258" fg:w="7"/><text x="85.9413%" y="351.50"></text></g><g><title>apic_timer_interrupt (7 samples, 0.14%)</title><rect x="85.6913%" y="325" width="0.1409%" height="15" fill="rgb(212,5,25)" fg:x="4258" fg:w="7"/><text x="85.9413%" y="335.50"></text></g><g><title>smp_apic_timer_interrupt (7 samples, 0.14%)</title><rect x="85.6913%" y="309" width="0.1409%" height="15" fill="rgb(243,45,17)" fg:x="4258" fg:w="7"/><text x="85.9413%" y="319.50"></text></g><g><title>hrtimer_interrupt (7 samples, 0.14%)</title><rect x="85.6913%" y="293" width="0.1409%" height="15" fill="rgb(242,97,9)" fg:x="4258" fg:w="7"/><text x="85.9413%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="85.8120%" y="277" width="0.0201%" height="15" fill="rgb(228,71,31)" fg:x="4264" fg:w="1"/><text x="86.0620%" y="287.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="85.8120%" y="261" width="0.0201%" height="15" fill="rgb(252,184,16)" fg:x="4264" fg:w="1"/><text x="86.0620%" y="271.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="85.8120%" y="245" width="0.0201%" height="15" fill="rgb(236,169,46)" fg:x="4264" fg:w="1"/><text x="86.0620%" y="255.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="85.8120%" y="229" width="0.0201%" height="15" fill="rgb(207,17,47)" fg:x="4264" fg:w="1"/><text x="86.0620%" y="239.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="85.8120%" y="213" width="0.0201%" height="15" fill="rgb(206,201,28)" fg:x="4264" fg:w="1"/><text x="86.0620%" y="223.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.06%)</title><rect x="85.8322%" y="341" width="0.0604%" height="15" fill="rgb(224,184,23)" fg:x="4265" fg:w="3"/><text x="86.0822%" y="351.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.04%)</title><rect x="85.8925%" y="341" width="0.0402%" height="15" fill="rgb(208,139,48)" fg:x="4268" fg:w="2"/><text x="86.1425%" y="351.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.04%)</title><rect x="85.8925%" y="325" width="0.0402%" height="15" fill="rgb(208,130,10)" fg:x="4268" fg:w="2"/><text x="86.1425%" y="335.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="85.9328%" y="341" width="0.0201%" height="15" fill="rgb(211,213,45)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="351.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="85.9328%" y="325" width="0.0201%" height="15" fill="rgb(235,100,30)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="335.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="85.9328%" y="309" width="0.0201%" height="15" fill="rgb(206,144,31)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="319.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="85.9328%" y="293" width="0.0201%" height="15" fill="rgb(224,200,26)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="303.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="85.9328%" y="277" width="0.0201%" height="15" fill="rgb(247,104,53)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="287.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.9328%" y="261" width="0.0201%" height="15" fill="rgb(220,14,17)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="85.9328%" y="245" width="0.0201%" height="15" fill="rgb(230,140,40)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="255.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="85.9328%" y="229" width="0.0201%" height="15" fill="rgb(229,2,41)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="239.50"></text></g><g><title>xhci_update_erst_dequeue (1 samples, 0.02%)</title><rect x="85.9328%" y="213" width="0.0201%" height="15" fill="rgb(232,89,16)" fg:x="4270" fg:w="1"/><text x="86.1828%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (290 samples, 5.84%)</title><rect x="80.1570%" y="469" width="5.8362%" height="15" fill="rgb(247,59,52)" fg:x="3983" fg:w="290"/><text x="80.4070%" y="479.50">entry_S..</text></g><g><title>do_syscall_64 (289 samples, 5.82%)</title><rect x="80.1771%" y="453" width="5.8161%" height="15" fill="rgb(226,110,21)" fg:x="3984" fg:w="289"/><text x="80.4271%" y="463.50">do_sysc..</text></g><g><title>__x64_sys_epoll_wait (289 samples, 5.82%)</title><rect x="80.1771%" y="437" width="5.8161%" height="15" fill="rgb(224,176,43)" fg:x="3984" fg:w="289"/><text x="80.4271%" y="447.50">__x64_s..</text></g><g><title>do_epoll_wait (289 samples, 5.82%)</title><rect x="80.1771%" y="421" width="5.8161%" height="15" fill="rgb(221,73,6)" fg:x="3984" fg:w="289"/><text x="80.4271%" y="431.50">do_epol..</text></g><g><title>ep_poll (283 samples, 5.70%)</title><rect x="80.2978%" y="405" width="5.6953%" height="15" fill="rgb(232,78,19)" fg:x="3990" fg:w="283"/><text x="80.5478%" y="415.50">ep_poll</text></g><g><title>schedule_hrtimeout_range_clock (137 samples, 2.76%)</title><rect x="83.2361%" y="389" width="2.7571%" height="15" fill="rgb(233,112,48)" fg:x="4136" fg:w="137"/><text x="83.4861%" y="399.50">sc..</text></g><g><title>schedule (137 samples, 2.76%)</title><rect x="83.2361%" y="373" width="2.7571%" height="15" fill="rgb(243,131,47)" fg:x="4136" fg:w="137"/><text x="83.4861%" y="383.50">sc..</text></g><g><title>__schedule (137 samples, 2.76%)</title><rect x="83.2361%" y="357" width="2.7571%" height="15" fill="rgb(226,51,1)" fg:x="4136" fg:w="137"/><text x="83.4861%" y="367.50">__..</text></g><g><title>update_rq_clock (2 samples, 0.04%)</title><rect x="85.9529%" y="341" width="0.0402%" height="15" fill="rgb(247,58,7)" fg:x="4271" fg:w="2"/><text x="86.2029%" y="351.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="85.9529%" y="325" width="0.0402%" height="15" fill="rgb(209,7,32)" fg:x="4271" fg:w="2"/><text x="86.2029%" y="335.50"></text></g><g><title>sched_clock (2 samples, 0.04%)</title><rect x="85.9529%" y="309" width="0.0402%" height="15" fill="rgb(209,39,41)" fg:x="4271" fg:w="2"/><text x="86.2029%" y="319.50"></text></g><g><title>native_sched_clock (2 samples, 0.04%)</title><rect x="85.9529%" y="293" width="0.0402%" height="15" fill="rgb(226,182,46)" fg:x="4271" fg:w="2"/><text x="86.2029%" y="303.50"></text></g><g><title>mio::poll::Poll::poll (298 samples, 6.00%)</title><rect x="80.0161%" y="517" width="5.9972%" height="15" fill="rgb(230,219,10)" fg:x="3976" fg:w="298"/><text x="80.2661%" y="527.50">mio::pol..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (298 samples, 6.00%)</title><rect x="80.0161%" y="501" width="5.9972%" height="15" fill="rgb(227,175,30)" fg:x="3976" fg:w="298"/><text x="80.2661%" y="511.50">mio::sys..</text></g><g><title>epoll_wait (297 samples, 5.98%)</title><rect x="80.0362%" y="485" width="5.9771%" height="15" fill="rgb(217,2,50)" fg:x="3977" fg:w="297"/><text x="80.2862%" y="495.50">epoll_wa..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="85.9932%" y="469" width="0.0201%" height="15" fill="rgb(229,160,0)" fg:x="4273" fg:w="1"/><text x="86.2432%" y="479.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (9 samples, 0.18%)</title><rect x="86.0133%" y="501" width="0.1811%" height="15" fill="rgb(207,78,37)" fg:x="4274" fg:w="9"/><text x="86.2633%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.10%)</title><rect x="86.0938%" y="485" width="0.1006%" height="15" fill="rgb(225,57,0)" fg:x="4278" fg:w="5"/><text x="86.3438%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.10%)</title><rect x="86.0938%" y="469" width="0.1006%" height="15" fill="rgb(232,154,2)" fg:x="4278" fg:w="5"/><text x="86.3438%" y="479.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 32]&gt;::default (1 samples, 0.02%)</title><rect x="86.1944%" y="469" width="0.0201%" height="15" fill="rgb(241,212,25)" fg:x="4283" fg:w="1"/><text x="86.4444%" y="479.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="86.2145%" y="469" width="0.0201%" height="15" fill="rgb(226,69,20)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::io::driver::scheduled_io::Waiters&gt;&gt; (1 samples, 0.02%)</title><rect x="86.2145%" y="453" width="0.0201%" height="15" fill="rgb(247,184,54)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="86.2145%" y="437" width="0.0201%" height="15" fill="rgb(210,145,0)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="86.2145%" y="421" width="0.0201%" height="15" fill="rgb(253,82,12)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.02%)</title><rect x="86.2145%" y="405" width="0.0201%" height="15" fill="rgb(245,42,11)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="86.2145%" y="389" width="0.0201%" height="15" fill="rgb(219,147,32)" fg:x="4284" fg:w="1"/><text x="86.4645%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (5 samples, 0.10%)</title><rect x="86.2347%" y="469" width="0.1006%" height="15" fill="rgb(246,12,7)" fg:x="4285" fg:w="5"/><text x="86.4847%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.10%)</title><rect x="86.2347%" y="453" width="0.1006%" height="15" fill="rgb(243,50,9)" fg:x="4285" fg:w="5"/><text x="86.4847%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.02%)</title><rect x="86.3353%" y="437" width="0.0201%" height="15" fill="rgb(219,149,6)" fg:x="4290" fg:w="1"/><text x="86.5853%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.02%)</title><rect x="86.3353%" y="421" width="0.0201%" height="15" fill="rgb(241,51,42)" fg:x="4290" fg:w="1"/><text x="86.5853%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (2 samples, 0.04%)</title><rect x="86.3554%" y="421" width="0.0402%" height="15" fill="rgb(226,128,27)" fg:x="4291" fg:w="2"/><text x="86.6054%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.04%)</title><rect x="86.3554%" y="405" width="0.0402%" height="15" fill="rgb(244,144,4)" fg:x="4291" fg:w="2"/><text x="86.6054%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.04%)</title><rect x="86.3554%" y="389" width="0.0402%" height="15" fill="rgb(221,4,13)" fg:x="4291" fg:w="2"/><text x="86.6054%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="86.4359%" y="373" width="0.0201%" height="15" fill="rgb(208,170,28)" fg:x="4295" fg:w="1"/><text x="86.6859%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="86.4359%" y="357" width="0.0201%" height="15" fill="rgb(226,131,13)" fg:x="4295" fg:w="1"/><text x="86.6859%" y="367.50"></text></g><g><title>core::task::wake::Waker::wake (7 samples, 0.14%)</title><rect x="86.3353%" y="469" width="0.1409%" height="15" fill="rgb(215,72,41)" fg:x="4290" fg:w="7"/><text x="86.5853%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (7 samples, 0.14%)</title><rect x="86.3353%" y="453" width="0.1409%" height="15" fill="rgb(243,108,20)" fg:x="4290" fg:w="7"/><text x="86.5853%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (6 samples, 0.12%)</title><rect x="86.3554%" y="437" width="0.1207%" height="15" fill="rgb(230,189,17)" fg:x="4291" fg:w="6"/><text x="86.6054%" y="447.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (4 samples, 0.08%)</title><rect x="86.3957%" y="421" width="0.0805%" height="15" fill="rgb(220,50,17)" fg:x="4293" fg:w="4"/><text x="86.6457%" y="431.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (4 samples, 0.08%)</title><rect x="86.3957%" y="405" width="0.0805%" height="15" fill="rgb(248,152,48)" fg:x="4293" fg:w="4"/><text x="86.6457%" y="415.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (4 samples, 0.08%)</title><rect x="86.3957%" y="389" width="0.0805%" height="15" fill="rgb(244,91,11)" fg:x="4293" fg:w="4"/><text x="86.6457%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="86.4560%" y="373" width="0.0201%" height="15" fill="rgb(220,157,5)" fg:x="4296" fg:w="1"/><text x="86.7060%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="86.4560%" y="357" width="0.0201%" height="15" fill="rgb(253,137,8)" fg:x="4296" fg:w="1"/><text x="86.7060%" y="367.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake (15 samples, 0.30%)</title><rect x="86.1944%" y="501" width="0.3019%" height="15" fill="rgb(217,137,51)" fg:x="4283" fg:w="15"/><text x="86.4444%" y="511.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake0 (15 samples, 0.30%)</title><rect x="86.1944%" y="485" width="0.3019%" height="15" fill="rgb(218,209,53)" fg:x="4283" fg:w="15"/><text x="86.4444%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="86.4762%" y="469" width="0.0201%" height="15" fill="rgb(249,137,25)" fg:x="4297" fg:w="1"/><text x="86.7262%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="86.4762%" y="453" width="0.0201%" height="15" fill="rgb(239,155,26)" fg:x="4297" fg:w="1"/><text x="86.7262%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="86.4762%" y="437" width="0.0201%" height="15" fill="rgb(227,85,46)" fg:x="4297" fg:w="1"/><text x="86.7262%" y="447.50"></text></g><g><title>tokio::util::slab::CachedPage&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="86.4963%" y="485" width="0.0201%" height="15" fill="rgb(251,107,43)" fg:x="4298" fg:w="1"/><text x="86.7463%" y="495.50"></text></g><g><title>tokio::io::driver::Driver::dispatch (26 samples, 0.52%)</title><rect x="86.0133%" y="517" width="0.5232%" height="15" fill="rgb(234,170,33)" fg:x="4274" fg:w="26"/><text x="86.2633%" y="527.50"></text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="86.4963%" y="501" width="0.0402%" height="15" fill="rgb(206,29,35)" fg:x="4298" fg:w="2"/><text x="86.7463%" y="511.50"></text></g><g><title>tokio::util::slab::Page&lt;T&gt;::slot (1 samples, 0.02%)</title><rect x="86.5164%" y="485" width="0.0201%" height="15" fill="rgb(227,138,25)" fg:x="4299" fg:w="1"/><text x="86.7664%" y="495.50"></text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (333 samples, 6.70%)</title><rect x="79.8752%" y="549" width="6.7015%" height="15" fill="rgb(249,131,35)" fg:x="3969" fg:w="333"/><text x="80.1252%" y="559.50">&lt;tokio::i..</text></g><g><title>tokio::io::driver::Driver::turn (333 samples, 6.70%)</title><rect x="79.8752%" y="533" width="6.7015%" height="15" fill="rgb(239,6,40)" fg:x="3969" fg:w="333"/><text x="80.1252%" y="543.50">tokio::io..</text></g><g><title>tokio::io::driver::ready::Ready::from_mio (2 samples, 0.04%)</title><rect x="86.5365%" y="517" width="0.0402%" height="15" fill="rgb(246,136,47)" fg:x="4300" fg:w="2"/><text x="86.7865%" y="527.50"></text></g><g><title>mio::event::event::Event::is_readable (1 samples, 0.02%)</title><rect x="86.5567%" y="501" width="0.0201%" height="15" fill="rgb(253,58,26)" fg:x="4301" fg:w="1"/><text x="86.8067%" y="511.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::is_readable (1 samples, 0.02%)</title><rect x="86.5567%" y="485" width="0.0201%" height="15" fill="rgb(237,141,10)" fg:x="4301" fg:w="1"/><text x="86.8067%" y="495.50"></text></g><g><title>core::task::wake::Waker::will_wake (1 samples, 0.02%)</title><rect x="86.6573%" y="485" width="0.0201%" height="15" fill="rgb(234,156,12)" fg:x="4306" fg:w="1"/><text x="86.9073%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="86.6573%" y="469" width="0.0201%" height="15" fill="rgb(243,224,36)" fg:x="4306" fg:w="1"/><text x="86.9073%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="86.6573%" y="453" width="0.0201%" height="15" fill="rgb(205,229,51)" fg:x="4306" fg:w="1"/><text x="86.9073%" y="463.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="86.6573%" y="437" width="0.0201%" height="15" fill="rgb(223,189,4)" fg:x="4306" fg:w="1"/><text x="86.9073%" y="447.50"></text></g><g><title>tokio::io::driver::Direction::mask (1 samples, 0.02%)</title><rect x="86.6774%" y="485" width="0.0201%" height="15" fill="rgb(249,167,54)" fg:x="4307" fg:w="1"/><text x="86.9274%" y="495.50"></text></g><g><title>&lt;tokio::signal::unix::driver::Driver as tokio::park::Park&gt;::park (342 samples, 6.88%)</title><rect x="79.8551%" y="565" width="6.8827%" height="15" fill="rgb(218,34,28)" fg:x="3968" fg:w="342"/><text x="80.1051%" y="575.50">&lt;tokio::s..</text></g><g><title>tokio::signal::unix::driver::Driver::process (8 samples, 0.16%)</title><rect x="86.5768%" y="549" width="0.1610%" height="15" fill="rgb(232,109,42)" fg:x="4302" fg:w="8"/><text x="86.8268%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (7 samples, 0.14%)</title><rect x="86.5969%" y="533" width="0.1409%" height="15" fill="rgb(248,214,46)" fg:x="4303" fg:w="7"/><text x="86.8469%" y="543.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (7 samples, 0.14%)</title><rect x="86.5969%" y="517" width="0.1409%" height="15" fill="rgb(244,216,40)" fg:x="4303" fg:w="7"/><text x="86.8469%" y="527.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.10%)</title><rect x="86.6372%" y="501" width="0.1006%" height="15" fill="rgb(231,226,31)" fg:x="4305" fg:w="5"/><text x="86.8872%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="86.6975%" y="485" width="0.0402%" height="15" fill="rgb(238,38,43)" fg:x="4308" fg:w="2"/><text x="86.9475%" y="495.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="86.6975%" y="469" width="0.0402%" height="15" fill="rgb(208,88,43)" fg:x="4308" fg:w="2"/><text x="86.9475%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="86.6975%" y="453" width="0.0402%" height="15" fill="rgb(205,136,37)" fg:x="4308" fg:w="2"/><text x="86.9475%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.04%)</title><rect x="86.6975%" y="437" width="0.0402%" height="15" fill="rgb(237,34,14)" fg:x="4308" fg:w="2"/><text x="86.9475%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.04%)</title><rect x="86.6975%" y="421" width="0.0402%" height="15" fill="rgb(236,193,44)" fg:x="4308" fg:w="2"/><text x="86.9475%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="86.7579%" y="533" width="0.0201%" height="15" fill="rgb(231,48,10)" fg:x="4311" fg:w="1"/><text x="87.0079%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="86.7579%" y="517" width="0.0201%" height="15" fill="rgb(213,141,34)" fg:x="4311" fg:w="1"/><text x="87.0079%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="86.7579%" y="501" width="0.0201%" height="15" fill="rgb(249,130,34)" fg:x="4311" fg:w="1"/><text x="87.0079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="86.7780%" y="533" width="0.0402%" height="15" fill="rgb(219,42,41)" fg:x="4312" fg:w="2"/><text x="87.0280%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="86.7780%" y="517" width="0.0402%" height="15" fill="rgb(224,100,54)" fg:x="4312" fg:w="2"/><text x="87.0280%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.04%)</title><rect x="86.7780%" y="501" width="0.0402%" height="15" fill="rgb(229,200,27)" fg:x="4312" fg:w="2"/><text x="87.0280%" y="511.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (347 samples, 6.98%)</title><rect x="79.8551%" y="597" width="6.9833%" height="15" fill="rgb(217,118,10)" fg:x="3968" fg:w="347"/><text x="80.1051%" y="607.50">&lt;tokio::p..</text></g><g><title>&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (347 samples, 6.98%)</title><rect x="79.8551%" y="581" width="6.9833%" height="15" fill="rgb(206,22,3)" fg:x="3968" fg:w="347"/><text x="80.1051%" y="591.50">&lt;tokio::p..</text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (5 samples, 0.10%)</title><rect x="86.7378%" y="565" width="0.1006%" height="15" fill="rgb(232,163,46)" fg:x="4310" fg:w="5"/><text x="86.9878%" y="575.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (5 samples, 0.10%)</title><rect x="86.7378%" y="549" width="0.1006%" height="15" fill="rgb(206,95,13)" fg:x="4310" fg:w="5"/><text x="86.9878%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="86.8183%" y="533" width="0.0201%" height="15" fill="rgb(253,154,18)" fg:x="4314" fg:w="1"/><text x="87.0683%" y="543.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="86.8183%" y="517" width="0.0201%" height="15" fill="rgb(219,32,23)" fg:x="4314" fg:w="1"/><text x="87.0683%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="86.8183%" y="501" width="0.0201%" height="15" fill="rgb(230,191,45)" fg:x="4314" fg:w="1"/><text x="87.0683%" y="511.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="86.8384%" y="597" width="0.0201%" height="15" fill="rgb(229,64,36)" fg:x="4315" fg:w="1"/><text x="87.0884%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::time::driver::InnerState&gt;&gt; (1 samples, 0.02%)</title><rect x="86.8384%" y="581" width="0.0201%" height="15" fill="rgb(205,129,25)" fg:x="4315" fg:w="1"/><text x="87.0884%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="86.8384%" y="565" width="0.0201%" height="15" fill="rgb(254,112,7)" fg:x="4315" fg:w="1"/><text x="87.0884%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="86.8384%" y="549" width="0.0201%" height="15" fill="rgb(226,53,48)" fg:x="4315" fg:w="1"/><text x="87.0884%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (9 samples, 0.18%)</title><rect x="86.8585%" y="565" width="0.1811%" height="15" fill="rgb(214,153,38)" fg:x="4316" fg:w="9"/><text x="87.1085%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (6 samples, 0.12%)</title><rect x="86.9189%" y="549" width="0.1207%" height="15" fill="rgb(243,101,7)" fg:x="4319" fg:w="6"/><text x="87.1689%" y="559.50"></text></g><g><title>tokio::time::driver::Inner::lock (2 samples, 0.04%)</title><rect x="87.0396%" y="565" width="0.0402%" height="15" fill="rgb(240,140,22)" fg:x="4325" fg:w="2"/><text x="87.2896%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="87.0396%" y="549" width="0.0402%" height="15" fill="rgb(235,114,2)" fg:x="4325" fg:w="2"/><text x="87.2896%" y="559.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="87.0396%" y="533" width="0.0402%" height="15" fill="rgb(242,59,12)" fg:x="4325" fg:w="2"/><text x="87.2896%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="87.0396%" y="517" width="0.0402%" height="15" fill="rgb(252,134,9)" fg:x="4325" fg:w="2"/><text x="87.2896%" y="527.50"></text></g><g><title>tokio::time::driver::handle::Handle::get (1 samples, 0.02%)</title><rect x="87.0799%" y="565" width="0.0201%" height="15" fill="rgb(236,4,44)" fg:x="4327" fg:w="1"/><text x="87.3299%" y="575.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll (3 samples, 0.06%)</title><rect x="87.1000%" y="565" width="0.0604%" height="15" fill="rgb(254,172,41)" fg:x="4328" fg:w="3"/><text x="87.3500%" y="575.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (3 samples, 0.06%)</title><rect x="87.1000%" y="549" width="0.0604%" height="15" fill="rgb(244,63,20)" fg:x="4328" fg:w="3"/><text x="87.3500%" y="559.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (3 samples, 0.06%)</title><rect x="87.1000%" y="533" width="0.0604%" height="15" fill="rgb(250,73,31)" fg:x="4328" fg:w="3"/><text x="87.3500%" y="543.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (3 samples, 0.06%)</title><rect x="87.1000%" y="517" width="0.0604%" height="15" fill="rgb(241,38,36)" fg:x="4328" fg:w="3"/><text x="87.3500%" y="527.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (16 samples, 0.32%)</title><rect x="86.8585%" y="581" width="0.3220%" height="15" fill="rgb(245,211,2)" fg:x="4316" fg:w="16"/><text x="87.1085%" y="591.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll_at (1 samples, 0.02%)</title><rect x="87.1604%" y="565" width="0.0201%" height="15" fill="rgb(206,120,28)" fg:x="4331" fg:w="1"/><text x="87.4104%" y="575.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.02%)</title><rect x="87.1604%" y="549" width="0.0201%" height="15" fill="rgb(211,59,34)" fg:x="4331" fg:w="1"/><text x="87.4104%" y="559.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (1 samples, 0.02%)</title><rect x="87.1604%" y="533" width="0.0201%" height="15" fill="rgb(233,168,5)" fg:x="4331" fg:w="1"/><text x="87.4104%" y="543.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (22 samples, 0.44%)</title><rect x="86.8585%" y="597" width="0.4427%" height="15" fill="rgb(234,33,13)" fg:x="4316" fg:w="22"/><text x="87.1085%" y="607.50"></text></g><g><title>tokio::time::driver::ClockTime::now (6 samples, 0.12%)</title><rect x="87.1805%" y="581" width="0.1207%" height="15" fill="rgb(231,150,26)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="591.50"></text></g><g><title>tokio::time::clock::Clock::now (6 samples, 0.12%)</title><rect x="87.1805%" y="565" width="0.1207%" height="15" fill="rgb(217,191,4)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="575.50"></text></g><g><title>tokio::time::clock::now (6 samples, 0.12%)</title><rect x="87.1805%" y="549" width="0.1207%" height="15" fill="rgb(246,198,38)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="559.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.12%)</title><rect x="87.1805%" y="533" width="0.1207%" height="15" fill="rgb(245,64,37)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.12%)</title><rect x="87.1805%" y="517" width="0.1207%" height="15" fill="rgb(250,30,36)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.12%)</title><rect x="87.1805%" y="501" width="0.1207%" height="15" fill="rgb(217,86,53)" fg:x="4332" fg:w="6"/><text x="87.4305%" y="511.50"></text></g><g><title>__clock_gettime (5 samples, 0.10%)</title><rect x="87.2006%" y="485" width="0.1006%" height="15" fill="rgb(228,157,16)" fg:x="4333" fg:w="5"/><text x="87.4506%" y="495.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.06%)</title><rect x="87.2409%" y="469" width="0.0604%" height="15" fill="rgb(217,59,31)" fg:x="4335" fg:w="3"/><text x="87.4909%" y="479.50"></text></g><g><title>[[vdso]] (3 samples, 0.06%)</title><rect x="87.2409%" y="453" width="0.0604%" height="15" fill="rgb(237,138,41)" fg:x="4335" fg:w="3"/><text x="87.4909%" y="463.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (373 samples, 7.51%)</title><rect x="79.8149%" y="645" width="7.5065%" height="15" fill="rgb(227,91,49)" fg:x="3966" fg:w="373"/><text x="80.0649%" y="655.50">&lt;tokio::pa..</text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (373 samples, 7.51%)</title><rect x="79.8149%" y="629" width="7.5065%" height="15" fill="rgb(247,21,44)" fg:x="3966" fg:w="373"/><text x="80.0649%" y="639.50">&lt;tokio::ti..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (373 samples, 7.51%)</title><rect x="79.8149%" y="613" width="7.5065%" height="15" fill="rgb(219,210,51)" fg:x="3966" fg:w="373"/><text x="80.0649%" y="623.50">tokio::tim..</text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration_time (1 samples, 0.02%)</title><rect x="87.3013%" y="597" width="0.0201%" height="15" fill="rgb(209,140,6)" fg:x="4338" fg:w="1"/><text x="87.5513%" y="607.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.02%)</title><rect x="87.3013%" y="581" width="0.0201%" height="15" fill="rgb(221,188,24)" fg:x="4338" fg:w="1"/><text x="87.5513%" y="591.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (1 samples, 0.02%)</title><rect x="87.3013%" y="565" width="0.0201%" height="15" fill="rgb(232,154,20)" fg:x="4338" fg:w="1"/><text x="87.5513%" y="575.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (376 samples, 7.57%)</title><rect x="79.8149%" y="661" width="7.5669%" height="15" fill="rgb(244,137,50)" fg:x="3966" fg:w="376"/><text x="80.0649%" y="671.50">&lt;tokio::ru..</text></g><g><title>__sched_yield (3 samples, 0.06%)</title><rect x="87.3214%" y="645" width="0.0604%" height="15" fill="rgb(225,185,43)" fg:x="4339" fg:w="3"/><text x="87.5714%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="87.3214%" y="629" width="0.0604%" height="15" fill="rgb(213,205,38)" fg:x="4339" fg:w="3"/><text x="87.5714%" y="639.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (381 samples, 7.67%)</title><rect x="79.7545%" y="677" width="7.6675%" height="15" fill="rgb(236,73,12)" fg:x="3963" fg:w="381"/><text x="80.0045%" y="687.50">tokio::run..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.04%)</title><rect x="87.3818%" y="661" width="0.0402%" height="15" fill="rgb(235,219,13)" fg:x="4342" fg:w="2"/><text x="87.6318%" y="671.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1,354 samples, 27.25%)</title><rect x="60.2737%" y="709" width="27.2489%" height="15" fill="rgb(218,59,36)" fg:x="2995" fg:w="1354"/><text x="60.5237%" y="719.50">&lt;tokio::runtime::park::Parker as tokio::park..</text></g><g><title>tokio::runtime::park::Inner::park (1,348 samples, 27.13%)</title><rect x="60.3944%" y="693" width="27.1282%" height="15" fill="rgb(205,110,39)" fg:x="3001" fg:w="1348"/><text x="60.6444%" y="703.50">tokio::runtime::park::Inner::park</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (5 samples, 0.10%)</title><rect x="87.4220%" y="677" width="0.1006%" height="15" fill="rgb(218,206,42)" fg:x="4344" fg:w="5"/><text x="87.6720%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (29 samples, 0.58%)</title><rect x="87.5226%" y="709" width="0.5836%" height="15" fill="rgb(248,125,24)" fg:x="4349" fg:w="29"/><text x="87.7726%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (29 samples, 0.58%)</title><rect x="87.5226%" y="693" width="0.5836%" height="15" fill="rgb(242,28,27)" fg:x="4349" fg:w="29"/><text x="87.7726%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (29 samples, 0.58%)</title><rect x="87.5226%" y="677" width="0.5836%" height="15" fill="rgb(216,228,15)" fg:x="4349" fg:w="29"/><text x="87.7726%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18 samples, 0.36%)</title><rect x="87.7440%" y="661" width="0.3622%" height="15" fill="rgb(235,116,46)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.36%)</title><rect x="87.7440%" y="645" width="0.3622%" height="15" fill="rgb(224,18,32)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="655.50"></text></g><g><title>core::mem::replace (18 samples, 0.36%)</title><rect x="87.7440%" y="629" width="0.3622%" height="15" fill="rgb(252,5,12)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="639.50"></text></g><g><title>core::mem::swap (18 samples, 0.36%)</title><rect x="87.7440%" y="613" width="0.3622%" height="15" fill="rgb(251,36,5)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (18 samples, 0.36%)</title><rect x="87.7440%" y="597" width="0.3622%" height="15" fill="rgb(217,53,14)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.36%)</title><rect x="87.7440%" y="581" width="0.3622%" height="15" fill="rgb(215,86,45)" fg:x="4360" fg:w="18"/><text x="87.9940%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (7 samples, 0.14%)</title><rect x="88.1063%" y="709" width="0.1409%" height="15" fill="rgb(242,169,11)" fg:x="4378" fg:w="7"/><text x="88.3563%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (2 samples, 0.04%)</title><rect x="88.2471%" y="709" width="0.0402%" height="15" fill="rgb(211,213,45)" fg:x="4385" fg:w="2"/><text x="88.4971%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (5 samples, 0.10%)</title><rect x="88.2874%" y="677" width="0.1006%" height="15" fill="rgb(205,88,11)" fg:x="4387" fg:w="5"/><text x="88.5374%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.10%)</title><rect x="88.2874%" y="661" width="0.1006%" height="15" fill="rgb(252,69,26)" fg:x="4387" fg:w="5"/><text x="88.5374%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1,400 samples, 28.17%)</title><rect x="60.2334%" y="725" width="28.1747%" height="15" fill="rgb(246,123,37)" fg:x="2993" fg:w="1400"/><text x="60.4834%" y="735.50">tokio::runtime::thread_pool::worker::Context:..</text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (6 samples, 0.12%)</title><rect x="88.2874%" y="709" width="0.1207%" height="15" fill="rgb(212,205,5)" fg:x="4387" fg:w="6"/><text x="88.5374%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (6 samples, 0.12%)</title><rect x="88.2874%" y="693" width="0.1207%" height="15" fill="rgb(253,148,0)" fg:x="4387" fg:w="6"/><text x="88.5374%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.02%)</title><rect x="88.3880%" y="677" width="0.0201%" height="15" fill="rgb(239,22,4)" fg:x="4392" fg:w="1"/><text x="88.6380%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="88.3880%" y="661" width="0.0201%" height="15" fill="rgb(226,26,53)" fg:x="4392" fg:w="1"/><text x="88.6380%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::task::inject::Pointers&gt;&gt; (4 samples, 0.08%)</title><rect x="88.4484%" y="693" width="0.0805%" height="15" fill="rgb(225,229,45)" fg:x="4395" fg:w="4"/><text x="88.6984%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="88.4484%" y="677" width="0.0805%" height="15" fill="rgb(220,60,37)" fg:x="4395" fg:w="4"/><text x="88.6984%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.08%)</title><rect x="88.4484%" y="661" width="0.0805%" height="15" fill="rgb(217,180,35)" fg:x="4395" fg:w="4"/><text x="88.6984%" y="671.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (30 samples, 0.60%)</title><rect x="88.4484%" y="709" width="0.6037%" height="15" fill="rgb(229,7,53)" fg:x="4395" fg:w="30"/><text x="88.6984%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (26 samples, 0.52%)</title><rect x="88.5289%" y="693" width="0.5232%" height="15" fill="rgb(254,137,3)" fg:x="4399" fg:w="26"/><text x="88.7789%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.52%)</title><rect x="88.5289%" y="677" width="0.5232%" height="15" fill="rgb(215,140,41)" fg:x="4399" fg:w="26"/><text x="88.7789%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.52%)</title><rect x="88.5289%" y="661" width="0.5232%" height="15" fill="rgb(250,80,15)" fg:x="4399" fg:w="26"/><text x="88.7789%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (37 samples, 0.74%)</title><rect x="88.4081%" y="725" width="0.7446%" height="15" fill="rgb(252,191,6)" fg:x="4393" fg:w="37"/><text x="88.6581%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::inject (5 samples, 0.10%)</title><rect x="89.0521%" y="709" width="0.1006%" height="15" fill="rgb(246,217,18)" fg:x="4425" fg:w="5"/><text x="89.3021%" y="719.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.1527%" y="709" width="0.0201%" height="15" fill="rgb(223,93,7)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="719.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.1527%" y="693" width="0.0201%" height="15" fill="rgb(225,55,52)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="703.50"></text></g><g><title>irq_exit (1 samples, 0.02%)</title><rect x="89.1527%" y="677" width="0.0201%" height="15" fill="rgb(240,31,24)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="687.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="89.1527%" y="661" width="0.0201%" height="15" fill="rgb(205,56,52)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="671.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="89.1527%" y="645" width="0.0201%" height="15" fill="rgb(246,146,12)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="655.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="89.1527%" y="629" width="0.0201%" height="15" fill="rgb(239,84,36)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="639.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="89.1527%" y="613" width="0.0201%" height="15" fill="rgb(207,41,40)" fg:x="4430" fg:w="1"/><text x="89.4027%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="89.1729%" y="693" width="0.0201%" height="15" fill="rgb(241,179,25)" fg:x="4431" fg:w="1"/><text x="89.4229%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.1729%" y="677" width="0.0201%" height="15" fill="rgb(210,0,34)" fg:x="4431" fg:w="1"/><text x="89.4229%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="89.1729%" y="661" width="0.0201%" height="15" fill="rgb(225,217,29)" fg:x="4431" fg:w="1"/><text x="89.4229%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.02%)</title><rect x="89.1930%" y="693" width="0.0201%" height="15" fill="rgb(216,191,38)" fg:x="4432" fg:w="1"/><text x="89.4430%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.02%)</title><rect x="89.1930%" y="677" width="0.0201%" height="15" fill="rgb(232,140,52)" fg:x="4432" fg:w="1"/><text x="89.4430%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.02%)</title><rect x="89.1930%" y="661" width="0.0201%" height="15" fill="rgb(223,158,51)" fg:x="4432" fg:w="1"/><text x="89.4430%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="89.1930%" y="645" width="0.0201%" height="15" fill="rgb(235,29,51)" fg:x="4432" fg:w="1"/><text x="89.4430%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (12 samples, 0.24%)</title><rect x="89.1729%" y="709" width="0.2415%" height="15" fill="rgb(215,181,18)" fg:x="4431" fg:w="12"/><text x="89.4229%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10 samples, 0.20%)</title><rect x="89.2131%" y="693" width="0.2012%" height="15" fill="rgb(227,125,34)" fg:x="4433" fg:w="10"/><text x="89.4631%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.20%)</title><rect x="89.2131%" y="677" width="0.2012%" height="15" fill="rgb(230,197,49)" fg:x="4433" fg:w="10"/><text x="89.4631%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.20%)</title><rect x="89.2131%" y="661" width="0.2012%" height="15" fill="rgb(239,141,16)" fg:x="4433" fg:w="10"/><text x="89.4631%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (16 samples, 0.32%)</title><rect x="89.1527%" y="725" width="0.3220%" height="15" fill="rgb(225,105,43)" fg:x="4430" fg:w="16"/><text x="89.4027%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::unpark_worker_by_id (3 samples, 0.06%)</title><rect x="89.4144%" y="709" width="0.0604%" height="15" fill="rgb(214,131,14)" fg:x="4443" fg:w="3"/><text x="89.6644%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="89.4546%" y="693" width="0.0201%" height="15" fill="rgb(229,177,11)" fg:x="4445" fg:w="1"/><text x="89.7046%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.4546%" y="677" width="0.0201%" height="15" fill="rgb(231,180,14)" fg:x="4445" fg:w="1"/><text x="89.7046%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (10 samples, 0.20%)</title><rect x="89.4747%" y="693" width="0.2012%" height="15" fill="rgb(232,88,2)" fg:x="4446" fg:w="10"/><text x="89.7247%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="89.4747%" y="677" width="0.2012%" height="15" fill="rgb(205,220,8)" fg:x="4446" fg:w="10"/><text x="89.7247%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.20%)</title><rect x="89.4747%" y="661" width="0.2012%" height="15" fill="rgb(225,23,53)" fg:x="4446" fg:w="10"/><text x="89.7247%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="89.6760%" y="693" width="0.0402%" height="15" fill="rgb(213,62,29)" fg:x="4456" fg:w="2"/><text x="89.9260%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="89.6760%" y="677" width="0.0402%" height="15" fill="rgb(227,75,7)" fg:x="4456" fg:w="2"/><text x="89.9260%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="89.6760%" y="661" width="0.0402%" height="15" fill="rgb(207,105,14)" fg:x="4456" fg:w="2"/><text x="89.9260%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.02%)</title><rect x="89.6961%" y="645" width="0.0201%" height="15" fill="rgb(245,62,29)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="655.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.02%)</title><rect x="89.6961%" y="629" width="0.0201%" height="15" fill="rgb(236,202,4)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="639.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.02%)</title><rect x="89.6961%" y="613" width="0.0201%" height="15" fill="rgb(250,67,1)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="623.50"></text></g><g><title>__sched_yield (1 samples, 0.02%)</title><rect x="89.6961%" y="597" width="0.0201%" height="15" fill="rgb(253,115,44)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="89.6961%" y="581" width="0.0201%" height="15" fill="rgb(251,139,18)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="89.6961%" y="565" width="0.0201%" height="15" fill="rgb(218,22,32)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="575.50"></text></g><g><title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="89.6961%" y="549" width="0.0201%" height="15" fill="rgb(243,53,5)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="559.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="89.6961%" y="533" width="0.0201%" height="15" fill="rgb(227,56,16)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="543.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="89.6961%" y="517" width="0.0201%" height="15" fill="rgb(245,53,0)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="527.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="89.6961%" y="501" width="0.0201%" height="15" fill="rgb(216,170,35)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="511.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="89.6961%" y="485" width="0.0201%" height="15" fill="rgb(211,200,8)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="495.50"></text></g><g><title>cpuacct_charge (1 samples, 0.02%)</title><rect x="89.6961%" y="469" width="0.0201%" height="15" fill="rgb(228,204,44)" fg:x="4457" fg:w="1"/><text x="89.9461%" y="479.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (13 samples, 0.26%)</title><rect x="89.4747%" y="709" width="0.2616%" height="15" fill="rgb(214,121,17)" fg:x="4446" fg:w="13"/><text x="89.7247%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (1 samples, 0.02%)</title><rect x="89.7162%" y="693" width="0.0201%" height="15" fill="rgb(233,64,38)" fg:x="4458" fg:w="1"/><text x="89.9662%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="89.7162%" y="677" width="0.0201%" height="15" fill="rgb(253,54,19)" fg:x="4458" fg:w="1"/><text x="89.9662%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="89.7162%" y="661" width="0.0201%" height="15" fill="rgb(253,94,18)" fg:x="4458" fg:w="1"/><text x="89.9662%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1,470 samples, 29.58%)</title><rect x="60.2334%" y="741" width="29.5834%" height="15" fill="rgb(227,57,52)" fg:x="2993" fg:w="1470"/><text x="60.4834%" y="751.50">tokio::runtime::thread_pool::worker::Context::pa..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (17 samples, 0.34%)</title><rect x="89.4747%" y="725" width="0.3421%" height="15" fill="rgb(230,228,50)" fg:x="4446" fg:w="17"/><text x="89.7247%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (4 samples, 0.08%)</title><rect x="89.7364%" y="709" width="0.0805%" height="15" fill="rgb(217,205,27)" fg:x="4459" fg:w="4"/><text x="89.9864%" y="719.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (4 samples, 0.08%)</title><rect x="89.7364%" y="693" width="0.0805%" height="15" fill="rgb(252,71,50)" fg:x="4459" fg:w="4"/><text x="89.9864%" y="703.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (4 samples, 0.08%)</title><rect x="89.7364%" y="677" width="0.0805%" height="15" fill="rgb(209,86,4)" fg:x="4459" fg:w="4"/><text x="89.9864%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.06%)</title><rect x="89.7565%" y="661" width="0.0604%" height="15" fill="rgb(229,94,0)" fg:x="4460" fg:w="3"/><text x="90.0065%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="89.7565%" y="645" width="0.0604%" height="15" fill="rgb(252,223,21)" fg:x="4460" fg:w="3"/><text x="90.0065%" y="655.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="89.8571%" y="725" width="0.0201%" height="15" fill="rgb(230,210,4)" fg:x="4465" fg:w="1"/><text x="90.1071%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="89.8571%" y="709" width="0.0201%" height="15" fill="rgb(240,149,38)" fg:x="4465" fg:w="1"/><text x="90.1071%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (9 samples, 0.18%)</title><rect x="90.0382%" y="629" width="0.1811%" height="15" fill="rgb(254,105,20)" fg:x="4474" fg:w="9"/><text x="90.2882%" y="639.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (9 samples, 0.18%)</title><rect x="90.0382%" y="613" width="0.1811%" height="15" fill="rgb(253,87,46)" fg:x="4474" fg:w="9"/><text x="90.2882%" y="623.50"></text></g><g><title>core::cell::BorrowRefMut::new (9 samples, 0.18%)</title><rect x="90.0382%" y="597" width="0.1811%" height="15" fill="rgb(253,116,33)" fg:x="4474" fg:w="9"/><text x="90.2882%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="90.1992%" y="581" width="0.0201%" height="15" fill="rgb(229,198,5)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="90.1992%" y="565" width="0.0201%" height="15" fill="rgb(242,38,37)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="575.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="90.1992%" y="549" width="0.0201%" height="15" fill="rgb(242,69,53)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="559.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="90.1992%" y="533" width="0.0201%" height="15" fill="rgb(249,80,16)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="543.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="90.1992%" y="517" width="0.0201%" height="15" fill="rgb(206,128,11)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="90.1992%" y="501" width="0.0201%" height="15" fill="rgb(212,35,20)" fg:x="4482" fg:w="1"/><text x="90.4492%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.22%)</title><rect x="90.2194%" y="629" width="0.2214%" height="15" fill="rgb(236,79,13)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="639.50"></text></g><g><title>core::mem::take (11 samples, 0.22%)</title><rect x="90.2194%" y="613" width="0.2214%" height="15" fill="rgb(233,123,3)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="623.50"></text></g><g><title>core::mem::replace (11 samples, 0.22%)</title><rect x="90.2194%" y="597" width="0.2214%" height="15" fill="rgb(214,93,52)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="607.50"></text></g><g><title>core::mem::swap (11 samples, 0.22%)</title><rect x="90.2194%" y="581" width="0.2214%" height="15" fill="rgb(251,37,40)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (11 samples, 0.22%)</title><rect x="90.2194%" y="565" width="0.2214%" height="15" fill="rgb(227,80,54)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.22%)</title><rect x="90.2194%" y="549" width="0.2214%" height="15" fill="rgb(254,48,11)" fg:x="4483" fg:w="11"/><text x="90.4694%" y="559.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.4206%" y="533" width="0.0201%" height="15" fill="rgb(235,193,26)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="543.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.4206%" y="517" width="0.0201%" height="15" fill="rgb(229,99,21)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="527.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="90.4206%" y="501" width="0.0201%" height="15" fill="rgb(211,140,41)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="511.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="90.4206%" y="485" width="0.0201%" height="15" fill="rgb(240,227,30)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="495.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="90.4206%" y="469" width="0.0201%" height="15" fill="rgb(215,224,45)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="479.50"></text></g><g><title>ktime_get (1 samples, 0.02%)</title><rect x="90.4206%" y="453" width="0.0201%" height="15" fill="rgb(206,123,31)" fg:x="4493" fg:w="1"/><text x="90.6706%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::thread_pool::worker::Core&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="90.4407%" y="629" width="0.0201%" height="15" fill="rgb(210,138,16)" fg:x="4494" fg:w="1"/><text x="90.6907%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (6 samples, 0.12%)</title><rect x="91.0244%" y="565" width="0.1207%" height="15" fill="rgb(228,57,28)" fg:x="4523" fg:w="6"/><text x="91.2744%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (6 samples, 0.12%)</title><rect x="91.0244%" y="549" width="0.1207%" height="15" fill="rgb(242,170,10)" fg:x="4523" fg:w="6"/><text x="91.2744%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (3 samples, 0.06%)</title><rect x="91.0847%" y="533" width="0.0604%" height="15" fill="rgb(228,214,39)" fg:x="4526" fg:w="3"/><text x="91.3347%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.04%)</title><rect x="91.1049%" y="517" width="0.0402%" height="15" fill="rgb(218,179,33)" fg:x="4527" fg:w="2"/><text x="91.3549%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.04%)</title><rect x="91.1049%" y="501" width="0.0402%" height="15" fill="rgb(235,193,39)" fg:x="4527" fg:w="2"/><text x="91.3549%" y="511.50"></text></g><g><title>__rust_probestack (2 samples, 0.04%)</title><rect x="91.2256%" y="549" width="0.0402%" height="15" fill="rgb(219,221,36)" fg:x="4533" fg:w="2"/><text x="91.4756%" y="559.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::is_ready (2 samples, 0.04%)</title><rect x="91.4067%" y="453" width="0.0402%" height="15" fill="rgb(248,218,19)" fg:x="4542" fg:w="2"/><text x="91.6567%" y="463.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="91.7287%" y="405" width="0.0201%" height="15" fill="rgb(205,50,9)" fg:x="4558" fg:w="1"/><text x="91.9787%" y="415.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (1 samples, 0.02%)</title><rect x="91.9903%" y="325" width="0.0201%" height="15" fill="rgb(238,81,28)" fg:x="4571" fg:w="1"/><text x="92.2403%" y="335.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (1 samples, 0.02%)</title><rect x="91.9903%" y="309" width="0.0201%" height="15" fill="rgb(235,110,19)" fg:x="4571" fg:w="1"/><text x="92.2403%" y="319.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (1 samples, 0.02%)</title><rect x="91.9903%" y="293" width="0.0201%" height="15" fill="rgb(214,7,14)" fg:x="4571" fg:w="1"/><text x="92.2403%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="91.9903%" y="277" width="0.0201%" height="15" fill="rgb(211,77,3)" fg:x="4571" fg:w="1"/><text x="92.2403%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="91.9903%" y="261" width="0.0201%" height="15" fill="rgb(229,5,9)" fg:x="4571" fg:w="1"/><text x="92.2403%" y="271.50"></text></g><g><title>[libc-2.28.so] (5 samples, 0.10%)</title><rect x="92.0105%" y="325" width="0.1006%" height="15" fill="rgb(225,90,11)" fg:x="4572" fg:w="5"/><text x="92.2605%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.26%)</title><rect x="91.8696%" y="357" width="0.2616%" height="15" fill="rgb(242,56,8)" fg:x="4565" fg:w="13"/><text x="92.1196%" y="367.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}}::_{{closure}} (11 samples, 0.22%)</title><rect x="91.9098%" y="341" width="0.2214%" height="15" fill="rgb(249,212,39)" fg:x="4567" fg:w="11"/><text x="92.1598%" y="351.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.02%)</title><rect x="92.1111%" y="325" width="0.0201%" height="15" fill="rgb(236,90,9)" fg:x="4577" fg:w="1"/><text x="92.3611%" y="335.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="92.1111%" y="309" width="0.0201%" height="15" fill="rgb(206,88,35)" fg:x="4577" fg:w="1"/><text x="92.3611%" y="319.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="92.1111%" y="293" width="0.0201%" height="15" fill="rgb(205,126,30)" fg:x="4577" fg:w="1"/><text x="92.3611%" y="303.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="92.1111%" y="277" width="0.0201%" height="15" fill="rgb(230,176,12)" fg:x="4577" fg:w="1"/><text x="92.3611%" y="287.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="92.1111%" y="261" width="0.0201%" height="15" fill="rgb(243,19,9)" fg:x="4577" fg:w="1"/><text x="92.3611%" y="271.50"></text></g><g><title>futures_util::async_await::random::random::RNG::__getit (1 samples, 0.02%)</title><rect x="92.2318%" y="277" width="0.0201%" height="15" fill="rgb(245,171,17)" fg:x="4583" fg:w="1"/><text x="92.4818%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="92.2318%" y="261" width="0.0201%" height="15" fill="rgb(227,52,21)" fg:x="4583" fg:w="1"/><text x="92.4818%" y="271.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="92.2520%" y="261" width="0.0201%" height="15" fill="rgb(238,69,14)" fg:x="4584" fg:w="1"/><text x="92.5020%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shl (1 samples, 0.02%)</title><rect x="92.2520%" y="245" width="0.0201%" height="15" fill="rgb(241,156,39)" fg:x="4584" fg:w="1"/><text x="92.5020%" y="255.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 1.03%)</title><rect x="91.2658%" y="501" width="1.0264%" height="15" fill="rgb(212,227,28)" fg:x="4535" fg:w="51"/><text x="91.5158%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (49 samples, 0.99%)</title><rect x="91.3061%" y="485" width="0.9861%" height="15" fill="rgb(209,118,27)" fg:x="4537" fg:w="49"/><text x="91.5561%" y="495.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (46 samples, 0.93%)</title><rect x="91.3665%" y="469" width="0.9257%" height="15" fill="rgb(226,102,5)" fg:x="4540" fg:w="46"/><text x="91.6165%" y="479.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (42 samples, 0.85%)</title><rect x="91.4470%" y="453" width="0.8452%" height="15" fill="rgb(223,34,3)" fg:x="4544" fg:w="42"/><text x="91.6970%" y="463.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (39 samples, 0.78%)</title><rect x="91.5073%" y="437" width="0.7849%" height="15" fill="rgb(221,81,38)" fg:x="4547" fg:w="39"/><text x="91.7573%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.72%)</title><rect x="91.5677%" y="421" width="0.7245%" height="15" fill="rgb(236,219,28)" fg:x="4550" fg:w="36"/><text x="91.8177%" y="431.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}} (27 samples, 0.54%)</title><rect x="91.7488%" y="405" width="0.5434%" height="15" fill="rgb(213,200,14)" fg:x="4559" fg:w="27"/><text x="91.9988%" y="415.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (25 samples, 0.50%)</title><rect x="91.7891%" y="389" width="0.5031%" height="15" fill="rgb(240,33,19)" fg:x="4561" fg:w="25"/><text x="92.0391%" y="399.50"></text></g><g><title>fred::multiplexer::utils::spawn_centralized_listener::_{{closure}}::_{{closure}} (24 samples, 0.48%)</title><rect x="91.8092%" y="373" width="0.4830%" height="15" fill="rgb(233,113,27)" fg:x="4562" fg:w="24"/><text x="92.0592%" y="383.50"></text></g><g><title>futures_util::async_await::random::shuffle (8 samples, 0.16%)</title><rect x="92.1312%" y="357" width="0.1610%" height="15" fill="rgb(220,221,18)" fg:x="4578" fg:w="8"/><text x="92.3812%" y="367.50"></text></g><g><title>futures_util::async_await::random::gen_index (8 samples, 0.16%)</title><rect x="92.1312%" y="341" width="0.1610%" height="15" fill="rgb(238,92,8)" fg:x="4578" fg:w="8"/><text x="92.3812%" y="351.50"></text></g><g><title>futures_util::async_await::random::random (3 samples, 0.06%)</title><rect x="92.2318%" y="325" width="0.0604%" height="15" fill="rgb(222,164,16)" fg:x="4583" fg:w="3"/><text x="92.4818%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.06%)</title><rect x="92.2318%" y="309" width="0.0604%" height="15" fill="rgb(241,119,3)" fg:x="4583" fg:w="3"/><text x="92.4818%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.06%)</title><rect x="92.2318%" y="293" width="0.0604%" height="15" fill="rgb(241,44,8)" fg:x="4583" fg:w="3"/><text x="92.4818%" y="303.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (2 samples, 0.04%)</title><rect x="92.2520%" y="277" width="0.0402%" height="15" fill="rgb(230,36,40)" fg:x="4584" fg:w="2"/><text x="92.5020%" y="287.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (1 samples, 0.02%)</title><rect x="92.2721%" y="261" width="0.0201%" height="15" fill="rgb(243,16,36)" fg:x="4585" fg:w="1"/><text x="92.5221%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shr (1 samples, 0.02%)</title><rect x="92.2721%" y="245" width="0.0201%" height="15" fill="rgb(231,4,26)" fg:x="4585" fg:w="1"/><text x="92.5221%" y="255.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 1.27%)</title><rect x="91.2658%" y="549" width="1.2679%" height="15" fill="rgb(240,9,31)" fg:x="4535" fg:w="63"/><text x="91.5158%" y="559.50"></text></g><g><title>std::panicking::try (63 samples, 1.27%)</title><rect x="91.2658%" y="533" width="1.2679%" height="15" fill="rgb(207,173,15)" fg:x="4535" fg:w="63"/><text x="91.5158%" y="543.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 1.27%)</title><rect x="91.2658%" y="517" width="1.2679%" height="15" fill="rgb(224,192,53)" fg:x="4535" fg:w="63"/><text x="91.5158%" y="527.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (12 samples, 0.24%)</title><rect x="92.2922%" y="501" width="0.2415%" height="15" fill="rgb(223,67,28)" fg:x="4586" fg:w="12"/><text x="92.5422%" y="511.50"></text></g><g><title>[libc-2.28.so] (7 samples, 0.14%)</title><rect x="92.3928%" y="485" width="0.1409%" height="15" fill="rgb(211,20,47)" fg:x="4591" fg:w="7"/><text x="92.6428%" y="495.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_cancelled (3 samples, 0.06%)</title><rect x="92.5337%" y="549" width="0.0604%" height="15" fill="rgb(240,228,2)" fg:x="4598" fg:w="3"/><text x="92.7837%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="92.5941%" y="517" width="0.0201%" height="15" fill="rgb(248,151,12)" fg:x="4601" fg:w="1"/><text x="92.8441%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="92.5941%" y="501" width="0.0201%" height="15" fill="rgb(244,8,39)" fg:x="4601" fg:w="1"/><text x="92.8441%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (4 samples, 0.08%)</title><rect x="92.5941%" y="549" width="0.0805%" height="15" fill="rgb(222,26,8)" fg:x="4601" fg:w="4"/><text x="92.8441%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (4 samples, 0.08%)</title><rect x="92.5941%" y="533" width="0.0805%" height="15" fill="rgb(213,106,44)" fg:x="4601" fg:w="4"/><text x="92.8441%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.06%)</title><rect x="92.6142%" y="517" width="0.0604%" height="15" fill="rgb(214,129,20)" fg:x="4602" fg:w="3"/><text x="92.8642%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.06%)</title><rect x="92.6142%" y="501" width="0.0604%" height="15" fill="rgb(212,32,13)" fg:x="4602" fg:w="3"/><text x="92.8642%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="92.6142%" y="485" width="0.0604%" height="15" fill="rgb(208,168,33)" fg:x="4602" fg:w="3"/><text x="92.8642%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (88 samples, 1.77%)</title><rect x="91.0042%" y="581" width="1.7710%" height="15" fill="rgb(231,207,8)" fg:x="4522" fg:w="88"/><text x="91.2542%" y="591.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (81 samples, 1.63%)</title><rect x="91.1451%" y="565" width="1.6301%" height="15" fill="rgb(235,219,23)" fg:x="4529" fg:w="81"/><text x="91.3951%" y="575.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (5 samples, 0.10%)</title><rect x="92.6746%" y="549" width="0.1006%" height="15" fill="rgb(226,216,26)" fg:x="4605" fg:w="5"/><text x="92.9246%" y="559.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.02%)</title><rect x="92.7752%" y="485" width="0.0201%" height="15" fill="rgb(239,137,16)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="495.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (1 samples, 0.02%)</title><rect x="92.7752%" y="469" width="0.0201%" height="15" fill="rgb(207,12,36)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="479.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.02%)</title><rect x="92.7752%" y="453" width="0.0201%" height="15" fill="rgb(210,214,24)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="463.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="92.7752%" y="437" width="0.0201%" height="15" fill="rgb(206,56,30)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.02%)</title><rect x="92.7752%" y="421" width="0.0201%" height="15" fill="rgb(228,143,26)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="92.7752%" y="405" width="0.0201%" height="15" fill="rgb(216,218,46)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="415.50"></text></g><g><title>__libc_write (1 samples, 0.02%)</title><rect x="92.7752%" y="389" width="0.0201%" height="15" fill="rgb(206,6,19)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="92.7752%" y="373" width="0.0201%" height="15" fill="rgb(239,177,51)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="383.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="92.7752%" y="357" width="0.0201%" height="15" fill="rgb(216,55,25)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="367.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="92.7752%" y="341" width="0.0201%" height="15" fill="rgb(231,163,29)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="351.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="92.7752%" y="325" width="0.0201%" height="15" fill="rgb(232,149,50)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="335.50"></text></g><g><title>eventfd_write (1 samples, 0.02%)</title><rect x="92.7752%" y="309" width="0.0201%" height="15" fill="rgb(223,142,48)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="319.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="92.7752%" y="293" width="0.0201%" height="15" fill="rgb(245,83,23)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="303.50"></text></g><g><title>ep_poll_callback (1 samples, 0.02%)</title><rect x="92.7752%" y="277" width="0.0201%" height="15" fill="rgb(224,63,2)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="287.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="92.7752%" y="261" width="0.0201%" height="15" fill="rgb(218,65,53)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="271.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="92.7752%" y="245" width="0.0201%" height="15" fill="rgb(221,84,29)" fg:x="4610" fg:w="1"/><text x="93.0252%" y="255.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (107 samples, 2.15%)</title><rect x="90.6621%" y="597" width="2.1534%" height="15" fill="rgb(234,0,32)" fg:x="4505" fg:w="107"/><text x="90.9121%" y="607.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::yield_now (2 samples, 0.04%)</title><rect x="92.7752%" y="581" width="0.0402%" height="15" fill="rgb(206,20,16)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2 samples, 0.04%)</title><rect x="92.7752%" y="565" width="0.0402%" height="15" fill="rgb(244,172,18)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="575.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="92.7752%" y="549" width="0.0402%" height="15" fill="rgb(254,133,1)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (2 samples, 0.04%)</title><rect x="92.7752%" y="533" width="0.0402%" height="15" fill="rgb(222,206,41)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (2 samples, 0.04%)</title><rect x="92.7752%" y="517" width="0.0402%" height="15" fill="rgb(212,3,42)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (2 samples, 0.04%)</title><rect x="92.7752%" y="501" width="0.0402%" height="15" fill="rgb(241,11,4)" fg:x="4610" fg:w="2"/><text x="93.0252%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (1 samples, 0.02%)</title><rect x="92.7953%" y="485" width="0.0201%" height="15" fill="rgb(205,19,26)" fg:x="4611" fg:w="1"/><text x="93.0453%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (1 samples, 0.02%)</title><rect x="92.7953%" y="469" width="0.0201%" height="15" fill="rgb(210,179,32)" fg:x="4611" fg:w="1"/><text x="93.0453%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="92.7953%" y="453" width="0.0201%" height="15" fill="rgb(227,116,49)" fg:x="4611" fg:w="1"/><text x="93.0453%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="92.7953%" y="437" width="0.0201%" height="15" fill="rgb(211,146,6)" fg:x="4611" fg:w="1"/><text x="93.0453%" y="447.50"></text></g><g><title>tokio::coop::budget (152 samples, 3.06%)</title><rect x="89.8772%" y="725" width="3.0590%" height="15" fill="rgb(219,44,39)" fg:x="4466" fg:w="152"/><text x="90.1272%" y="735.50">tok..</text></g><g><title>tokio::coop::with_budget (152 samples, 3.06%)</title><rect x="89.8772%" y="709" width="3.0590%" height="15" fill="rgb(234,128,11)" fg:x="4466" fg:w="152"/><text x="90.1272%" y="719.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (152 samples, 3.06%)</title><rect x="89.8772%" y="693" width="3.0590%" height="15" fill="rgb(220,183,53)" fg:x="4466" fg:w="152"/><text x="90.1272%" y="703.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (146 samples, 2.94%)</title><rect x="89.9980%" y="677" width="2.9382%" height="15" fill="rgb(213,219,32)" fg:x="4472" fg:w="146"/><text x="90.2480%" y="687.50">st..</text></g><g><title>tokio::coop::with_budget::_{{closure}} (144 samples, 2.90%)</title><rect x="90.0382%" y="661" width="2.8980%" height="15" fill="rgb(232,156,16)" fg:x="4474" fg:w="144"/><text x="90.2882%" y="671.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (144 samples, 2.90%)</title><rect x="90.0382%" y="645" width="2.8980%" height="15" fill="rgb(246,135,34)" fg:x="4474" fg:w="144"/><text x="90.2882%" y="655.50">to..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (123 samples, 2.48%)</title><rect x="90.4609%" y="629" width="2.4753%" height="15" fill="rgb(241,99,0)" fg:x="4495" fg:w="123"/><text x="90.7109%" y="639.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (123 samples, 2.48%)</title><rect x="90.4609%" y="613" width="2.4753%" height="15" fill="rgb(222,103,45)" fg:x="4495" fg:w="123"/><text x="90.7109%" y="623.50">to..</text></g><g><title>tokio::runtime::task::raw::poll (6 samples, 0.12%)</title><rect x="92.8155%" y="597" width="0.1207%" height="15" fill="rgb(212,57,4)" fg:x="4612" fg:w="6"/><text x="93.0655%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (6 samples, 0.12%)</title><rect x="92.9362%" y="693" width="0.1207%" height="15" fill="rgb(215,68,47)" fg:x="4618" fg:w="6"/><text x="93.1862%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (6 samples, 0.12%)</title><rect x="92.9362%" y="677" width="0.1207%" height="15" fill="rgb(230,84,2)" fg:x="4618" fg:w="6"/><text x="93.1862%" y="687.50"></text></g><g><title>__fdget_pos (3 samples, 0.06%)</title><rect x="93.0570%" y="517" width="0.0604%" height="15" fill="rgb(220,102,14)" fg:x="4624" fg:w="3"/><text x="93.3070%" y="527.50"></text></g><g><title>__fget_light (3 samples, 0.06%)</title><rect x="93.0570%" y="501" width="0.0604%" height="15" fill="rgb(240,10,32)" fg:x="4624" fg:w="3"/><text x="93.3070%" y="511.50"></text></g><g><title>__fget (2 samples, 0.04%)</title><rect x="93.0771%" y="485" width="0.0402%" height="15" fill="rgb(215,47,27)" fg:x="4625" fg:w="2"/><text x="93.3271%" y="495.50"></text></g><g><title>fput (1 samples, 0.02%)</title><rect x="93.1173%" y="517" width="0.0201%" height="15" fill="rgb(233,188,43)" fg:x="4627" fg:w="1"/><text x="93.3673%" y="527.50"></text></g><g><title>__vfs_write (1 samples, 0.02%)</title><rect x="93.1375%" y="501" width="0.0201%" height="15" fill="rgb(253,190,1)" fg:x="4628" fg:w="1"/><text x="93.3875%" y="511.50"></text></g><g><title>__list_add_valid (2 samples, 0.04%)</title><rect x="93.1777%" y="453" width="0.0402%" height="15" fill="rgb(206,114,52)" fg:x="4630" fg:w="2"/><text x="93.4277%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.10%)</title><rect x="93.2180%" y="421" width="0.1006%" height="15" fill="rgb(233,120,37)" fg:x="4632" fg:w="5"/><text x="93.4680%" y="431.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.04%)</title><rect x="93.3186%" y="421" width="0.0402%" height="15" fill="rgb(214,52,39)" fg:x="4637" fg:w="2"/><text x="93.5686%" y="431.50"></text></g><g><title>__wake_up_common (8 samples, 0.16%)</title><rect x="93.2180%" y="453" width="0.1610%" height="15" fill="rgb(223,80,29)" fg:x="4632" fg:w="8"/><text x="93.4680%" y="463.50"></text></g><g><title>try_to_wake_up (8 samples, 0.16%)</title><rect x="93.2180%" y="437" width="0.1610%" height="15" fill="rgb(230,101,40)" fg:x="4632" fg:w="8"/><text x="93.4680%" y="447.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="93.3588%" y="421" width="0.0201%" height="15" fill="rgb(219,211,8)" fg:x="4639" fg:w="1"/><text x="93.6088%" y="431.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="93.3588%" y="405" width="0.0201%" height="15" fill="rgb(252,126,28)" fg:x="4639" fg:w="1"/><text x="93.6088%" y="415.50"></text></g><g><title>enqueue_entity (1 samples, 0.02%)</title><rect x="93.3588%" y="389" width="0.0201%" height="15" fill="rgb(215,56,38)" fg:x="4639" fg:w="1"/><text x="93.6088%" y="399.50"></text></g><g><title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="93.3588%" y="373" width="0.0201%" height="15" fill="rgb(249,55,44)" fg:x="4639" fg:w="1"/><text x="93.6088%" y="383.50"></text></g><g><title>__wake_up_common (14 samples, 0.28%)</title><rect x="93.1576%" y="485" width="0.2817%" height="15" fill="rgb(220,221,32)" fg:x="4629" fg:w="14"/><text x="93.4076%" y="495.50"></text></g><g><title>ep_poll_callback (13 samples, 0.26%)</title><rect x="93.1777%" y="469" width="0.2616%" height="15" fill="rgb(212,216,41)" fg:x="4630" fg:w="13"/><text x="93.4277%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.06%)</title><rect x="93.3789%" y="453" width="0.0604%" height="15" fill="rgb(228,213,43)" fg:x="4640" fg:w="3"/><text x="93.6289%" y="463.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="93.4192%" y="437" width="0.0201%" height="15" fill="rgb(211,31,26)" fg:x="4642" fg:w="1"/><text x="93.6692%" y="447.50"></text></g><g><title>eventfd_write (18 samples, 0.36%)</title><rect x="93.1576%" y="501" width="0.3622%" height="15" fill="rgb(229,202,19)" fg:x="4629" fg:w="18"/><text x="93.4076%" y="511.50"></text></g><g><title>_copy_from_user (4 samples, 0.08%)</title><rect x="93.4393%" y="485" width="0.0805%" height="15" fill="rgb(229,105,46)" fg:x="4643" fg:w="4"/><text x="93.6893%" y="495.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.06%)</title><rect x="93.4594%" y="469" width="0.0604%" height="15" fill="rgb(235,108,1)" fg:x="4644" fg:w="3"/><text x="93.7094%" y="479.50"></text></g><g><title>fsnotify (1 samples, 0.02%)</title><rect x="93.5198%" y="501" width="0.0201%" height="15" fill="rgb(245,111,35)" fg:x="4647" fg:w="1"/><text x="93.7698%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.52%)</title><rect x="93.0570%" y="565" width="0.5232%" height="15" fill="rgb(219,185,31)" fg:x="4624" fg:w="26"/><text x="93.3070%" y="575.50"></text></g><g><title>do_syscall_64 (26 samples, 0.52%)</title><rect x="93.0570%" y="549" width="0.5232%" height="15" fill="rgb(214,4,43)" fg:x="4624" fg:w="26"/><text x="93.3070%" y="559.50"></text></g><g><title>ksys_write (26 samples, 0.52%)</title><rect x="93.0570%" y="533" width="0.5232%" height="15" fill="rgb(235,227,40)" fg:x="4624" fg:w="26"/><text x="93.3070%" y="543.50"></text></g><g><title>vfs_write (22 samples, 0.44%)</title><rect x="93.1375%" y="517" width="0.4427%" height="15" fill="rgb(230,88,30)" fg:x="4628" fg:w="22"/><text x="93.3875%" y="527.50"></text></g><g><title>security_file_permission (2 samples, 0.04%)</title><rect x="93.5399%" y="501" width="0.0402%" height="15" fill="rgb(216,217,1)" fg:x="4648" fg:w="2"/><text x="93.7899%" y="511.50"></text></g><g><title>common_file_perm (2 samples, 0.04%)</title><rect x="93.5399%" y="485" width="0.0402%" height="15" fill="rgb(248,139,50)" fg:x="4648" fg:w="2"/><text x="93.7899%" y="495.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (27 samples, 0.54%)</title><rect x="93.0570%" y="645" width="0.5434%" height="15" fill="rgb(233,1,21)" fg:x="4624" fg:w="27"/><text x="93.3070%" y="655.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (27 samples, 0.54%)</title><rect x="93.0570%" y="629" width="0.5434%" height="15" fill="rgb(215,183,12)" fg:x="4624" fg:w="27"/><text x="93.3070%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::write (27 samples, 0.54%)</title><rect x="93.0570%" y="613" width="0.5434%" height="15" fill="rgb(229,104,42)" fg:x="4624" fg:w="27"/><text x="93.3070%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (27 samples, 0.54%)</title><rect x="93.0570%" y="597" width="0.5434%" height="15" fill="rgb(243,34,48)" fg:x="4624" fg:w="27"/><text x="93.3070%" y="607.50"></text></g><g><title>__libc_write (27 samples, 0.54%)</title><rect x="93.0570%" y="581" width="0.5434%" height="15" fill="rgb(239,11,44)" fg:x="4624" fg:w="27"/><text x="93.3070%" y="591.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="93.5802%" y="565" width="0.0201%" height="15" fill="rgb(231,98,35)" fg:x="4650" fg:w="1"/><text x="93.8302%" y="575.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (30 samples, 0.60%)</title><rect x="93.0570%" y="677" width="0.6037%" height="15" fill="rgb(233,28,25)" fg:x="4624" fg:w="30"/><text x="93.3070%" y="687.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (30 samples, 0.60%)</title><rect x="93.0570%" y="661" width="0.6037%" height="15" fill="rgb(234,123,11)" fg:x="4624" fg:w="30"/><text x="93.3070%" y="671.50"></text></g><g><title>tokio::io::driver::Handle::inner (3 samples, 0.06%)</title><rect x="93.6003%" y="645" width="0.0604%" height="15" fill="rgb(220,69,3)" fg:x="4651" fg:w="3"/><text x="93.8503%" y="655.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.06%)</title><rect x="93.6003%" y="629" width="0.0604%" height="15" fill="rgb(214,64,36)" fg:x="4651" fg:w="3"/><text x="93.8503%" y="639.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (2 samples, 0.04%)</title><rect x="93.6607%" y="677" width="0.0402%" height="15" fill="rgb(211,138,32)" fg:x="4654" fg:w="2"/><text x="93.9107%" y="687.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (7 samples, 0.14%)</title><rect x="93.7009%" y="677" width="0.1409%" height="15" fill="rgb(213,118,47)" fg:x="4656" fg:w="7"/><text x="93.9509%" y="687.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (7 samples, 0.14%)</title><rect x="93.7009%" y="661" width="0.1409%" height="15" fill="rgb(243,124,49)" fg:x="4656" fg:w="7"/><text x="93.9509%" y="671.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (1 samples, 0.02%)</title><rect x="93.8217%" y="645" width="0.0201%" height="15" fill="rgb(221,30,28)" fg:x="4662" fg:w="1"/><text x="94.0717%" y="655.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="93.8217%" y="629" width="0.0201%" height="15" fill="rgb(246,37,13)" fg:x="4662" fg:w="1"/><text x="94.0717%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="93.8217%" y="613" width="0.0201%" height="15" fill="rgb(249,66,14)" fg:x="4662" fg:w="1"/><text x="94.0717%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="93.8217%" y="597" width="0.0201%" height="15" fill="rgb(213,166,5)" fg:x="4662" fg:w="1"/><text x="94.0717%" y="607.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::unpark_lock (1 samples, 0.02%)</title><rect x="93.9022%" y="645" width="0.0201%" height="15" fill="rgb(221,66,24)" fg:x="4666" fg:w="1"/><text x="94.1522%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicI32::store (1 samples, 0.02%)</title><rect x="93.9022%" y="629" width="0.0201%" height="15" fill="rgb(210,132,17)" fg:x="4666" fg:w="1"/><text x="94.1522%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="93.9022%" y="613" width="0.0201%" height="15" fill="rgb(243,202,5)" fg:x="4666" fg:w="1"/><text x="94.1522%" y="623.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.06%)</title><rect x="93.9223%" y="629" width="0.0604%" height="15" fill="rgb(233,70,48)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.06%)</title><rect x="93.9223%" y="613" width="0.0604%" height="15" fill="rgb(238,41,26)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.06%)</title><rect x="93.9223%" y="597" width="0.0604%" height="15" fill="rgb(241,19,31)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.06%)</title><rect x="93.9223%" y="581" width="0.0604%" height="15" fill="rgb(214,76,10)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::park (3 samples, 0.06%)</title><rect x="93.9223%" y="565" width="0.0604%" height="15" fill="rgb(254,202,22)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3 samples, 0.06%)</title><rect x="93.9223%" y="549" width="0.0604%" height="15" fill="rgb(214,72,24)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (3 samples, 0.06%)</title><rect x="93.9223%" y="533" width="0.0604%" height="15" fill="rgb(221,92,46)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.06%)</title><rect x="93.9223%" y="517" width="0.0604%" height="15" fill="rgb(246,13,50)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="527.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (3 samples, 0.06%)</title><rect x="93.9223%" y="501" width="0.0604%" height="15" fill="rgb(240,165,38)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="511.50"></text></g><g><title>syscall (3 samples, 0.06%)</title><rect x="93.9223%" y="485" width="0.0604%" height="15" fill="rgb(241,24,51)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="93.9223%" y="469" width="0.0604%" height="15" fill="rgb(227,51,44)" fg:x="4667" fg:w="3"/><text x="94.1723%" y="479.50"></text></g><g><title>get_futex_key (6 samples, 0.12%)</title><rect x="94.3248%" y="533" width="0.1207%" height="15" fill="rgb(231,121,3)" fg:x="4687" fg:w="6"/><text x="94.5748%" y="543.50"></text></g><g><title>get_futex_key_refs.isra.12 (2 samples, 0.04%)</title><rect x="94.4053%" y="517" width="0.0402%" height="15" fill="rgb(245,3,41)" fg:x="4691" fg:w="2"/><text x="94.6553%" y="527.50"></text></g><g><title>hash_futex (1 samples, 0.02%)</title><rect x="94.4456%" y="533" width="0.0201%" height="15" fill="rgb(214,13,26)" fg:x="4693" fg:w="1"/><text x="94.6956%" y="543.50"></text></g><g><title>mark_wake_futex (18 samples, 0.36%)</title><rect x="94.4657%" y="533" width="0.3622%" height="15" fill="rgb(252,75,11)" fg:x="4694" fg:w="18"/><text x="94.7157%" y="543.50"></text></g><g><title>wake_q_add (6 samples, 0.12%)</title><rect x="94.7072%" y="517" width="0.1207%" height="15" fill="rgb(218,226,17)" fg:x="4706" fg:w="6"/><text x="94.9572%" y="527.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="95.0493%" y="501" width="0.0201%" height="15" fill="rgb(248,89,38)" fg:x="4723" fg:w="1"/><text x="95.2993%" y="511.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="95.0694%" y="501" width="0.0201%" height="15" fill="rgb(237,73,46)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="511.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.0694%" y="485" width="0.0201%" height="15" fill="rgb(242,78,33)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="495.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="95.0694%" y="469" width="0.0201%" height="15" fill="rgb(235,60,3)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="479.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="95.0694%" y="453" width="0.0201%" height="15" fill="rgb(216,172,19)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="463.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="95.0694%" y="437" width="0.0201%" height="15" fill="rgb(227,6,42)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="447.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="95.0694%" y="421" width="0.0201%" height="15" fill="rgb(223,207,42)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="431.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="95.0694%" y="405" width="0.0201%" height="15" fill="rgb(246,138,30)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="415.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="95.0694%" y="389" width="0.0201%" height="15" fill="rgb(251,199,47)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="399.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="95.0694%" y="373" width="0.0201%" height="15" fill="rgb(228,218,44)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="383.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="95.0694%" y="357" width="0.0201%" height="15" fill="rgb(220,68,6)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="367.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="95.0694%" y="341" width="0.0201%" height="15" fill="rgb(240,60,26)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="351.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="95.0694%" y="325" width="0.0201%" height="15" fill="rgb(211,200,19)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="335.50"></text></g><g><title>usb_led_activity (1 samples, 0.02%)</title><rect x="95.0694%" y="309" width="0.0201%" height="15" fill="rgb(242,145,30)" fg:x="4724" fg:w="1"/><text x="95.3194%" y="319.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="95.0896%" y="501" width="0.0402%" height="15" fill="rgb(225,64,13)" fg:x="4725" fg:w="2"/><text x="95.3396%" y="511.50"></text></g><g><title>sched_clock (2 samples, 0.04%)</title><rect x="95.0896%" y="485" width="0.0402%" height="15" fill="rgb(218,103,35)" fg:x="4725" fg:w="2"/><text x="95.3396%" y="495.50"></text></g><g><title>native_sched_clock (2 samples, 0.04%)</title><rect x="95.0896%" y="469" width="0.0402%" height="15" fill="rgb(216,93,46)" fg:x="4725" fg:w="2"/><text x="95.3396%" y="479.50"></text></g><g><title>select_idle_sibling (4 samples, 0.08%)</title><rect x="95.5122%" y="485" width="0.0805%" height="15" fill="rgb(225,159,27)" fg:x="4746" fg:w="4"/><text x="95.7622%" y="495.50"></text></g><g><title>available_idle_cpu (4 samples, 0.08%)</title><rect x="95.5122%" y="469" width="0.0805%" height="15" fill="rgb(225,204,11)" fg:x="4746" fg:w="4"/><text x="95.7622%" y="479.50"></text></g><g><title>select_task_rq_fair (25 samples, 0.50%)</title><rect x="95.1298%" y="501" width="0.5031%" height="15" fill="rgb(205,56,4)" fg:x="4727" fg:w="25"/><text x="95.3798%" y="511.50"></text></g><g><title>update_cfs_rq_h_load (2 samples, 0.04%)</title><rect x="95.5927%" y="485" width="0.0402%" height="15" fill="rgb(206,6,35)" fg:x="4750" fg:w="2"/><text x="95.8427%" y="495.50"></text></g><g><title>__enqueue_entity (1 samples, 0.02%)</title><rect x="95.7738%" y="453" width="0.0201%" height="15" fill="rgb(247,73,52)" fg:x="4759" fg:w="1"/><text x="96.0238%" y="463.50"></text></g><g><title>account_entity_enqueue (4 samples, 0.08%)</title><rect x="95.7939%" y="453" width="0.0805%" height="15" fill="rgb(246,97,4)" fg:x="4760" fg:w="4"/><text x="96.0439%" y="463.50"></text></g><g><title>update_cfs_group (1 samples, 0.02%)</title><rect x="95.8744%" y="453" width="0.0201%" height="15" fill="rgb(212,37,15)" fg:x="4764" fg:w="1"/><text x="96.1244%" y="463.50"></text></g><g><title>ttwu_do_activate (14 samples, 0.28%)</title><rect x="95.6329%" y="501" width="0.2817%" height="15" fill="rgb(208,130,40)" fg:x="4752" fg:w="14"/><text x="95.8829%" y="511.50"></text></g><g><title>enqueue_task_fair (14 samples, 0.28%)</title><rect x="95.6329%" y="485" width="0.2817%" height="15" fill="rgb(236,55,29)" fg:x="4752" fg:w="14"/><text x="95.8829%" y="495.50"></text></g><g><title>enqueue_entity (11 samples, 0.22%)</title><rect x="95.6933%" y="469" width="0.2214%" height="15" fill="rgb(209,156,45)" fg:x="4755" fg:w="11"/><text x="95.9433%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="95.8945%" y="453" width="0.0201%" height="15" fill="rgb(249,107,4)" fg:x="4765" fg:w="1"/><text x="96.1445%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="95.8945%" y="437" width="0.0201%" height="15" fill="rgb(227,7,13)" fg:x="4765" fg:w="1"/><text x="96.1445%" y="447.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.04%)</title><rect x="95.9147%" y="501" width="0.0402%" height="15" fill="rgb(250,129,14)" fg:x="4766" fg:w="2"/><text x="96.1647%" y="511.50"></text></g><g><title>check_preempt_curr (2 samples, 0.04%)</title><rect x="95.9147%" y="485" width="0.0402%" height="15" fill="rgb(229,92,13)" fg:x="4766" fg:w="2"/><text x="96.1647%" y="495.50"></text></g><g><title>resched_curr (1 samples, 0.02%)</title><rect x="95.9348%" y="469" width="0.0201%" height="15" fill="rgb(245,98,39)" fg:x="4767" fg:w="1"/><text x="96.1848%" y="479.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (102 samples, 2.05%)</title><rect x="93.9223%" y="645" width="2.0527%" height="15" fill="rgb(234,135,48)" fg:x="4667" fg:w="102"/><text x="94.1723%" y="655.50">&lt;..</text></g><g><title>syscall (99 samples, 1.99%)</title><rect x="93.9827%" y="629" width="1.9924%" height="15" fill="rgb(230,98,28)" fg:x="4670" fg:w="99"/><text x="94.2327%" y="639.50">s..</text></g><g><title>entry_SYSCALL_64_after_hwframe (98 samples, 1.97%)</title><rect x="94.0028%" y="613" width="1.9722%" height="15" fill="rgb(223,121,0)" fg:x="4671" fg:w="98"/><text x="94.2528%" y="623.50">e..</text></g><g><title>do_syscall_64 (98 samples, 1.97%)</title><rect x="94.0028%" y="597" width="1.9722%" height="15" fill="rgb(234,173,33)" fg:x="4671" fg:w="98"/><text x="94.2528%" y="607.50">d..</text></g><g><title>__x64_sys_futex (98 samples, 1.97%)</title><rect x="94.0028%" y="581" width="1.9722%" height="15" fill="rgb(245,47,8)" fg:x="4671" fg:w="98"/><text x="94.2528%" y="591.50">_..</text></g><g><title>do_futex (97 samples, 1.95%)</title><rect x="94.0229%" y="565" width="1.9521%" height="15" fill="rgb(205,17,20)" fg:x="4672" fg:w="97"/><text x="94.2729%" y="575.50">d..</text></g><g><title>futex_wake (96 samples, 1.93%)</title><rect x="94.0431%" y="549" width="1.9320%" height="15" fill="rgb(232,151,16)" fg:x="4673" fg:w="96"/><text x="94.2931%" y="559.50">f..</text></g><g><title>wake_up_q (57 samples, 1.15%)</title><rect x="94.8279%" y="533" width="1.1471%" height="15" fill="rgb(208,30,32)" fg:x="4712" fg:w="57"/><text x="95.0779%" y="543.50"></text></g><g><title>try_to_wake_up (57 samples, 1.15%)</title><rect x="94.8279%" y="517" width="1.1471%" height="15" fill="rgb(254,26,3)" fg:x="4712" fg:w="57"/><text x="95.0779%" y="527.50"></text></g><g><title>update_rq_clock (1 samples, 0.02%)</title><rect x="95.9549%" y="501" width="0.0201%" height="15" fill="rgb(240,177,30)" fg:x="4768" fg:w="1"/><text x="96.2049%" y="511.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="95.9549%" y="485" width="0.0201%" height="15" fill="rgb(248,76,44)" fg:x="4768" fg:w="1"/><text x="96.2049%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.06%)</title><rect x="95.9750%" y="645" width="0.0604%" height="15" fill="rgb(241,186,54)" fg:x="4769" fg:w="3"/><text x="96.2250%" y="655.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.06%)</title><rect x="95.9750%" y="629" width="0.0604%" height="15" fill="rgb(249,171,29)" fg:x="4769" fg:w="3"/><text x="96.2250%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.06%)</title><rect x="95.9750%" y="613" width="0.0604%" height="15" fill="rgb(237,151,44)" fg:x="4769" fg:w="3"/><text x="96.2250%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.06%)</title><rect x="95.9750%" y="597" width="0.0604%" height="15" fill="rgb(228,174,30)" fg:x="4769" fg:w="3"/><text x="96.2250%" y="607.50"></text></g><g><title>__clock_gettime (2 samples, 0.04%)</title><rect x="95.9952%" y="581" width="0.0402%" height="15" fill="rgb(252,14,37)" fg:x="4770" fg:w="2"/><text x="96.2452%" y="591.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="96.0153%" y="565" width="0.0201%" height="15" fill="rgb(207,111,40)" fg:x="4771" fg:w="1"/><text x="96.2653%" y="575.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="96.0153%" y="549" width="0.0201%" height="15" fill="rgb(248,171,54)" fg:x="4771" fg:w="1"/><text x="96.2653%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (2 samples, 0.04%)</title><rect x="96.0354%" y="645" width="0.0402%" height="15" fill="rgb(211,127,2)" fg:x="4772" fg:w="2"/><text x="96.2854%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (112 samples, 2.25%)</title><rect x="93.8418%" y="677" width="2.2540%" height="15" fill="rgb(236,87,47)" fg:x="4663" fg:w="112"/><text x="94.0918%" y="687.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (109 samples, 2.19%)</title><rect x="93.9022%" y="661" width="2.1936%" height="15" fill="rgb(223,190,45)" fg:x="4666" fg:w="109"/><text x="94.1522%" y="671.50">p..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (1 samples, 0.02%)</title><rect x="96.0757%" y="645" width="0.0201%" height="15" fill="rgb(215,5,16)" fg:x="4774" fg:w="1"/><text x="96.3257%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.02%)</title><rect x="96.0757%" y="629" width="0.0201%" height="15" fill="rgb(252,82,33)" fg:x="4774" fg:w="1"/><text x="96.3257%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="96.0757%" y="613" width="0.0201%" height="15" fill="rgb(247,213,44)" fg:x="4774" fg:w="1"/><text x="96.3257%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="96.0757%" y="597" width="0.0201%" height="15" fill="rgb(205,196,44)" fg:x="4774" fg:w="1"/><text x="96.3257%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (316 samples, 6.36%)</title><rect x="89.8169%" y="741" width="6.3594%" height="15" fill="rgb(237,96,54)" fg:x="4463" fg:w="316"/><text x="90.0669%" y="751.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (161 samples, 3.24%)</title><rect x="92.9362%" y="725" width="3.2401%" height="15" fill="rgb(230,113,34)" fg:x="4618" fg:w="161"/><text x="93.1862%" y="735.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (161 samples, 3.24%)</title><rect x="92.9362%" y="709" width="3.2401%" height="15" fill="rgb(221,224,12)" fg:x="4618" fg:w="161"/><text x="93.1862%" y="719.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (155 samples, 3.12%)</title><rect x="93.0570%" y="693" width="3.1193%" height="15" fill="rgb(219,112,44)" fg:x="4624" fg:w="155"/><text x="93.3070%" y="703.50">tok..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (4 samples, 0.08%)</title><rect x="96.0958%" y="677" width="0.0805%" height="15" fill="rgb(210,31,13)" fg:x="4775" fg:w="4"/><text x="96.3458%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (4 samples, 0.08%)</title><rect x="96.0958%" y="661" width="0.0805%" height="15" fill="rgb(230,25,16)" fg:x="4775" fg:w="4"/><text x="96.3458%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="96.1360%" y="645" width="0.0402%" height="15" fill="rgb(246,108,53)" fg:x="4777" fg:w="2"/><text x="96.3860%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="96.1360%" y="629" width="0.0402%" height="15" fill="rgb(241,172,50)" fg:x="4777" fg:w="2"/><text x="96.3860%" y="639.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (3 samples, 0.06%)</title><rect x="96.4983%" y="693" width="0.0604%" height="15" fill="rgb(235,141,10)" fg:x="4795" fg:w="3"/><text x="96.7483%" y="703.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (3 samples, 0.06%)</title><rect x="96.4983%" y="677" width="0.0604%" height="15" fill="rgb(220,174,43)" fg:x="4795" fg:w="3"/><text x="96.7483%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (5 samples, 0.10%)</title><rect x="96.4782%" y="725" width="0.1006%" height="15" fill="rgb(215,181,40)" fg:x="4794" fg:w="5"/><text x="96.7282%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::_{{closure}} (4 samples, 0.08%)</title><rect x="96.4983%" y="709" width="0.0805%" height="15" fill="rgb(230,97,2)" fg:x="4795" fg:w="4"/><text x="96.7483%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (1 samples, 0.02%)</title><rect x="96.5587%" y="693" width="0.0201%" height="15" fill="rgb(211,25,27)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.02%)</title><rect x="96.5587%" y="677" width="0.0201%" height="15" fill="rgb(230,87,26)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::_{{closure}} (1 samples, 0.02%)</title><rect x="96.5587%" y="661" width="0.0201%" height="15" fill="rgb(227,160,17)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="671.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="96.5587%" y="645" width="0.0201%" height="15" fill="rgb(244,85,34)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="655.50"></text></g><g><title>ret_from_intr (1 samples, 0.02%)</title><rect x="96.5587%" y="629" width="0.0201%" height="15" fill="rgb(207,70,0)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="639.50"></text></g><g><title>do_IRQ (1 samples, 0.02%)</title><rect x="96.5587%" y="613" width="0.0201%" height="15" fill="rgb(223,129,7)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="623.50"></text></g><g><title>handle_irq (1 samples, 0.02%)</title><rect x="96.5587%" y="597" width="0.0201%" height="15" fill="rgb(246,105,7)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="607.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="96.5587%" y="581" width="0.0201%" height="15" fill="rgb(215,154,42)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="591.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="96.5587%" y="565" width="0.0201%" height="15" fill="rgb(220,215,30)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="575.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="96.5587%" y="549" width="0.0201%" height="15" fill="rgb(228,81,51)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="96.5587%" y="533" width="0.0201%" height="15" fill="rgb(247,71,54)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="543.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="96.5587%" y="517" width="0.0201%" height="15" fill="rgb(234,176,34)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="527.50"></text></g><g><title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="96.5587%" y="501" width="0.0201%" height="15" fill="rgb(241,103,54)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="511.50"></text></g><g><title>xhci_giveback_urb_in_irq.isra.40 (1 samples, 0.02%)</title><rect x="96.5587%" y="485" width="0.0201%" height="15" fill="rgb(228,22,34)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="495.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="96.5587%" y="469" width="0.0201%" height="15" fill="rgb(241,179,48)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="479.50"></text></g><g><title>snd_complete_urb (1 samples, 0.02%)</title><rect x="96.5587%" y="453" width="0.0201%" height="15" fill="rgb(235,167,37)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="463.50"></text></g><g><title>prepare_playback_urb (1 samples, 0.02%)</title><rect x="96.5587%" y="437" width="0.0201%" height="15" fill="rgb(213,109,30)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="447.50"></text></g><g><title>xhci_get_frame (1 samples, 0.02%)</title><rect x="96.5587%" y="421" width="0.0201%" height="15" fill="rgb(222,172,16)" fg:x="4798" fg:w="1"/><text x="96.8087%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="96.5788%" y="693" width="0.0402%" height="15" fill="rgb(233,192,5)" fg:x="4799" fg:w="2"/><text x="96.8288%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.04%)</title><rect x="96.6593%" y="661" width="0.0402%" height="15" fill="rgb(247,189,41)" fg:x="4803" fg:w="2"/><text x="96.9093%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="96.6593%" y="645" width="0.0402%" height="15" fill="rgb(218,134,47)" fg:x="4803" fg:w="2"/><text x="96.9093%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (27 samples, 0.54%)</title><rect x="96.1763%" y="741" width="0.5434%" height="15" fill="rgb(216,29,3)" fg:x="4779" fg:w="27"/><text x="96.4263%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (7 samples, 0.14%)</title><rect x="96.5788%" y="725" width="0.1409%" height="15" fill="rgb(246,140,12)" fg:x="4799" fg:w="7"/><text x="96.8288%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (7 samples, 0.14%)</title><rect x="96.5788%" y="709" width="0.1409%" height="15" fill="rgb(230,136,11)" fg:x="4799" fg:w="7"/><text x="96.8288%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::_{{closure}} (5 samples, 0.10%)</title><rect x="96.6190%" y="693" width="0.1006%" height="15" fill="rgb(247,22,47)" fg:x="4801" fg:w="5"/><text x="96.8690%" y="703.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (5 samples, 0.10%)</title><rect x="96.6190%" y="677" width="0.1006%" height="15" fill="rgb(218,84,22)" fg:x="4801" fg:w="5"/><text x="96.8690%" y="687.50"></text></g><g><title>tokio::runtime::queue::unpack (1 samples, 0.02%)</title><rect x="96.6995%" y="661" width="0.0201%" height="15" fill="rgb(216,87,39)" fg:x="4805" fg:w="1"/><text x="96.9495%" y="671.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="97.8869%" y="693" width="0.0201%" height="15" fill="rgb(221,178,8)" fg:x="4864" fg:w="1"/><text x="98.1369%" y="703.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="97.9070%" y="693" width="0.0402%" height="15" fill="rgb(230,42,11)" fg:x="4865" fg:w="2"/><text x="98.1570%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (1 samples, 0.02%)</title><rect x="97.9473%" y="693" width="0.0201%" height="15" fill="rgb(237,229,4)" fg:x="4867" fg:w="1"/><text x="98.1973%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="97.9473%" y="677" width="0.0201%" height="15" fill="rgb(222,31,33)" fg:x="4867" fg:w="1"/><text x="98.1973%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4 samples, 0.08%)</title><rect x="97.9674%" y="693" width="0.0805%" height="15" fill="rgb(210,17,39)" fg:x="4868" fg:w="4"/><text x="98.2174%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.08%)</title><rect x="97.9674%" y="677" width="0.0805%" height="15" fill="rgb(244,93,20)" fg:x="4868" fg:w="4"/><text x="98.2174%" y="687.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (104 samples, 2.09%)</title><rect x="97.2630%" y="725" width="2.0930%" height="15" fill="rgb(210,40,47)" fg:x="4833" fg:w="104"/><text x="97.5130%" y="735.50">t..</text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (101 samples, 2.03%)</title><rect x="97.3234%" y="709" width="2.0326%" height="15" fill="rgb(239,211,47)" fg:x="4836" fg:w="101"/><text x="97.5734%" y="719.50">t..</text></g><g><title>tokio::runtime::queue::unpack (65 samples, 1.31%)</title><rect x="98.0479%" y="693" width="1.3081%" height="15" fill="rgb(251,223,49)" fg:x="4872" fg:w="65"/><text x="98.2979%" y="703.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (2 samples, 0.04%)</title><rect x="99.3560%" y="725" width="0.0402%" height="15" fill="rgb(221,149,5)" fg:x="4937" fg:w="2"/><text x="99.6060%" y="735.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (2 samples, 0.04%)</title><rect x="99.3560%" y="709" width="0.0402%" height="15" fill="rgb(219,224,51)" fg:x="4937" fg:w="2"/><text x="99.6060%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (8 samples, 0.16%)</title><rect x="99.3963%" y="725" width="0.1610%" height="15" fill="rgb(223,7,8)" fg:x="4939" fg:w="8"/><text x="99.6463%" y="735.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="99.5371%" y="709" width="0.0201%" height="15" fill="rgb(241,217,22)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="719.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="99.5371%" y="693" width="0.0201%" height="15" fill="rgb(248,209,0)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="703.50"></text></g><g><title>irq_exit (1 samples, 0.02%)</title><rect x="99.5371%" y="677" width="0.0201%" height="15" fill="rgb(217,205,4)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="687.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="99.5371%" y="661" width="0.0201%" height="15" fill="rgb(228,124,39)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="671.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="99.5371%" y="645" width="0.0201%" height="15" fill="rgb(250,116,42)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="655.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="99.5371%" y="629" width="0.0201%" height="15" fill="rgb(223,202,9)" fg:x="4946" fg:w="1"/><text x="99.7871%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (143 samples, 2.88%)</title><rect x="96.7197%" y="741" width="2.8778%" height="15" fill="rgb(242,222,40)" fg:x="4806" fg:w="143"/><text x="96.9697%" y="751.50">to..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (2 samples, 0.04%)</title><rect x="99.5573%" y="725" width="0.0402%" height="15" fill="rgb(229,99,46)" fg:x="4947" fg:w="2"/><text x="99.8073%" y="735.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (2 samples, 0.04%)</title><rect x="99.5573%" y="709" width="0.0402%" height="15" fill="rgb(225,56,46)" fg:x="4947" fg:w="2"/><text x="99.8073%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,007 samples, 40.39%)</title><rect x="59.2272%" y="1237" width="40.3904%" height="15" fill="rgb(227,94,5)" fg:x="2943" fg:w="2007"/><text x="59.4772%" y="1247.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::cal..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,007 samples, 40.39%)</title><rect x="59.2272%" y="1221" width="40.3904%" height="15" fill="rgb(205,112,38)" fg:x="2943" fg:w="2007"/><text x="59.4772%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::cal..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1205" width="40.3703%" height="15" fill="rgb(231,133,46)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1215.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1189" width="40.3703%" height="15" fill="rgb(217,16,9)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1199.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1173" width="40.3703%" height="15" fill="rgb(249,173,9)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1157" width="40.3703%" height="15" fill="rgb(205,163,53)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1141" width="40.3703%" height="15" fill="rgb(217,54,41)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1151.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1125" width="40.3703%" height="15" fill="rgb(228,216,12)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1135.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1109" width="40.3703%" height="15" fill="rgb(244,228,15)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1119.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1093" width="40.3703%" height="15" fill="rgb(221,176,53)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (2,006 samples, 40.37%)</title><rect x="59.2473%" y="1077" width="40.3703%" height="15" fill="rgb(205,94,34)" fg:x="2944" fg:w="2006"/><text x="59.4973%" y="1087.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2,005 samples, 40.35%)</title><rect x="59.2675%" y="1061" width="40.3502%" height="15" fill="rgb(213,110,48)" fg:x="2945" fg:w="2005"/><text x="59.5175%" y="1071.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,976 samples, 39.77%)</title><rect x="59.8511%" y="1045" width="39.7666%" height="15" fill="rgb(236,142,28)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="1055.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,976 samples, 39.77%)</title><rect x="59.8511%" y="1029" width="39.7666%" height="15" fill="rgb(225,135,29)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="1039.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,976 samples, 39.77%)</title><rect x="59.8511%" y="1013" width="39.7666%" height="15" fill="rgb(252,45,31)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,976 samples, 39.77%)</title><rect x="59.8511%" y="997" width="39.7666%" height="15" fill="rgb(211,187,50)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="1007.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (1,976 samples, 39.77%)</title><rect x="59.8511%" y="981" width="39.7666%" height="15" fill="rgb(229,109,7)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="991.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (1,976 samples, 39.77%)</title><rect x="59.8511%" y="965" width="39.7666%" height="15" fill="rgb(251,131,51)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,976 samples, 39.77%)</title><rect x="59.8511%" y="949" width="39.7666%" height="15" fill="rgb(251,180,35)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,976 samples, 39.77%)</title><rect x="59.8511%" y="933" width="39.7666%" height="15" fill="rgb(211,46,32)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,976 samples, 39.77%)</title><rect x="59.8511%" y="917" width="39.7666%" height="15" fill="rgb(248,123,17)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="927.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;(..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (1,976 samples, 39.77%)</title><rect x="59.8511%" y="901" width="39.7666%" height="15" fill="rgb(227,141,18)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="911.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,976 samples, 39.77%)</title><rect x="59.8511%" y="885" width="39.7666%" height="15" fill="rgb(216,102,9)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="895.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,976 samples, 39.77%)</title><rect x="59.8511%" y="869" width="39.7666%" height="15" fill="rgb(253,47,13)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="879.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1,976 samples, 39.77%)</title><rect x="59.8511%" y="853" width="39.7666%" height="15" fill="rgb(226,93,23)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="863.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,976 samples, 39.77%)</title><rect x="59.8511%" y="837" width="39.7666%" height="15" fill="rgb(247,104,17)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="847.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future:..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1,976 samples, 39.77%)</title><rect x="59.8511%" y="821" width="39.7666%" height="15" fill="rgb(233,203,26)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="831.50">tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (1,976 samples, 39.77%)</title><rect x="59.8511%" y="805" width="39.7666%" height="15" fill="rgb(244,98,49)" fg:x="2974" fg:w="1976"/><text x="60.1011%" y="815.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,970 samples, 39.65%)</title><rect x="59.9718%" y="789" width="39.6458%" height="15" fill="rgb(235,134,22)" fg:x="2980" fg:w="1970"/><text x="60.2218%" y="799.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::_{{closure}} (1,970 samples, 39.65%)</title><rect x="59.9718%" y="773" width="39.6458%" height="15" fill="rgb(221,70,32)" fg:x="2980" fg:w="1970"/><text x="60.2218%" y="783.50">tokio::runtime::thread_pool::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,970 samples, 39.65%)</title><rect x="59.9718%" y="757" width="39.6458%" height="15" fill="rgb(238,15,50)" fg:x="2980" fg:w="1970"/><text x="60.2218%" y="767.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Core::tick (1 samples, 0.02%)</title><rect x="99.5975%" y="741" width="0.0201%" height="15" fill="rgb(215,221,48)" fg:x="4949" fg:w="1"/><text x="99.8475%" y="751.50"></text></g><g><title>do_munmap (5 samples, 0.10%)</title><rect x="99.6176%" y="1109" width="0.1006%" height="15" fill="rgb(236,73,3)" fg:x="4950" fg:w="5"/><text x="99.8676%" y="1119.50"></text></g><g><title>find_vma (5 samples, 0.10%)</title><rect x="99.6176%" y="1093" width="0.1006%" height="15" fill="rgb(250,107,11)" fg:x="4950" fg:w="5"/><text x="99.8676%" y="1103.50"></text></g><g><title>down_write_killable (6 samples, 0.12%)</title><rect x="99.7183%" y="1109" width="0.1207%" height="15" fill="rgb(242,39,14)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1119.50"></text></g><g><title>call_rwsem_down_write_failed_killable (6 samples, 0.12%)</title><rect x="99.7183%" y="1093" width="0.1207%" height="15" fill="rgb(248,164,37)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1103.50"></text></g><g><title>rwsem_down_write_failed_killable (6 samples, 0.12%)</title><rect x="99.7183%" y="1077" width="0.1207%" height="15" fill="rgb(217,60,12)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1087.50"></text></g><g><title>schedule (6 samples, 0.12%)</title><rect x="99.7183%" y="1061" width="0.1207%" height="15" fill="rgb(240,125,29)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1071.50"></text></g><g><title>__schedule (6 samples, 0.12%)</title><rect x="99.7183%" y="1045" width="0.1207%" height="15" fill="rgb(208,207,28)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1055.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.12%)</title><rect x="99.7183%" y="1029" width="0.1207%" height="15" fill="rgb(209,159,27)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1039.50"></text></g><g><title>dequeue_entity (6 samples, 0.12%)</title><rect x="99.7183%" y="1013" width="0.1207%" height="15" fill="rgb(251,176,53)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1023.50"></text></g><g><title>update_curr (6 samples, 0.12%)</title><rect x="99.7183%" y="997" width="0.1207%" height="15" fill="rgb(211,85,7)" fg:x="4955" fg:w="6"/><text x="99.9683%" y="1007.50"></text></g><g><title>__task_rq_lock (1 samples, 0.02%)</title><rect x="99.8390%" y="1029" width="0.0201%" height="15" fill="rgb(216,64,54)" fg:x="4961" fg:w="1"/><text x="100.0890%" y="1039.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="99.8390%" y="1013" width="0.0201%" height="15" fill="rgb(217,54,24)" fg:x="4961" fg:w="1"/><text x="100.0890%" y="1023.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="99.8390%" y="997" width="0.0201%" height="15" fill="rgb(208,206,53)" fg:x="4961" fg:w="1"/><text x="100.0890%" y="1007.50"></text></g><g><title>clone (2,057 samples, 41.40%)</title><rect x="58.4826%" y="1285" width="41.3967%" height="15" fill="rgb(251,74,39)" fg:x="2906" fg:w="2057"/><text x="58.7326%" y="1295.50">clone</text></g><g><title>start_thread (2,051 samples, 41.28%)</title><rect x="58.6033%" y="1269" width="41.2759%" height="15" fill="rgb(226,47,5)" fg:x="2912" fg:w="2051"/><text x="58.8533%" y="1279.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,020 samples, 40.65%)</title><rect x="59.2272%" y="1253" width="40.6520%" height="15" fill="rgb(234,111,33)" fg:x="2943" fg:w="2020"/><text x="59.4772%" y="1263.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (13 samples, 0.26%)</title><rect x="99.6176%" y="1237" width="0.2616%" height="15" fill="rgb(251,14,10)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1247.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (13 samples, 0.26%)</title><rect x="99.6176%" y="1221" width="0.2616%" height="15" fill="rgb(232,43,0)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (13 samples, 0.26%)</title><rect x="99.6176%" y="1205" width="0.2616%" height="15" fill="rgb(222,68,43)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1215.50"></text></g><g><title>__munmap (13 samples, 0.26%)</title><rect x="99.6176%" y="1189" width="0.2616%" height="15" fill="rgb(217,24,23)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1199.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.26%)</title><rect x="99.6176%" y="1173" width="0.2616%" height="15" fill="rgb(229,209,14)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1183.50"></text></g><g><title>do_syscall_64 (13 samples, 0.26%)</title><rect x="99.6176%" y="1157" width="0.2616%" height="15" fill="rgb(250,149,48)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1167.50"></text></g><g><title>__x64_sys_munmap (13 samples, 0.26%)</title><rect x="99.6176%" y="1141" width="0.2616%" height="15" fill="rgb(210,120,37)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1151.50"></text></g><g><title>vm_munmap (13 samples, 0.26%)</title><rect x="99.6176%" y="1125" width="0.2616%" height="15" fill="rgb(210,21,8)" fg:x="4950" fg:w="13"/><text x="99.8676%" y="1135.50"></text></g><g><title>up_write (2 samples, 0.04%)</title><rect x="99.8390%" y="1109" width="0.0402%" height="15" fill="rgb(243,145,7)" fg:x="4961" fg:w="2"/><text x="100.0890%" y="1119.50"></text></g><g><title>call_rwsem_wake (2 samples, 0.04%)</title><rect x="99.8390%" y="1093" width="0.0402%" height="15" fill="rgb(238,178,32)" fg:x="4961" fg:w="2"/><text x="100.0890%" y="1103.50"></text></g><g><title>rwsem_wake (2 samples, 0.04%)</title><rect x="99.8390%" y="1077" width="0.0402%" height="15" fill="rgb(222,4,10)" fg:x="4961" fg:w="2"/><text x="100.0890%" y="1087.50"></text></g><g><title>wake_up_q (2 samples, 0.04%)</title><rect x="99.8390%" y="1061" width="0.0402%" height="15" fill="rgb(239,7,37)" fg:x="4961" fg:w="2"/><text x="100.0890%" y="1071.50"></text></g><g><title>try_to_wake_up (2 samples, 0.04%)</title><rect x="99.8390%" y="1045" width="0.0402%" height="15" fill="rgb(215,31,37)" fg:x="4961" fg:w="2"/><text x="100.0890%" y="1055.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="99.8591%" y="1029" width="0.0201%" height="15" fill="rgb(224,83,33)" fg:x="4962" fg:w="1"/><text x="100.1091%" y="1039.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="99.8591%" y="1013" width="0.0201%" height="15" fill="rgb(239,55,3)" fg:x="4962" fg:w="1"/><text x="100.1091%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="99.8793%" y="1285" width="0.0604%" height="15" fill="rgb(247,92,11)" fg:x="4963" fg:w="3"/><text x="100.1293%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="99.9396%" y="1285" width="0.0402%" height="15" fill="rgb(239,200,7)" fg:x="4966" fg:w="2"/><text x="100.1896%" y="1295.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9598%" y="1269" width="0.0201%" height="15" fill="rgb(227,115,8)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1279.50"></text></g><g><title>__x64_sys_exit (1 samples, 0.02%)</title><rect x="99.9598%" y="1253" width="0.0201%" height="15" fill="rgb(215,189,27)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1263.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="99.9598%" y="1237" width="0.0201%" height="15" fill="rgb(251,216,39)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1247.50"></text></g><g><title>perf_event_exit_task (1 samples, 0.02%)</title><rect x="99.9598%" y="1221" width="0.0201%" height="15" fill="rgb(207,29,47)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1231.50"></text></g><g><title>ctx_sched_out (1 samples, 0.02%)</title><rect x="99.9598%" y="1205" width="0.0201%" height="15" fill="rgb(210,71,34)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1215.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="99.9598%" y="1189" width="0.0201%" height="15" fill="rgb(253,217,51)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1199.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.02%)</title><rect x="99.9598%" y="1173" width="0.0201%" height="15" fill="rgb(222,117,46)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1183.50"></text></g><g><title>native_read_msr (1 samples, 0.02%)</title><rect x="99.9598%" y="1157" width="0.0201%" height="15" fill="rgb(226,132,6)" fg:x="4967" fg:w="1"/><text x="100.2098%" y="1167.50"></text></g><g><title>all (4,969 samples, 100%)</title><rect x="0.0000%" y="1317" width="100.0000%" height="15" fill="rgb(254,145,51)" fg:x="0" fg:w="4969"/><text x="0.2500%" y="1327.50"></text></g><g><title>tokio-runtime-w (4,812 samples, 96.84%)</title><rect x="3.1596%" y="1301" width="96.8404%" height="15" fill="rgb(231,199,27)" fg:x="157" fg:w="4812"/><text x="3.4096%" y="1311.50">tokio-runtime-w</text></g><g><title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="99.9799%" y="1285" width="0.0201%" height="15" fill="rgb(245,158,14)" fg:x="4968" fg:w="1"/><text x="100.2299%" y="1295.50"></text></g></svg></svg>